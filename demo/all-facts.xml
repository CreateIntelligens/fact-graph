<FactDictionaryModule>
    <Facts>
        <Fact path="/bankAccount">
            <Name>Bank Account</Name>
            <Description>Information for the bank account you want to deposit into</Description>
            <Writable>
                <BankAccount/>
            </Writable>
        </Fact>
        <Fact path="/refundViaAch">
            <Name>Wants Direct Deposit</Name>
            <Description>Whether the TP wants to receive a direct deposit. Otherwise, they will receive a mailed
                check.
            </Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/payViaAch">
            <Name>User's preference to pay via ACH</Name>
            <Description>Whether the TP wants to make an immediate ACH payment through direct file. Otherwise, they will
                be
                have to make their payment at a different time and/or through a different method.
            </Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/achPaymentDate">
            <Name>Payment date</Name>
            <Description>When the user would like their payment to be processed</Description>
            <Export mef="true"/>

            <Writable>
                <Day/>
            </Writable>
        </Fact>
        <Fact path="/achPaymentDateInThePast">
            <Name>Payment date is scheduled in the past</Name>
            <Description>Whether the specified payment date is in the past</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="/achPaymentDate"/>
                    </IsComplete>
                    <Dependency module="taxCalculations" path="/owesBalance"/>
                    <LessThan>
                        <Left>
                            <Dependency path="/achPaymentDate"/>
                        </Left>
                        <Right>
                            <Dependency module="signing" path="/today"/>
                        </Right>
                    </LessThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/achPaymentDateMustBeToday">
            <Name>Require the ach payment date be today</Name>
            <Description>Whether to require the ach payment date be today if they are filing after the deadline
            </Description>
            <Derived>
                <All>
                    <GreaterThan>
                        <Left>
                            <Dependency module="signing" path="/today"/>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/taxDay"/>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/achPaymentDateLastAllowableDate">
            <Name>Last allowable date for ach payment</Name>
            <Description>The last possible date for ach payment</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/achPaymentDateMustBeToday"/>
                        </When>
                        <Then>
                            <Dependency module="signing" path="/today"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency module="filers" path="/taxDay"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/achPaymentDateAfterDeadline">
            <Name>Payment date is scheduled for after tax day or last allowable date</Name>
            <Description>Whether the specified payment date comes after the last tax day or last allowable date
            </Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="/achPaymentDate"/>
                    </IsComplete>
                    <Dependency module="taxCalculations" path="/owesBalance"/>
                    <GreaterThan>
                        <Left>
                            <Dependency path="/achPaymentDate"/>
                        </Left>
                        <Right>
                            <Dependency path="/achPaymentDateLastAllowableDate"/>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isPaperPathAndHasSeenPaymentPaperPathAssertion">
            <Derived>
                <All>
                    <Dependency module="signing" path="/isPaperPath"/>
                    <IsComplete>
                        <Dependency module="flow" path="/flowHasSeenPaymentPaperPathAssertion"/>
                    </IsComplete>
                </All>
            </Derived>
        </Fact>
        <Fact path="/paymentSectionComplete">
            <Name>Payment Section Complete</Name>
            <Description>The Payment Method section is as complete as it needs to be</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Any>
                    <All>
                        <!-- If getting refund via ach, must fill out bank account -->
                        <Dependency module="taxCalculations" path="/dueRefund"/>
                        <Dependency path="/refundViaAch"/>
                        <IsComplete>
                            <Dependency path="/bankAccount"/>
                        </IsComplete>
                    </All>
                    <All>
                        <!-- If getting refund via mail, leverages existing address -->
                        <Dependency module="taxCalculations" path="/dueRefund"/>
                        <Not>
                            <Dependency path="/refundViaAch"/>
                        </Not>
                    </All>
                    <All>
                        <!-- If paying via ach, must fill out bank account -->
                        <Dependency module="taxCalculations" path="/owesBalance"/>
                        <Dependency path="/payViaAch"/>
                        <IsComplete>
                            <Dependency path="/bankAccount"/>
                        </IsComplete>
                        <IsComplete>
                            <Dependency path="/achPaymentDate"/>
                        </IsComplete>
                        <Any>
                            <Not>
                                <Dependency module="signing" path="/isPaperPath"/>
                            </Not>
                            <Not>
                                <IsComplete>
                                    <Dependency module="signing" path="/isPaperPath"/>
                                </IsComplete>
                            </Not>
                        </Any>
                    </All>
                    <All>
                        <!-- If on the paper path, and trying to pay via ach, must see autocorrect screen -->
                        <Dependency module="taxCalculations" path="/owesBalance"/>
                        <Dependency path="/payViaAch"/>
                        <IsComplete>
                            <Dependency path="/bankAccount"/>
                        </IsComplete>
                        <IsComplete>
                            <Dependency path="/achPaymentDate"/>
                        </IsComplete>
                        <Dependency module="signing" path="/isPaperPath"/>
                        <Dependency module="flow" path="/flowHasSeenPaymentMethodAutocorrect"/>
                    </All>
                    <All>
                        <!-- If not paying via ach, they're done and they'll see the data view -->
                        <Dependency module="taxCalculations" path="/owesBalance"/>
                        <Not>
                            <Dependency path="/payViaAch"/>
                        </Not>
                    </All>
                    <Not>
                        <!-- They have a zero balance, no money will be exchanging hands -->
                        <Any>
                            <Dependency module="taxCalculations" path="/dueRefund"/>
                            <Dependency module="taxCalculations" path="/owesBalance"/>
                        </Any>
                    </Not>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/xmlRefundBankAccount">
            <Name>Refund Bank account</Name>
            <Description>The bank account used for refunds to the taxpayer. Populates the IRS XML elements corresponding
                to
                1040 lines 35b, 35c, and 35d.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="taxCalculations" path="/dueRefund"/>
                                <Dependency path="/refundViaAch"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/bankAccount"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/xmlPaymentBankAccount">
            <Name>Payment Bank account</Name>
            <Description>The bank account used for payments from the taxpayer to the IRS. Populates the IRSPayment XML
                elements corresponding to 1040.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="taxCalculations" path="/owesBalance"/>
                                <Dependency path="/payViaAch"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/bankAccount"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/xmlRefundDisbursementCd">
            <Name>Refund Disbursement Code</Name>
            <Description>
                MeF Variable: Refund Disbursement Code.
                Acceptable values:
                0 – Balance Due/Zero Balance
                1 – Reloadable
                Prepaid Card
                2 – Bank Account
                3 – Paper Check
                4 – Non-reloadable Merchant Gift Card
                5 - Cryptocurrency
                6 - Other 1
                7 -
                Other 2
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Any>
                                <Dependency module="taxCalculations" path="/owesBalance"/>
                                <Dependency module="taxCalculations" path="/zeroBalance"/>
                            </Any>
                        </When>
                        <Then>
                            <Int>0</Int>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="taxCalculations" path="/dueRefund"/>
                                <Dependency path="/refundViaAch"/>
                            </All>
                        </When>
                        <Then>
                            <Int>2</Int>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="taxCalculations" path="/dueRefund"/>
                                <Not>
                                    <Dependency path="/refundViaAch"/>
                                </Not>
                            </All>
                        </When>
                        <Then>
                            <Int>3</Int>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/xmlHasUltimateBankAccount">
            <Name>Has Ultimate Bank Account</Name>
            <Description>
                When an ultimate bank account exists, MeF requires us to add information about that bank account to
                the fraud headers.
                If /xmlRefundDisbursementCd is any value other than (0, 3, or 4), then
                /xmlHasUltimateBankAccount should be true. Otherwise, it should have no value.
            </Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Not>
                                    <Equal>
                                        <Left>
                                            <Dependency path="/xmlRefundDisbursementCd"/>
                                        </Left>
                                        <Right>
                                            <Int>0</Int>
                                        </Right>
                                    </Equal>
                                </Not>
                                <Not>
                                    <Equal>
                                        <Left>
                                            <Dependency path="/xmlRefundDisbursementCd"/>
                                        </Left>
                                        <Right>
                                            <Int>3</Int>
                                        </Right>
                                    </Equal>
                                </Not>
                                <Not>
                                    <Equal>
                                        <Left>
                                            <Dependency path="/xmlRefundDisbursementCd"/>
                                        </Left>
                                        <Right>
                                            <Int>4</Int>
                                        </Right>
                                    </Equal>
                                </Not>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/refundAccountIsChecking">
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/xmlRefundBankAccount/accountType"/>
                    </Left>
                    <Right>
                        <String>Checking</String>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/refundAccountIsSavings">
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/xmlRefundBankAccount/accountType"/>
                    </Left>
                    <Right>
                        <String>Savings</String>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/xmlHasRepaidUnemploymentCompensation">
            <Name>Has repaid Unemployment Compensation</Name>
            <Description>Whether unemployment compensation has been received along with any repaid benefits amount.
            </Description>
            <Export mef="true"/>
            <Derived>
                <All>
                    <Dependency path="/receivedUnemploymentCompensation"/>
                    <GreaterThan>
                        <Left>
                            <Dependency path="/unemploymentCompRepaidAmt"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/unemploymentCompensation">
            <Name>Unemployment Compensation Total</Name>
            <Description>
                Unemployment compensation for Schedule 1, line 7
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Round>
                    <CollectionSum>
                        <Dependency path="/form1099Gs/*/netUnemploymentComp"/>
                    </CollectionSum>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/receivedUnemploymentCompensation">
            <Name>Has Unemployment Compensation</Name>
            <Description>Whether unemployment compensation has been received.</Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <GreaterThan>
                                <Left>
                                    <Dependency path="/form1099Gs/*/amount"/>
                                </Left>
                                <Right>
                                    <Dollar>0</Dollar>
                                </Right>
                            </GreaterThan>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Gs/*/netUnemploymentComp">
            <Name>Net unemployment comp</Name>
            <Description>The net (compensation received - amount repaid) unemployment compensation for a specific form
                1099-G
            </Description>

            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency path="../amount"/>
                    </Minuend>
                    <Subtrahends>
                        <Dependency path="../amountPaidBackForBenefitsInTaxYear"/>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/unemploymentCompRepaidAmt">
            <Name>Repaid Unemployment Compensation Total</Name>
            <Description>The sum total amount of money paid back in the tax year for the benefits received in the tax
                year.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <CollectionSum>
                        <Dependency path="/form1099Gs/*/amountPaidBackForBenefitsInTaxYear"/>
                    </CollectionSum>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/form1099Gs">
            <Name>Unemployment Compensation Income Reports</Name>
            <Description>Reports of Unemployment Compensation income.</Description>

            <Writable>
                <Collection/>
            </Writable>
        </Fact>
        <Fact path="/hasForm1099Gs">
            <Name>Has Form 1099Gs</Name>
            <Description>Whether the TP has any Form 1099Gs listed</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/form1099Gs"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Gs/*/belongsToPrimaryFiler">
            <Name>Form 1099-g belongs to primary filer</Name>
            <Description>The form 1099-g belongs to the primary filer</Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../filer"/>
                    </Left>
                    <Right>
                        <Dependency module="filers" path="/primaryFiler"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/form1099Gs/*/belongsToSecondaryFiler">
            <Name>Form 1099-g belongs to secondary filer</Name>
            <Description>The form 1099-g belongs to the secondary filer</Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../filer"/>
                    </Left>
                    <Right>
                        <Dependency module="filers" path="/secondaryFiler"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/form1099Gs/*/secondaryFilerUsedWithoutMFJ">
            <Name>Secondary filer has form 1099-gs when primary filer is not filing jointly</Name>
            <Description>Whether secondary filer has form 1099-gs when primary filer is not filing jointly</Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    </Not>
                    <Dependency path="../belongsToSecondaryFiler"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/form1099Gs/secondaryFilerUsedWithoutMFJ">
            <Name>Secondary filer has form 1099-gs when primary filer is not filing jointly</Name>
            <Description>Whether secondary filer has Social Securityinterest reports when primary filer is not filing
                jointly
            </Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Gs/*/secondaryFilerUsedWithoutMFJ"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099GsIsDone">
            <Name>form1099Gs is Done</Name>
            <Description>The user has clicked "Done" for their form1099Gs</Description>
            <Export downstreamFacts="true"/>
            <Writable>
                <Boolean/>
            </Writable>
            <Placeholder>
                <False/>
            </Placeholder>
        </Fact>
        <Fact path="/primaryFilerHasIncompleteForm1099Gs">
            <Name>At least one of Primary Filer's Form 1099Gs are incomplete</Name>
            <Description>Whether at least one of Primary Filer's Form 1099Gs are incomplete</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <All>
                                <Dependency path="/form1099Gs/*/belongsToPrimaryFiler"/>
                                <Not>
                                    <Dependency path="/form1099Gs/*/isComplete"/>
                                </Not>
                            </All>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerHasIncompleteForm1099Gs">
            <Name>At least one of Secondary Filer's Form 1099Gs are incomplete</Name>
            <Description>Whether at least one of Secondary Filer's Form 1099Gs are incomplete</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <All>
                                <Dependency path="/form1099Gs/*/belongsToSecondaryFiler"/>
                                <Not>
                                    <Dependency path="/form1099Gs/*/isComplete"/>
                                </Not>
                            </All>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Gs/*/hasSeenLastAvailableScreen">
            <Name>Has seen last available screen</Name>
            <Description>Whether the user has navigated to the last available screen in the unemployment section
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/form1099Gs/*/isComplete">
            <Name>Is Complete</Name>
            <Description>Whether this unemployment form is complete</Description>

            <Derived>
                <All>
                    <Dependency path="../hasSeenLastAvailableScreen"/>
                    <IsComplete>
                        <Dependency path="../federalTaxWithheld"/>
                    </IsComplete>
                    <Any>
                        <!-- Either withholding is 0, or we collect a payer TIN -->
                        <Equal>
                            <Left>
                                <Dependency path="../federalTaxWithheld"/>
                            </Left>
                            <Right>
                                <Dollar>0</Dollar>
                            </Right>
                        </Equal>
                        <IsComplete>
                            <Dependency path="../payer/tin"/>
                        </IsComplete>
                    </Any>
                    <IsComplete>
                        <Dependency path="../amount"/>
                    </IsComplete>
                </All>
            </Derived>
        </Fact>
        <Fact path="/form1099Gs/*/has1099">
            <Name>Has 1099</Name>
            <Description>Whether this unemployment income report has an attached 1099-G</Description>
            <Export stateSystems="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/form1099Gs/*/filer">
            <Name>Form 1099-G Filer</Name>
            <Description>The filer who received income for this report.</Description>

            <Writable>
                <CollectionItem collection="/filers"/>
            </Writable>
            <Placeholder>
                <Dependency module="filers" path="/primaryFiler"/>
            </Placeholder>

        </Fact>
        <Fact path="/form1099Gs/*/recipientTin">
            <Description>The recipient's TIN</Description>
            <Export stateSystems="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../belongsToPrimaryFiler"/>
                        </When>
                        <Then>
                            <Dependency module="filers" path="/primaryFiler/tin"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../belongsToSecondaryFiler"/>
                        </When>
                        <Then>
                            <Dependency module="filers" path="/secondaryFiler/tin"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form1099Gs/*/isMfjAndSpouses1099G">
            <Name>Is MFJ and is spouses 1099G</Name>
            <Description>Used to show specific language mentioning the spouse by name and checks MFJ to ensure the
                spouse is
                actually eligible
            </Description>

            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Dependency path="../belongsToSecondaryFiler"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/form1099Gs/*/payer">
            <Name>Payer</Name>
            <Description>The entity that paid the unemployment compensation.</Description>
            <Export stateSystems="true"/>

            <Writable>
                <String/>
                <Limit type="Match">
                    <String>[\sA-Za-z0-9\-]+</String>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Gs/*/payer/tin">
            <Name>TIN</Name>
            <Description>
                The taxpayer identification number of the payer on the 1099-G.
            </Description>
            <Export mef="true" stateSystems="true"/>

            <Writable>
                <EIN/>
            </Writable>
        </Fact>
        <Fact path="/form1099Gs/*/amount">
            <Name>Amount</Name>
            <Description>The amount of unemployment compensation.</Description>
            <Export stateSystems="true"/>

            <Writable>
                <Dollar/>
            </Writable>
            <Placeholder>
                <Dollar>0</Dollar>
            </Placeholder>
        </Fact>
        <Fact path="/form1099Gs/*/repaid">
            <Name>Repaid</Name>
            <Description>Whether the taxpayer repaid unemployment compensation received in the same year.</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/form1099Gs/*/writableAmountPaidBackForBenefitsInTaxYear">
            <Name>Amount Paid Back For Benefits In Tax Year</Name>
            <Description>
                The amount of money paid back in the tax year for the benefits received in the tax year. This is the
                writable fact.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/form1099Gs/*/amountPaidBackForBenefitsInTaxYear">
            <Name>Writable Amount Paid Back For Benefits In Tax Year</Name>
            <Description>The amount of money paid back in the tax year for the benefits received in the tax year. Takes
                a
                written value, but defaults to zero if it hasn't been written. We have to use a default like this,
                instead of a
                placeholder, make sure that the user's amount paid back is complete.
            </Description>
            <Export stateSystems="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableAmountPaidBackForBenefitsInTaxYear"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <!-- Added as a stopgap to prevent the amount being paid back from being greater than the amount being
              paid. This is added here so that this logic is carried down to all facts that depend on this as well. -->
                            <!-- TODO: This should be updated with a better solution after
              https://git.irslabs.org/irslabs-prototypes/direct-file/-/issues/4962 is complete -->
                            <LesserOf>
                                <Dependency path="../writableAmountPaidBackForBenefitsInTaxYear"/>
                                <Dependency path="../amount"/>
                            </LesserOf>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form1099Gs/*/writableAmountPaidBackForBenefitsBeforeTaxYear">
            <Name>Writable Amount Paid Back For Benefits Before Tax Year</Name>
            <Description>
                The amount of money paid back in the tax year for the benefits received before the tax year. This is
                the
                writable fact.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/form1099Gs/*/amountPaidBackForBenefitsBeforeTaxYear">
            <Name>Amount Paid Back For Benefits Before Tax Year</Name>
            <Description>The amount of money paid back in the tax year for the benefits received before the tax year.
                Takes a
                written value, but defaults to zero if it hasn't been written. We have to use a default like this,
                instead of a
                placeholder, to make sure that the user's amount paid back is complete.
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableAmountPaidBackForBenefitsBeforeTaxYear"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../writableAmountPaidBackForBenefitsBeforeTaxYear"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/totalAmountPaidBackForBenefitsBeforeTaxYear">
            <Name>Total Amount Paid Back For Benefits Before Tax Year</Name>
            <Description>
                The amount of money paid back in the tax year for the benefits received before the tax year for all
                filers.
            </Description>

            <Derived>
                <CollectionSum>
                    <Dependency path="/form1099Gs/*/amountPaidBackForBenefitsBeforeTaxYear"/>
                </CollectionSum>
            </Derived>
        </Fact>
        <Fact path="/form1099Gs/*/writableFederalTaxWithheld">
            <Name>Federal Tax Withheld</Name>
            <Description>The federal income tax withheld from this unemployment compensation. Only collected when a TP
                has a
                1099G.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/form1099Gs/*/federalTaxWithheld">
            <Name>Federal Tax Withheld</Name>
            <Description>The federal income tax withheld from this unemployment compensation. Takes a written value, but
                defaults to zero if it hasn't been written. We have to use a default like this, instead of a
                placeholder, to
                make sure that the user's total tax withheld (and therefore total number) remain complete.
            </Description>
            <Export downstreamFacts="true" mef="true" stateSystems="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <IsComplete>
                                    <Dependency path="../writableFederalTaxWithheld"/>
                                </IsComplete>
                            </When>
                            <Then>
                                <Dependency path="../writableFederalTaxWithheld"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/form1099Gs/*/flowHasFederalTaxWithheld">
            <Name>Flow Has Federal Tax Withheld</Name>
            <Description>If there has been feder tax withheld. Controls the flow for shwoing the payer tin.
            </Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../federalTaxWithheld"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Gs/*/writableState">
            <Name>State</Name>
            <Description>The state where this 1099G was received.</Description>

            <Writable>
                <Enum optionsPath="/incomeFormStateOptions"/>
            </Writable>
        </Fact>
        <Fact path="/flowKnockoutUnemploymentCompensationUnsupportedState">
            <Name>Flow Knockout Unemployment Compensation Unsupported State</Name>
            <Description>Used to control a knockout for if the filer received the unemployment compensation from a
                different
                state for any of their 1099Gs.
            </Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Gs/*/hasKnockoutUnemploymentCompensationInDifferentState"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Gs/*/hasKnockoutUnemploymentCompensationInDifferentState">
            <Name>Has Knockout Unemployment Compensation In Different State</Name>
            <Description>Checks to see if the unemployment comepensation is in a different state.</Description>

            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="../writableState"/>
                    </IsComplete>
                    <Equal>
                        <Left>
                            <Dependency path="../writableState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/incomeFormStateOptions">differentState</Enum>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/form1099Gs/*/writableStateIdNumber">
            <Name>State Id</Name>
            <Description>The state Id number of the payer.

                This is the writable optional fact. Can be left incomplete. Please
                use the derived fact in downstream calculations.
            </Description>
            <Writable>
                <String/>
            </Writable>
        </Fact>
        <Fact path="/form1099Gs/*/stateIdNumber">
            <Name>State Id</Name>
            <Description>
                The state Id number of the payer
            </Description>
            <Export stateSystems="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableStateIdNumber"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../writableStateIdNumber"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <String/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form1099Gs/*/writableStateTaxWithheld">
            <Name>State Tax Withheld</Name>
            <Description>The amount of state tax that has been withheld.

                This is the writable optional fact. Can be left
                incomplete. Please use the derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/form1099Gs/*/stateTaxWithheld">
            <Name>State Tax Withheld</Name>
            <Description>The amount of state tax that has been withheld.</Description>
            <Export stateSystems="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableStateTaxWithheld"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../writableStateTaxWithheld"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/primaryFiler1099Gs">
            <Description>1099Gs belonging to the primary filer</Description>

            <Derived>
                <Filter path="/form1099Gs">
                    <Dependency path="belongsToPrimaryFiler"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/primaryFiler1099GsWithAmount">
            <Description>1099Gs belonging to the primary filer that have an amount</Description>

            <Derived>
                <Filter path="/primaryFiler1099Gs">
                    <IsComplete>
                        <Dependency path="amount"/>
                    </IsComplete>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/primaryFiler1099GsTotal">
            <Description>Total 1099Gs amount belonging to the primary filer</Description>

            <Derived>
                <CollectionSum>
                    <Dependency path="/primaryFiler1099GsWithAmount/*/amount"/>
                </CollectionSum>

            </Derived>
        </Fact>
        <Fact path="/secondaryFiler1099Gs">
            <Description>1099Gs belonging to the secondary filer</Description>

            <Derived>
                <Filter path="/form1099Gs">
                    <Dependency path="belongsToSecondaryFiler"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/secondaryFiler1099GsWithAmount">
            <Description>1099Gs belonging to the secondary filer that have an amount</Description>

            <Derived>
                <Filter path="/secondaryFiler1099Gs">
                    <IsComplete>
                        <Dependency path="amount"/>
                    </IsComplete>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/secondaryFiler1099GsTotal">
            <Description>Total 1099Gs amount belonging to the secondary filer</Description>

            <Derived>
                <CollectionSum>
                    <Dependency path="/secondaryFiler1099GsWithAmount/*/amount"/>
                </CollectionSum>

            </Derived>
        </Fact>
        <Fact path="/filers/*/form1099GsTotal">
            <Name>total 1099Gs</Name>
            <Description>Total amount reported on Form 1099Gs.</Description>
            <Export stateSystems="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filers" path="../isPrimaryFiler"/>
                        </When>
                        <Then>
                            <Dependency path="/primaryFiler1099GsTotal"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filers" path="../isSecondaryFiler"/>
                        </When>
                        <Then>
                            <Dependency path="/secondaryFiler1099GsTotal"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/maximumRepaymentUnemploymentCompensation">
            <Name>Maximum Repayment Unemployment Compensation</Name>
            <Description>
                Maximum dollar amount of repayment of prior year unemployment compensation that direct file can
                handle.
            </Description>
            <Derived>
                <Dollar>3000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/flowKnockout1099GRepayTooHigh">
            <Name>Flow Knockout 1099-G Repay Too High</Name>
            <Description>
                If the amount received and repaid in different years is greater than
                /maximumRepaymentUnemploymentCompensation, knock out the filer.
            </Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/totalAmountPaidBackForBenefitsBeforeTaxYear"/>
                    </Left>
                    <Right>
                        <Dependency path="/maximumRepaymentUnemploymentCompensation"/>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/minimumUnemploymentCompensation">
            <Name>Minimum Unemployment Compensation</Name>
            <Description>Miniumum dollar amount needed where someone will get a 1099-G form</Description>
            <Derived>
                <Dollar>10</Dollar>
            </Derived>
        </Fact>
        <Fact path="/flowUnemploymentKnockout">
            <Description>The user has been knocked out for reasons(s) defined in this module</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Any>
                    <Dependency path="/flowKnockout1099GRepayTooHigh"/>
                    <Dependency path="/flowKnockoutUnemploymentCompensationUnsupportedState"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/relationshipOptions">
            <Derived>
                <EnumOptions>
                    <String>biologicalChild</String>
                    <String>adoptedChild</String>
                    <String>stepChild</String>
                    <String>fosterChild</String>
                    <String>grandChildOrOtherDescendantOfChild</String>
                    <String>childInLaw</String>
                    <String>sibling</String>
                    <String>childOfSibling</String>
                    <String>halfSibling</String>
                    <String>childOfHalfSibling</String>
                    <String>stepSibling</String>
                    <String>childOfStepSibling</String>
                    <String>otherDescendantOfSibling</String>
                    <String>otherDescendantOfHalfSibling</String>
                    <String>otherDescendantOfStepSibling</String>
                    <String>siblingsSpouse</String>
                    <String>siblingInLaw</String>
                    <String>parent</String>
                    <String>fosterParent</String>
                    <String>siblingOfParent</String>
                    <String>grandParent</String>
                    <String>otherAncestorOfParent</String>
                    <String>stepParent</String>
                    <String>parentInLaw</String>
                    <String>noneOfTheAbove</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/relationshipCategoryOptions">
            <Derived>
                <EnumOptions>
                    <String>childOrDescendants</String>
                    <String>siblingOrDescendants</String>
                    <String>parentOrAncestors</String>
                    <String>inlaws</String>
                    <String>notRelated</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/childRelationshipOptions">
            <Derived>
                <EnumOptions>
                    <String>biologicalChild</String>
                    <String>adoptedChild</String>
                    <String>stepChild</String>
                    <String>fosterChild</String>
                    <String>grandChildOrOtherDescendantOfChild</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/siblingRelationshipOptions">
            <Derived>
                <EnumOptions>
                    <String>sibling</String>
                    <String>childOfSibling</String>
                    <String>otherDescendantOfSibling</String>
                    <String>halfSibling</String>
                    <String>childOfHalfSibling</String>
                    <String>otherDescendantOfHalfSibling</String>
                    <String>stepSibling</String>
                    <String>childOfStepSibling</String>
                    <String>otherDescendantOfStepSibling</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/parentalRelationshipOptions">
            <Derived>
                <EnumOptions>
                    <String>parent</String>
                    <String>stepParent</String>
                    <String>fosterParent</String>
                    <String>grandParent</String>
                    <String>otherAncestorOfParent</String>
                    <String>siblingOfParent</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/inlawRelationshipOptions">
            <Derived>
                <EnumOptions>
                    <String>childInLaw</String>
                    <String>parentInLaw</String>
                    <String>siblingInLaw</String>
                    <String>siblingsSpouse</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/relationshipCategory">
            <Writable>
                <Enum optionsPath="/relationshipCategoryOptions"/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/relationshipCategoryIsChild">
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../relationshipCategory"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/relationshipCategoryOptions">childOrDescendants</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/relationshipCategoryIsSibling">
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../relationshipCategory"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/relationshipCategoryOptions">siblingOrDescendants</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/relationshipCategoryIsParent">
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../relationshipCategory"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/relationshipCategoryOptions">parentOrAncestors</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/relationshipCategoryIsInlaw">
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../relationshipCategory"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/relationshipCategoryOptions">inlaws</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/childRelationship">
            <Description>The type of child relationship.</Description>

            <Writable>
                <Enum optionsPath="/childRelationshipOptions"/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/siblingRelationship">
            <Description>The type of sibling relationship</Description>

            <Writable>
                <Enum optionsPath="/siblingRelationshipOptions"/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/parentalRelationship">
            <Description>The type of parental relationship</Description>

            <Writable>
                <Enum optionsPath="/parentalRelationshipOptions"/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/inlawRelationship">
            <Description>The type of inlaw relationship</Description>

            <Writable>
                <Enum optionsPath="/inlawRelationshipOptions"/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/relationship">
            <Name>Relationship to taxpayer</Name>
            <Description>The relationship of the dependent to the taxpayer(s).</Description>
            <Export downstreamFacts="true" stateSystems="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../relationshipCategory"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/relationshipCategoryOptions">childOrDescendants</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Switch>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../childRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/childRelationshipOptions">biologicalChild</Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">biologicalChild</Enum>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../childRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/childRelationshipOptions">adoptedChild</Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">adoptedChild</Enum>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../childRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/childRelationshipOptions">stepChild</Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">stepChild</Enum>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../childRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/childRelationshipOptions">fosterChild</Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">fosterChild</Enum>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../childRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/childRelationshipOptions">
                                                    grandChildOrOtherDescendantOfChild
                                                </Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">grandChildOrOtherDescendantOfChild
                                        </Enum>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../relationshipCategory"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/relationshipCategoryOptions">siblingOrDescendants</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Switch>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../siblingRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/siblingRelationshipOptions">sibling</Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">sibling</Enum>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../siblingRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/siblingRelationshipOptions">childOfSibling</Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">childOfSibling</Enum>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../siblingRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/siblingRelationshipOptions">halfSibling</Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">halfSibling</Enum>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../siblingRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/siblingRelationshipOptions">childOfHalfSibling
                                                </Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">childOfHalfSibling</Enum>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../siblingRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/siblingRelationshipOptions">stepSibling</Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">stepSibling</Enum>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../siblingRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/siblingRelationshipOptions">childOfStepSibling
                                                </Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">childOfStepSibling</Enum>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../siblingRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/siblingRelationshipOptions">
                                                    otherDescendantOfSibling
                                                </Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">otherDescendantOfSibling</Enum>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../siblingRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/siblingRelationshipOptions">
                                                    otherDescendantOfHalfSibling
                                                </Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">otherDescendantOfHalfSibling</Enum>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../siblingRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/siblingRelationshipOptions">
                                                    otherDescendantOfStepSibling
                                                </Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">otherDescendantOfStepSibling</Enum>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../relationshipCategory"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/relationshipCategoryOptions">parentOrAncestors</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Switch>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../parentalRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/parentalRelationshipOptions">parent</Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">parent</Enum>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../parentalRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/parentalRelationshipOptions">siblingOfParent</Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">siblingOfParent</Enum>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../parentalRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/parentalRelationshipOptions">grandParent</Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">grandParent</Enum>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../parentalRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/parentalRelationshipOptions">fosterParent</Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">fosterParent</Enum>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../parentalRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/parentalRelationshipOptions">otherAncestorOfParent
                                                </Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">otherAncestorOfParent</Enum>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../parentalRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/parentalRelationshipOptions">stepParent</Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">stepParent</Enum>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../relationshipCategory"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/relationshipCategoryOptions">inlaws</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Switch>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../inlawRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/inlawRelationshipOptions">childInLaw</Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">childInLaw</Enum>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../inlawRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/inlawRelationshipOptions">parentInLaw</Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">parentInLaw</Enum>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../inlawRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/inlawRelationshipOptions">siblingInLaw</Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">siblingInLaw</Enum>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency path="../inlawRelationship"/>
                                            </Left>
                                            <Right>
                                                <Enum optionsPath="/inlawRelationshipOptions">siblingsSpouse</Enum>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/relationshipOptions">siblingsSpouse</Enum>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../relationshipCategory"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/relationshipCategoryOptions">notRelated</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/relationshipOptions">noneOfTheAbove</Enum>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/relationshipCategoryIsImmediateChild">
            <Description>This is a biological, adopted, step, or foster child of the taxpayer</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="../relationshipCategoryIsChild"/>
                    <Not>
                        <Equal>
                            <Left>
                                <Dependency path="../childRelationship"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/childRelationshipOptions">grandChildOrOtherDescendantOfChild</Enum>
                            </Right>
                        </Equal>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/xmlRelationship">
            <Name>Relationship to Taxpayer (xml)</Name>
            <Description>
                The relationship of the dependent to the taxpayer(s) that the IRS 1040 XML expects. This fact maps
                the relationships Direct File (DF) uses to the relationships considered valid by the MeF system. DF does
                not
                collect gendered relationship data on the filer's dependents so the DF value is mapped to the
                corresponding MeF
                type using an arbitrary gender as the gender of dependents is not a consideration for tax calculations.
                For
                example, the DF values biologicalChild, adoptedChild, and childInLaw all map to the MeF value DAUGHTER.
                DAUGHTER
                was chosen for the mapped MeF value, but SON could have been used instead.
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Any>
                                <Equal>
                                    <Left>
                                        <Dependency path="../relationship"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/relationshipOptions">biologicalChild</Enum>
                                    </Right>
                                </Equal>
                                <Equal>
                                    <Left>
                                        <Dependency path="../relationship"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/relationshipOptions">adoptedChild</Enum>
                                    </Right>
                                </Equal>
                                <Equal>
                                    <Left>
                                        <Dependency path="../relationship"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/relationshipOptions">childInLaw</Enum>
                                    </Right>
                                </Equal>
                            </Any>
                        </When>
                        <Then>
                            <String>DAUGHTER</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Any>
                                <Equal>
                                    <Left>
                                        <Dependency path="../relationship"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/relationshipOptions">grandChildOrOtherDescendantOfChild
                                        </Enum>
                                    </Right>
                                </Equal>
                            </Any>
                        </When>
                        <Then>
                            <String>GRANDCHILD</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Any>
                                <Equal>
                                    <Left>
                                        <Dependency path="../relationship"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/relationshipOptions">grandParent</Enum>
                                    </Right>
                                </Equal>
                                <Equal>
                                    <Left>
                                        <Dependency path="../relationship"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/relationshipOptions">otherAncestorOfParent</Enum>
                                    </Right>
                                </Equal>
                            </Any>
                        </When>
                        <Then>
                            <String>GRANDPARENT</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Any>
                                <Equal>
                                    <Left>
                                        <Dependency path="../relationship"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/relationshipOptions">childOfSibling</Enum>
                                    </Right>
                                </Equal>
                                <Equal>
                                    <Left>
                                        <Dependency path="../relationship"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/relationshipOptions">childOfHalfSibling</Enum>
                                    </Right>
                                </Equal>
                                <Equal>
                                    <Left>
                                        <Dependency path="../relationship"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/relationshipOptions">childOfStepSibling</Enum>
                                    </Right>
                                </Equal>
                                <Equal>
                                    <Left>
                                        <Dependency path="../relationship"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/relationshipOptions">otherDescendantOfSibling</Enum>
                                    </Right>
                                </Equal>
                                <Equal>
                                    <Left>
                                        <Dependency path="../relationship"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/relationshipOptions">otherDescendantOfHalfSibling</Enum>
                                    </Right>
                                </Equal>
                                <Equal>
                                    <Left>
                                        <Dependency path="../relationship"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/relationshipOptions">otherDescendantOfStepSibling</Enum>
                                    </Right>
                                </Equal>
                            </Any>
                        </When>
                        <Then>
                            <String>NEPHEW</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Any>
                                <Equal>
                                    <Left>
                                        <Dependency path="../relationship"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/relationshipOptions">parent</Enum>
                                    </Right>
                                </Equal>
                                <Equal>
                                    <Left>
                                        <Dependency path="../relationship"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/relationshipOptions">stepParent</Enum>
                                    </Right>
                                </Equal>
                                <Equal>
                                    <Left>
                                        <Dependency path="../relationship"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/relationshipOptions">parentInLaw</Enum>
                                    </Right>
                                </Equal>
                            </Any>
                        </When>
                        <Then>
                            <String>PARENT</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Any>
                                <Equal>
                                    <Left>
                                        <Dependency path="../relationship"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/relationshipOptions">sibling</Enum>
                                    </Right>
                                </Equal>
                                <Equal>
                                    <Left>
                                        <Dependency path="../relationship"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/relationshipOptions">siblingInLaw</Enum>
                                    </Right>
                                </Equal>
                                <Equal>
                                    <Left>
                                        <Dependency path="../relationship"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/relationshipOptions">siblingsSpouse</Enum>
                                    </Right>
                                </Equal>
                            </Any>
                        </When>
                        <Then>
                            <String>SISTER</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../relationship"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/relationshipOptions">stepChild</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <String>STEPCHILD</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../relationship"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/relationshipOptions">fosterChild</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <String>FOSTER CHILD</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../relationship"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/relationshipOptions">halfSibling</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <String>HALF SISTER</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../relationship"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/relationshipOptions">stepSibling</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <String>STEPBROTHER</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../relationship"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/relationshipOptions">siblingOfParent</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <String>UNCLE</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../relationship"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/relationshipOptions">fosterParent</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <String>OTHER</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../relationship"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/relationshipOptions">noneOfTheAbove</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <String>NONE</String>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/qcRelationshipTest">
            <Name>Relationship test</Name>
            <Description>Does the dependent's relationship to the taxpayer pass the Relationship test to be a qualifying
                child?
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">biologicalChild</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">adoptedChild</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">stepChild</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">fosterChild</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">sibling</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">halfSibling</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">stepSibling</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">otherDescendantOfSibling</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">otherDescendantOfStepSibling</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">otherDescendantOfHalfSibling</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">grandChildOrOtherDescendantOfChild</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">childOfSibling</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">childOfHalfSibling</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">childOfStepSibling</Enum>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/qrRelationshipTest">
            <Name>Qualifying relative relationship</Name>
            <Description>The dependent has a relationship to the taxpayer for purposes of the relationship/member of
                household
                test that does not require the dependent to be a member of the household all year.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">biologicalChild</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">adoptedChild</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">stepChild</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">fosterChild</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">sibling</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">stepSibling</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">halfSibling</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">grandChildOrOtherDescendantOfChild</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">childOfSibling</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">childOfHalfSibling</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">parent</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">stepParent</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">grandParent</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">otherAncestorOfParent</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">siblingOfParent</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">childInLaw</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">parentInLaw</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">siblingInLaw</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">siblingsSpouse</Enum>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/marriedHohRelationshipTest">
            <Name>Relationship test</Name>
            <Description>
                If a filer is married, but filing as HoH, their QP must be one of these relationship types for HoH.
                This more restrictive relationship test does not apply to EITC, Dependents, or other credits.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">biologicalChild</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">adoptedChild</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">stepChild</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">fosterChild</Enum>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/directFileLanguagePreference">
            <Name>Direct File Language Preference</Name>
            <Description>The language the filer wants to received communications from Direct File in</Description>

            <Writable>
                <String/>
            </Writable>
        </Fact>
        <Fact path="/timeZoneOptions">
            <Derived>
                <EnumOptions>
                    <String>HST</String>
                    <String>HADT</String>
                    <String>AKT</String>
                    <String>PT</String>
                    <String>MT</String>
                    <String>CT</String>
                    <String>ET</String>
                    <String>MIL</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/offset">
            <Derived>
                <Switch>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/stateTimezone"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/timeZoneOptions">
                                        ET
                                    </Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Int>-4</Int>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/stateTimezone"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/timeZoneOptions">
                                        CT
                                    </Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Int>-5</Int>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/stateTimezone"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/timeZoneOptions">
                                        MT
                                    </Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Int>-6</Int>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/stateTimezone"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/timeZoneOptions">
                                        PT
                                    </Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Int>-7</Int>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/stateTimezone"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/timeZoneOptions">
                                        AKT
                                    </Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Int>-8</Int>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/stateTimezone"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/timeZoneOptions">
                                        HADT
                                    </Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Int>-9</Int>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/stateTimezone"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/timeZoneOptions">
                                        HST
                                    </Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Int>-10</Int>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/stateTimezone"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/timeZoneOptions">
                                        MIL
                                    </Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Int>-12</Int>
                        </Then>
                    </Case>


                </Switch>
            </Derived>
        </Fact>
        <Fact path="/stateTimezone">
            <Derived>
                <Switch>
                    <!-- If we don't have an address yet, we need to pick some timezone
          We pick the most generous timezone the product supports, on the assumption
          the user MIGHT be in that timezone and so we should offer to support them
          until we know where they actually live
          -->
                    <Case>
                        <When>
                            <Not>
                                <IsComplete>
                                    <Dependency path="/address" module="filers"/>
                                </IsComplete>
                            </Not>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                MIL
                            </Enum>
                        </Then>
                    </Case>

                    <!-- For each US state, we pick the most "generous" timezone the state might use;
          that is, if a state is Central Time and Mountain Time (like SD), we'll pick mountain time -->

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>AL</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                CT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>AK</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                HADT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>AZ</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                PT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>AR</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                CT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>CA</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                PT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>CO</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                MT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>CT</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                ET
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>DE</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                ET
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>DC</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                ET
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>FL</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                CT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>GA</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                ET
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>HI</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                HST
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>ID</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                PT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>IL</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                CT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>IN</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                CT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>IA</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                CT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>KS</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                MT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>KY</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                CT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>LA</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                CT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>ME</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                ET
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>MD</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                ET
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>MA</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                ET
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>MI</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                CT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>MN</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                CT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>MS</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                CT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>MO</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                CT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>MT</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                MT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>NE</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                MT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>NV</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                PT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>NH</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                ET
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>NJ</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                ET
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>NM</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                MT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>NY</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                ET
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>NC</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                ET
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>ND</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                MT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>OH</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                ET
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>OK</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                CT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>OR</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                PT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>PA</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                ET
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>RI</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                ET
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>SC</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                ET
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>SD</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                MT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>TN</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                CT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>TX</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                MT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>UT</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                MT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>VT</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                ET
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>VA</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                ET
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>WA</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                PT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>WV</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                ET
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>WI</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                CT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>WY</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                MT
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>AA</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                MIL
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>AE</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                MIL
                            </Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/address/stateOrProvence" module="filers"/>
                                </Left>
                                <Right>
                                    <String>AP</String>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                MIL
                            </Enum>
                        </Then>
                    </Case>

                    <!-- Taxpayer must have imported an address with a state that we don't otherwise support, like PR.
          Creating this special case at least prevents <Today> from breaking elsewhere in the application. -->

                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Enum optionsPath="/timeZoneOptions">
                                MIL
                            </Enum>
                        </Then>
                    </Case>

                </Switch>
            </Derived>
        </Fact>
        <Fact path="/todayOverride" testOnly="true">
            <Description>USED FOR TESTING. Manually set a fact for what "Today" is since mocking Dates in the fact graph
                is
                tricky in typescript
            </Description>
            <Writable>
                <Day/>
            </Writable>
        </Fact>
        <Fact path="/today">
            <Description>Today, in the filer's timezone of residence</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="/todayOverride"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="/todayOverride"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Today>
                                <Dependency path="/offset"/>
                            </Today>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/hasSeenReviewScreen">
            <Name>Has seen review screen</Name>
            <Description>The user has seen the review screen</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/lastYearAgiFromOLA">
            <Description>
                The user's last year's AGI as loaded from their OLA account.
                This should probably be a dollar amount,
                but was a bug from TY2023.
            </Description>
            <Writable>
                <Int/>
            </Writable>
        </Fact>
        <Fact path="/filedLastYear">
            <Name>Filed last year</Name>
            <Description>Has the taxpayer filed last year</Description>
            <Export mef="true" downstreamFacts="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/needsDateOfBirthToSign">
            <Derived>
                <Any>
                    <Not>
                        <Dependency path="/filedLastYear"/>
                    </Not>
                    <Dependency module="filers" path="/primaryFilerHasIpPin"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/isFilingMFJAndIsWidowedInTaxYear">
            <Name>TP is filing MFJ and is widowed in tax year</Name>
            <Derived>
                <All>
                    <Dependency module="filers" path="/isWidowedInTaxYear"/>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/spouseFiledLastYear">
            <Name>Spouse filed last year</Name>
            <Description>Has the taxpayer's spouse filed last year</Description>
            <Export downstreamFacts="true"/>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/spouseNeedsDateOfBirthToSign">
            <Derived>
                <Any>
                    <Not>
                        <Dependency path="/spouseFiledLastYear"/>
                    </Not>
                    <Dependency module="filers" path="/spouseHasIpPin"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/signReturnIdentityOptions">
            <Name>Tax return identity Options</Name>
            <Description>Options for how the TP wants to sign their tax return</Description>
            <Derived>
                <EnumOptions>
                    <String>lastYearAgi</String>
                    <String>lastYearPin</String>
                    <String>cannotFind</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/signReturnIdentity">
            <Name>How the TP wants to confirm their identity</Name>
            <Description>Using self-select PIN, last year's AGI and date of birth, or they cannot find either of
                these.
            </Description>

            <Writable>
                <Enum optionsPath="/signReturnIdentityOptions"/>
            </Writable>
        </Fact>
        <Fact path="/signReturnIdentitySpouseOptions">
            <Name>Tax return identity Options</Name>
            <Description>Options for how the TP's spouse wants to sign their tax return</Description>
            <Derived>
                <EnumOptions>
                    <String>lastYearAgi</String>
                    <String>lastYearPin</String>
                    <String>cannotFind</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/signReturnIdentitySpouse">
            <Name>How the TP wants to confirm their identity</Name>
            <Description>Using self-select PIN, last year's AGI and date of birth, or they cannot find either of
                these.
            </Description>

            <Writable>
                <Enum optionsPath="/signReturnIdentitySpouseOptions"/>
            </Writable>
        </Fact>
        <Fact path="/isPaperPathDueToMissingIpPin">
            <Derived>
                <Any>
                    <Dependency module="filers" path="/primaryFilerIsMissingIpPin"/>
                    <Dependency module="filers" path="/secondaryFilerIsMissingIpPin"/>
                    <Dependency module="familyAndHousehold" path="/oneOrMoreDependentsAreMissingIpPin"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/isEssarFeatureFlag">
            <Name>Is ESSAR Enabled</Name>
            <Description>Is the electronic signing flow (and use of ESSAR) enabled through a build flag</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/hasFailedMaxElectronicSigningAttempts">
            <Name>(UNUSED) Has Electronic Signing Failed</Name>
            <Description>Note: this fact has been deprecated and is no longer used. It should be removed after filing
                season.
                True when the maximum configured number of attempts to electronically sign a return has been reached
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/canUseElectronicSignatureFlow">
            <Name>(UNUSED) Is eSign flow enabled</Name>
            <Description>Note: this fact has been deprecated and is no longer used. It should be removed after filing
                season.
                Is the electronic signature flow available for this tax return
            </Description>
            <Derived>
                <All>
                    <Dependency path="/isEssarFeatureFlag"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isLegacySigningPath">
            <Name>Is not compatible with electronic signing</Name>
            <Description>Is not compatible with electronic signing</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Any>
                    <Dependency path="/isPaperPathDueToMissingIpPin"/>
                    <Dependency module="spouseSection" path="/isMFJWithLivingSpouse"/>
                    <Not>
                        <Dependency path="/isEssarFeatureFlag"/>
                    </Not>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/isPaperPath">
            <Name>Whether the return is on a paper filing path</Name>
            <Description>Either the TP is missing an IP Pin or they cannot find their last
                year's AGI or Self-Select Pin in the
                Sign and Submit section.
            </Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Any>
                    <Dependency path="/isPaperPathDueToMissingIpPin"/>
                    <Dependency path="/cannotFindPinOrAgi"/>
                    <Dependency path="/spouseCannotFindPinOrAgi"/>
                    <Dependency module="cdcc" path="/hasMoreThan25CareProviders"/>
                    <Dependency module="cdcc" path="/hasMoreThan25QualifyingPeople"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/isPaperPathAndWantedToPayViaAch">
            <Name>If the filer is on a paper filing path and set their payment method to direct deposit</Name>
            <Derived>
                <All>
                    <Dependency path="/isPaperPath"/>
                    <Dependency module="paymentMethod" path="/payViaAch"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isPaperPathAndNoPaymentChoiceOrWasAutocorrected">
            <Name>If the filer is on a paper filing path and did not have a payment method chosen</Name>
            <Derived>
                <All>
                    <Dependency path="/isPaperPath"/>
                    <Any>
                        <Not>
                            <IsComplete>
                                <Dependency module="paymentMethod" path="/payViaAch"/>
                            </IsComplete>
                        </Not>
                        <Dependency module="flow" path="/flowHasSeenPaymentMethodAutocorrect"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/willEnterLastYearPin">
            <Export downstreamFacts="true"/>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/signReturnIdentity"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/signReturnIdentityOptions">lastYearPin</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/willEnterLastYearAgi">
            <Export downstreamFacts="true"/>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/signReturnIdentity"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/signReturnIdentityOptions">lastYearAgi</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/cannotFindPinOrAgi">
            <Derived>
                <All>
                    <Equal>
                        <Left>
                            <Dependency path="/signReturnIdentity"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/signReturnIdentityOptions">cannotFind</Enum>
                        </Right>
                    </Equal>
                    <Dependency path="/filedLastYear"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/spouseWillEnterLastYearPin">
            <Export downstreamFacts="true"/>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/signReturnIdentitySpouse"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/signReturnIdentitySpouseOptions">lastYearPin</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/spouseWillEnterLastYearAgi">
            <Export downstreamFacts="true"/>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/signReturnIdentitySpouse"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/signReturnIdentitySpouseOptions">lastYearAgi</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/spouseCannotFindPinOrAgi">
            <Derived>
                <All>
                    <Equal>
                        <Left>
                            <Dependency path="/signReturnIdentitySpouse"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/signReturnIdentitySpouseOptions">cannotFind</Enum>
                        </Right>
                    </Equal>
                    <Dependency path="/spouseFiledLastYear"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/needsToEnterLastYearAgi">
            <Derived>
                <All>
                    <Dependency path="/filedLastYear"/>
                    <Dependency path="/willEnterLastYearAgi"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/spouseNeedsToEnterLastYearAgi">
            <Derived>
                <All>
                    <Dependency module="spouseSection" path="/isMFJWithLivingSpouse"/>
                    <Dependency path="/spouseFiledLastYear"/>
                    <Dependency path="/spouseWillEnterLastYearAgi"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/lastYearAgi">
            <Name>Last year's AGI</Name>
            <Description>Taxpayer's AGI from the last year</Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/spouseLastYearAgi">
            <Name>Last year's AGI for Spouse</Name>
            <Description>Taxpayer's spouse's AGI from the last year</Description>
            <Export downstreamFacts="true"/>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/primaryPriorYearAGIAmount">
            <Name>primaryPriorYearAGIAmount</Name>
            <Description>Primary filer's prior year AGI amount.</Description>
            <Export mef="true"/>


            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <All>
                                    <Not>
                                        <Dependency path="/filedLastYear"/>
                                    </Not>
                                    <Not>
                                        <Dependency module="filers" path="/primaryFilerHasIpPin"/>
                                    </Not>
                                </All>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <All>
                                    <Not>
                                        <Dependency module="filers" path="/primaryFilerHasIpPin"/>
                                    </Not>
                                    <Dependency path="/needsToEnterLastYearAgi"/>
                                </All>
                            </When>
                            <Then>
                                <Dependency path="/lastYearAgi"/>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/spousePriorYearAGIAmount">
            <Name>spousePriorYearAGIAmount</Name>
            <Description>Spouse's prior year AGI amount.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <All>
                                    <Dependency module="spouseSection" path="/isMFJWithLivingSpouse"/>
                                    <Not>
                                        <Dependency path="/spouseFiledLastYear"/>
                                    </Not>
                                    <Not>
                                        <Dependency module="filers" path="/spouseHasIpPin"/>
                                    </Not>
                                </All>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <All>
                                    <Not>
                                        <Dependency module="filers" path="/spouseHasIpPin"/>
                                    </Not>
                                    <Dependency path="/spouseNeedsToEnterLastYearAgi"/>
                                </All>
                            </When>
                            <Then>
                                <Dependency path="/spouseLastYearAgi"/>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/selfSelectPin">
            <Name>Self-Select PIN</Name>
            <Description>The self-select pin number of the taxpayer(s).</Description>
            <Export downstreamFacts="true" mef="true"/>
            <Writable>
                <PIN/>
            </Writable>
        </Fact>
        <Fact path="/selfSelectPinLastYear">
            <Name>Last Year's Self-Select PIN</Name>
            <Description>The self-select pin number of the taxpayer(s) for the last tax year.</Description>
            <Export downstreamFacts="true"/>
            <Writable>
                <PIN/>
            </Writable>
        </Fact>
        <Fact path="/xmlSelfSelectPinLastYear">
            <Name>Last Year's Self-Select PIN</Name>
            <Description>The self-select pin number of the taxpayer(s) for the last tax year. Used to populate the IRS
                Return
                Header SelfSelectPINGrp.PrimaryPriorYearPIN XML element.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/willEnterLastYearPin"/>
                                <Not>
                                    <Dependency module="filers" path="/primaryFilerHasIpPin"/>
                                </Not>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/selfSelectPinLastYear"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/spouseSelfSelectPin">
            <Name>Self-Select PIN for Taxpayer's Spouse</Name>
            <Description>The self-select pin number of the taxpayer's spouse.</Description>
            <Export downstreamFacts="true"/>
            <Writable>
                <PIN/>
            </Writable>
        </Fact>
        <Fact path="/xmlSpouseSelfSelectPin">
            <Description>The self-select pin used by the XML. The spouse's self select pin should not be used when the
                spouse
                is deceased
            </Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="spouseSection" path="/isMFJWithLivingSpouse"/>
                        </When>
                        <Then>
                            <Dependency path="/spouseSelfSelectPin"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/spouseSelfSelectPinLastYear">
            <Name>Last Year's Self-Select PIN for Spouse of taxpayer</Name>
            <Description>The self-select pin number of the taxpayer's spouse for the last tax year.</Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <PIN/>
            </Writable>
        </Fact>
        <Fact path="/xmlSpouseSelfSelectPinLastYear">
            <Name>Last Year's Self-Select PIN for Spouse of taxpayer</Name>
            <Description>The self-select pin number of the taxpayer's spouse for the last tax year. Used to populate the
                IRS
                Return Header SelfSelectPINGrp.SpousePriorYearPIN XML element.The spouse's self select pin should not be
                used
                when the spouse
                is deceased.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="spouseSection" path="/isMFJWithLivingSpouse"/>
                                <Dependency path="/spouseWillEnterLastYearPin"/>
                                <Not>
                                    <Dependency module="filers" path="/spouseHasIpPin"/>
                                </Not>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/spouseSelfSelectPinLastYear"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/isUsingDirectDeposit">
            <Name>Whether the taxpayer is using direct deposit or not</Name>
            <Derived>
                <Any>
                    <Dependency module="paymentMethod" path="/refundViaAch"/>
                    <Dependency module="paymentMethod" path="/payViaAch"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/isUsingBankAccountToPay">
            <Name>Whether the taxpayer is using direct deposit to pay the taxes they owe</Name>
            <Derived>
                <All>
                    <Dependency module="taxCalculations" path="/owesBalance"/>
                    <Dependency module="paymentMethod" path="/payViaAch"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs">
            <Name>Form 1099-R</Name>
            <Description>Form 1099-R: Distributions From Pensions, Annuities, Retirement or Profit-Sharing Plans, IRAs,
                Insurance Contracts, etc.
            </Description>
            <Export downstreamFacts="true"/>
            <Writable>
                <Collection/>
            </Writable>
        </Fact>
        <Fact path="/has1099R">
            <Name>Has 1099-R</Name>
            <Description>Whether the TP has any 1099-R listed</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/form1099Rs"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasSome1099rFormsBeforeSectionEnabled">
            <Description>Whether the TP claimed to have 1099-R forms in the TY. Note that this is used when the 1099R
                feature
                flag is turned off
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/has1099rFormsAndFeatureIsNotEnabled">
            <Description>Whether the TP claimed to have 1099Rs and the 1099R feature is disabled</Description>
            <Derived>
                <False/>
            </Derived>
        </Fact>
        <Fact path="/is1099RFeatureFlagEnabled">
            <Name>1099-R Feature Flag</Name>
            <Description>Fact for enabling the 1099-R feature flag. Controlled by build configuration.</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/filer">
            <Name>Recipient</Name>
            <Description>The recipient of the 1099-R.</Description>

            <Writable>
                <CollectionItem collection="/filers"/>
            </Writable>
            <Placeholder>
                <Dependency module="filers" path="/primaryFiler"/>
            </Placeholder>
        </Fact>
        <Fact path="/form1099Rs/*/belongsToPrimaryFiler">
            <Description>Whether the 1099-R belongs to the primary filer</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../filer"/>
                    </Left>
                    <Right>
                        <Dependency module="filers" path="/primaryFiler"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/belongsToSecondaryFiler">
            <Description>Whether the 1099-R belongs to the secondary filer</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../filer"/>
                    </Left>
                    <Right>
                        <Dependency module="filers" path="/secondaryFiler"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/secondaryFilerUsedWithoutMFJ">
            <Description>Whether the secondary filer is used without MFJ</Description>
            <Derived>
                <All>
                    <Dependency path="../belongsToSecondaryFiler"/>
                    <Not>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/secondaryFilerUsedWithoutMFJ">
            <Description>Whether there are any form 1099Rs that use the secondary filer when the status is not MFJ
            </Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Rs/*/secondaryFilerUsedWithoutMFJ"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/recipientAddressChoiceOptions">
            <Name>Recipient 1099-R address choice options</Name>
            <Description>If the recipient's address matches the return, if it's different, or there is none.
            </Description>
            <Derived>
                <EnumOptions>
                    <String>matchesReturn</String>
                    <String>different</String>
                    <String>none</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/recipientAddressChoice">
            <Name>1099-R recipient address</Name>
            <Description>Same as return, is different, or none</Description>
            <Writable>
                <Enum optionsPath="/recipientAddressChoiceOptions"/>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/addressMatchesReturn">
            <Name>Address on form is same as tax return</Name>
            <Description>Whether the form contains the same recipient address as the tax return.</Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../recipientAddressChoice"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/recipientAddressChoiceOptions">matchesReturn</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/hasDifferentRecipientAddress">
            <Description>Whether the form has a recipient address different than the tax return</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../recipientAddressChoice"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/recipientAddressChoiceOptions">different</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/addressOverride">
            <Description>Recipient's address, if it doesn't match the one on the return</Description>
            <Writable>
                <Address/>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/hasRecipientAddress">
            <Description>Whether the recipient has an address on the 1099R</Description>
            <Export mef="true"/>

            <Derived>
                <IsComplete>
                    <Dependency path="../address"/>
                </IsComplete>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/address">
            <Name>Recipient's address</Name>
            <Description>The recipient's address and ZIP code override field.</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../addressMatchesReturn"/>
                        </When>
                        <Then>
                            <Dependency module="filers" path="/address"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../recipientAddressChoice"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/recipientAddressChoiceOptions">different</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Dependency path="../addressOverride"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/mefRecipientZipcode">
            <Description>The recipient's zipcode with any non-digit characters (like -) stripped out.</Description>
            <Export mef="true"/>
            <Derived>
                <Trim>
                    <StripChars>
                        <Input>
                            <Dependency path="../address/postalCode"/>
                        </Input>
                        <Allow>
                            <Dependency module="mefTypes" path="/mefZipCodeType"/>
                        </Allow>
                    </StripChars>
                </Trim>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/payer">
            <Description>The payer of the 1099-R.</Description>
            <Export mef="true"/>

            <Writable>
                <String/>
                <Limit type="Match">
                    <String>(([A-Za-z0-9#\-\(\)]|&amp;|')\s?)*([A-Za-z0-9#\-\(\)]|&amp;|')</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>75</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/writablePayerNameLine2">
            <Description>Line 2 of the payer's name on the 1099-R</Description>
            <Export mef="true"/>

            <Writable>
                <String/>
                <Limit type="MaxLength">
                    <Int>75</Int>
                </Limit>
                <Limit type="Match">
                    <String>(([A-Za-z0-9#/%\-\(\)]|&amp;|')\s?)*([A-Za-z0-9#/%\-\(\)]|&amp;|')</String>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/hasUnsupportedDistributionCode">
            <Description>Whether the 1099R has a distribution that Direct file does not support yet. Note: if you change
                this
                fact, review that the newly supported codes are correctly included in facts like
                ../hasDistributionCodeIncludedInSaversCredit and ../isFullyOrPartlyTaxablePension
            </Description>
            <Derived>
                <Any>
                    <GreaterThan>
                        <Left>
                            <Length>
                                <Dependency path="../writableDistributionCode"/>
                            </Length>
                        </Left>
                        <Right>
                            <Int>2</Int>
                        </Right>
                    </GreaterThan>
                    <Equal>
                        <Left>
                            <Length>
                                <Dependency path="../writableDistributionCode"/>
                            </Length>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </Equal>
                    <Not>
                        <Any>
                            <Equal>
                                <Left>
                                    <Dependency path="../distributionCode"/>
                                </Left>
                                <Right>
                                    <String>2</String>
                                </Right>
                            </Equal>
                            <Equal>
                                <Left>
                                    <Dependency path="../distributionCode"/>
                                </Left>
                                <Right>
                                    <String>7</String>
                                </Right>
                            </Equal>
                            <Equal>
                                <Left>
                                    <Dependency path="../distributionCode"/>
                                </Left>
                                <Right>
                                    <String>G</String>
                                </Right>
                            </Equal>
                            <Equal>
                                <Left>
                                    <Dependency path="../distributionCode"/>
                                </Left>
                                <Right>
                                    <String>H</String>
                                </Right>
                            </Equal>
                            <Equal>
                                <Left>
                                    <Dependency path="../distributionCode"/>
                                </Left>
                                <Right>
                                    <String>2B</String>
                                </Right>
                            </Equal>
                            <Equal>
                                <Left>
                                    <Dependency path="../distributionCode"/>
                                </Left>
                                <Right>
                                    <String>B2</String>
                                </Right>
                            </Equal>
                            <Equal>
                                <Left>
                                    <Dependency path="../distributionCode"/>
                                </Left>
                                <Right>
                                    <String>7B</String>
                                </Right>
                            </Equal>
                            <Equal>
                                <Left>
                                    <Dependency path="../distributionCode"/>
                                </Left>
                                <Right>
                                    <String>B7</String>
                                </Right>
                            </Equal>
                            <Equal>
                                <Left>
                                    <Dependency path="../distributionCode"/>
                                </Left>
                                <Right>
                                    <String>BG</String>
                                </Right>
                            </Equal>
                            <Equal>
                                <Left>
                                    <Dependency path="../distributionCode"/>
                                </Left>
                                <Right>
                                    <String>GB</String>
                                </Right>
                            </Equal>
                            <Equal>
                                <Left>
                                    <Dependency path="../distributionCode"/>
                                </Left>
                                <Right>
                                    <String>4G</String>
                                </Right>
                            </Equal>
                            <Equal>
                                <Left>
                                    <Dependency path="../distributionCode"/>
                                </Left>
                                <Right>
                                    <String>G4</String>
                                </Right>
                            </Equal>
                            <Equal>
                                <Left>
                                    <Dependency path="../distributionCode"/>
                                </Left>
                                <Right>
                                    <String>4H</String>
                                </Right>
                            </Equal>
                            <Equal>
                                <Left>
                                    <Dependency path="../distributionCode"/>
                                </Left>
                                <Right>
                                    <String>H4</String>
                                </Right>
                            </Equal>
                        </Any>
                    </Not>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/hasPensionRollover">
            <Description>Whether this 1099R has a rollover distribution code.</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Length>
                            <StripChars>
                                <Input>
                                    <Dependency path="../distributionCode"/>
                                </Input>
                                <Allow>
                                    <String>GH</String>
                                </Allow>
                            </StripChars>
                        </Length>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099RsWithPensionRollover">
            <Description>Forms 1099-R with pension rollover</Description>
            <Derived>
                <Filter path="/form1099Rs">
                    <Dependency path="hasPensionRollover"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/isDirectRollover">
            <Description>Whether this 1099R has a rollover distribution code.</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Length>
                            <StripChars>
                                <Input>
                                    <Dependency path="../distributionCode"/>
                                </Input>
                                <Allow>
                                    <String>GH</String>
                                </Allow>
                            </StripChars>
                        </Length>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099RsWithDirectRollover">
            <Description>Forms 1099-R with direct rollover</Description>
            <Derived>
                <Filter path="/form1099Rs">
                    <Dependency path="isDirectRollover"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/has1099RWithDirectRollover">
            <Description>Whether any 1099R has a rollover distribution code.</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="/form1099RsWithDirectRollover"/>
                    </IsComplete>
                    <GreaterThan>
                        <Left>
                            <CollectionSize>
                                <Dependency path="/form1099RsWithDirectRollover"/>
                            </CollectionSize>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/flowAskAboutIndirectRollover">
            <Description>Used in the flow to determine whether to show 1099-r-box-7-indirect-rollover</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Length>
                            <StripChars>
                                <Input>
                                    <Dependency path="../distributionCode"/>
                                </Input>
                                <Allow>
                                    <String>1237</String>
                                </Allow>
                            </StripChars>
                        </Length>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/causesRolloverKO">
            <Name>1099-R Total Rollover Distribution Knockout</Name>
            <Description>The filer is knocked out of scope if they rolled their distribution into another retirement
                account
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../indicatedHasIndirectRollover"/>
                                </IsComplete>
                                <Dependency path="../indicatedHasIndirectRollover"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writableIsIndirectRollover"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutForRollover">
            <Description>Whether the user is knocked out for their 1099R distribution rolled into another retirement
                account
            </Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Rs/*/causesRolloverKO"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099RsWithUnsupportedDistributionCode">
            <Description>Forms 1099-R with unsupported distribution codes</Description>
            <Derived>
                <Filter path="/form1099Rs">
                    <Dependency path="hasUnsupportedDistributionCode"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/knockoutForForm1099RDistributionCode">
            <Description>Whether the user is knocked out for their 1099R distribution code (box 7)</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="/form1099RsWithUnsupportedDistributionCode"/>
                    </IsComplete>
                    <GreaterThan>
                        <Left>
                            <CollectionSize>
                                <Dependency path="/form1099RsWithUnsupportedDistributionCode"/>
                            </CollectionSize>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/causesPreTaxToPostTaxRolloverKO">
            <Description>At least one 1099-R has a direct rollover pre-to-pre-tax (ie non-ROTH) account or direct
                rollover
                after-to-after tax (ie ROTH) account. Any changes to this KO should check that
                ../primaryFiler1099RsReportedOnSaversCredit and ../secondaryFiler1099RsReportedOnSaversCredit are still
                calculated correctly.
            </Description>

            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="/form1099RsWithPensionRollover"/>
                    </IsComplete>
                    <Dependency path="../hasPensionRollover"/>
                    <GreaterThan>
                        <Left>
                            <Dependency path="../taxableAmount"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutForPreTaxToPostTaxRollover">
            <Description>Flow knockout for when the user is knocked out for having direct rollover pre-to-pre-tax (ie
                non-ROTH) account or direct rollover after-to-after tax (ie ROTH) account
            </Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Rs/*/causesPreTaxToPostTaxRolloverKO"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/payer/tin">
            <Description>The payer's Tin from the 1099-R.</Description>
            <Export mef="true"/>

            <Writable>
                <EIN/>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/writableGrossDistribution">
            <Description>Box 1 of form 1099-R: Gross Distribution</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/payer/hasAddress">
            <Description>Whether the payer has an address</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../address"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/payer/address">
            <Description>The payer's address from the 1099-R.</Description>
            <Export mef="true"/>

            <Writable>
                <Address/>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/mefPayerZipcode">
            <Description>The payer's zipcode with any non-digit characters (like -) stripped out.</Description>
            <Export mef="true"/>
            <Derived>
                <Trim>
                    <StripChars>
                        <Input>
                            <Dependency path="../payer/address/postalCode"/>
                        </Input>
                        <Allow>
                            <Dependency module="mefTypes" path="/mefZipCodeType"/>
                        </Allow>
                    </StripChars>
                </Trim>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/payer/writablePhone">
            <Description>The payer's phone from the 1099-R.</Description>
            <Export mef="true"/>

            <Writable>
                <PhoneNumber/>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/grossDistribution">
            <Description>Box 1 of form 1099-R: Gross Distribution (rounded)</Description>
            <Export mef="true" downstreamFacts="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <IsComplete>
                                    <Dependency path="../writableGrossDistribution"/>
                                </IsComplete>
                            </When>
                            <Then>
                                <Dependency path="../writableGrossDistribution"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writableTaxableAmount">
            <Description>Box 2a of form 1099-R: Taxable Amount</Description>
            <!-- TODO lots more to do in this area. From 1040 instructions:

      If your Form 1099-R doesn't show the taxable amount, you must use the General Rule explained in Pub. 939
      to figure the taxable part to enter on line 5b. But if your annuity starting date (defined later) was
      after July 1, 1986, see Simplified Method, later, to find out if you must use that method to figure the taxable part.

      You can ask the IRS to figure the taxable part for you for a $1,000 fee. For details, see Pub. 939.

      If your Form 1099-R shows a taxable amount, you can report that amount on line 5b. But you may be able
      to report a lower taxable amount by using the General Rule or the Simplified Method or if the exclusion
      for retired public safety officers, discussed next, applies.
      -->
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/taxableAmount">
            <Description>Box 2a of form 1099-R: Taxable Amount (rounded)</Description>
            <Export mef="true"/>
            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <IsComplete>
                                    <Dependency path="../writableTaxableAmount"/>
                                </IsComplete>
                            </When>
                            <Then>
                                <Dependency path="../writableTaxableAmount"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/primaryFiler1099Rs">
            <Name>Primary Filer 1099Rs</Name>
            <Description>The 1099Rs that belong to the primary filer</Description>
            <Derived>
                <Filter path="/form1099Rs">
                    <Dependency path="belongsToPrimaryFiler"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/secondaryFiler1099Rs">
            <Name>Secondary Filer 1099Rs</Name>
            <Description>The 1099Rs that belong to the secondary filer</Description>
            <Derived>
                <Filter path="/form1099Rs">
                    <Dependency path="belongsToSecondaryFiler"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/primaryFiler1099RTaxableAmounts">
            <Name>Primary filer 1099R</Name>
            <Description>Amount of 1099R taxable amount for primary filer</Description>
            <Derived>
                <CollectionSum>
                    <Dependency path="/primaryFiler1099Rs/*/taxableAmount"/>
                </CollectionSum>
            </Derived>
        </Fact>
        <Fact path="/primaryFiler1099RsReportedOnSaversCredit">
            <Description>The primary filer's 1099Rs that meet the criteria to be reported on the form 8880 line 4a. Note
                if
                1099R scope changes this filtered fact should be audited against the 8880 instructions so that it still
                includes
                all of the supported distribution types specified in the instructions.
            </Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Filter path="/primaryFiler1099Rs">
                    <All>
                        <Dependency path="hasDistributionCodeIncludedInSaversCredit"/>
                        <Not>
                            <Dependency path="writableIsDistributionFromMilitaryRetirementPlan"/>
                        </Not>
                    </All>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerHas1099RTaxableAmountsGreaterThan0">
            <Name>Primary filer has 1099R taxable amounts greater than 0</Name>
            <Description>Whether primary filer has taxable amounts greater than 0</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/primaryFiler1099RTaxableAmounts"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerHas1099RTaxableAmountsGreaterThan0">
            <Name>Secondary filer has 1099R taxable amounts greater than 0</Name>
            <Description>Whether secondary filer has taxable amounts greater than 0</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/secondaryFiler1099RTaxableAmounts"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/secondaryFiler1099RTaxableAmounts">
            <Name>Secondary filer 1099R</Name>
            <Description>Amount of 1099R taxable amount for primary filer</Description>
            <Derived>
                <CollectionSum>
                    <Dependency path="/secondaryFiler1099Rs/*/taxableAmount"/>
                </CollectionSum>
            </Derived>
        </Fact>
        <Fact path="/secondaryFiler1099RsReportedOnSaversCredit">
            <Description>The secondary filer's 1099Rs that meet the criteria to be reported on the form 8880 line 4b.
                Note if
                1099R scope changes this filtered fact should be audited against the 8880 instructions so that it still
                includes
                all of the supported distribution types specified in the instructions.
            </Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Filter path="/secondaryFiler1099Rs">
                    <All>
                        <Dependency path="hasDistributionCodeIncludedInSaversCredit"/>
                        <Not>
                            <Dependency path="writableIsDistributionFromMilitaryRetirementPlan"/>
                        </Not>
                    </All>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writableTaxableAmountNotDetermined">
            <Description>Whether the taxable amount is not determined and 2b is checked.</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/taxableAmountNotDetermined">
            <Description>Whether the taxable amount is not determined and 2b is checked.</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../writableTaxableAmountNotDetermined"/>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutRetirementTaxableAmountNotDetermined">
            <Name>Knockout Due to the taxable amount of the distribution being undetermined</Name>
            <Description>At least one 1099R has a set of facts that cause a knockout</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Rs/*/taxableAmountNotDetermined"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/causesRetirementTaxableAmountNotDeterminedNotCheckedTaxableAmountBlankKO">
            <Name>1099-R Total Distribution Knockout</Name>
            <Description>The filer is knocked out of scope if they got taxable amount in box 2a blank and
                taxableAmountNotDetermined not checked
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Not>
                                    <IsComplete>
                                        <Dependency path="../writableTaxableAmount"/>
                                    </IsComplete>
                                </Not>
                                <IsComplete>
                                    <Dependency path="../taxableAmountNotDetermined"/>
                                </IsComplete>
                                <Not>
                                    <Dependency path="../taxableAmountNotDetermined"/>
                                </Not>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutRetirementTaxableAmountNotDeterminedNotCheckedTaxableAmountBlank">
            <Name>Knockout Due to the taxable amount not determined unchecked and taxable amount in box 2a being blank
            </Name>
            <Description>At least one 1099R has a set of facts that cause a knockout</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency
                                    path="/form1099Rs/*/causesRetirementTaxableAmountNotDeterminedNotCheckedTaxableAmountBlankKO"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writableCapitalGain">
            <Description>Box 3 of form 1099-R: Capital Gain</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/capitalGain">
            <Name>Retirement captial gain</Name>
            <Description>Box 3 of Form 1099-R, capital gain from box 2a.</Description>
            <Export mef="true"/>

            <!-- This is broken into a separate fact because we need to export $0 if the user enters it, but leave it blank otherwise. -->

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableCapitalGain"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Round>
                                <Dependency path="../writableCapitalGain"/>
                            </Round>
                        </Then>
                    </Case>
                    <!-- Keep incomplete if Box 3 is blank. -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutRetirementCapitalGain">
            <Name>Knockout Due to Retirement Capital Gain</Name>
            <Description>At least one 1099R has a set of facts that cause a knockout</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Rs/*/causesRetirementCapitalGainKO"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/causesRetirementCapitalGainKO">
            <Name>1099-R Capital Gain Scope Knockout</Name>
            <Description>Capital gain info in this 1099-R knocks the filer out of scope.</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../capitalGain"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../capitalGain"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/iraSepSimple">
            <Description>Whether the IRA/SEP/SIMPLE box is checked.</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/writableTotalDistribution">
            <Description>If total distribution is checked, it's a total distribution that closed out the account.
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/totalDistribution">
            <Description>Whether the taxable amount is not determined and 2b is checked.</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../writableTotalDistribution"/>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/dateOfBirthBefore1936">
            <Description>Whether the recipient was born before 1936.</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency module="constants" path="/totalDistributionTaxableStartYear"/>
                    </Left>
                    <Right>
                        <Dependency module="filers" path="../filer/dateOfBirth"/>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/causesRetirementTotalDistributionKO">
            <Name>1099-R Total Distribution Knockout</Name>
            <Description>The filer is knocked out of scope if they got a total distrubution and were born before
                1/2/1936
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="../totalDistribution"/>
                                <Dependency path="../dateOfBirthBefore1936"/>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutRetirementTotalDistribution">
            <Name>Knockout Due to a TP receiving a total distribution and born before 1/2/1936</Name>
            <Description>At least one 1099R has a set of facts that cause a knockout</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Rs/*/causesRetirementTotalDistributionKO"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writableDistributionCode">
            <Description>Box 7 of form 1099-R: Distribution Code(s)</Description>
            <Writable>
                <String/>
                <Limit type="MaxLength">
                    <Int>2</Int>
                </Limit>
                <Limit type="Match">
                    <String>([A-HJ-NP-UWa-hj-np-uw1-9])(?!\1)[A-HJ-NP-UWa-hj-np-uw1-9]?</String>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/distributionCode">
            <Description>Box 7 of form 1099-R: Distribution Code(s)</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableDistributionCode"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <StripChars>
                                <Input>
                                    <ToUpper>
                                        <Trim>
                                            <Dependency path="../writableDistributionCode"/>
                                        </Trim>
                                    </ToUpper>
                                </Input>
                                <Allow>
                                    <Dependency module="constants" path="/form1099RsDistributionCodeValidChars"/>
                                </Allow>
                            </StripChars>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/hasDisabilityCodeOnly">
            <Description>Whether this form is not for an IRA and Box 7 contains only the Distribution Code for
                Disability
            </Description>
            <Derived>
                <All>
                    <Dependency path="../notIraSepSimple"/>
                    <Equal>
                        <Left>
                            <Dependency path="../distributionCode"/>
                        </Left>
                        <Right>
                            <String>3</String>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/hasDisabilityAndAnotherCode">
            <Description>Whether this form is not for an IRA and Box 7 contains the Distribution Code for Disability
                along
                with another code
            </Description>
            <Derived>
                <All>
                    <Dependency path="../notIraSepSimple"/>
                    <Equal>
                        <Left>
                            <Length>
                                <Dependency path="../distributionCode"/>
                            </Length>
                        </Left>
                        <Right>
                            <Int>2</Int>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Length>
                                <StripChars>
                                    <Input>
                                        <Dependency path="../distributionCode"/>
                                    </Input>
                                    <Allow>
                                        <String>3</String>
                                    </Allow>
                                </StripChars>
                            </Length>
                        </Left>
                        <Right>
                            <Int>1</Int>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/isTaxFreePensionRollover">
            <Description>Whether this form is not for an IRA and is for a tax free pension rollover</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <All>
                    <Dependency path="../notIraSepSimple"/>
                    <Dependency path="../isDirectRollover"/>
                    <Any>
                        <Not>
                            <IsComplete>
                                <Dependency path="../taxableAmount"/>
                            </IsComplete>
                        </Not>
                        <Equal>
                            <Left>
                                <Dependency path="../taxableAmount"/>
                            </Left>
                            <Right>
                                <Dollar>0</Dollar>
                            </Right>
                        </Equal>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/isTaxablePensionRollover">
            <Description>Whether this form is not for an IRA but is for a taxable pension rollover</Description>
            <Derived>
                <All>
                    <Dependency path="../notIraSepSimple"/>
                    <Dependency path="../isDirectRollover"/>
                    <GreaterThan>
                        <Left>
                            <Dependency path="../taxableAmount"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/isIndirectRollover">
            <Description>Whether this form should be treated as an indirect rollover</Description>
            <Derived>
                <All>
                    <Dependency path="../notIraSepSimple"/>
                    <Not>
                        <Dependency path="../isDirectRollover"/>
                    </Not>
                    <Dependency path="../indicatedHasIndirectRollover"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/isTaxableAmountNotDetermined">
            <Description>Whether this form should be treated as taxable amount not determined</Description>
            <Derived>
                <All>
                    <Dependency path="../notIraSepSimple"/>
                    <Not>
                        <Dependency path="../isDirectRollover"/>
                    </Not>
                    <Dependency path="../taxableAmountNotDetermined"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/notIraSepSimple">
            <Description>Whether this form should be treated as not IRA/SEP/SIMPLE</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../iraSepSimple"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Not>
                                <Dependency path="../iraSepSimple"/>
                            </Not>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writableIsIndirectRollover">
            <Description>User response: is this form for an indirect rollover</Description>
            <!-- TODO note that this will need to change when we decide to support IRA rollovers. -->
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/writableIsDistributionFromMilitaryRetirementPlan">
            <Description>User response: is this distribution from a military retirement plan</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/indicatedHasIndirectRollover">
            <Description>User response: is this form for an indirect rollover after accounting for edit conditions
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../flowAskAboutIndirectRollover"/>
                        </When>
                        <Then>
                            <Dependency path="../writableIsIndirectRollover"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/knockoutIraSepSimple">
            <Description>At least one 1099R causes a knockout due to IRA/SEP/SIMPLE. Any changes to this KO should check
                that
                ../primaryFiler1099RsReportedOnSaversCredit and ../secondaryFiler1099RsReportedOnSaversCredit are still
                calculated correctly
            </Description>
            <BlockSubmissionOnTrue/>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Rs/*/iraSepSimple"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/knockoutDisabilityAndAnotherCode">
            <Description>At least one 1099R causes a knockout due to disability plus another distribution code
            </Description>
            <BlockSubmissionOnTrue/>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Rs/*/hasDisabilityAndAnotherCode"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/knockoutTaxablePensionRollover">
            <Description>At least one 1099R causes a knockout due to taxable pension rollover</Description>
            <BlockSubmissionOnTrue/>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Rs/*/isTaxablePensionRollover"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/knockoutIndirectRollover">
            <Description>At least one 1099R causes a knockout due to indirect rollover</Description>
            <BlockSubmissionOnTrue/>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Rs/*/isIndirectRollover"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/knockoutTaxableAmountNotDetermined">
            <Description>At least one 1099R causes a knockout due to taxable amount not determined</Description>
            <BlockSubmissionOnTrue/>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Rs/*/isTaxableAmountNotDetermined"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/isRollover">
            <Description>Whether this form is a rollover</Description>
            <Derived>
                <Any>
                    <Dependency path="../isDirectRollover"/>
                    <Dependency path="../isIndirectRollover"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/isFullyOrPartlyTaxablePension">
            <Description>Whether this form is for a fully or partly taxable pension. This currently corresponds directly
                to
                the codes included in Savers credit calculations, but if more box 7 codes are added this should be
                reviewed.
            </Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="../iraSepSimple"/>
                    </Not>
                    <Not>
                        <Dependency path="../isTaxableAmountNotDetermined"/>
                    </Not>
                    <Not>
                        <Dependency path="../isIndirectRollover"/>
                    </Not>
                    <Dependency path="../hasDistributionCodeIncludedInSaversCredit"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/hasDistributionCodeIncludedInSaversCredit">
            <Description>The 1099R has a distribution code that is included in the sum for the Savers Credit (Form 8880)
                line
                4
            </Description>
            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Dependency path="../distributionCode"/>
                        </Left>
                        <Right>
                            <String>2</String>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../distributionCode"/>
                        </Left>
                        <Right>
                            <String>7</String>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../distributionCode"/>
                        </Left>
                        <Right>
                            <String>2B</String>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../distributionCode"/>
                        </Left>
                        <Right>
                            <String>B2</String>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../distributionCode"/>
                        </Left>
                        <Right>
                            <String>7B</String>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../distributionCode"/>
                        </Left>
                        <Right>
                            <String>B7</String>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/isPartlyTaxablePension">
            <Description>Whether this form is for a partly taxable pension</Description>
            <Derived>
                <All>
                    <Dependency path="../isFullyOrPartlyTaxablePension"/>
                    <Not>
                        <Equal>
                            <Left>
                                <Dependency path="../grossDistribution"/>
                            </Left>
                            <Right>
                                <Dependency path="../taxableAmount"/>
                            </Right>
                        </Equal>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerForm1099RsWithDisabilityCodeOnly">
            <Description>Primary Filer's Forms 1099-R with only the distribution code for disability</Description>
            <Derived>
                <Filter path="/primaryFiler1099Rs">
                    <Dependency path="hasDisabilityCodeOnly"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerForm1099RsWithDisabilityCodeOnly">
            <Description>Secondary Filer's Forms 1099-R with only the distribution code for disability</Description>
            <Derived>
                <Filter path="/secondaryFiler1099Rs">
                    <Dependency path="hasDisabilityCodeOnly"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/form1099RsWithTaxFreePensionRollover">
            <Description>Forms 1099-R with tax free pension rollover</Description>

            <Derived>
                <Filter path="/form1099Rs">
                    <Dependency path="isTaxFreePensionRollover"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/form1099RsWithPartlyTaxablePension">
            <Description>Forms 1099-R with partly taxable pension</Description>
            <Derived>
                <Filter path="/form1099Rs">
                    <Dependency path="isPartlyTaxablePension"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/form1099RsWithFullyTaxablePension">
            <Description>Forms 1099-R with fully taxable pension</Description>
            <Derived>
                <Filter path="/form1099Rs">
                    <Dependency path="isFullyTaxable"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerDisabilityPensionsBeforeMinRetirementAge">
            <Description>The sum of gross distributions for this collection of forms</Description>
            <!-- TODO this will need to change if we remove the KO for hasDisabilityAndAnotherCode -->
            <Derived>
                <CollectionSum>
                    <Dependency path="/primaryFilerForm1099RsWithDisabilityCodeOnly/*/grossDistribution"/>
                </CollectionSum>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerDisabilityPensionsBeforeMinRetirementAge">
            <Description>The sum of gross distributions for this collection of forms</Description>
            <!-- TODO this will need to change if we remove the KO for hasDisabilityAndAnotherCode -->
            <Derived>
                <CollectionSum>
                    <Dependency path="/secondaryFilerForm1099RsWithDisabilityCodeOnly/*/grossDistribution"/>
                </CollectionSum>
            </Derived>
        </Fact>
        <Fact path="/taxFreePensionRollovers">
            <Description>The sum of gross distributions for this collection of forms</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="/form1099RsWithTaxFreePensionRollover"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <CollectionSize>
                                            <Dependency path="/form1099RsWithTaxFreePensionRollover"/>
                                        </CollectionSize>
                                    </Left>
                                    <Right>
                                        <Int>0</Int>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <CollectionSum>
                                <Dependency path="/form1099RsWithTaxFreePensionRollover/*/grossDistribution"/>
                            </CollectionSum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/partlyTaxablePensions">
            <Description>The sum of gross distributions for this collection of forms</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="/form1099RsWithPartlyTaxablePension"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <CollectionSize>
                                            <Dependency path="/form1099RsWithPartlyTaxablePension"/>
                                        </CollectionSize>
                                    </Left>
                                    <Right>
                                        <Int>0</Int>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <CollectionSum>
                                <Dependency path="/form1099RsWithPartlyTaxablePension/*/grossDistribution"/>
                            </CollectionSum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/fullyTaxablePensions">
            <Description>The sum of gross distributions for this collection of forms</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="/form1099RsWithFullyTaxablePension"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <CollectionSize>
                                            <Dependency path="/form1099RsWithFullyTaxablePension"/>
                                        </CollectionSize>
                                    </Left>
                                    <Right>
                                        <Int>0</Int>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <CollectionSum>
                                <Dependency path="/form1099RsWithFullyTaxablePension/*/grossDistribution"/>
                            </CollectionSum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/taxableAmountsOfPartiallyTaxablePensions">
            <Description>The sum of taxable amounts for this collection of forms</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="/form1099RsWithPartlyTaxablePension"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <CollectionSize>
                                            <Dependency path="/form1099RsWithPartlyTaxablePension"/>
                                        </CollectionSize>
                                    </Left>
                                    <Right>
                                        <Int>0</Int>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <CollectionSum>
                                <Dependency path="/form1099RsWithPartlyTaxablePension/*/taxableAmount"/>
                            </CollectionSum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writableOtherDollar">
            <Description>Box 8 of form 1099-R: Other</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/roundedOtherDollar">
            <Description>Box 8 of Form 1099-R, other amount.</Description>
            <Export mef="true"/>
            <!-- This is broken into a separate fact because we need to export $0 if the user enters it, but leave it blank otherwise. -->

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableOtherDollar"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Round>
                                <Dependency path="../writableOtherDollar"/>
                            </Round>
                        </Then>
                    </Case>
                    <!-- Keep incomplete if Box 8 is blank. -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/causesRetirementBox8ValueKO">
            <Name>1099-R Box 8 value entry Scope Knockout</Name>
            <Description>Box 8 value entry info in this 1099-R knocks the filer out of scope.</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../roundedOtherDollar"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../roundedOtherDollar"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/knockoutForForm1099RBox8Value">
            <Name>Knockout Due to Box 8 value entry</Name>
            <Description>At least one 1099R has a set of facts that cause a knockout</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Rs/*/causesRetirementBox8ValueKO"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writableOtherPercentage">
            <Name>Percentage for 1099-R box 8</Name>
            <Description>Percentage</Description>
            <Export mef="true"/>
            <Writable>
                <String/>
                <Limit type="Match">
                    <!-- MeF RatioType allows values 0 to 1 with up to 5 decimal places.
          That is, 12.345% would be 0.12345.
          This allows for the same range, with decimal point shifted two places left.
          That is, user enters 12.345 to mean 12.345%.
          So, up to 3 decimal places. -->
                    <String>^100(\.0{1,3})?|[0-9]{1,2}(\.\d{1,3})?$</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>7</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/causesRetirementBox8PercentageKO">
            <Name>1099-R Box 8 percentage entry Scope Knockout</Name>
            <Description>Box 8 percentage entry info in this 1099-R knocks the filer out of scope</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../writableOtherPercentage"/>
                                </IsComplete>
                                <NotEqual>
                                    <!-- This is string-based logic for "equal to zero" -->
                                    <Left>
                                        <Length>
                                            <Dependency path="../writableOtherPercentage"/>
                                        </Length>
                                    </Left>
                                    <Right>
                                        <Length>
                                            <StripChars>
                                                <Input>
                                                    <Dependency path="../writableOtherPercentage"/>
                                                </Input>
                                                <Allow>
                                                    <String>0.</String>
                                                </Allow>
                                            </StripChars>
                                        </Length>
                                    </Right>
                                </NotEqual>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/knockoutForForm1099RBox8Percentage">
            <Name>Knockout Due to Box 8 percentage entry</Name>
            <Description>At least one 1099R has a set of facts that cause a knockout</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Rs/*/causesRetirementBox8PercentageKO"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writablePercentageTotalDistribution">
            <Name>Percentage total distribution for 1099-R box 9a</Name>
            <Description>Percentage total distribution</Description>
            <Export mef="true"/>
            <Writable>
                <String/>
                <Limit type="Match">
                    <!-- MeF RatioType allows values 0 to 1 with up to 5 decimal places.
          That is, 12.345% would be 0.12345.
          This allows for the same range, with decimal point shifted two places left.
          That is, user enters 12.345 to mean 12.345%.
          So, up to 3 decimal places. -->
                    <String>^100(\.0{1,3})?|[0-9]{1,2}(\.\d{1,3})?$</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>7</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/causesRetirementBox9aPercentageKO">
            <Description>Box 9a percentage entry info in this 1099-R knocks the filer out of scope</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../writablePercentageTotalDistribution"/>
                                </IsComplete>
                                <NotEqual>
                                    <!-- This is string-based logic for "equal to zero" -->
                                    <Left>
                                        <Length>
                                            <Dependency path="../writablePercentageTotalDistribution"/>
                                        </Length>
                                    </Left>
                                    <Right>
                                        <Length>
                                            <StripChars>
                                                <Input>
                                                    <Dependency path="../writablePercentageTotalDistribution"/>
                                                </Input>
                                                <Allow>
                                                    <String>0.</String>
                                                </Allow>
                                            </StripChars>
                                        </Length>
                                    </Right>
                                </NotEqual>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/knockoutForForm1099RBox9aPercentage">
            <Name>Knockout Due to Box 9a percentage entry</Name>
            <Description>At least one 1099R has a set of facts that cause a knockout</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Rs/*/causesRetirementBox9aPercentageKO"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writableTotalEmployeeContributions">
            <Name>Total employee contributions</Name>
            <Description>Box 9b of form 1099-R: Total employee contributions</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/roundedTotalEmployeeContributions">
            <Description>Box 9b of form 1099-R: Total employee contributions</Description>
            <Export mef="true"/>
            <Derived>
                <Round>
                    <Dependency path="../writableTotalEmployeeContributions"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writableAmountAllocableToIRR">
            <Name>Amount allocable to IRR within 5 years</Name>
            <Description>Box 10 of form 1099-R: Amount allocable to IRR within 5 years</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/roundedAmountAllocableToIRR">
            <Description>Box 10 of form 1099-R: Amount allocable to IRR within 5 years</Description>
            <Export mef="true"/>
            <!-- This is broken into a separate fact because we need to export $0 if the user enters it, but leave it blank otherwise. -->

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableAmountAllocableToIRR"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Round>
                                <Dependency path="../writableAmountAllocableToIRR"/>
                            </Round>
                        </Then>
                    </Case>
                    <!-- Keep incomplete if Box 3 is blank. -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/causesRetirementAmountAllocableToIRRKO">
            <Name>1099-R Amount allocable to IRR within 5 years Knockout</Name>
            <Description>The filer is knocked out of scope if amount allocable to IRR within 5 years is greater than
                zero.
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../roundedAmountAllocableToIRR"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../roundedAmountAllocableToIRR"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutRetirementAmountAllocableToIRR">
            <Name>Knockout due to the amount allocable to IRR within 5 years</Name>
            <Description>The filer is knocked out of scope if amount allocable to IRR within 5 years is greater than
                zero
            </Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Rs/*/causesRetirementAmountAllocableToIRRKO"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writableFirstYearDesignatedRothContributions">
            <Name>1st year of designated Roth contributions</Name>
            <Description>Box 11 of form 1099-R: 1st year of designated Roth contributions</Description>
            <Export mef="true"/>

            <Writable>
                <String/>
                <Limit type="Match">
                    <String>[1-2][0-9][0-9][0-9]</String>
                </Limit>
                <Limit type="MinLength">
                    <Int>4</Int>
                </Limit>
                <Limit type="MaxLength">
                    <Int>4</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/hasLocalOrStateTaxInfo">
            <Description>Whether the 1099R has any local or state tax info</Description>
            <Export mef="true"/>
            <Derived>
                <Any>
                    <IsComplete>
                        <Dependency path="../xmlStateCd"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../stateTaxWithheld"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../writablePayerStateNumber"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../stateDistribution"/>
                    </IsComplete>
                    <Dependency path="../hasLocalTaxInfo"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/hasLocalTaxInfo">
            <Description>Whether the 1099R has any local tax info</Description>
            <Export mef="true"/>
            <Derived>
                <Any>
                    <IsComplete>
                        <Dependency path="../localTaxWithheld"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../writableLocality"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../localDistribution"/>
                    </IsComplete>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writableStateTaxWithheld">
            <Description>Box 14 of form 1099-R: State tax withheld</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/stateTaxWithheld">
            <Name>Federal income tax withheld</Name>
            <Description>Box 14 of Form 1099-R: Federal income tax withheld (rounded).</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../writableStateTaxWithheld"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/missingStateTaxWithheld">
            <Description>Whether the TP is in an income state and didn't report any state tax on their 1099R
            </Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="/hasNoStateIncomeTax" module="constants"/>
                    </Not>
                    <Any>
                        <Not>
                            <IsComplete>
                                <Dependency path="../stateTaxWithheld"/>
                            </IsComplete>
                        </Not>
                        <Equal>
                            <Left>
                                <Dependency path="../stateTaxWithheld"/>
                            </Left>
                            <Right>
                                <Dollar>0</Dollar>
                            </Right>
                        </Equal>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hasMoreTaxThanDistributionsOn1099Rs">
            <Description>Whether any 1099Rs had less gross distributions reported than the amount of tax withheld. Used
                for
                alerts and to block submission
            </Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Rs/*/hasMoreTaxWithheldThanDistributions"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/hasMoreTaxWithheldThanDistributions">
            <Description>The gross distributions reported were less than the local and state tax withheld. This isn't a
                real
                situation and indicates an input error
            </Description>

            <Derived>
                <LessThan>
                    <Left>
                        <Dependency path="../grossDistribution"/>
                    </Left>
                    <Right>
                        <Add>
                            <!-- Create a distinct fact for this if we start repeating this logic -->
                            <Switch>
                                <Case>
                                    <When>
                                        <IsComplete>
                                            <Dependency path="../stateTaxWithheld"/>
                                        </IsComplete>
                                    </When>
                                    <Then>
                                        <Dependency path="../stateTaxWithheld"/>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <True/>
                                    </When>
                                    <Then>
                                        <Dollar>0</Dollar>
                                    </Then>
                                </Case>
                            </Switch>
                            <Switch>
                                <Case>
                                    <When>
                                        <IsComplete>
                                            <Dependency path="../localTaxWithheld"/>
                                        </IsComplete>
                                    </When>
                                    <Then>
                                        <Dependency path="../localTaxWithheld"/>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <True/>
                                    </When>
                                    <Then>
                                        <Dollar>0</Dollar>
                                    </Then>
                                </Case>
                            </Switch>
                        </Add>
                    </Right>
                </LessThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writablePayerState">
            <Name>State abbreviation code</Name>
            <Description>Box 15 of form 1099-R: payer's state</Description>

            <Writable>
                <Enum optionsPath="/incomeFormStateOptions"/>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/xmlStateCd">
            <Name>State Code (xml)</Name>
            <Description>The state code used to populate the element corresponding to form 1099-R box 15. This fact is
                used to
                handle mapping the values used by the DF client into what the MeF system and DF submit application
                expect.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../writablePayerState"/>
                                </IsComplete>
                                <NotEqual>
                                    <Left>
                                        <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/scopedStateOptions">moreThanOne</Enum>
                                    </Right>
                                </NotEqual>
                                <NotEqual>
                                    <Left>
                                        <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/scopedStateOptions">noneOfThese</Enum>
                                    </Right>
                                </NotEqual>
                            </All>
                        </When>
                        <Then>
                            <ToUpper>
                                <AsString>
                                    <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                                </AsString>
                            </ToUpper>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writablePayerStateNumber">
            <Name>Payers state I.D. number</Name>
            <Description>Box 15 of form 1099-R: payer's state code</Description>
            <Export mef="true"/>
            <Writable>
                <String/>
                <Limit type="Match">
                    <String>([!-~£§ÁÉÍÑÓ×ÚÜáéíñóúü]\s?)*[!-~£§ÁÉÍÑÓ×ÚÜáéíñóúü]</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>16</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/causesBox15Knockout">
            <Name>Causes Box 15 Knockout</Name>
            <Description>If a taxpayer's state on their 1099-R doesn't match the state in their About You section, we
                may not
                be able to give the right information for State tax filing. Knocks taxpayer out if all of the following
                are
                true: 1. User selects "Another state" from the dropdown; 2. Box 14 is has a value greater than $0 (or
                blank);
                box 7 does not include distribution code G or H.
            </Description>
            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="../writablePayerState"/>
                    </IsComplete>
                    <Equal>
                        <Left>
                            <Dependency path="../writablePayerState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/incomeFormStateOptions">differentState</Enum>
                        </Right>
                    </Equal>
                    <Any>
                        <GreaterThan>
                            <Left>
                                <Dependency path="../stateTaxWithheld"/>
                            </Left>
                            <Right>
                                <Dollar>0</Dollar>
                            </Right>
                        </GreaterThan>
                        <Not>
                            <Dependency path="../hasPensionRollover"/>
                        </Not>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutBox15">
            <Name>Knockout when state on 1099-R doesn't match filer's state of residency</Name>
            <Description>At least one 1099R has a set of facts that cause a knockout</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Rs/*/causesBox15Knockout"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writableStateDistribution">
            <Description>Box 16 of form 1099-R: State distribution</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/stateDistribution">
            <Name>State distribution</Name>
            <Description>Box 16 of Form 1099-R: State distribution (rounded).</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../writableStateDistribution"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writableLocalTaxWithheld">
            <Description>Box 17 of form 1099-R: Local tax withheld</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/localTaxWithheld">
            <Name>Federal income tax withheld</Name>
            <Description>Box 17 of form 1099-R: Local tax withheld (rounded).</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../writableLocalTaxWithheld"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writableLocality">
            <Name>Locality name</Name>
            <Description>Form 1099-R box 18: Locality name.
                This is the writable optional fact. Can be left incomplete. Please
                use the derived fact in downstream calculations.
            </Description>
            <Export mef="true"/>
            <Writable>
                <String/>
                <Limit type="Match">
                    <String>([!-~£§ÁÉÍÑÓ×ÚÜáéíñóúü]\s?)*[!-~£§ÁÉÍÑÓ×ÚÜáéíñóúü]</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>20</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/writableLocalDistribution">
            <Description>Box 19 of form 1099-R: Local distribution</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/localDistribution">
            <Name>Local distribution</Name>
            <Description>Box 19 of form 1099-R: Local distribution (rounded).</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../writableLocalDistribution"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/factaFilingRequirement">
            <Description>Box 12: Whether the FACTA filing requirement box is checked.</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/flowKnockoutRetirementFactaFilingRequirement">
            <Name>Knockout when FACTA filing requirement box is checked</Name>
            <Description>At least one 1099R has a set of facts that cause a knockout</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Rs/*/factaFilingRequirement"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writeablePublicSafetyOfficer">
            <Description>Box 7: Whether the filer/spouse is a public safety officer.</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/isPublicSafetyOfficer">
            <Description>Box 7: Whether the filer/spouse is a public safety officer accounting for edit conditions.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../flowAskAboutPublicSafetyOfficer"/>
                                </IsComplete>
                                <Dependency path="../flowAskAboutPublicSafetyOfficer"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writeablePublicSafetyOfficer"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/flowAskAboutPSOPremiums">
            <Description>Used in the flow to determine whether to show PSO premiums screen</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../isPublicSafetyOfficer"/>
                                </IsComplete>
                                <Dependency path="../isPublicSafetyOfficer"/>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writeablePublicSafetyOfficerPremiums">
            <Description>Box 7: Whether the filer/spouse is a public safety officer using dist to pay premiums.
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/hasPublicSafetyOfficerPremiums">
            <Description>Box 7: Whether the filer/spouse is a public safety officer using dist to pay premiums
                accounting for
                edit conditions
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../flowAskAboutPSOPremiums"/>
                                </IsComplete>
                                <Dependency path="../flowAskAboutPSOPremiums"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writeablePublicSafetyOfficerPremiums"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/causesPSOPremiumsKnockout">
            <Description>Used in the flow to determine whether to show 1099-r-pso-knockout</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../hasPublicSafetyOfficerPremiums"/>
                                </IsComplete>
                                <Dependency path="../hasPublicSafetyOfficerPremiums"/>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutRetirementPublicSafetyOfficer">
            <Name>Knockout when the filer/spouse is a public safety officer</Name>
            <Description>At least one 1099R has a set of facts that cause a knockout</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Rs/*/causesPSOPremiumsKnockout"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099RsNonstandardCorrectedOptions">
            <Name>Form 1099-R Nonstandard and/or Corrected Options</Name>
            <Description>Options for the filer to say whether a 1099-R is nonstandard, corrected, both, or
                neither
            </Description>
            <Derived>
                <EnumOptions>
                    <String>neither</String>
                    <String>nonstandard</String>
                    <String>corrected</String>
                    <String>both</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/nonstandardOrCorrectedChoice">
            <Name>Nonstandard or corrected choice</Name>
            <Description>Whether the form 1099-R is nonstandard, corrected, both, or neither</Description>
            <Writable>
                <Enum optionsPath="/form1099RsNonstandardCorrectedOptions"/>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/isCorrected">
            <Description>Whether the form 1099-R is marked as corrected.</Description>
            <Export mef="true"/>
            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Dependency path="../nonstandardOrCorrectedChoice"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/form1099RsNonstandardCorrectedOptions">corrected</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../nonstandardOrCorrectedChoice"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/form1099RsNonstandardCorrectedOptions">both</Enum>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/isNonStandard">
            <Description>Whether the form 1099-R is non-standard.</Description>

            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Dependency path="../nonstandardOrCorrectedChoice"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/form1099RsNonstandardCorrectedOptions">nonstandard</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../nonstandardOrCorrectedChoice"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/form1099RsNonstandardCorrectedOptions">both</Enum>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/standardOrNonStandardCd">
            <Description>MeF Code used to determine whether the form 1099-R is standard or non-standard</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../isNonStandard"/>
                        </When>
                        <Then>
                            <String>N</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <String>S</String>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writableFederalWithholding">
            <Name>Federal income tax withheld</Name>
            <Description>Box 4 of form 1099-R: Federal income tax withheld.</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/federalWithholdingExport">
            <Name>Federal income tax withheld</Name>
            <Description>Box 4 of form 1099-R: Federal income tax withheld.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../writableFederalWithholding"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/federalWithholding">
            <Name>Federal income tax withheld</Name>
            <Description>Box 4 of Form 1099-R: Federal income tax withheld (rounded).</Description>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <IsComplete>
                                    <Dependency path="../writableFederalWithholding"/>
                                </IsComplete>
                            </When>
                            <Then>
                                <Dependency path="../writableFederalWithholding"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/form1099RsFederalIncomeTaxWithheld">
            <Name>Form 1099-R federal tax withholdings</Name>
            <Description>Total federal income tax withheld from all complete Form 1099-Rs.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="/form1099Rs"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <CollectionSum>
                                <Dependency path="/form1099Rs/*/federalWithholding"/>
                            </CollectionSum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writableEmployeeOrRothOrInsuranceContributions">
            <Name>1099-R Contributions and premiums</Name>
            <Description>Box 5 of form 1099-R: Employee contributions/Designated Roth contributions or insurance
                premiums.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/employeeOrRothOrInsuranceContributions">
            <Name>1099-R Contributions and premiums</Name>
            <Description>Box 5 of Form 1099-R: Employee contributions/Designated Roth contributions or insurance
                premiums.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../writableEmployeeOrRothOrInsuranceContributions"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writableNetAppreciation">
            <Description>Box 6 of form 1099-R: net unrealized appreciation in employer’s securities</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/netAppreciation">
            <Description>Box 6 of form 1099-R: net unrealized appreciation in employer’s securities</Description>
            <Export mef="true"/>
            <!-- This is broken into a separate fact because we need to export $0 if the user enters it, but leave it blank otherwise. -->

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableNetAppreciation"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Round>
                                <Dependency path="../writableNetAppreciation"/>
                            </Round>
                        </Then>
                    </Case>
                    <!-- Keep incomplete if Box 3 is blank. -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutRetirementNetUnrealizedAppreciation">
            <Name>Knockout Due to net unrealized appreciation in employer’s securities</Name>
            <Description>At least one 1099R has a set of facts that cause a knockout</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Rs/*/causesRetirementNetUnrealizedAppreciation"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/causesRetirementNetUnrealizedAppreciation">
            <Name>1099-R Net appreciation Knockout</Name>
            <Description>Net appreciation info in this 1099-R knocks the filer out of scope</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../netAppreciation"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../netAppreciation"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/isFullyTaxable">
            <Description>Whether the form 1099-R's Box 1 amount is fully taxable.</Description>
            <Derived>
                <All>
                    <Dependency path="../isFullyOrPartlyTaxablePension"/>
                    <Equal>
                        <Left>
                            <Dependency path="../grossDistribution"/>
                        </Left>
                        <Right>
                            <Dependency path="../taxableAmount"/>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/fullyTaxable1099Rs">
            <Name>Fully taxable 1099Rs</Name>
            <Description>Forms 1099-R with fully taxable gross distributions</Description>

            <Derived>
                <Filter path="/form1099Rs">
                    <Dependency path="isFullyTaxable"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/notFullyTaxable1099Rs">
            <Name>Not fully taxable 1099Rs</Name>
            <Description>Forms 1099-R with taxable gross distributions that are not fully taxable</Description>

            <Derived>
                <Filter path="/form1099Rs">
                    <Not>
                        <Dependency path="isFullyTaxable"/>
                    </Not>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/flowAskAboutPublicSafetyOfficer">
            <Description>Used in the flow to determine whether to show 1099-r-pso</Description>
            <Derived>
                <All>
                    <GreaterThan>
                        <Left>
                            <Length>
                                <StripChars>
                                    <Input>
                                        <Dependency path="../distributionCode"/>
                                    </Input>
                                    <Allow>
                                        <String>27</String>
                                    </Allow>
                                </StripChars>
                            </Length>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                    <Equal>
                        <Left>
                            <Length>
                                <StripChars>
                                    <Input>
                                        <Dependency path="../distributionCode"/>
                                    </Input>
                                    <Allow>
                                        <String>B</String>
                                    </Allow>
                                </StripChars>
                            </Length>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writableQualifiedDisasterDistribution">
            <Description>Box 7: Qualified disaster is checked.</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/qualifiedDisasterDistribution">
            <Description>Box 7: Whether qualified disaster is checked after accounting for edit conditions</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../flowAskAboutIndirectRollover"/>
                        </When>
                        <Then>
                            <Dependency path="../writableQualifiedDisasterDistribution"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutRetirementQualifiedDisasterDistribution">
            <Name>Knockout when the Qualified Disaster box is checked</Name>
            <Description>At least one 1099R has a set of facts that cause a knockout</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <All>
                                <IsComplete>
                                    <Dependency path="/form1099Rs/*/qualifiedDisasterDistribution"/>
                                </IsComplete>
                                <Dependency path="/form1099Rs/*/qualifiedDisasterDistribution"/>
                            </All>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writableQualifiedEarlyDistribution">
            <Description>Box 7: Includes an early distribution</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/flowQualifiedEarlyDistribution">
            <Description>Adds a gate for code 1 early distribution</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../distributionCode"/>
                    </Left>
                    <Right>
                        <String>1</String>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/causesQualifiedEarlyDistributionKO">
            <Name>1099-R Early Distribution Knockout</Name>
            <Description>The filer is knocked out of scope if they have an early distribution penalty</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="../flowQualifiedEarlyDistribution"/>
                                <IsComplete>
                                    <Dependency path="../writableQualifiedEarlyDistribution"/>
                                </IsComplete>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writableQualifiedEarlyDistribution"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutRetirementQualifiedEarlyDistribution">
            <Name>Knockout when a 1099R has an early distribution</Name>
            <Description>At least one 1099R has a set of facts that cause a knockout</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <All>
                                <Dependency path="/form1099Rs/*/flowQualifiedEarlyDistribution"/>
                                <Dependency path="/form1099Rs/*/causesQualifiedEarlyDistributionKO"/>
                            </All>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writableDateOfPayment">
            <Name>Date of payment</Name>
            <Description>The date of payment on the 1099-R for reportable death benefits under section 6050Y.
            </Description>
            <Writable>
                <Day/>
                <Limit type="Max">
                    <Day>2025-01-01</Day>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/causesDeathBenefitPaymentKO">
            <Name>1099-R Scope Knockout</Name>
            <Description>1099-R has a reportable death benefit payment</Description>

            <Derived>
                <IsComplete>
                    <Dependency path="/form1099Rs/*/writableDateOfPayment"/>
                </IsComplete>
            </Derived>

        </Fact>
        <Fact path="/flowKnockoutForDeathBenefitPaymentDate">
            <Description>The user is knocked out for having a reportable death benefit payment</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Rs/*/causesDeathBenefitPaymentKO"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/writableAccountNumber">
            <Description>1099-R: account number</Description>
            <Writable>
                <String/>
                <Limit type="MaxLength">
                    <Int>30</Int>
                </Limit>
                <Limit type="Match">
                    <String>(([A-Za-z0-9#\-\(\)]|&amp;|')\s?)*([A-Za-z0-9#\-\(\)]|&amp;|')</String>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Rs/*/accountNumber">
            <Name>Account number</Name>
            <Description>1099-R account number</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableAccountNumber"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../writableAccountNumber"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <String/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/hasSeenLastAvailableScreen">
            <Name>Has Seen last available screen</Name>
            <Description>Whether the user has seen the last available screen for this 1099-R.</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/hasCompleted1099RSection">
            <Description>The user has clicked "Done" for the APF section.</Description>

            <Writable>
                <Boolean/>
            </Writable>
            <Placeholder>
                <False/>
            </Placeholder>
        </Fact>
        <Fact path="/form1099RsIsComplete">
            <Description>Whether the 1099-r section be considered complete.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <!-- TP answered that they did not have any 1099Rs in the 1099R section at launch -->
                    <Not>
                        <Dependency path="/hasSome1099rFormsBeforeSectionEnabled"/>
                    </Not>

                    <!-- Feature flag is turned on and they have completed the post release 1099R section -->
                    <All>
                        <Dependency path="/is1099RFeatureFlagEnabled"/>
                        <Dependency path="/hasCompleted1099RSection"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/form1099Rs/*/isComplete">
            <Name>Is Complete</Name>
            <Description>Whether the 1099-R is complete</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Any>
                                    <Not>
                                        <Dependency path="../hasDifferentRecipientAddress"/>
                                    </Not>
                                    <IsComplete>
                                        <Dependency path="../addressOverride"/>
                                    </IsComplete>
                                </Any>
                                <Any>
                                    <Not>
                                        <Dependency path="../flowQualifiedEarlyDistribution"/>
                                    </Not>
                                    <IsComplete>
                                        <Dependency path="../writableQualifiedEarlyDistribution"/>
                                    </IsComplete>
                                </Any>
                                <Any>
                                    <Not>
                                        <Dependency path="../flowAskAboutIndirectRollover"/>
                                    </Not>
                                    <All>
                                        <IsComplete>
                                            <Dependency path="../writableIsIndirectRollover"/>
                                        </IsComplete>
                                        <IsComplete>
                                            <Dependency path="../writableQualifiedDisasterDistribution"/>
                                        </IsComplete>
                                        <IsComplete>
                                            <Dependency path="../writableIsDistributionFromMilitaryRetirementPlan"/>
                                        </IsComplete>
                                    </All>
                                </Any>
                                <Any>
                                    <Not>
                                        <Dependency path="../flowAskAboutPublicSafetyOfficer"/>
                                    </Not>
                                    <All>
                                        <IsComplete>
                                            <Dependency path="../writeablePublicSafetyOfficer"/>
                                        </IsComplete>
                                        <Any>
                                            <Not>
                                                <Dependency path="../flowAskAboutPSOPremiums"/>
                                            </Not>
                                            <IsComplete>
                                                <Dependency path="../writeablePublicSafetyOfficerPremiums"/>
                                            </IsComplete>
                                        </Any>
                                    </All>
                                </Any>
                                <Dependency path="../hasSeenLastAvailableScreen"/>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowForm1099RsKnockout">
            <Description>The user has been knocked out for reasons(s) defined in this module</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Any>
                    <Dependency path="/flowKnockoutRetirementTaxableAmountNotDetermined"/>
                    <Dependency path="/flowKnockoutRetirementTaxableAmountNotDeterminedNotCheckedTaxableAmountBlank"/>
                    <Dependency path="/flowKnockoutRetirementTotalDistribution"/>
                    <Dependency path="/knockoutForForm1099RBox8Value"/>
                    <Dependency path="/knockoutForForm1099RBox8Percentage"/>
                    <Dependency path="/knockoutForForm1099RBox9aPercentage"/>
                    <Dependency path="/flowKnockoutRetirementCapitalGain"/>
                    <Dependency path="/flowKnockoutRetirementNetUnrealizedAppreciation"/>
                    <Dependency path="/flowKnockoutRetirementAmountAllocableToIRR"/>
                    <Dependency path="/flowKnockoutRetirementFactaFilingRequirement"/>
                    <Dependency path="/flowKnockoutForRollover"/>
                    <Dependency path="/flowKnockoutForDeathBenefitPaymentDate"/>
                    <Dependency path="/flowKnockoutRetirementQualifiedDisasterDistribution"/>
                    <Dependency path="/flowKnockoutRetirementQualifiedEarlyDistribution"/>
                    <Dependency path="/flowKnockoutRetirementPublicSafetyOfficer"/>
                    <Dependency path="/flowKnockoutForPreTaxToPostTaxRollover"/>
                    <Dependency path="/has1099rFormsAndFeatureIsNotEnabled"/>
                    <Dependency path="/knockoutForForm1099RDistributionCode"/>
                    <Dependency path="/knockoutIraSepSimple"/>
                    <Dependency path="/knockoutDisabilityAndAnotherCode"/>
                    <Dependency path="/knockoutTaxablePensionRollover"/>
                    <Dependency path="/knockoutIndirectRollover"/>
                    <Dependency path="/knockoutTaxableAmountNotDetermined"/>
                    <Dependency path="/flowKnockoutBox15"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/form1099Miscs">
            <Name>Form 1099-MISC</Name>
            <Description>Form 1099-MISC: Miscellaneous Information</Description>
            <Writable>
                <Collection/>
            </Writable>
        </Fact>
        <Fact path="/form1099Miscs/*/filer">
            <Name>Recipient</Name>
            <Description>The recipient of the 1099-MISC.</Description>

            <Writable>
                <CollectionItem collection="/filers"/>
            </Writable>
            <Placeholder>
                <Dependency module="filers" path="/primaryFiler"/>
            </Placeholder>
        </Fact>
        <Fact path="/form1099Miscs/*/belongsToSecondaryFiler">
            <Description>Whether the 1099-MISC belongs to the secondary filer</Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../filer"/>
                    </Left>
                    <Right>
                        <Dependency module="filers" path="/secondaryFiler"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/form1099Miscs/*/writableOtherIncome">
            <Name>Other income</Name>
            <Description>Box 3 of Form 1099-MISC: Other income</Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/form1099Miscs/*/writableFederalWithholding">
            <Name>Federal income tax withheld</Name>
            <Description>Box 4 of Form 1099-MISC: Federal income tax withheld.</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/form1099Miscs/*/federalWithholding">
            <Name>Federal income tax withheld</Name>
            <Description>Box 4 of Form 1099-MISC: Federal income tax withheld.</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableFederalWithholding"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../writableFederalWithholding"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form1099Miscs/*/federalIncomeTaxWithheldRounded">
            <Name>Federal income tax withheld (rounded)</Name>
            <Description>Box 4 of Form 1099-MISC: Federal income tax withheld, rounded to the nearest dollar.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../federalWithholding"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/form1099Miscs/*/payer">
            <Name>Payer</Name>
            <Description>The payer of the 1099-MISC.</Description>

            <Writable>
                <String/>
                <Limit type="Match">
                    <String>[\sA-Za-z0-9\-]+</String>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/form1099Miscs/*/payer/tin">
            <Name>Payer TIN</Name>
            <Description>The payer's TIN from the 1099-MISC.</Description>
            <Export mef="true"/>

            <Writable>
                <EIN/>
            </Writable>
        </Fact>
        <Fact path="/form1099Miscs/*/isAlaskaPfd">
            <Name>Form is reporting Alaska PFD income</Name>
            <Description>Whether the Form 1099-MISC is reporting Alaska Permanent Fund Dividend income.</Description>
            <!-- TODO change this if/when we have 1099-MISCs for more than APF. -->

            <Derived>
                <True/>
            </Derived>
        </Fact>
        <Fact path="/form1099MiscFederalIncomeTaxWithheld">
            <Name>Form 1099-MISC federal tax withholdings</Name>
            <Description>Total federal income tax withheld from Form 1099-MISCs.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="/form1099Miscs"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/form1099Miscs/*/federalWithholding"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/alaskaPfd1099s">
            <Name>Alaska PFD 1099s</Name>
            <Description>Form 1099-MISCs reporting Alaska Permanent Fund Dividend income.</Description>
            <Derived>
                <Filter path="/form1099Miscs">
                    <Dependency path="isAlaskaPfd"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/alaskaPfdIncome">
            <Name>Alaska PFD income</Name>
            <Description>Total income from Alaska Permanent Fund Dividends, reported on Schedule 1 line 8g.
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="/alaskaPfd1099s"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/alaskaPfd1099s/*/writableOtherIncome"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/hasAlaskaPfdIncome">
            <Name>Has Alaska PFD income</Name>
            <Description>Alaska PFD income is greater than 0</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/alaskaPfdIncome"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/has1099Misc">
            <Name>Has 1099-MISC</Name>
            <Description>Whether the TP has any 1099-MISC listed</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/form1099Miscs"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form1099Miscs/*/hasSeenLastAvailableScreen">
            <Name>Has Seen last available screen</Name>
            <Description>Whether the user has seen the last available screen for this 1099-MISC.</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/form1099Miscs/*/isComplete">
            <Name>Is Complete</Name>
            <Description>Whether the 1099-MISC is complete</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../writableOtherIncome"/>
                                </IsComplete>
                                <Dependency path="../hasSeenLastAvailableScreen"/>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form1099Miscs/*/secondaryFilerUsedWithoutMFJ">
            <Description>Whether secondary filer has forms when primary filer is not filing jointly</Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    </Not>
                    <Dependency path="../belongsToSecondaryFiler"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/form1099Miscs/secondaryFilerUsedWithoutMFJ">
            <Description>Whether secondary filer has forms when primary filer is not filing jointly</Description>
            <BlockSubmissionOnTrue/>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form1099Miscs/*/secondaryFilerUsedWithoutMFJ"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/eligibleForApf">
            <Name>Eligible for Alaska Permanent Fund dividend</Name>
            <Description>Someone in the household is eligible fo the Alaska Permanent Fund Dividend</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Enum optionsPath="/scopedStateOptions">ak</Enum>
                    </Left>
                    <Right>
                        <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/numberOfCompleteApfIncomeItems">
            <Derived>
                <CollectionSize>
                    <Filter path="/form1099Miscs">
                        <All>
                            <Dependency path="isComplete"/>
                            <Dependency path="isAlaskaPfd"/>
                        </All>
                    </Filter>
                </CollectionSize>
            </Derived>
        </Fact>
        <Fact path="/hasAtLeastOneCompletedApfIncomeItem">
            <Description>Whether the tax return has at least one completed APF income</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <GreaterThan>
                                <Left>
                                    <Dependency path="/numberOfCompleteApfIncomeItems"/>
                                </Left>
                                <Right>
                                    <Int>0</Int>
                                </Right>
                            </GreaterThan>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/hasNoCompleteApfIncomeItems">
            <Derived>
                <Not>
                    <Dependency path="/hasAtLeastOneCompletedApfIncomeItem"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/hasCompletedApfSection">
            <Description>The user has clicked "Done" for the APF section.</Description>

            <Writable>
                <Boolean/>
            </Writable>
            <Placeholder>
                <False/>
            </Placeholder>
        </Fact>
        <Fact path="/isApfSectionComplete">
            <Description>Whether the APF section be considered complete.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <!--              Not eligible for APF (section can be considered complete)-->
                            <All>
                                <IsComplete>
                                    <Dependency path="/eligibleForApf"/>
                                </IsComplete>
                                <Not>
                                    <Dependency path="/eligibleForApf"/>
                                </Not>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <!--                Eligible for APF and has completed-->
                            <All>
                                <IsComplete>
                                    <Dependency path="/eligibleForApf"/>
                                </IsComplete>
                                <Dependency path="/eligibleForApf"/>
                                <IsComplete>
                                    <Dependency path="/hasCompletedApfSection"/>
                                </IsComplete>
                                <Dependency path="/hasCompletedApfSection"/>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <!--              Eligible for APF and has not completed-->
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/parentalSituationOptions">
            <Name>Parental Situation Options</Name>
            <Description>Options for parental situation</Description>
            <Derived>
                <EnumOptions>
                    <String>divorcedOrSeparated</String>
                    <String>livedApartLastSixMonths</String>
                    <String>other</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/writtenDeclarationOptions">
            <Description>
                The options for who has taken a written declaration to not claim a child,
                sometimes via Form 8332
            </Description>

            <Derived>
                <EnumOptions>
                    <String>iDid</String>
                    <String>theyDid</String>
                    <String>nobodyDid</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/childMayQualifyForBenefitSplit">
            <Name>Flow variable for special rule benefit split</Name>
            <Description>
                Whether or not to show the benefit split screens for the dependent.
                We have to test for the special
                benefit split if the person is subject to custody.
                More specifically, this means that they are either not yet 18
                on July 2 or the TY,
                or they have a permanent and total disability.

                Note: Age of majority/custody is a state
                issue. In Mississippi and Puerto Rico, the age of majority is 21.
                In Alabama and Nebraska, the age of majority is
                19. Everywhere else, the age of majority is 18. If/when
                Mississippi, Puerto Rico, Alabama, and Nebraska start
                participating in Direct File, this logic will need to
                change.
            </Description>

            <Derived>
                <Any>
                    <LessThan>
                        <Left>
                            <Dependency module="familyAndHousehold" path="../ageAtFirstHalfOfYear"/>
                        </Left>
                        <Right>
                            <Int>18</Int>
                        </Right>
                    </LessThan>
                    <All>
                        <Dependency module="familyAndHousehold" path="../disabilityStatusMayAffectBenefits"/>
                        <Dependency module="familyAndHousehold" path="../permanentTotalDisability"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/tpIsParent">
            <Description>The relationship to the person is a parental one for use in the special benefit split
            </Description>

            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">biologicalChild</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">adoptedChild</Enum>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/tpIsNotParent">
            <Description>The relationship to the person is not a parental one for use in the special benefit split
            </Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency path="../tpIsParent"/>
                    </Not>
                    <Dependency module="dependentsRelationship" path="../qcRelationshipTest"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/hasOtherBiologicalOrAdoptiveParent">
            <Name>Has other legal parent</Name>
            <Description>Does the dependent have another legal parent apart from the taxpayer and spouse?</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/nonParentalSomeParentNotClaiming">
            <Name>Written declaration not to claim was signed</Name>
            <Description>Has any of the dependent's parents signed a written declaration not to claim them?
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/whichParentNotClaiming">
            <Description>
                Is one of the parents not claiming the child?
            </Description>

            <Writable>
                <Enum optionsPath="/writtenDeclarationOptions"/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/parentalSomeParentNotClaiming">
            <Description>
                At least one of the parents is not claiming
            </Description>

            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Dependency path="../whichParentNotClaiming"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/writtenDeclarationOptions">iDid</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../whichParentNotClaiming"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/writtenDeclarationOptions">theyDid</Enum>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/primaryFilerNotClaiming">
            <Description>True when taxpayer not filing MFJ is not claiming child</Description>

            <Derived>
                <All>
                    <Equal>
                        <Left>
                            <Dependency path="../whichParentNotClaiming"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/writtenDeclarationOptions">iDid</Enum>
                        </Right>
                    </Equal>
                    <Not>
                        <Dependency path="/treatAsMFJ" module="filingStatus"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/bothFilersNotClaiming">
            <Description>True when taxpayers filing MFJ are not claiming child</Description>

            <Derived>
                <All>
                    <Equal>
                        <Left>
                            <Dependency path="../whichParentNotClaiming"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/writtenDeclarationOptions">iDid</Enum>
                        </Right>
                    </Equal>
                    <Dependency path="/treatAsMFJ" module="filingStatus"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/otherParentNotClaiming">
            <Description>True when other biological or adoptive parent is not claiming child</Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../whichParentNotClaiming"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/writtenDeclarationOptions">theyDid</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/inParentsCustody">
            <Name>In parents' custody</Name>
            <Description>As of July 2, was the dependent still in the legal custody of their biological or adoptive
                parents?
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/livedWithTpOrOtherBiologicalOrAdoptiveParentMoreThanSixMonths">
            <Name>Lived with taxpayer and/or other legal parent more than six months</Name>
            <Description>Did the dependent live with the taxpayer and/or the other legal parent for more than six
                months?
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/biologicalOrAdoptiveParentsLiving">
            <Name>Biological or adoptive parents living</Name>
            <Description>Are the dependent's biological or adoptive parents living?</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/nightsWithTpVsOtherParent">
            <Name>Nights spent with taxpayer vs. other parent</Name>
            <Description>Did the dependent spend more, less, or same number of nights with taxpayer vs. other parent?
            </Description>

            <Writable>
                <Enum optionsPath="/moreLessEqualOptions"/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/hadEqualNumberOfNightsWithParents">
            <Description>
                If true, we'll need to use an agi tiebreaker.
            </Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../nightsWithTpVsOtherParent"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/moreLessEqualOptions">equal</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/tpAgiHigherThanOtherParent">
            <Name>Taxpayer's AGI higher than other parent</Name>
            <Description>Is the taxpayer's AGI higher than the dependent's other legal parent?</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/parentsMeetReqsRuleForChildrenOfDivorcedParents">
            <Description>
                The person's parents meet the requirements of the rule for children of divorced
                or separated parents
                or parents who lived apart.
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/specialRuleChildUsedByCustodialParentAsQP">
            <Description>
                In a situation where the taxpayer is not a parent, and the person has an alive custodial parent,
                that
                custodial parent intends to claim this person as a QP for Hoh, EITC, DCC, or another credit
                and this person will
                thus not be an eligible to be the taxpayer's QP.
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/specialRuleAgiTest">
            <Description>
                In a situation where the TP is not a parent, and the person has an alive custodial parent,
                that
                custodial parent is not claiming the person as a qualifying person, the taxpayer has
                a higher AGI than the
                custodial parent, which will allow the TP to claim the person for
                certain tax benefits.
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/parentalSituation">
            <Name>Taxpayer's situation with other legal parent</Name>
            <Description>The taxpayer's marital or living situation with the dependent's other legal parent, as it
                applies to
                benefit split.
            </Description>

            <Writable>
                <Enum optionsPath="/parentalSituationOptions"/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/parentsAreDivorcedSeparatedOrLivingApart">
            <Description>
                Used to decide whether to display screen AddPersonParentalSupport
            </Description>

            <Derived>
                <NotEqual>
                    <Left>
                        <Dependency path="../parentalSituation"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/parentalSituationOptions">other</Enum>
                    </Right>
                </NotEqual>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/parentalSupport">
            <Name>Parental support</Name>
            <Description>Did the taxpayer and/or other parent pay more than half the dependent's support?</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/tpIsCustodialParent">
            <Name>Taxpayer is custodial parent</Name>
            <Description>
                Is the taxpayer custodial parent of the dependent?
                The custodial parent is eligible to claim the
                person for EITC and HoH
                but not eligible to claim them as a dependent, or for CTC/ACTC/ODC.
            </Description>

            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Dependency path="../nightsWithTpVsOtherParent"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/moreLessEqualOptions">more</Enum>
                        </Right>
                    </Equal>
                    <All>
                        <Equal>
                            <Left>
                                <Dependency path="../nightsWithTpVsOtherParent"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/moreLessEqualOptions">equal</Enum>
                            </Right>
                        </Equal>
                        <Dependency path="../tpAgiHigherThanOtherParent"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/tpCanClaimSplitBenefitsHohEitcCdcc">
            <Description>
                The person qualifies for a special benefit split, and the taxpayer can therefore qualify for either
                HoH, EITC, or CDCC using this person. This happens because the taxpayer is either the custodial parent
                who
                signed away
                benefits via form 8832, or the taxpayer is not a parent but is eligible for the split.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="../eligibleForBenefitSplit"/>
                    <Any>
                        <All>
                            <Equal>
                                <Left>
                                    <Dependency path="../whichParentNotClaiming"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/writtenDeclarationOptions">iDid</Enum>
                                </Right>
                            </Equal>
                            <!-- If the person is the custodial parent but the other person signed the 8832,
                   then there is no SBS - they get full benefits. -->
                            <Dependency path="../tpIsCustodialParent"/>
                        </All>
                        <Dependency path="../reachedNonParentalBenefitSplit"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/contradictory8832TPIsCustodialParent">
            <Description>The taxpayer is the custodial parent of the dependent but says the other possible claimant
                signed
                form 8332
            </Description>
            <Derived>
                <All>
                    <Dependency path="../tpIsCustodialParent"/>
                    <Equal>
                        <Left>
                            <Dependency path="../whichParentNotClaiming"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/writtenDeclarationOptions">theyDid</Enum>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/contradictory8832TPNotCustodialParent">
            <Description>The taxpayer is NOT the custodial parent of the dependent but says that they (the TP) signed
                form
                8332
            </Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="../tpIsCustodialParent"/>
                    </Not>
                    <Equal>
                        <Left>
                            <Dependency path="../whichParentNotClaiming"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/writtenDeclarationOptions">iDid</Enum>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/contradictory8832Knockout">
            <Description>
                The person qualified for the full benefit split, but then they went through the questions and were
                noted to be the custodial parent. They've contradicted themselves, and we knock them out (for now).
                The
                contradiction is that a Form 8832 is meant to be signed by only the custodial parent.
                https://git.irslabs.org/irslabs-prototypes/direct-file/-/issues/5537
            </Description>

            <Derived>
                <All>
                    <Dependency path="../eligibleForBenefitSplit"/>
                    <Any>
                        <Dependency path="../contradictory8832TPIsCustodialParent"/>
                        <Dependency path="../contradictory8832TPNotCustodialParent"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/contradictory8832TPIsCustodialParentTriggeredKnockout">
            <Description>/knockedOutByContradictory8832 was triggered by a filer claiming to be a custodial parent but
                not
                answering in a way that supports that claim
            </Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/familyAndHousehold/*/contradictory8832TPIsCustodialParent"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/contradictory8832TPNotCustodialParentTriggeredKnockout">
            <Description>/knockedOutByContradictory8832 was triggered by a filer claiming to be not be a custodial
                parent but
                not answering in a way that supports that claim
            </Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/familyAndHousehold/*/contradictory8832TPNotCustodialParent"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/knockedOutByContradictory8832">
            <Description>
                The user was knocked out by having a contradictory 8832 and being a custodial parent.
            </Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/familyAndHousehold/*/contradictory8832Knockout"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/dependentWhoCausedContradictory8832Knockout">
            <Description>
                The family/household member who caused the knockedOutByContradictory8832
            </Description>
            <Derived>
                <IndexOf>
                    <Collection>
                        <Filter path="/familyAndHousehold">
                            <Dependency path="contradictory8832Knockout"/>
                        </Filter>
                    </Collection>
                    <Index>
                        <Int>0</Int>
                    </Index>
                </IndexOf>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/causesNoncustodialParentBenefitSplitKnockout">
            <Description>
                Parent is the non custodial parent for special benefit split and should be knocked out
            </Description>

            <Derived>
                <All>
                    <Dependency path="../eligibleForBenefitSplit"/>
                    <Not>
                        <Dependency path="../tpIsCustodialParent"/>
                    </Not>
                    <Equal>
                        <Left>
                            <Dependency path="../whichParentNotClaiming"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/writtenDeclarationOptions">theyDid</Enum>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/knockedOutByNonCustodialParentBenefitSplit">
            <Description>
                We should knockout the user because one they are are the noncustodial parent
                in a special benefit
                split
            </Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/familyAndHousehold/*/causesNoncustodialParentBenefitSplitKnockout"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/dependentWhoCausedNonCustodialKnockoutSplit">
            <Description>
                The family/household member who caused the knockedOutByNonCustodialParentBenefitSplit
            </Description>
            <Derived>
                <IndexOf>
                    <Collection>
                        <Filter path="/familyAndHousehold">
                            <Dependency path="causesNoncustodialParentBenefitSplitKnockout"/>
                        </Filter>
                    </Collection>
                    <Index>
                        <Int>0</Int>
                    </Index>
                </IndexOf>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/eligibleForBenefitSplit">
            <Name>Eligible for benefit split</Name>
            <Description>Is the dependent eligible for the special rule benefit split?</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <!-- On the parental path-->
                    <All>
                        <Dependency path="../childMayQualifyForBenefitSplit"/>
                        <Dependency path="../tpIsParent"/>
                        <Dependency path="../hasOtherBiologicalOrAdoptiveParent"/>
                        <Dependency path="../parentalSomeParentNotClaiming"/>
                        <Dependency path="../inParentsCustody"/>
                        <Dependency path="../livedWithTpOrOtherBiologicalOrAdoptiveParentMoreThanSixMonths"/>
                        <Dependency path="../parentsAreDivorcedSeparatedOrLivingApart"/>
                        <Dependency path="../parentalSupport"/>
                    </All>
                    <!-- On the non-parental path-->
                    <All>
                        <Dependency path="../reachedNonParentalBenefitSplit"/>
                        <Not>
                            <Dependency path="../specialRuleChildUsedByCustodialParentAsQP"/>
                        </Not>
                        <Dependency path="../specialRuleAgiTest"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/reachedNonParentalBenefitSplit">
            <Description>
                On a non-parental path, the taxpayer has realized that the child qualified for the
                benefit split --
                but that doesn't yet mean that they can claim the child.
            </Description>

            <Derived>
                <All>
                    <Dependency path="../childMayQualifyForBenefitSplit"/>
                    <Dependency path="../tpIsNotParent"/>
                    <Dependency path="../biologicalOrAdoptiveParentsLiving"/>
                    <Dependency path="../inParentsCustody"/>
                    <Dependency path="../nonParentalSomeParentNotClaiming"/>
                    <Dependency path="../parentsMeetReqsRuleForChildrenOfDivorcedParents"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/disqualifiedDueToParentalCustody">
            <Description>
                The taxpayer answered questions about the person deep into the special benefit split
                section -- far
                enough that we know that the person is a QP for their parents, and
                that they cannot be used for tax benefits on
                this return.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="../reachedNonParentalBenefitSplit"/>
                    <Any>
                        <Not>
                            <Dependency path="../specialRuleAgiTest"/>
                        </Not>
                        <Dependency path="../specialRuleChildUsedByCustodialParentAsQP"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/flowDependentsBenefitSplitKnockout">
            <Description>The user has been knocked out for reasons(s) defined in this module</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Any>
                    <Dependency path="/knockedOutByNonCustodialParentBenefitSplit"/>
                    <Dependency path="/knockedOutByContradictory8832"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/importedPrimaryFilerFirstName">
            <Name>First name</Name>
            <Description>The first name of the filer</Description>

            <Writable>
                <String/>
                <Limit type="Match">
                    <String>[\sA-Za-z\-]+</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>20</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/importedPrimaryFilerMiddleInitial">
            <Name>Middle initial</Name>
            <Description>The middle initial of the filer</Description>

            <Writable>
                <String/>
                <Limit type="Match">
                    <String>[\sA-Za-z\-]+</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>1</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/importedPrimaryFilerLastName">
            <Name>Last name</Name>
            <Description>The last name of the filer imported from the Data Imported Service</Description>

            <Writable>
                <String/>
                <Limit type="Match">
                    <String>[\sA-Za-z\-]+</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>20</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/importedPrimaryFilerDateOfBirth">
            <Name>Date of birth</Name>
            <Description>The date of birth of the filer imported from the Data Imported Service</Description>

            <Writable>
                <Day/>
                <Limit type="Max">
                    <Day>2024-01-01</Day>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/importedPrimaryFilerAddress">
            <Name>Address</Name>
            <Description>The address of the filer imported from the Data Imported Service</Description>

            <Writable>
                <Address/>
            </Writable>
        </Fact>
        <Fact path="/importedPrimaryFilerPhone">
            <Name>Phone</Name>
            <Description>The phone number of the taxpayer(s) imported from the Data Imported Service.</Description>

            <Writable>
                <PhoneNumber/>
            </Writable>
        </Fact>
        <Fact path="/aboutYouDataWasSaved">
            <Name>Whether the about you data import preview was saved</Name>

            <Writable>
                <Boolean/>
            </Writable>
            <Placeholder>
                <False/>
            </Placeholder>
        </Fact>
        <Fact path="/aboutYouDataWasEdited">
            <Name>Whether the facts in about you basic info were edited</Name>

            <Derived>
                <Any>
                    <NotEqual>
                        <Left>
                            <Dependency path="/importedPrimaryFilerDateOfBirth"/>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/primaryFiler/dateOfBirth"/>
                        </Right>
                    </NotEqual>
                    <NotEqual>
                        <Left>
                            <Dependency path="/importedPrimaryFilerFirstName"/>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/primaryFiler/firstName"/>
                        </Right>
                    </NotEqual>
                    <NotEqual>
                        <Left>
                            <Dependency path="/importedPrimaryFilerMiddleInitial"/>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/primaryFiler/middleInitial"/>
                        </Right>
                    </NotEqual>
                    <NotEqual>
                        <Left>
                            <Dependency path="/importedPrimaryFilerLastName"/>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/primaryFiler/lastName"/>
                        </Right>
                    </NotEqual>
                    <NotEqual>
                        <Left>
                            <Dependency path="/importedPrimaryFilerAddress"/>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/address"/>
                        </Right>
                    </NotEqual>
                    <NotEqual>
                        <Left>
                            <Dependency path="/importedPrimaryFilerPhone"/>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/phone"/>
                        </Right>
                    </NotEqual>
                </Any>
            </Derived>
            <Placeholder>
                <False/>
            </Placeholder>
        </Fact>
        <Fact path="/formW2s/*/importedEmployerName">
            <Name>Imported employer's name</Name>

            <Writable>
                <String/>
                <Limit type="Match">
                    <!-- N.B. This is not the same regex as employer name line 2! Slashes are not allowed on
          line 1 -->
                    <String>(([A-Za-z0-9#\-\(\)]|&amp;|')\s?)*([A-Za-z0-9#\-\(\)]|&amp;|')</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>75</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/importedWritableEmployerNameLine2">
            <Name>Employer's name line 2</Name>
            <Description>The employer's name as appears in line 2 box c of Form W-2. This is the writable
                optional fact. Can
                be
                left incomplete.Please use the derived fact in downstream calculations
            </Description>

            <Writable>
                <String/>
                <Limit type="MaxLength">
                    <Int>75</Int>
                </Limit>
                <Limit type="Match">
                    <!-- N.B. This is not the same regex as employer name line 1! Slashes are allowed on line
          2 -->
                    <String>(([A-Za-z0-9#/%\-\(\)]|&amp;|')\s?)*([A-Za-z0-9#/%\-\(\)]|&amp;|')</String>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/importedWritableWages">
            <Name>Imported wages</Name>
            <Description>Box 1 of Form W-2, wages, tips, and other compensation. This is the writable
                optional fact. Can be
                left incomplete. Please use the derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/importedEin">
            <Name>Employer identification number</Name>
            <Description>Box b of Form W-2, employer identification number (EIN).</Description>

            <Writable>
                <EIN/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/importedAddressMatchesReturn">
            <Name>Address on W-2 is same as tax return</Name>
            <Description>Whether Box f of Form W-2 contains the same address as the tax return.</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/importedEmployeeAddress">
            <Name>Employee's address</Name>
            <Description>The employee's address as appears in box f of Form W-2.</Description>

            <Writable>
                <Address/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/importedEmployerAddress">
            <Name>Employer's address</Name>
            <Description>The employer's address as appears in box c of Form W-2.</Description>

            <Writable>
                <Address/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/importedWritableFederalWithholding">
            <Name>Federal income tax withheld</Name>
            <Description>Box 2 of Form W-2, Federal income tax withheld.

                This is the writable optional fact. Can be left
                incomplete. Please use the derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/importedWritableOasdiWages">
            <Name>Social Security Wages</Name>
            <Description>Box 3 of Form W-2, social security wages.

                This is the writable optional fact. Can be left incomplete.
                Please use the derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/importedWritableOasdiWithholding">
            <Name>Social Security Tax Withheld</Name>
            <Description>Box 4 of Form W-2, social security tax withheld. This is the writable optional
                fact. Can be left
                incomplete. Please use the derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/importedWritableMedicareWages">
            <Name>Medicare Wages</Name>
            <Description>Box 5 of Form W-2, Medicare wages and tips. This is the writable optional fact.
                Can be left
                incomplete. Please use the derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/importedWritableMedicareWithholding">
            <Name>Medicare Tax Withheld</Name>
            <Description>Box 6 of Form W-2, Medicare tax withheld. This is the writable optional fact. Can
                be left incomplete.
                Please use the derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/importedWritableOasdiTips">
            <Name>Social Security Tips</Name>
            <Description>Box 7 of Form W-2, social security tips. This is the writable optional fact. Can
                be left incomplete.
                Please use the derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/importedWritableAllocatedTips">
            <Name>Allocated Tips</Name>
            <Description>Box 8 of Form W-2, allocated tips.
                This is the writable optional fact. Can be left incomplete. Please
                use the derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/importedWritableDependentCareBenefits">
            <Name>Writable Dependent Care Benefits</Name>
            <Description>Box 10 of Form W-2, dependent care benefits.

                This is the writable optional fact. Can be left
                incomplete. Please use the derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/importedWritableNonQualifiedPlans">
            <Name>Non-qualified Plans</Name>
            <Description>Box 11 of Form W-2, non-qualified plans.

                This is the writable optional fact. Can be left incomplete.
                Please use the derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/importedWritableHasBox12Codes">
            <Name>Imported W2 has Box 12 Codes</Name>
            <Description>Whether this W2 has any codes or amounts in box 12</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/importedWritableBox12Code">
            <Name>Flow variable for Box 12 codes.</Name>
            <Description>The Box 12 code currently selected in the UI.</Description>

            <Writable>
                <Enum optionsPath="/w2Box12CodeOptions"/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/importedStatutoryEmployee">
            <Name>Statutory employee</Name>
            <Description>Whether statutory employee is checked in box 13.</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/importedRetirementPlan">
            <Name>Retirement plan</Name>
            <Description>Whether retirement plan is checked in box 13.</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/importedThirdPartySickPay">
            <Name>Third-party sick pay</Name>
            <Description>Whether third-party sick pay is checked in box 13.</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/importedNonstandardOrCorrectedChoice">
            <Name>Nonstandard or corrected choice</Name>
            <Description>Whether the form W2 is nonstandard, corrected, both, or neither</Description>
            <Writable>
                <Enum optionsPath="/w2NonstandardCorrectedOptions"/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/isImported">
            <Name>Has the filer clicked the button to import forms W-2?</Name>

            <Writable>
                <Boolean/>
            </Writable>
            <Placeholder>
                <False/>
            </Placeholder>
        </Fact>
        <Fact path="/offeredFormW2s">
            <Name>A collection of form W2s offered to the TP.</Name>

            <Writable>
                <Collection/>
            </Writable>
        </Fact>
        <Fact path="/offeredFormW2s/*/offeredAt">
            <Name>When was the form W2 offered to the TP?</Name>

            <Writable>
                <String/>
            </Writable>
        </Fact>
        <Fact path="/offeredFormW2s/*/ein">
            <Name>The EIN of the offered Form W2.</Name>

            <Writable>
                <EIN/>
            </Writable>
        </Fact>
        <Fact path="/offeredFormW2sCollectionSize">
            <Name>How many W2s were offered to the TP?</Name>
            <Derived>
                <CollectionSize>
                    <Dependency path="/offeredFormW2s"/>
                </CollectionSize>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/importedAt">
            <Name>When was the form W2 imported?</Name>

            <Writable>
                <String/>
            </Writable>
        </Fact>
        <Fact path="/importedW2sCollectionSize">
            <Name>Imported W2s Collection</Name>
            <Description>The collection of form W2s that were imported.</Description>
            <Derived>
                <CollectionSize>
                    <Filter path="/formW2s">
                        <Dependency path="isImported"/>
                    </Filter>
                </CollectionSize>
            </Derived>
        </Fact>
        <Fact path="/hasOneImportedW2">
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/importedW2sCollectionSize"/>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/hasMultipleImportedW2s">
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/importedW2sCollectionSize"/>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/showWhoseW2Screen">
            <Name>Whether to show the whose w2 screen</Name>
            <Description>Show the whose w2 screen if the filer is not importing the W2 AND if they're
                filing status is MFJ
            </Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency path="../isImported"/>
                    </Not>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/showW2NonStandardOrCorrectedScreen">
            <Name>Whether to show the the nonstandard or corrected w2 screen</Name>
            <Description>Show the nonstandard or corrected w2 screen if the filer is not importing the W2
                OR if they're
                importing the W2 and they've seen the last available screen
            </Description>

            <Derived>
                <Any>
                    <Not>
                        <Dependency path="../isImported"/>
                    </Not>
                    <All>
                        <Dependency module="formW2s" path="../hasSeenLastAvailableScreen"/>
                        <Dependency path="../isImported"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/showBox13CodesScreen">
            <Name>Whether to show the box 13 codes screen</Name>
            <Description>Show the box 13 codes screen if the filer is not importing the W2 OR if they are
                importing the W2 and
                they have seen the last available screen.
            </Description>

            <Derived>
                <Any>
                    <Not>
                        <Dependency path="../isImported"/>
                    </Not>
                    <All>
                        <Dependency module="formW2s" path="../hasSeenLastAvailableScreen"/>
                        <Dependency path="../isImported"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/knockoutFormW2s">
            <Name>Has the filer been knockout out by any of conditions after importing their W-2</Name>

            <Derived>
                <Any>
                    <Dependency module="formW2s" path="/anyFilerExceedsMaxOasdiWages"/>
                    <Dependency module="formW2s" path="/knockoutMedicareWages"/>
                    <Dependency module="formW2s" path="/flowKnockoutAllocatedTips"/>
                    <Dependency module="formW2s" path="/flowKnockoutNonQualifiedPlans"/>
                    <Dependency module="formW2s" path="/knockoutForBox12Value"/>
                    <Dependency module="formW2s" path="/flowKnockoutThirdPartySickPay"/>
                    <Dependency module="formW2s" path="/flowKnockoutStatutoryEmployee"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/isImported">
            <Name>Has the filer clicked the button to import forms 1099?</Name>

            <Writable>
                <Boolean/>
            </Writable>
            <Placeholder>
                <False/>
            </Placeholder>
        </Fact>
        <Fact path="/interestReports/*/importedHas1099">
            <Name>Does the filer have a 1099-INT?</Name>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/importedPayer">
            <Name>Payer</Name>
            <Description>The entity that paid the interest income, used on Form 1040 Schedule B, Part 1,
                Line 1
            </Description>

            <Writable>
                <String/>
                <Limit type="Match">
                    <String>(([A-Za-z0-9#\-\(\)]|&amp;|')\s?)*([A-Za-z0-9#\-\(\)]|&amp;|')</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>75</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/importedPayerTin">
            <Name>TIN</Name>
            <Description>
                The taxpayer identification number of the payer on the interest report.
            </Description>

            <Writable>
                <EIN/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/importedFactaFilingRequired">
            <Name>Has FACTA filing requirement box checked</Name>
            <Description>Whether there is a Form 1099-INT with the FACTA filing requirement box checked</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/importedBox1">
            <Name>1099 Amount of interest income</Name>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/importedBox2">
            <Name>1099 Early Withdrawl Penalty Amount</Name>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/importedBox3">
            <Name>Interest on government bonds</Name>
            <Description>Box 3 on the 1099-INT. This is the writable optional fact. Can be left
                incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/importedBox4">
            <Name>(Writable) Federal income tax withheld</Name>
            <Description>Box 4 on the 1099-INT.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/importedBox6">
            <Name>(Writable) Foreign tax paid</Name>
            <Description>Box 6 on the 1099-INT.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/importedBox8">
            <Name>Tax-exempt interest</Name>
            <Description>Box 8 on the 1099-INT.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/importedBox9">
            <Name>1099 Specified Private Activity Bond Interest</Name>
            <Description>Box 9 on the 1099-INT.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/importedBox10">
            <Name>1099 Market Discount</Name>
            <Description>Box 10 on the 1099-INT.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/importedBox11">
            <Name>1099 Bond Premium</Name>
            <Description>Box 11 on the 1099-INT.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/importedBox12">
            <Name>1099 Bond Premium on Treasury Obligations</Name>
            <Description>Box 12 on the 1099-INT.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/importedBox13">
            <Name>1099 Bond Premium on Tax Exempt Bond</Name>
            <Description>Box 13 on the 1099-INT.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/importedBox14">
            <Name>1099 Tax Exempt And Tax Credit Bond CUSIP No</Name>
            <Description>Box 14 on the 1099-INT.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <String/>
            </Writable>
        </Fact>
        <Fact path="/offeredInterestReports">
            <Name>A collection of interest reports offered to the TP.</Name>

            <Writable>
                <Collection/>
            </Writable>
        </Fact>
        <Fact path="/offeredInterestReports/*/offeredAt">
            <Name>When was the interest report offered to the TP?</Name>

            <Writable>
                <String/>
            </Writable>
        </Fact>
        <Fact path="/offeredInterestReports/*/tin">
            <Name>The TIN of the offered 1099-INT.</Name>

            <Writable>
                <TIN/>
            </Writable>
        </Fact>
        <Fact path="/offeredInterestReports/*/incomeValue">
            <Name>The interest income of the offered 1099-INT.</Name>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/offeredInterestReportsCollectionSize">
            <Name>How many 1099-INTs were offered to the TP?</Name>
            <Derived>
                <CollectionSize>
                    <Dependency path="/offeredInterestReports"/>
                </CollectionSize>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/importedAt">
            <Name>When was the 1099-INT imported?</Name>

            <Writable>
                <String/>
            </Writable>
        </Fact>
        <Fact path="/interestReportsCollectionSize">
            <Name>Imported 1099-INT Collection</Name>
            <Description>The collection of 1099-INTs that were imported.</Description>
            <Derived>
                <CollectionSize>
                    <Filter path="/interestReports">
                        <Dependency path="isImported"/>
                    </Filter>
                </CollectionSize>
            </Derived>
        </Fact>
        <Fact path="/knockoutInterestIncome">
            <Name>Has the filer been knockout out by any of conditions after importing their W-2</Name>

            <Derived>
                <Any>
                    <Dependency module="interest" path="/interestReports/hasRequiredFactaFilings"/>
                    <Dependency module="interest" path="/flowKnockoutHasEarlyWithdrawlPenalty"/>
                    <Dependency module="interest" path="/flowKnockoutHasForeignTaxPaid"/>
                    <Dependency module="interest" path="/flowKnockoutTaxExemptInterest"/>
                    <Dependency module="interest" path="/flowKnockoutHasBonds"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/k12EducatorOptions">
            <Name>K12 Educator Options</Name>
            <Description>Options for who worked as a K-12 educator</Description>
            <Derived>
                <EnumOptions>
                    <!-- Ordering is not the same if we mix and match the order of EnumOption and String. This
          is a temporary workaround and a bug has been logged to track this:
          https://git.irslabs.org/irslabs-prototypes/direct-file/-/issues/3429 -->
                    <EnumOption>
                        <Condition>
                            <True/>
                        </Condition>
                        <Value>
                            <String>tpDid</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </Condition>
                        <Value>
                            <String>spouseDid</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </Condition>
                        <Value>
                            <String>bothDid</String>
                        </Value>
                    </EnumOption>
                    <String>neither</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/wasK12Educators">
            <Name>Was k12 educators</Name>
            <Description>Whether the TP or secondary filer were k12 educators</Description>

            <Writable>
                <Enum optionsPath="/k12EducatorOptions"/>
            </Writable>
        </Fact>
        <Fact path="/spouseWasK12Educator">
            <Name>Spouse was k12 educator</Name>
            <Description>Whether the spouse was a k12 educator</Description>
            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Dependency path="/wasK12Educators"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/k12EducatorOptions">bothDid</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="/wasK12Educators"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/k12EducatorOptions">spouseDid</Enum>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/tpWasK12Educator">
            <Name>TP was k12 educator</Name>
            <Description>Whether the TP was a k12 educator</Description>
            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Dependency path="/wasK12Educators"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/k12EducatorOptions">bothDid</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="/wasK12Educators"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/k12EducatorOptions">tpDid</Enum>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/maxIndividualEducatorExpensesLimit">
            <Name>Maximum Deduction for educator expenses</Name>
            <Description>The maximum deduction an individual can take for educator expense</Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Dollar>300</Dollar>
            </Derived>
        </Fact>
        <Fact path="/primaryEducatorExpensesWritable">
            <Name>Primary educator expenses writable</Name>
            <Description>Expenses the TP spent as a k12 educator. May deduct up to the
                maxIndividualEducatorExpensesLimit.
            </Description>
            <TaxYear>2024</TaxYear>

            <Writable>
                <Dollar/>
                <Limit type="Max">
                    <!-- We'll want to update this reference to maxIndividualEducatorExpensesLimit so we don't
          need to update this manually for every tax year. Additional info in ticket:
          https://git.irslabs.org/irslabs-prototypes/direct-file/-/issues/3405 -->
                    <Dollar>300</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/primaryEducatorExpenses">
            <Name>primary educator expenses</Name>
            <Description>Expenses the TP spent as a k12 educator. May deduct up to the
                maxIndividualEducatorExpensesLimit.
                Handles the maximum conditions and eligibility to get a default 0.
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/tpWasK12Educator"/>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/maxIndividualEducatorExpensesLimit"/>
                                <Dependency path="/primaryEducatorExpensesWritable"/>
                            </LesserOf>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/secondaryEducatorExpensesWritable">
            <Name>Secondary educator expenses writable</Name>
            <Description>Expenses the TP spent as a k12 educator. May deduct up to the
                maxIndividualEducatorExpensesLimit.
            </Description>
            <TaxYear>2024</TaxYear>

            <Writable>
                <Dollar/>
                <Limit type="Max">
                    <!-- We'll want to update this reference to maxIndividualEducatorExpensesLimit so we don't
          need to update this manually for every tax year. Additional info in ticket:
          https://git.irslabs.org/irslabs-prototypes/direct-file/-/issues/3405 -->
                    <Dollar>300</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/secondaryEducatorExpenses">
            <Name>Secondary educator expenses</Name>
            <Description>Expenses the secondaryFiler spent as a k12 educator. May deduct up to the
                maxIndividualEducatorExpensesLimit. Handles the maximum conditions and eligibility to get a default 0.
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/spouseWasK12Educator"/>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/maxIndividualEducatorExpensesLimit"/>
                                <Dependency path="/secondaryEducatorExpensesWritable"/>
                            </LesserOf>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/educatorExpensesAdjustment">
            <Name>Educator Expenses Adjustment</Name>
            <Description>The combined primary and secondary educator adjustments. Line 11 of Form 1040, schedule 1.
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <Dependency module="filers" path="/isMFJDependent"/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Add>
                                    <Dependency path="/primaryEducatorExpenses"/>
                                    <Dependency path="/secondaryEducatorExpenses"/>
                                </Add>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/isReceivingEducatorExpensesAdjustment">
            <Name>Received Educator Expenses Adjustment</Name>
            <Description>Whether the TP or SP received the educator expenses adjustment</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/educatorExpensesAdjustment"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/flowShowEducatorExpensesSummary">
            <Name>Flow show educator expenses summary</Name>
            <Description>Whether to show the educator expenses summary</Description>
            <Derived>
                <Any>
                    <Dependency path="/tpWasK12Educator"/>
                    <Dependency path="/spouseWasK12Educator"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filers/*/educatorExpenses">
            <Description>filer's educator expenses</Description>
            <Export stateSystems="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filers" path="../isPrimaryFiler"/>
                        </When>
                        <Then>
                            <Dependency path="/primaryEducatorExpenses"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filers" path="../isSecondaryFiler"/>
                        </When>
                        <Then>
                            <Dependency path="/secondaryEducatorExpenses"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/spouseSectionCompleted">
            <Name>Spouse Section is Completed</Name>
            <Description>The user has finished filling out the spouse section</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Switch>
                        <Case>
                            <When>
                                <Not>
                                    <IsComplete>
                                        <Dependency module="filers" path="/maritalStatus"/>
                                    </IsComplete>
                                </Not>
                            </When>
                            <Then>
                                <False/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <Any>
                                    <!-- When the TP is single or divorced -->
                                    <All>
                                        <Not>
                                            <Dependency module="filers" path="/isMarried"/>
                                        </Not>
                                        <Not>
                                            <Dependency module="filers" path="/isWidowed"/>
                                        </Not>
                                    </All>
                                    <!-- If the TP was widowed before TY minus two, we have all the info we need -->
                                    <Dependency module="filers" path="/widowedBeforeTaxYearMinusTwo"/>
                                </Any>
                            </When>
                            <Then>
                                <True/>
                            </Then>
                        </Case>
                        <Case>
                            <!-- the TP is widowed in the QSS period -->
                            <When>
                                <Dependency module="filers" path="/widowedCouldQualifyForQSS"/>
                            </When>
                            <Then>
                                <All>
                                    <IsComplete>
                                        <Dependency module="filers" path="/canFileJointlyYearOfSpouseDeath"/>
                                    </IsComplete>
                                </All>
                            </Then>
                        </Case>
                        <Case>
                            <!-- If the filing status is invalid, we need the filer to answer whether they lived together/apart
                   and about their citizenship/residency, and then we need to send them back to Filing Status -->
                            <When>
                                <All>
                                    <IsComplete>
                                        <Dependency module="filingStatus" path="/filingStatus"/>
                                    </IsComplete>
                                    <Not>
                                        <Dependency module="filingStatus" path="/isFilingStatusValid"/>
                                    </Not>
                                </All>
                            </When>
                            <Then>
                                <All>
                                    <IsComplete>
                                        <Dependency module="filers" path="/livedTogetherAllYearWithSpouse"/>
                                    </IsComplete>
                                    <IsComplete>
                                        <Dependency module="filers" path="/livedApartLastSixMonths"/>
                                    </IsComplete>
                                    <Any>
                                        <All>
                                            <Not>
                                                <Dependency module="filers" path="/livedApartLastSixMonths"/>
                                            </Not>
                                            <IsComplete>
                                                <Dependency module="filers" path="/separationAgreement"/>
                                            </IsComplete>
                                        </All>
                                        <Dependency module="filers" path="/livedApartLastSixMonths"/>
                                    </Any>
                                    <IsComplete>
                                        <Dependency module="filers" path="/secondaryFilerResidencyEligibleForMFJ"/>
                                    </IsComplete>
                                </All>
                            </Then>
                        </Case>
                        <Case>
                            <!-- If the TP's spouse isn't eligible for MFJ, we send them to try for HoH. If they
              reach the filing status section and have to choose MFS, they'll be brought back to
              finish up the spouse section. -->
                            <When>
                                <Any>
                                    <Dependency path="/NRASpouseTryingForHoh"/>
                                    <Dependency module="filingStatus" path="/isFilingStatusHOH"/>
                                </Any>
                            </When>
                            <Then>
                                <Switch>
                                    <Case>
                                        <!-- If they filed as HoH and they can't file married, we need no more information -->
                                        <When>
                                            <Not>
                                                <Dependency module="filingStatus"
                                                            path="/maritalStatusAllowsFilingMarried"/>
                                            </Not>
                                        </When>
                                        <Then>
                                            <True/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <!-- But if they can file as married, we need to know what exception that allows them to file HoH -->
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <All>
                                                <Dependency module="filers" path="/livedTogetherApartFlowIsComplete"/>
                                                <IsComplete>
                                                    <Dependency module="filers"
                                                                path="/secondaryFilerResidencyEligibleForMFJ"/>
                                                </IsComplete>
                                            </All>
                                        </Then>
                                    </Case>
                                </Switch>
                            </Then>
                        </Case>
                        <Case>
                            <!-- the TP wants to qualify for HoH and either hasn't reached filing status,
                   or has reached filing status and qualified as HoH. We need to know if they
                   lived apart or had a separation agreement.
                -->
                            <When>
                                <All>
                                    <Dependency module="filingStatus" path="/eligibleForMFJ"/>
                                    <Dependency module="filers" path="/livedApartLastSixMonths"/>
                                    <Dependency module="filingStatus" path="/wantsHeadOfHousehold"/>
                                    <Any>
                                        <Not>
                                            <IsComplete>
                                                <Dependency module="filingStatus" path="/filingStatus"/>
                                            </IsComplete>
                                        </Not>
                                        <Dependency module="filingStatus" path="/isFilingStatusHOH"/>
                                    </Any>
                                </All>
                            </When>
                            <Then>
                                <True/>
                            </Then>
                        </Case>
                        <Case>
                            <!-- The TP wants to file separately -->
                            <When>
                                <All>
                                    <Dependency module="filingStatus" path="/maritalStatusAllowsFilingMarried"/>
                                    <Dependency module="filingStatus" path="/wantsSeparateReturn"/>
                                </All>
                            </When>
                            <Then>
                                <All>
                                    <Dependency module="filers" path="/livedTogetherApartFlowIsComplete"/>
                                    <Dependency path="/mfsSectionCompleted"/>
                                </All>
                            </Then>
                        </Case>
                        <Case>
                            <!-- The TP wants to file jointly -->
                            <When>
                                <All>
                                    <Dependency module="filingStatus" path="/eligibleForMFJ"/>
                                    <Dependency module="filingStatus" path="/wantsJointReturn"/>
                                </All>
                            </When>
                            <Then>
                                <All>
                                    <Dependency module="filers" path="/livedTogetherApartFlowIsComplete"/>
                                    <Dependency path="/mfjSectionCompleted"/>
                                    <IsComplete>
                                        <Dependency module="filers" path="/allSpouseFormsInScopedState"/>
                                    </IsComplete>
                                    <IsComplete>
                                        <Dependency module="filers" path="/spouseReceivedAlaskaPfd"/>
                                    </IsComplete>
                                </All>
                            </Then>
                        </Case>
                    </Switch>
                    <Dependency module="filers" path="/hasCompletedRegisteredDomesticPartnerIfApplicable"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/NRASpouseTryingForHoh">
            <Name>Nonresident alien spouse try for HoH completed</Name>
            <Description>The taxpayer has entered a nonresident alien spouse and is going to try for HoH
                status
            </Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency module="filers" path="/secondaryFilerResidencyEligibleForMFJ"/>
                    </Not>
                    <Not>
                        <IsComplete>
                            <Dependency module="filingStatus" path="/filingStatus"/>
                        </IsComplete>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/readyToEnterSpouseInformation">
            <Name>Ready to enter Spouse Information</Name>
            <Description>The user is ready to enter spouse information</Description>
            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/maritalStatusAllowsFilingMarried"/>
                    <Not>
                        <Dependency path="/NRASpouseTryingForHoh"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/mfsSectionCompleted">
            <Name>MFS Section Completed</Name>
            <Description>The MFS section of the spouse section has been completed</Description>
            <Derived>
                <All>
                    <Any>
                        <!-- The condition that would lead us to not get to the final question -->
                        <Dependency module="filers" path="/MFSSpouseProvidesNoBenefits"/>
                        <!-- Ensures we answer all of the follow up questions about age and vision -->
                        <All>
                            <Not>
                                <Dependency module="filers" path="/MFSSpouseProvidesNoBenefits"/>
                            </Not>
                            <IsComplete>
                                <Dependency module="filers" path="/MFSSpouse65OrOlder"/>
                            </IsComplete>
                            <IsComplete>
                                <Dependency module="filers" path="/secondaryFiler/isBlind"/>
                            </IsComplete>
                        </All>
                    </Any>
                    <Any>
                        <!-- They either entered a TIN or we don't need one-->
                        <IsComplete>
                            <Dependency module="filers" path="/secondaryFiler/tin"/>
                        </IsComplete>
                        <Not>
                            <Dependency module="filers" path="/MFSNeedSpouseTaxId"/>
                        </Not>
                    </Any>
                    <IsComplete>
                        <Dependency module="standardDeduction"
                                    path="/filerMFSAndSpouseIsEligibleForStandardDeductions"/>
                    </IsComplete>
                </All>
            </Derived>
        </Fact>
        <Fact path="/mfjSectionCompleted">
            <Name>MFJ Section Completed</Name>
            <Description>The MFJ section of the spouse section has been completed</Description>
            <Derived>
                <All>
                    <Any>
                        <!-- Neither TP is claimable as a dependent -->
                        <Not>
                            <Dependency module="filers" path="/flowMFJSpouseFilingRequirementSubsection"/>
                        </Not>
                        <!-- They are not claimable as dependents because they are MFJ and required to file -->
                        <Dependency module="filers" path="/MFJRequiredToFile"/>
                        <!-- They could be claimable as dependents and have made a choice -->
                        <All>
                            <IsComplete>
                                <Dependency module="filers" path="/MFJClaimingRefundOnly"/>
                            </IsComplete>
                            <Any>
                                <Not>
                                    <Dependency module="filers" path="/MFJClaimingRefundOnly"/>
                                </Not>
                                <All>
                                    <Dependency path="/mfjDependentChoiceA"/>
                                    <Any>
                                        <Not>
                                            <Dependency module="filers" path="/secondaryFiler/canBeClaimed"/>
                                        </Not>
                                        <IsComplete>
                                            <Dependency module="filers" path="/secondaryFiler/willBeClaimed"/>
                                        </IsComplete>
                                    </Any>
                                </All>
                            </Any>
                        </All>
                    </Any>
                    <!-- We have a lot of conditions here to account for taxpayers that switch from MFS to MFJ -->
                    <IsComplete>
                        <Dependency module="filers" path="/secondaryFiler/tin"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency module="filers" path="/secondaryFiler/hasIpPin"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency module="filers" path="/secondaryFiler/dateOfBirth"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency module="filers" path="/secondaryFiler/occupation"/>
                    </IsComplete>
                    <Switch>
                        <Case>
                            <When>
                                <All>
                                    <Dependency module="filers" path="/isWidowed"/>
                                    <Equal>
                                        <Left>
                                            <Dependency module="filers" path="/yearOfSpouseDeath"/>
                                        </Left>
                                        <Right>
                                            <Enum optionsPath="/yearOfSpouseDeathOptions">taxYear</Enum>
                                        </Right>
                                    </Equal>
                                </All>
                            </When>
                            <Then>
                                <IsComplete>
                                    <Dependency module="filers" path="/secondaryFilerDateOfDeath"/>
                                </IsComplete>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <True/>
                            </Then>
                        </Case>
                    </Switch>
                    <Dependency module="filers" path="/secondaryFilerSocialSecurityNumberRestrictionsAreComplete"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/needsMoreMFSSpouseInfo">
            <Description>
                The user needs to enter more info about an MFS spouse
            </Description>
            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                    <Not>
                        <Dependency path="/mfsSectionCompleted"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/needsMoreMFJSpouseInfo">
            <Description>
                The user needs to enter more info about an MFJ spouse
            </Description>
            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Not>
                        <Dependency path="/mfjSectionCompleted"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isMFJWithLivingSpouse">
            <Description>
                The user is married filing jointly and was not widowed in the tax year. We need to create a
                disjunction to handle cases where widows filing jointly see different screens from non-widows filing
                jointly.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Dependency module="filers" path="/isMarried"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/MFJDepedentsEnrolledMarketplacePlan">
            <Description>
                Whether the MFJ filer who is treated like a dependent was in enrolled in a marketplace plan for at
                least one month.
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/advancedPTCPaymentsMade">
            <Description>
                Whether advance payments of the Premium Tax Credit (PTC) were made to help pay for the coverage
                primary, secondary or anyone they enrolled.
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/MFJDNotEnrolledMarketplacePlanAndNoAdvancedPTCPaymentsMade">
            <Description>
                If TP was NOT enrolled in a marketplace plan and NO advance payments of the Premium Tax Credit (PTC)
                were made to help pay for the coverage primary, secondary or anyone they enrolled.
            </Description>

            <Derived>
                <Any>
                    <Not>
                        <Dependency path="/MFJDepedentsEnrolledMarketplacePlan"/>
                    </Not>
                    <Not>
                        <Dependency path="/advancedPTCPaymentsMade"/>
                    </Not>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/refundOnlyAndMFJDEnrolledMarketplacePlanAndAdvancedPTCPaymentsMade">
            <Description>
                If TP chose the redund only option, was NOT enrolled in a marketplace plan and NO advance payments of
                the Premium Tax Credit (PTC) were made to help pay for the coverage primary, secondary or anyone they
                enrolled.
            </Description>

            <Derived>
                <All>
                    <Dependency module="filers" path="/MFJClaimingRefundOnly"/>
                    <Dependency path="/MFJDepedentsEnrolledMarketplacePlan"/>
                    <Dependency path="/advancedPTCPaymentsMade"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/mfjdEnrolleesOptions">
            <Description>MFJ Dependent Enrollees options</Description>

            <Derived>
                <EnumOptions>
                    <String>primary</String>
                    <String>secondary</String>
                    <String>someoneElseThatPrimaryOrSecondaryEnrolled</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/mfjdEnrollees">
            <Description>MFJ Dependent Enrollees</Description>

            <Writable>
                <MultiEnum optionsPath="/mfjdEnrolleesOptions"/>
            </Writable>
        </Fact>
        <Fact path="/mfjdEnrolleeHasSelf">
            <Description>
                Was the primary TP enrolled in a qualified Marketplace health plan with advance payments of the
                Premium Tax Credit (PTC)?
            </Description>

            <Derived>
                <EnumOptionsContains>
                    <Options>
                        <Dependency path="/mfjdEnrollees"/>
                    </Options>
                    <Value>
                        <Enum optionsPath="/mfjdEnrolleesOptions">primary</Enum>
                    </Value>
                </EnumOptionsContains>
            </Derived>
        </Fact>
        <Fact path="/mfjdEnrolleeHasSpouse">
            <Description>
                Was the spouse enrolled in a qualified Marketplace health plan with advance payments of the Premium
                Tax Credit (PTC)?
            </Description>

            <Derived>
                <EnumOptionsContains>
                    <Options>
                        <Dependency path="/mfjdEnrollees"/>
                    </Options>
                    <Value>
                        <Enum optionsPath="/mfjdEnrolleesOptions">secondary</Enum>
                    </Value>
                </EnumOptionsContains>
            </Derived>
        </Fact>
        <Fact path="/mfjdEnrolleeHasOther">
            <Description>
                Someone else was enrolled in a qualified Marketplace health plan with Advance Premium Tax Credit
                (PTC) payments were made
            </Description>

            <Derived>
                <EnumOptionsContains>
                    <Options>
                        <Dependency path="/mfjdEnrollees"/>
                    </Options>
                    <Value>
                        <Enum optionsPath="/mfjdEnrolleesOptions">someoneElseThatPrimaryOrSecondaryEnrolled</Enum>
                    </Value>
                </EnumOptionsContains>
            </Derived>
        </Fact>
        <Fact path="/refundOnlyMFJDEnrollMarketPlanAPTCPaymentsMadeEnrolleeIsOther">
            <Description>
                If TP chose the redund only option, was enrolled in a marketplace plan and Advance Premium Tax Credit
                (PTC) payments were made were made to help pay for enrollment for someone else.
            </Description>

            <Derived>
                <All>
                    <Dependency path="/refundOnlyAndMFJDEnrolledMarketplacePlanAndAdvancedPTCPaymentsMade"/>
                    <Dependency path="/mfjdEnrolleeHasOther"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/refundOnlyMFJDEnrollMarketPlanAPTCPaymentsMadeEnrolleeIsNotOther">
            <Description>
                If TP chose the redund only option, was enrolled in a marketplace plan and Advance Premium Tax Credit
                (PTC) payments were made were made to help pay for enrollment for themselves only.
            </Description>

            <Derived>
                <All>
                    <Dependency path="/refundOnlyAndMFJDEnrolledMarketplacePlanAndAdvancedPTCPaymentsMade"/>
                    <Not>
                        <Dependency path="/mfjdEnrolleeHasOther"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/mfjdOtherTaxFamily">
            <Description>
                If the person enrolled by primary TP or spouse is part of some other family
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/mfjdOneOrBothTPEnrolledThemselves">
            <Description>
                If one or both TP enrolled themselves
            </Description>

            <Derived>
                <Any>
                    <Dependency path="/mfjdEnrolleeHasSelf"/>
                    <Dependency path="/mfjdEnrolleeHasSpouse"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/mfjdBothTPEnrolledThemselves">
            <Description>
                If one or both TP enrolled themselves
            </Description>

            <Derived>
                <All>
                    <Dependency path="/mfjdEnrolleeHasSelf"/>
                    <Dependency path="/mfjdEnrolleeHasSpouse"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/mfjdOK">
            <Description>
                Some MFJ (primary, secondary or both) considering to be dependent, second instance of the same screen
            </Description>

            <Derived>
                <All>
                    <Dependency path="/refundOnlyMFJDEnrollMarketPlanAPTCPaymentsMadeEnrolleeIsOther"/>
                    <Dependency path="/mfjdOtherTaxFamily"/>
                    <Not>
                        <Dependency path="/mfjdOneOrBothTPEnrolledThemselves"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerHasMarketplacePlanAndIsNotClaimedAsDependent">
            <Description>
                The primary filer is enrolled in a qualified Marketplace health plan, and not claimed by anyone as a
                dependent.
            </Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency module="filers" path="/primaryFilerIsClaimedAsDependent"/>
                    </Not>
                    <Dependency path="/mfjdEnrolleeHasSelf"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerHasMarketplacePlanAndIsNotClaimedAsDependent">
            <Description>
                The secondary filer is enrolled in a qualified Marketplace health plan, and is not claimed by anyone
                as a dependent.
            </Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency module="filers" path="/secondaryFilerIsClaimedAsDependent"/>
                    </Not>
                    <Dependency path="/mfjdEnrolleeHasSpouse"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/eitherFilerHasMarketplacePlanAndIsNotClaimedAsDependent">
            <Description>
                Either the primary or the secondary filer is enrolled in a qualified Marketplace health plan, and the
                enrolled filer is not claimed by anyone as a dependent.
            </Description>

            <Derived>
                <Any>
                    <Dependency path="/primaryFilerHasMarketplacePlanAndIsNotClaimedAsDependent"/>
                    <Dependency path="/secondaryFilerHasMarketplacePlanAndIsNotClaimedAsDependent"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/mfjdSwitchNotDependentTP">
            <Description>
                Switch to NOT Depenent TP : You can't prepare federal tax return as independent taxpayers. There are
                3 ways one can set this fact true. 1. The TP enrolled did NOT enroll someone else AND no one else is
                claiming
                the TP as a dependent, 2. The TP did enroll someone else along with either themselves and/or their
                spouse AND
                APTC were made AND no one else is claiming the TP as a dependent, 3. The TP did enroll someone else
                along with
                either themselves and/or their spouse AND APTC were not made.
            </Description>

            <Derived>
                <All>
                    <Dependency path="/refundOnlyAndMFJDEnrolledMarketplacePlanAndAdvancedPTCPaymentsMade"/>
                    <Any>
                        <!-- Path 1 -->
                        <All>
                            <Not>
                                <Dependency path="/mfjdEnrolleeHasOther"/>
                            </Not>
                            <Dependency path="/eitherFilerHasMarketplacePlanAndIsNotClaimedAsDependent"/>
                        </All>
                        <!-- Path 2 -->
                        <All>
                            <Dependency path="/mfjdEnrolleeHasOther"/>
                            <Dependency path="/mfjdOtherTaxFamily"/>
                            <Dependency path="/mfjdOneOrBothTPEnrolledThemselves"/>
                            <Dependency path="/eitherFilerHasMarketplacePlanAndIsNotClaimedAsDependent"/>
                        </All>
                        <!-- Path 3 -->
                        <All>
                            <Dependency path="/mfjdEnrolleeHasOther"/>
                            <Not>
                                <Dependency path="/mfjdOtherTaxFamily"/>
                            </Not>
                        </All>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/mfjdOkFormNotRequired">
            <Description>
                MFJD OK form not required
            </Description>

            <Derived>
                <Any>
                    <!-- Case 1 -->
                    <All>
                        <Not>
                            <Dependency path="/mfjdEnrolleeHasOther"/>
                        </Not>
                        <Not>
                            <Dependency path="/eitherFilerHasMarketplacePlanAndIsNotClaimedAsDependent"/>
                        </Not>
                    </All>
                    <!-- Case 2 -->
                    <All>
                        <Dependency path="/mfjdOneOrBothTPEnrolledThemselves"/>
                        <Dependency path="/mfjdEnrolleeHasOther"/>
                        <Dependency path="/mfjdOtherTaxFamily"/>
                        <Not>
                            <Dependency path="/eitherFilerHasMarketplacePlanAndIsNotClaimedAsDependent"/>
                        </Not>
                    </All>

                </Any>
            </Derived>
        </Fact>
        <Fact path="/mfjDependentChoiceA">
            <Description>
                MFJ Dependent Choice A
            </Description>

            <Derived>
                <All>
                    <Dependency module="filers" path="/MFJClaimingRefundOnly"/>
                    <Any>
                        <Dependency path="/MFJDNotEnrolledMarketplacePlanAndNoAdvancedPTCPaymentsMade"/>
                        <Dependency path="/mfjdOK"/>
                        <Dependency path="/mfjdOkFormNotRequired"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/notDependentNotOtherTaxFamily">
            <Description>
                Not dependent and not other tax family
            </Description>

            <Derived>
                <All>
                    <Dependency path="/refundOnlyMFJDEnrollMarketPlanAPTCPaymentsMadeEnrolleeIsOther"/>
                    <Not>
                        <Dependency path="/mfjdOtherTaxFamily"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/dependentClaimedAndEnrolleeIsSelf">
            <Description>
                Not dependent and not other tax family
            </Description>

            <Derived>
                <All>
                    <Dependency module="filers" path="/eitherFilerIsClaimedAsDependent"/>
                    <Dependency path="/mfjdEnrolleeHasSelf"/>
                    <Not>
                        <Dependency path="/mfjdEnrolleeHasSpouse"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/dependentClaimedAndEnrolleeIsSpouse">
            <Description>
                Not dependent and not other tax family
            </Description>

            <Derived>
                <All>
                    <Dependency module="filers" path="/eitherFilerIsClaimedAsDependent"/>
                    <Dependency path="/mfjdEnrolleeHasSpouse"/>
                    <Not>
                        <Dependency path="/mfjdEnrolleeHasSelf"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/dependentClaimedAndEnrolleeIsBoth">
            <Description>
                Not dependent and not other tax family
            </Description>

            <Derived>
                <All>
                    <Dependency module="filers" path="/eitherFilerIsClaimedAsDependent"/>
                    <Dependency path="/mfjdBothTPEnrolledThemselves"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/showMFJDChoiceBDynamic">
            <Description>
                Whether to show the dynamic content. It's your choice because you are filing jointly with you
                spouse...
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
            <Placeholder>
                <True/>
            </Placeholder>
        </Fact>
        <Fact path="/socialSecurityIncomeFormTypeOptions">
            <Name>Social Security income form type Options</Name>
            <Description>Options for form type</Description>
            <Derived>
                <EnumOptions>
                    <String>SSA-1099</String>
                    <String>RRB-1099</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityIncomeFormTypeOptionsLong">
            <Name>Social Security income form type Options</Name>
            <Description>Options for form type</Description>
            <Derived>
                <EnumOptions>
                    <String>socialSecurityBenefit</String>
                    <String>railroadRetirementBoardBenefit</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityBenefits">
            <Name>Social security benefits</Name>
            <Description>Social security benefits to report on line 6a of Form 1040.</Description>
            <Export downstreamFacts="true" mef="true"/>
            <Derived>
                <Round>
                    <CollectionSum>
                        <Dependency path="/socialSecurityReports/*/netBenefits"/>
                    </CollectionSum>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/xmlSocialSecurityBenefitCode">
            <Name>Social security benefit code</Name>
            <Description>The fact used to populate the socSecBnftCd XML attribute of the SocSecBnftAmt element used in
                the IRS
                1040 XML. IRS 1040 Instructions: If you are married filing separately and you lived apart from your
                spouse for
                all of 2023, be sure you entered “D” to the right of the word “benefits” on line 6a."
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                                <Dependency path="/hasSocialSecurityBenefits"/>
                                <Dependency module="filers" path="/livedApartAllYear"/>
                            </All>
                        </When>
                        <Then>
                            <String>D</String>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/hasSocialSecurityBenefits">
            <Name>Has Social security benefits</Name>
            <Description>Has social security benefits to report on line 6a of Form 1040 (should we mark it as D)
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/socialSecurityBenefits"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasSocialSecurityReports">
            <Name>Has listed any Social security benefits</Name>
            <Description>Whether the TP has any social security benefits listed</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/socialSecurityReports"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityBenefitsAreLossUpto3k">
            <Name>Social security benefits are loss up to 3k</Name>
            <Description>The TP repaid social security benefits to the point where benefits are a net loss of up to 3k
                (between -3000 and 0)
            </Description>
            <Derived>
                <All>
                    <GreaterThanOrEqual>
                        <Left>
                            <Dependency path="/socialSecurityBenefits"/>
                        </Left>
                        <Right>
                            <Dollar>-3000</Dollar>
                        </Right>
                    </GreaterThanOrEqual>
                    <LessThanOrEqual>
                        <Left>
                            <Dependency path="/socialSecurityBenefits"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </LessThanOrEqual>
                </All>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityBenefitsAreLossGreaterThan3k">
            <Name>Social security benefits are loss greater than 3k</Name>
            <Description>The TP repaid social security benefits to the point where benefits are a net loss of over 3k.
                Knocks
                the user out for TY2023, due to eligibility for the unsupported §1341 deduction.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <LessThan>
                        <Left>
                            <Dependency path="/socialSecurityBenefits"/>
                        </Left>
                        <Right>
                            <Dollar>-3000</Dollar>
                        </Right>
                    </LessThan>

                    <!-- We only check this once the filer has said they've finished entering social security reports -->
                    <Dependency path="/socialSecurityReportsIsDone"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerHasIncompleteSocialSecurityReports">
            <Name>At least one of Primary Filer's social security reports are incomplete</Name>
            <Description>Whether at least one of Primary Filer's social security reports are incomplete</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <All>
                                <Dependency path="/socialSecurityReports/*/belongsToPrimaryFiler"/>
                                <Not>
                                    <Dependency path="/socialSecurityReports/*/isComplete"/>
                                </Not>
                            </All>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerHasIncompleteSocialSecurityReports">
            <Name>At least one of Secondary Filer's social security reports are incomplete</Name>
            <Description>Whether at least one of Secondary Filer's social security reports are incomplete</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <All>
                                <Dependency path="/socialSecurityReports/*/belongsToSecondaryFiler"/>
                                <Not>
                                    <Dependency path="/socialSecurityReports/*/isComplete"/>
                                </Not>
                            </All>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/maximumSocialSecurityBenefitsRepaidSupported">
            <Name>Maximum Social Security Benefits Repaid Supported</Name>
            <Description>The maximum dollar amount of social security benefits repaid that is supported.</Description>

            <Derived>
                <Dollar>3000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityReports">
            <Name>Social Security Income Reports</Name>
            <Description>Reports of Social Security income.</Description>

            <Writable>
                <Collection/>
            </Writable>
        </Fact>
        <Fact path="/hasAtLeastOneSocialSecurityReport">
            <Name>Has at least one social security report</Name>
            <Description>Has at least one social security report</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/socialSecurityReports"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityReports/*/belongsToPrimaryFiler">
            <Name>Social Security report belongs to primary filer</Name>
            <Description>The Social Security report belongs to the primary filer</Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../filer"/>
                    </Left>
                    <Right>
                        <Dependency module="filers" path="/primaryFiler"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityReports/*/belongsToSecondaryFiler">
            <Name>Social Security report belongs to secondary filer</Name>
            <Description>The Social Security report belongs to the secondary filer</Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../filer"/>
                    </Left>
                    <Right>
                        <Dependency module="filers" path="/secondaryFiler"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityReports/*/secondaryFilerUsedWithoutMFJ">
            <Name>Secondary filer has Social Security reports when primary filer is not filing jointly</Name>
            <Description>Whether secondary filer has Social Security reports when primary filer is not filing jointly
            </Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    </Not>
                    <Dependency path="../belongsToSecondaryFiler"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityReports/secondaryFilerUsedWithoutMFJ">
            <Name>Secondary filer has Social Security reports when primary filer is not filing jointly</Name>
            <Description>Whether secondary filer has Social Securityinterest reports when primary filer is not filing
                jointly
            </Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/socialSecurityReports/*/secondaryFilerUsedWithoutMFJ"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityReportsIsDone">
            <Name>socialSecurityReports is Done</Name>
            <Description>The user has clicked "Done" for their socialSecurityReports</Description>
            <Export downstreamFacts="true"/>
            <Writable>
                <Boolean/>
            </Writable>
            <Placeholder>
                <False/>
            </Placeholder>
        </Fact>
        <Fact path="/socialSecurityReports/*/hasSeenLastAvailableScreen">
            <Name>Has seen last available screen</Name>
            <Description>Whether the user has reached the end of a social security flow</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/socialSecurityReports/*/isComplete">
            <Name>Is complete</Name>
            <Description>Whether the social security report is complete</Description>

            <Derived>
                <All>
                    <Dependency path="../hasSeenLastAvailableScreen"/>
                    <IsComplete>
                        <Dependency path="../netBenefits"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../federalTaxWithheld"/>
                    </IsComplete>
                </All>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityReports/*/filer">
            <Name>Social Security Income Filer</Name>
            <Description>The filer who received Social Security income for this report.</Description>

            <Writable>
                <CollectionItem collection="/filers"/>
            </Writable>
            <Placeholder>
                <Dependency module="filers" path="/primaryFiler"/>
            </Placeholder>

        </Fact>
        <Fact path="/socialSecurityReports/*/recipientTin">
            <Description>The recipient's TIN. Defaults to the primary filer TIN since the ../filer placeholder
                corresponds to
                the primary filer
            </Description>
            <Export stateSystems="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../filer"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency module="filers" path="../filer/tin"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency module="filers" path="/primaryFiler/tin"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityReports/*/formType">
            <Name>Social Security Income Form Type</Name>
            <Description>The type of form that reports this Social Security income.</Description>
            <Export stateSystems="true"/>

            <!-- <Writable>
        <Enum optionsPath="/socialSecurityIncomeFormTypeOptions" />
      </Writable> -->

            <Derived>
                <Enum optionsPath="/socialSecurityIncomeFormTypeOptions">SSA-1099</Enum>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityReports/*/formTypeLong">
            <Name>Social Security Income Form Type</Name>
            <Description>The type of form that reports this Social Security income.</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../isSsa1099"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/socialSecurityIncomeFormTypeOptionsLong">socialSecurityBenefit</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../formType"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/socialSecurityIncomeFormTypeOptions">RRB-1099</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/socialSecurityIncomeFormTypeOptionsLong">
                                railroadRetirementBoardBenefit
                            </Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Enum optionsPath="/socialSecurityIncomeFormTypeOptionsLong">socialSecurityBenefit</Enum>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityReports/*/isSsa1099">
            <Name>Flow variable for Social Security income screens</Name>
            <Description>Whether this Social Security income is reported on a SSA-1099.</Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../formType"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/socialSecurityIncomeFormTypeOptions">SSA-1099</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityReports/*/ssaNetBenefits">
            <Name>SSA net benefits</Name>
            <Description>Box 5 of the SSA-1099</Description>

            <Writable>
                <Dollar/>
            </Writable>
            <Placeholder>
                <Dollar>0</Dollar>
            </Placeholder>
        </Fact>
        <Fact path="/socialSecurityReports/*/rrbNetBenefits">
            <Name>RRB net benefits</Name>
            <Description>Box 5 of the RRB-1099</Description>

            <Writable>
                <Dollar/>
            </Writable>
            <Placeholder>
                <Dollar>0</Dollar>
            </Placeholder>
        </Fact>
        <Fact path="/socialSecurityReports/*/writableSsaFederalTaxWithheld">
            <Name>SSA federal tax withheld</Name>
            <Description>Box 6 of the SSA-1099.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/socialSecurityReports/*/ssaFederalTaxWithheld">
            <Name>SSA federal tax withheld</Name>
            <Description>Box 6 of the SSA-1099</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableSsaFederalTaxWithheld"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../writableSsaFederalTaxWithheld"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityReports/*/writableRrbFederalTaxWithheld">
            <Name>RRB federal tax withheld</Name>
            <Description>Box 10 of the RRB-1099.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/socialSecurityReports/*/rrbFederalTaxWithheld">
            <Name>RRB federal tax withheld</Name>
            <Description>Box 10 of the RRB-1099</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableRrbFederalTaxWithheld"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../writableRrbFederalTaxWithheld"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityReports/*/netBenefits">
            <Name>Net Benefits</Name>
            <Description>Net Benefits - box 5 of the RRB-1099 or Box 5 of the SSA-1099</Description>
            <Export stateSystems="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../isSsa1099"/>
                        </When>
                        <Then>
                            <Dependency path="../ssaNetBenefits"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="../rrbNetBenefits"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityReports/*/federalTaxWithheld">
            <Name>Federal Tax Withheld</Name>
            <Description>The Federal tax withheld - box 10 of the RRB-1099 or Box 6 of the SSA-1099</Description>
            <Export mef="true" downstreamFacts="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../isSsa1099"/>
                        </When>
                        <Then>
                            <Dependency path="../ssaFederalTaxWithheld"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="../rrbFederalTaxWithheld"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/taxableSocialSecurityBenefits">
            <Name>Taxable Social security benefits</Name>
            <Description>Taxable Social security benefits to report on line 6b of Form 1040. This is also line 18 of the
                Social Security Benefits Worksheet. We use the SSBW from instructions for 1040. There is a similar
                worksheet in
                Pub 915 where the line numbers are different and will confuse you.
            </Description>

            <Export downstreamFacts="true" mef="true"/>
            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <!-- If social security benefits are negative due to repayment, return 0 -->
                            <When>
                                <LessThan>
                                    <Left>
                                        <Dependency path="/socialSecurityBenefits"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </LessThan>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                        <Case>
                            <!-- Else, use the social security benefits worksheet -->
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <LesserOf>
                                    <Dependency path="/socialSecurityBenefitsWkshtLine16"/>
                                    <Multiply>
                                        <!-- The result of this multiplication is wksht line 17-->
                                        <Dependency path="/socialSecurityBenefits"/>
                                        <Dollar>0.85</Dollar>
                                    </Multiply>
                                </LesserOf>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityBenefitsWkshtLine7">
            <Name>Social Security Benefits Worksheet Line 7</Name>
            <Description>Used for calculating taxable social security benefits. We use the SSBW from instructions for
                1040.
                There is a similar worksheet in Pub 915 where the line numbers are different and will confuse you. If no
                benefits are taxable, this will return a 0, which will flow through to line 9, then line 16, and then
                onto 1040
                line 6b.
            </Description>

            <Derived>
                <GreaterOf>
                    <Subtract>
                        <Minuend>
                            <Add>
                                <!-- The result of this addition is line 5 on the benefits worksheet-->
                                <Multiply>
                                    <Dependency path="/socialSecurityBenefits"/>
                                    <Dollar>0.50</Dollar>
                                </Multiply>
                                <Dependency path="/socialSecurityBenefitsWkshtLine3"/>
                                <Dependency module="interest" path="/taxExemptInterest"/> <!-- 1040 line 2a -->
                            </Add>
                        </Minuend>
                        <Subtrahends>
                            <!-- This subtrahends is line 6 on the benefits worksheet. We subtract schedule 1, lines 11 through 20, and 23 and 25-->
                            <Dependency module="taxCalculations"
                                        path="/adjustmentsToIncomeExcludingStudentLoanInterest"/>
                        </Subtrahends>
                    </Subtract>
                    <Dollar>0</Dollar>
                </GreaterOf>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityBenefitsWkshtLine3">
            <Description>Line 3 of the Social Security Benefits Worksheet found in the 1040 instructions.</Description>
            <Derived>
                <Add>
                    <Dependency module="income" path="/employerIncomeSubtotal"/> <!-- 1040 line 1z -->
                    <Dependency module="interest" path="/interestIncome"/> <!-- 1040 line 2b -->
                    <Dependency module="income" path="/ordinaryDividends"/> <!-- 1040 line 3b -->
                    <Dependency module="income" path="/taxableIraDistributions"/> <!-- 1040 line 4b -->
                    <Dependency module="income" path="/taxablePensionsAndAnnuities"/> <!-- 1040 line 5b -->
                    <Dependency module="income" path="/capitalGainsOrLosses"/> <!-- 1040 line 7 -->
                    <Dependency module="income" path="/otherIncome"/> <!-- 1040 line 8 -->
                </Add>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityBenefitsWkshtLine16">
            <Name>Social Security Benefits Worksheet Line 16</Name>
            <Description>Per filing status ceilings on when social security benefits will start being taxed. We use the
                SSBW
                from instructions for 1040. There is a similar worksheet in Pub 915 where the line numbers are different
                and
                will confuse you.
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <!-- this case statement handles the early return condition of worksheet line 8 -->
                            <All>
                                <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                                <Not>
                                    <Dependency module="filers" path="/livedApartAllYear"/>
                                </Not>
                            </All>
                        </When>
                        <Then>
                            <Multiply>
                                <Dependency path="/socialSecurityBenefitsWkshtLine7"/>
                                <Dollar>0.85</Dollar>
                            </Multiply>
                        </Then>
                    </Case>
                    <Case>
                        <!-- this case statement handles the early return condition of worksheet line 9. -->
                        <When>
                            <LessThan>
                                <Left>
                                    <!-- if this combined income is less than the filing status ceiling, there is no
                  taxed amount -->
                                    <Dependency path="/socialSecurityBenefitsWkshtLine7"/>
                                </Left>
                                <Right>
                                    <Dependency path="/socialSecurityBenefitsWkshtLine8"/>
                                </Right>
                            </LessThan>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <!-- This case statement handles the conditions where you have not returned early from
            lines 8 or 9-->
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Add>
                                <Multiply>
                                    <Dependency path="/socialSecurityBenefitsWkshtLine11"/>
                                    <Dollar>0.85</Dollar>
                                </Multiply>
                                <LesserOf>
                                    <!-- The result of this LesserOf is line 14-->
                                    <Multiply>
                                        <Dependency path="/socialSecurityBenefits"/>
                                        <Dollar>0.50</Dollar>
                                    </Multiply>
                                    <Multiply>
                                        <!-- the result of this multiply is line 13 -->
                                        <LesserOf>
                                            <!-- The result of this LesserOf is line 12 -->
                                            <Dependency path="/socialSecurityBenefitsWkshtLine9"/>
                                            <Dependency path="/socialSecurityBenefitsWkshtLine10"/>
                                        </LesserOf>
                                        <Dollar>0.50</Dollar>
                                    </Multiply>
                                </LesserOf>
                            </Add>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityBenefitsWkshtLine8">
            <Name>Social Security Benefits Worksheet Line 8</Name>
            <Description>Per filing status ceilings on when social security benefits will start being taxed. We use the
                SSBW
                from instructions for 1040. There is a similar worksheet in Pub 915 where the line numbers are different
                and
                will confuse you.

                Values specified in §86(c)(1).
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <Dollar>32000</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>25000</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityBenefitsWkshtLine9">
            <Name>Social Security Benefits Worksheet Line 9</Name>
            <Description>Per filing status ceilings on when social security benefits will start being taxed. We use the
                SSBW
                from instructions for 1040. There is a similar worksheet in Pub 915 where the line numbers are different
                and
                will confuse you.
            </Description>

            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency path="/socialSecurityBenefitsWkshtLine7"/>
                    </Minuend>
                    <Subtrahends>
                        <Dependency path="/socialSecurityBenefitsWkshtLine8"/>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityBenefitsWkshtLine10">
            <Name>Social Security Benefits Worksheet Line 10</Name>
            <Description>Social Security Benefits Worksheet Line 10

                Values are equal to the difference between the base amount
                specified in §86(c)(1) and the adjusted base amount specified in §86(c)(2).
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <Dollar>12000</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>9000</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityBenefitsWkshtLine11">
            <Name>Social Security Benefits Worksheet Line 11</Name>
            <Description>Social Security Benefits Worksheet Line 11. We use the SSBW from instructions for 1040. There
                is a
                similar worksheet in Pub 915 where the line numbers are different and will confuse you.
            </Description>

            <Derived>
                <GreaterOf>
                    <!-- The result of this GreaterOf is line 11 -->
                    <Dollar>0</Dollar>
                    <Subtract>
                        <Minuend>
                            <Dependency path="/socialSecurityBenefitsWkshtLine9"/>
                        </Minuend>
                        <Subtrahends>
                            <Dependency path="/socialSecurityBenefitsWkshtLine10"/>
                        </Subtrahends>
                    </Subtract>
                </GreaterOf>
            </Derived>
        </Fact>
        <Fact path="/nonTaxableSocialSecurityBenefits">
            <Description>The total nontaxable social security benefits, used for Schedule R line 13a</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency path="/socialSecurityBenefits"/>
                    </Minuend>
                    <Subtrahends>
                        <Dependency path="/taxableSocialSecurityBenefits"/>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityLumpSum">
            <Name>Elect for Social Security Lump Sum</Name>
            <Description>Did you elect to receive your social security in a lump sum?</Description>
            <Derived>
                <False/>
            </Derived>
        </Fact>
        <Fact path="/monthsLivedWithTPInUSOptions">
            <Description>Months lived with TP in US Options</Description>
            <Derived>
                <EnumOptions>
                    <String>twelve</String>
                    <String>eleven</String>
                    <String>ten</String>
                    <String>nine</String>
                    <String>eight</String>
                    <String>seven</String>
                    <String>six</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/familyAndHouseholdSsnEmploymentValidityOptions">
            <Name>SSN Employment Validity Options</Name>
            <Description>Options for SSN Employment validity</Description>
            <Derived>
                <EnumOptions>
                    <String>neither</String>
                    <String>notValid</String>
                    <String>validOnlyWithDhsAuthorizationInEffect</String>
                    <String>validOnlyWithDhsAuthorizationExpired</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/residencyDurationOptions">
            <Name>Residency duration Options</Name>
            <Description>Options for residency duration</Description>
            <Derived>
                <EnumOptions>
                    <String>allYear</String>
                    <String>sixToElevenMonths</String>
                    <String>lessThanSixMonths</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold">
            <Name>Family and Household</Name>
            <Description>The people entered in the family and household section who may qualify as QPs or dependents
            </Description>

            <Writable>
                <Collection/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHouseholdIsDone">
            <Name>Dependents is Done</Name>
            <Description>The user has clicked "Done" for the family and HH section</Description>
            <Export downstreamFacts="true"/>
            <Writable>
                <Boolean/>
            </Writable>
            <Placeholder>
                <False/>
            </Placeholder>
        </Fact>
        <Fact path="/hasIncompleteDependents">
            <Name>Has incomplete dependents</Name>
            <Description>One or more of the dependents entered is incomplete</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/familyAndHousehold/*/isIncomplete"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/existentialFact">
            <Name>First name</Name>
            <Description>Do I exist? Used to detect stale collection references.</Description>
            <Derived>
                <True/>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/firstName">
            <Name>First name</Name>
            <Description>The first name of the dependent. Must match the name as known to the Social Security
                Administration.
            </Description>
            <Export mef="true" stateSystems="true"/>

            <Writable>
                <String/>
                <Limit type="Match">
                    <String>[\sA-Za-z\-]+</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>20</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/writableMiddleInitial">
            <Name>Middle initial</Name>
            <Description>The middle initial of the dependent. Must match the name as known to the Social Security
                Administration. This is the optional writable fact. Please use derived fact in downstream calculations.
            </Description>
            <Writable>
                <String/>
                <Limit type="Match">
                    <String>[\sA-Za-z\-]+</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>1</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/middleInitial">
            <Name>Middle Initial</Name>
            <Description>The middle initial of the dependent. Must match the name as known to the Social Security
                Administration.
            </Description>
            <Export stateSystems="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableMiddleInitial"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../writableMiddleInitial"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <String/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/lastName">
            <Name>Last name</Name>
            <Description>The last name of the dependent. Must match the name as known to the Social Security
                Administration.
            </Description>
            <Export mef="true" stateSystems="true"/>

            <Writable>
                <String/>
                <Limit type="Match">
                    <String>[\sA-Za-z\-]+</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>20</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/lastNameAndSuffix">
            <Description>The last name and suffix of the dependent</Description>
            <Export mef="true"/>
            <Derived>
                <Paste>
                    <Dependency path="../lastName"/>
                    <Dependency path="../suffixString"/>
                </Paste>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/writableSuffix">
            <Description>The suffix of the dependent.</Description>

            <Writable>
                <Enum optionsPath="/suffixOptions"/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/suffixString">
            <Name>Suffix string</Name>
            <Description>The suffix of the dependent as a string for concatenation.</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableSuffix"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <AsString>
                                <Dependency path="../writableSuffix"/>
                            </AsString>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <String/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/suffix">
            <Description>
                The suffix of the dependent. Exported for mef
            </Description>
            <Export mef="true" stateSystems="true"/>

            <Derived>
                <Dependency path="../writableSuffix"/>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/hasIpPin">
            <Name>Dependent Has IP PIN</Name>
            <Description>Whether the dependent has an IP Pin</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/flowIpPinReady">
            <Name>Dependent IP Pin Ready</Name>
            <Description>Whether the TP is ready to input the IP PIN</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/identityPin">
            <Name>Dependent IP Pin</Name>
            <Description>The Identity PIN of the Dependent</Description>
            <Export mef="true"/>

            <Writable>
                <IPPIN/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/fullName">
            <Name>Dependent's full name</Name>
            <Description>
                The full name of the dependent, used for the frontend
            </Description>

            <Derived>
                <Paste>
                    <Dependency path="../firstName"/>
                    <Dependency path="../middleInitial"/>
                    <Dependency path="../lastName"/>
                    <Dependency path="../suffixString"/>
                </Paste>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/mefFullName">
            <Name>Dependent's full name</Name>
            <Description>The full name of the dependent</Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <TruncateNameForMeF>
                    <FirstName>
                        <Dependency path="../firstName"/>
                    </FirstName>
                    <MiddleInitial>
                        <Dependency path="../middleInitial"/>
                    </MiddleInitial>
                    <LastName>
                        <Dependency path="../lastName"/>
                    </LastName>
                    <Suffix>
                        <Dependency path="../suffixString"/>
                    </Suffix>
                </TruncateNameForMeF>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/tinType">
            <Name>TIN type</Name>
            <Description>The type of the dependent's TIN.</Description>

            <Writable>
                <Enum optionsPath="/tinTypeOptions"/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/tinTypeShort">
            <Name>TIN type long</Name>
            <Description>Alias for a dependent's TIN as a separate fact to specifically display the shortened (acronym)
                text.
            </Description>
            <Derived>
                <Dependency path="../tinType"/>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/tinTypeLong">
            <Name>TIN type long</Name>
            <Description>The type of the dependent's TIN as a separate fact to display the full text.</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../tinType"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/tinTypeOptions">ssn</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/tinTypeOptionsLong">ssn</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../tinType"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/tinTypeOptions">itin</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/tinTypeOptionsLong">itin</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../tinType"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/tinTypeOptions">atin</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/tinTypeOptionsLong">atin</Enum>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/hasTinTypeOfNone">
            <Name>TIN type is none</Name>
            <Description>Whether the type of the dependent's TIN is none.</Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../tinType"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/tinTypeOptions">none</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/tin">
            <Name>TIN</Name>
            <Description>The taxpayer identification number of the family or household member. Collected only if the TP
                is
                claiming the
                dependent or claiming them as a qualifying person for a credit. Do *not* ever use `/tin/isSSN` the
                way we might for filers, because we haven't necessarily collected
                the tin at the times we need that test.
                Instead, check the tinType.
            </Description>
            <Export mef="true" stateSystems="true"/>

            <Writable>
                <TIN/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/hasTin">
            <Name>Dependent has TIN</Name>
            <Description>Dependent has provided a TIN</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <IsComplete>
                    <Dependency path="../tin"/>
                </IsComplete>
            </Derived>
        </Fact>
        <Fact path="/familyAndHouseholdWithTins">
            <Name>Dependents with TINs</Name>
            <Description>All dependents who have provided TINs</Description>
            <Derived>
                <Filter path="/familyAndHousehold">
                    <Dependency path="hasTin"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/isTinUnique">
            <Name>Dependent TIN is unique</Name>
            <Description>Is this dependent's TIN unique among dependents and filers?</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <All>
                    <Equal>
                        <Left>
                            <Count>
                                <Equal>
                                    <Left>
                                        <Dependency path="../tin"/>
                                    </Left>
                                    <Right>
                                        <Dependency path="/familyAndHouseholdWithTins/*/tin"/>
                                    </Right>
                                </Equal>
                            </Count>
                        </Left>
                        <Right>
                            <Int>1</Int>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Count>
                                <Equal>
                                    <Left>
                                        <Dependency path="../tin"/>
                                    </Left>
                                    <Right>
                                        <Dependency module="filers" path="/filersWithTins/*/tin"/>
                                    </Right>
                                </Equal>
                            </Count>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/hasInvalidSSN">
            <Name>Dependent's SSN is invalid</Name>
            <Description>Checks whether dependent is declared to have an SSN, but the TIN is not a valid SSN
            </Description>

            <Derived>
                <All>
                    <Dependency path="../hasTin"/>
                    <Equal>
                        <Left>
                            <Dependency path="../tinType"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/tinTypeOptions">ssn</Enum>
                        </Right>
                    </Equal>
                    <Not>
                        <Dependency path="../tin/isSSN"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/hasInvalidITIN">
            <Name>Dependent's ITIN is invalid</Name>
            <Description>Checks whether dependent is declared to have an ITIN, but the TIN is not a valid ITIN
            </Description>

            <Derived>
                <All>
                    <Dependency path="../hasTin"/>
                    <Equal>
                        <Left>
                            <Dependency path="../tinType"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/tinTypeOptions">itin</Enum>
                        </Right>
                    </Equal>
                    <Not>
                        <Dependency path="../tin/isITIN"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/hasInvalidATIN">
            <Name>Dependent's ATIN is invalid</Name>
            <Description>Checks whether dependent is declared to have an ATIN, but the TIN is not a valid ATIN
            </Description>

            <Derived>
                <All>
                    <Dependency path="../hasTin"/>
                    <Equal>
                        <Left>
                            <Dependency path="../tinType"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/tinTypeOptions">atin</Enum>
                        </Right>
                    </Equal>
                    <Not>
                        <Dependency path="../tin/isATIN"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHouseholdHasInvalidTIN">
            <Name>At least one dependent has an invalid TIN</Name>
            <Description>Whether at least one dependent's TIN does not match the format for the type of TIN they were
                declared
                to have
            </Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Any>
                                <Dependency path="/familyAndHousehold/*/hasInvalidSSN"/>
                                <Dependency path="/familyAndHousehold/*/hasInvalidITIN"/>
                                <Dependency path="/familyAndHousehold/*/hasInvalidATIN"/>
                            </Any>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/dateOfBirth">
            <Name>Date of birth</Name>
            <Description>The date of birth of the dependent.</Description>
            <Export stateSystems="true"/>

            <Writable>
                <Day/>
                <Limit type="Max">
                    <Day>2025-01-01</Day>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/yearOfBirth">
            <Name>Year of birth</Name>
            <Description>The year of the dependent's birth</Description>
            <Export mef="true"/>

            <Derived>
                <Dependency path="../dateOfBirth/year"/>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/yearOfBirthSameAsTaxYear">
            <Description>The year of the dependent's birth is the same as the tax year</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency module="constants" path="/taxYear"/>
                    </Left>
                    <Right>
                        <Dependency path="../dateOfBirth/year"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/birthDateIfBornInTaxYear">
            <Description>Date dependent was born if born in the tax year</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../yearOfBirthSameAsTaxYear"/>
                        </When>
                        <Then>
                            <Dependency path="../dateOfBirth"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/deceased">
            <Name>Deceased</Name>
            <Description>Whether the dependent died during the tax year</Description>
            <Export mef="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/deathDateIfDiedInTaxYear">
            <Description>Date dependent died if died in the tax year</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../deceased"/>
                        </When>
                        <Then>
                            <Dependency path="../dateOfDeath"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/mefDeceasedCode">
            <Name>Deceased Code</Name>
            <Description>The MeF code to be set when the dependent is both deceased and does not have a TIN.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="../deceased"/>
                                <Dependency path="../hasTinTypeOfNone"/>
                            </All>
                        </When>
                        <Then>
                            <String>DIED</String>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/bornAndDiedInTaxYearWithoutTin">
            <Description>
                The person was born and died in the tax year, and never received a TIN. This person is not supported
                by direct file.

                In future years, we will have to submit binary attachments along with this person and set the
                DiedLiteralCd in MeF
            </Description>

            <Derived>
                <All>
                    <!-- The person was born in the tax year-->
                    <Equal>
                        <Left>
                            <Dependency module="constants" path="/taxYear"/>
                        </Left>
                        <Right>
                            <Dependency path="../dateOfBirth/year"/>
                        </Right>
                    </Equal>
                    <!-- The person died in the tax year -->
                    <Dependency path="../deceased"/>
                    <!-- The person does not a have a TIN -->
                    <Dependency path="../hasTinTypeOfNone"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/dependentWhoWasBornAndDiedInTaxYearWithoutTin">
            <Description>
                The family/household member who caused the born and died in TY knockout
            </Description>
            <Derived>
                <IndexOf>
                    <Collection>
                        <Filter path="/familyAndHousehold">
                            <Dependency path="bornAndDiedInTaxYearWithoutTin"/>
                        </Filter>
                    </Collection>
                    <Index>
                        <Int>0</Int>
                    </Index>
                </IndexOf>
            </Derived>
        </Fact>
        <Fact path="/knockoutPersonBornAndDiedInTaxYearWithoutTin">
            <Description>
                We should knockout the user because one of their family and household was born and died in the tax
                year without a TIN.
            </Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/familyAndHousehold/*/bornAndDiedInTaxYearWithoutTin"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/notDeceased">
            <Name>Not Deceased</Name>
            <Description>Whether the dependent did not die during the tax year</Description>
            <Export mef="true"/>

            <Derived>
                <Not>
                    <Dependency path="../deceased"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/dateOfDeath">
            <Name>Date of death</Name>
            <Description>The date on which the person died</Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Day/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/age">
            <Name>Age</Name>
            <Description>The age of the dependent at the end of the tax year.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency module="constants" path="/taxYear"/>
                    </Minuend>
                    <Subtrahends>
                        <Dependency path="../dateOfBirth/year"/>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/studentStatusMayAffectBenefits">
            <Description>
                Whether the dependent is older than 18 and under 24 at the end of the year. In the future, when we
                support more tax credits, we may want to ask this of everyone.
            </Description>

            <Derived>
                <All>
                    <GreaterThan>
                        <Left>
                            <Dependency path="../age"/>
                        </Left>
                        <Right>
                            <Int>18</Int>
                        </Right>
                    </GreaterThan>
                    <LessThan>
                        <Left>
                            <Dependency path="../age"/>
                        </Left>
                        <Right>
                            <Int>24</Int>
                        </Right>
                    </LessThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/disabilityStatusMayAffectBenefits">
            <Description>
                Disability status is used to qualify someone as a dependent, passing the age test. E.g. Even if a
                person is 99 years old, they can still pass the age test to be a qualifying child.

                A disabled person may also be
                eligible to be claimed for a benefit split. Therefore we need to ask about disability status whenever:
                1. The
                person is 18.5 or older, so they may be eligible for the benefit split due to disability
                2. The person is not
                18.5, but they are younger than the filer (or spouse if MFJ)
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <GreaterThanOrEqual>
                        <Left>
                            <Dependency path="../ageAtFirstHalfOfYear"/>
                        </Left>
                        <Right>
                            <Int>18</Int>
                        </Right>
                    </GreaterThanOrEqual>
                    <All>
                        <LessThan>
                            <Left>
                                <Dependency path="../ageAtFirstHalfOfYear"/>
                            </Left>
                            <Right>
                                <Int>18</Int>
                            </Right>
                        </LessThan>
                        <LessThan>
                            <Left>
                                <Dependency path="../dateOfBirth"/>
                            </Left>
                            <Right>
                                <Dependency module="filers" path="/minimumFilerDateOfBirth"/>
                            </Right>
                        </LessThan>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/isClaimedPersonOrEligibleByBenefitSplit">
            <Description>
                The person has been claimed if they are claimable, or the TP
                is eligible to use them for benefits
                based on a benefit split
            </Description>

            <Derived>
                <Any>
                    <All>
                        <Dependency module="dependentsBenefitSplit" path="../tpCanClaimSplitBenefitsHohEitcCdcc"/>
                        <Dependency module="dependentsBenefitSplit" path="../eligibleForBenefitSplit"/>
                    </All>
                    <Dependency path="../isClaimedDependent"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/cdccNonDependentQualifyingPerson">
            <Description>
                A non-dependent who qualifies for CDCC
            </Description>

            <Derived>

                <Any>
                    <!--     Non-dependent eligible for special benefits split     -->
                    <All>
                        <Dependency path="../qualifyingChild"/>
                        <Dependency module="dependentsBenefitSplit" path="../tpCanClaimSplitBenefitsHohEitcCdcc"/>
                        <Dependency module="dependentsBenefitSplit" path="../eligibleForBenefitSplit"/>
                        <Not>
                            <Dependency path="../isClaimedDependent"/>
                        </Not>
                        <Any>
                            <LessThan>
                                <Left>
                                    <Dependency path="../age"/>
                                </Left>
                                <Right>
                                    <Int>13</Int>
                                </Right>
                            </LessThan>
                            <Dependency path="../cdccTurnedThirteenAfterJanFirst"/>
                        </Any>
                    </All>
                    <!--     Non-dependent who lived with you incapable of self-care and not necessarily a qualifying child     -->
                    <All>
                        <Dependency path="../residencyTest"/>
                        <Dependency path="../unableToCareForSelf"/>
                        <Dependency module="dependentsBenefitSplit" path="../tpCanClaimSplitBenefitsHohEitcCdcc"/>
                        <Dependency module="dependentsBenefitSplit" path="../eligibleForBenefitSplit"/>
                        <Not>
                            <Dependency path="../isClaimedDependent"/>
                        </Not>
                    </All>
                    <!-- A person incapable of self-care who could be claimed except for:
          * The joint return test
          * Gross income test
          * TP may be claimed as a dependent of another TP.

          Below is the definitions of an eligible dependent with removal of requirements for the above conditions
         -->
                    <All>
                        <Not>
                            <Dependency path="../eligibleDependent"/>
                        </Not>
                        <Dependency path="../unableToCareForSelf"/>
                        <Dependency path="../citizenOrResidentTest"/>
                        <Dependency path="../residencyTest"/>
                        <NotEqual>
                            <Left>
                                <Dependency path="../tinType"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/tinTypeOptions">none</Enum>
                            </Right>
                        </NotEqual>
                        <Any>
                            <!-- qualifying child -->
                            <All>
                                <Dependency module="dependentsRelationship" path="../qcRelationshipTest"/>
                                <Dependency path="../ageTest"/>
                                <Dependency path="../qcSupportTest"/>
                            </All>
                            <!--  qualifying relative  -->
                            <All>
                                <Dependency path="../notQualifyingChildTest"/>
                                <Dependency path="../relationshipMemberOfHouseholdTest"/>
                                <Dependency path="../qrSupportTest"/>
                            </All>
                        </Any>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/cdccCannotHaveParentAsCareProvider">
            <Description>A child for whom the parent cannot be listed as care provider. If a child is biological,
                adopted, or
                a foster child, and under 13 years old, then they cannot have a parent listed as care provider.
            </Description>

            <Derived>
                <All>
                    <Dependency path="../cdccQualifyingPerson"/>
                    <Dependency path="../isBiologicalAdoptedFosterOrStepchild"/>
                    <LessThan>
                        <Left>
                            <Dependency path="../ageOnJanFirst"/>
                        </Left>
                        <Right>
                            <Int>13</Int>
                        </Right>
                    </LessThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/cdccOrEitcNonDependentQualifyingPerson">
            <Description>
                A non-dependent who qualifies for CDCC and/or EITC. Used to determine showing tin/pin info in Family
                and HH.
            </Description>

            <Derived>
                <Any>
                    <Dependency path="../cdccNonDependentQualifyingPerson"/>
                    <Dependency path="../isEITCQCUnclaimedDependent"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/cdccNonDependentQualifyingPeopleAssignedTins">
            <Description>
                The set of non-dependent people, added in the family + HH section, who may qualify for the Child and
                Dependent Care Credit for whom we may still need to collect a TIN (or PIN if provided). They did
                indicate in the
                Family and Household subsection that they have a tin (assigned by the government). This is used to
                determine
                whether to collect a TIN and PIN later in the application if needed.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Filter path="/familyAndHousehold">
                    <All>
                        <Dependency path="cdccNonDependentQualifyingPerson"/>
                        <Not>
                            <Dependency path="hasTinTypeOfNone"/>
                        </Not>
                    </All>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/cdccNonDependentQualifyingPeopleTinsPinsSaved">
            <Description>
                The set of non-dependent people, added in the family + HH section, who qualify for the Child and
                Dependent Care Credit for whom we have collected a TIN (or PIN if provided).
            </Description>

            <Derived>
                <Filter path="/cdccNonDependentQualifyingPeopleAssignedTins">
                    <All>
                        <Dependency path="hasTin"/>
                        <IsComplete>
                            <Dependency path="hasIpPin"/>
                        </IsComplete>
                        <Any>
                            <All>
                                <Dependency path="hasIpPin"/>
                                <Dependency path="flowIpPinReady"/>
                                <IsComplete>
                                    <Dependency path="identityPin"/>
                                </IsComplete>
                            </All>
                            <Not>
                                <Dependency path="hasIpPin"/>
                            </Not>
                        </Any>
                    </All>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/cdccNonDepQpTinsSavedNotZero">
            <Description>
                There is at least one CDCC nondependent qualifying person for whom we have collected a TIN (or PIN if
                provided).
                Used for conditionally showing content.
            </Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/cdccNonDependentQualifyingPeopleTinsPinsSaved"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/cdccNonDependentQualifyingPeopleTinsPinsNeeded">
            <Description>
                The set of non-dependent people, added in the family + HH section, who qualify for the Child and
                Dependent Care Credit for whom we have not yet collected a TIN (or PIN if provided).
            </Description>

            <Derived>
                <Filter path="/cdccNonDependentQualifyingPeopleAssignedTins">
                    <Any>
                        <Not>
                            <Dependency path="hasTin"/>
                        </Not>
                        <Not>
                            <IsComplete>
                                <Dependency path="hasIpPin"/>
                            </IsComplete>
                        </Not>
                        <All>
                            <Dependency path="hasIpPin"/>
                            <Not>
                                <Dependency path="flowIpPinReady"/>
                            </Not>
                        </All>
                        <All>
                            <Dependency path="hasIpPin"/>
                            <Dependency path="flowIpPinReady"/>
                            <Not>
                                <IsComplete>
                                    <Dependency path="identityPin"/>
                                </IsComplete>
                            </Not>
                        </All>
                    </Any>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/cdccNonDepQpTinsNoneToCollect">
            <Description>
                Whether there are no TINs (or IP PINs if needed) to collect for non-dependent people who qualify for
                the Child and
                Dependent Care Credit.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Equal>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/cdccNonDependentQualifyingPeopleTinsPinsNeeded"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/hasExactlyOneCdccNonDepQpTinNeeded">
            <Description>
                TP has only one CDCC non-dependent qualifying person who was assigned a tin.
            </Description>

            <Derived>
                <All>
                    <Equal>
                        <Left>
                            <CollectionSize>
                                <Dependency path="/cdccNonDependentQualifyingPeopleTinsPinsNeeded"/>
                            </CollectionSize>
                        </Left>
                        <Right>
                            <Int>1</Int>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/personCouldQualifyTPForCdcc">
            <Description>
                Whether or not this person could qualify the taxpayer for the CDCC. Pending the taxpayer electing to
                claim then as a
                dependent.
            </Description>
            <Derived>
                <All>
                    <Dependency module="filers" path="/filersCouldQualifyForCdcc"/>
                    <Any>
                        <!-- A QC who is a dependent and was under age 13 when care provided -->
                        <All>
                            <Dependency path="../qualifyingChild"/>
                            <Any>
                                <LessThan>
                                    <Left>
                                        <Dependency path="../age"/>
                                    </Left>
                                    <Right>
                                        <Int>13</Int>
                                    </Right>
                                </LessThan>
                                <Dependency path="../cdccTurnedThirteenAfterJanFirst"/>
                            </Any>
                        </All>
                        <!-- Or a dependent who lived with you incapable of self-care -->
                        <All>
                            <Dependency path="../residencyTest"/>
                            <Dependency path="../unableToCareForSelf"/>
                        </All>
                        <!-- Or a person incapable of self-care who is not claimable as a dependent or a person not claimed but who qualifies through special benefits split -->
                        <Dependency path="../cdccNonDependentQualifyingPerson"/>
                    </Any>
                </All>
            </Derived>

        </Fact>
        <Fact path="/familyAndHousehold/*/cdccQualifyingPerson">
            <Description>
                This person qualifies the taxpayer for CDCC
            </Description>

            <Derived>
                <All>
                    <!--
            We need this to ensure that a filer going back to update their dependents doesn't get hit with a knockout they can't view
            https://git.irslabs.org/irslabs-prototypes/direct-file/-/issues/14186

            TODO: We need a more reliable way to avoid triggering knockouts in inaccessible parts of the flow
          -->
                    <IsComplete>
                        <Dependency path="../isClaimedIfClaimable"/>
                    </IsComplete>

                    <Dependency path="../isClaimedIfClaimable"/>
                    <Any>
                        <!-- A QC who is a dependent and was under age 13 when care provided -->
                        <All>
                            <Dependency path="../qualifyingChild"/>
                            <Dependency path="../isClaimedDependent"/>
                            <Any>
                                <LessThan>
                                    <Left>
                                        <Dependency path="../age"/>
                                    </Left>
                                    <Right>
                                        <Int>13</Int>
                                    </Right>
                                </LessThan>
                                <Dependency path="../cdccTurnedThirteenAfterJanFirst"/>
                            </Any>
                        </All>
                        <!-- Or a dependent who lived with you incapable of self-care -->
                        <All>
                            <Dependency path="../residencyTest"/>
                            <Dependency path="../isClaimedDependent"/>
                            <Dependency path="../unableToCareForSelf"/>
                        </All>
                        <!-- Or a person incapable of self-care who is not claimable as a dependent or a person not claimed but who qualifies through special benefits split -->
                        <Dependency path="../cdccNonDependentQualifyingPerson"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccQualifyingPeople">
            <Description>
                The set of people, added in the family + HH section, who may qualify
                for the Child and Dependent Care
                Credit.
            </Description>

            <Derived>
                <Filter path="/familyAndHousehold">
                    <Dependency path="cdccQualifyingPerson"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/cdccQualifyingNonFilersCount">
            <Description>Count of Qualifying Persons for CDCC that are not filers</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <CollectionSize>
                    <Dependency path="/cdccQualifyingPeople"/>
                </CollectionSize>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/unableToCareForSelf">
            <Description>
                The person was physically or mentally unable to care for themselves
            </Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/unableToCareForSelfAndOverAge12">
            <Description>Household member is over age 12 and unable to care for themselves. Used for CDCC qualification,
                pdf,
                and mef.
            </Description>
            <Export mef="true"/>

            <Derived>
                <All>
                    <Dependency path="../unableToCareForSelf"/>
                    <GreaterThanOrEqual>
                        <Left>
                            <Dependency path="../age"/>
                        </Left>
                        <Right>
                            <Int>13</Int>
                        </Right>
                    </GreaterThanOrEqual>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/cdccExpensesCollected">
            <Description>
                We have collected expenses for CDCC if required. Used to test completion of the CDCC QP loop.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <Not>
                        <!-- Nothing to collect if they said they have no expenses overall -->
                        <Dependency module="cdcc" path="/cdccMaybeHasQualifyingExpenses"/>
                    </Not>
                    <!-- Nothing to collect if they said the qp didn't have qualified care expenses -->
                    <Not>
                        <Dependency path="../cdccHasDependentCareExpenses"/>
                    </Not>
                    <!-- Nothing to collect if they said the qp didn't have expenses paid to a qualified care provider -->
                    <All>
                        <Dependency path="../cdccHasDependentCareExpenses"/>
                        <Not>
                            <Dependency path="../cdccHadExpensesPaidToQualifyingProvider"/>
                        </Not>
                    </All>
                    <!-- Or if we were collecting, let's make sure it's a complete amount-->
                    <IsComplete>
                        <Dependency path="../cdccQualifyingExpenseAmount"/>
                    </IsComplete>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/cdccQualifyingExpenseAmount">
            <Name>Qualifying Expense Amount for CDCC</Name>
            <Description>
                Amount of qualifying expenses paid for this qualifying person.
                Only applies if the person is a CDCC QP
            </Description>
            <Export mef="true" downstreamFacts="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../cdccHasQualifyingExpenses"/>
                        </When>
                        <Then>
                            <Round>
                                <Dependency path="../writableCdccQualifyingExpenseAmount"/>
                            </Round>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Not>
                                <Dependency path="../cdccHasQualifyingExpenses"/>
                            </Not>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/writableCdccQualifyingExpenseAmount">
            <Name>Qualifying Expense Amount for CDCC</Name>
            <Description>
                Amount of qualifying expenses paid for this qualifying person.
                Only applies if the person is a CDCC QP
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/cdccHasDependentCareExpenses">
            <Description>
                Whether the QP has qualifying dependent care expenses
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/cdccHadExpensesPaidToQualifyingProvider">
            <Description>
                Whether the QP's expenses were paid to a qualified provider
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/cdccHasQualifyingExpenses">
            <Description>
                Whether the dependent had expenses that were qualifying
                and paid to a qualified provider
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="../cdccHasDependentCareExpenses"/>
                    <Dependency path="../cdccHadExpensesPaidToQualifyingProvider"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/ageUnderNineteen">
            <Name>Under Age 19</Name>
            <Description>Whether or not the dependent is under the age of 19</Description>

            <Export mef="true"/>
            <Derived>
                <LessThan>
                    <Left>
                        <Dependency path="../age"/>
                    </Left>
                    <Right>
                        <Int>19</Int>
                    </Right>
                </LessThan>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/isBornOnJanFirst">
            <Description>Whether the dependent was born on January 1st of the tax year.</Description>
            <Derived>
                <All>
                    <Equal>
                        <Left>
                            <Dependency path="../dateOfBirth/month"/>
                        </Left>
                        <Right>
                            <Int>1</Int>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../dateOfBirth/day"/>
                        </Left>
                        <Right>
                            <Int>1</Int>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/ageOnJanFirst">
            <Description>The age of the dependent on January 1st of the tax year, assuming if born on that day their age
                is
                incremented on that day
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../isBornOnJanFirst"/>
                        </When>
                        <Then>
                            <Dependency path="../age"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Subtract>
                                <Minuend>
                                    <Dependency path="../age"/>
                                </Minuend>
                                <Subtrahends>
                                    <Int>1</Int>
                                </Subtrahends>
                            </Subtract>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/cdccTurnedThirteenAfterJanFirst">
            <Description>Whether the dependent turned 13 after Jan 1st in the tax year as required for CDCC conditions
            </Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="../isBornOnJanFirst"/>
                    </Not>
                    <Equal>
                        <Left>
                            <Dependency path="../age"/>
                        </Left>
                        <Right>
                            <Int>13</Int>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccNonFilerQpsWhoTurned13InTaxYear">
            <Description>The collection of cdcc qualified people who turned thirteen after January 1 of the tax year
            </Description>

            <Derived>
                <Filter path="/cdccQualifyingPeople">
                    <Dependency path="cdccTurnedThirteenAfterJanFirst"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/cdccNonFilerQpsWhoTurned13InTaxYearAbleToCareForSelf">
            <Description>The collection of cdcc qualified people who turned thirteen after January 1 of the tax year who
                were
                not unable to care for themselves. Used to determine conditional content for what expenses to exclude.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Filter path="/cdccQualifyingPeople">
                    <All>
                        <Dependency path="cdccTurnedThirteenAfterJanFirst"/>
                        <Not>
                            <Dependency path="unableToCareForSelf"/>
                        </Not>
                    </All>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/cdccNonFilerQcsWhoTurned13InTaxYearUnableToCareForSelf">
            <Description>The collection of cdcc-qualified qualifying children who turned thirteen after January 1 of the
                tax
                year who were
                unable to care for themselves. Used to determine conditional content for what expenses to exclude.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Filter path="/cdccQualifyingPeople">
                    <All>
                        <Dependency path="cdccTurnedThirteenAfterJanFirst"/>
                        <Dependency path="unableToCareForSelf"/>
                        <Dependency path="qualifyingChild"/>
                    </All>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/unableToCareForSelfAndNotQcUnderAge13">
            <Description>
                The HH member was unable to care for themselves and was not
                qualifying child under age 13. Used to
                determine conditional content for what expenses to include.
            </Description>

            <Derived>
                <All>
                    <Dependency path="../unableToCareForSelf"/>
                    <!-- If they are a qc under age 13, we know all expenses qualify regardless of ability to care for self.
            They could still be a qualifying relative under age 13 -->
                    <Not>
                        <All>
                            <Dependency path="../qualifyingChild"/>
                            <LessThan>
                                <Left>
                                    <Dependency path="../age"/>
                                </Left>
                                <Right>
                                    <Int>13</Int>
                                </Right>
                            </LessThan>
                        </All>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccNonFilerQpsWhoWereUnableToCareForSelfAndNotQcUnderAge13">
            <Description>
                The collection of CDCC qualified people who were unable to care for themselves and were not
                qualifying children under age 13. This collection also does not include Qcs who turned 13 in the tax
                year.
                Used
                to determine
                conditional content for what expenses to include.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Filter path="/cdccQualifyingPeople">
                    <All>
                        <Dependency path="unableToCareForSelfAndNotQcUnderAge13"/>
                        <!--    Not QC who was unable to care for self and turned 13 in the tax year    -->
                        <All>
                            <Dependency path="unableToCareForSelf"/>
                            <Not>
                                <All>
                                    <Dependency path="qualifyingChild"/>
                                    <Dependency path="cdccTurnedThirteenAfterJanFirst"/>
                                </All>
                            </Not>
                        </All>
                    </All>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/ageAtFirstHalfOfYear">
            <Description>The age of the dependent for the majority of the year, i.e. their age on July 2. Note that July
                2
                works regardless of whether it is a leap year or not.
            </Description>
            <Export downstreamFacts="true"/>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Any>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../dateOfBirth/month"/>
                                    </Left>
                                    <Right>
                                        <Int>7</Int>
                                    </Right>
                                </GreaterThan>
                                <All>
                                    <Equal>
                                        <Left>
                                            <Dependency path="../dateOfBirth/month"/>
                                        </Left>
                                        <Right>
                                            <Int>7</Int>
                                        </Right>
                                    </Equal>
                                    <GreaterThan>
                                        <Left>
                                            <Dependency path="../dateOfBirth/day"/>
                                        </Left>
                                        <Right>
                                            <Int>2</Int>
                                        </Right>
                                    </GreaterThan>
                                </All>
                            </Any>
                        </When>
                        <Then>
                            <Subtract>
                                <Minuend>
                                    <Dependency path="../age"/>
                                </Minuend>
                                <Subtrahends>
                                    <Int>1</Int>
                                </Subtrahends>
                            </Subtract>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="../age"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/youngerThanEighteenAtEndOfYear">
            <Name>Younger than eighteen at end of year</Name>
            <Description>Whether the dependent is younger than 18 at the end of the year.</Description>

            <Derived>
                <LessThan>
                    <Left>
                        <Dependency path="../age"/>
                    </Left>
                    <Right>
                        <Int>18</Int>
                    </Right>
                </LessThan>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/flowShowParentHelpText">
            <Name>Flow show parent help text</Name>
            <Description>Whether to show parent help text in the flow</Description>

            <Derived>
                <All>
                    <Dependency path="../qualifyingChild"/>
                    <Any>
                        <Equal>
                            <Left>
                                <Dependency module="dependentsRelationship" path="../relationship"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/relationshipOptions">biologicalChild</Enum>
                            </Right>
                        </Equal>
                        <Dependency path="../childIsAdopted"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/childIsFosterOrAdopted">
            <Description>Whether a dependent is at least one of: foster or adopted child of TP</Description>

            <Derived>
                <All>
                    <Any>
                        <Equal>
                            <Left>
                                <Dependency module="dependentsRelationship" path="../relationship"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/relationshipOptions">fosterChild</Enum>
                            </Right>
                        </Equal>
                        <Dependency path="../childIsAdopted"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/xmlIsClaimedChildLivingWithTP">
            <Name>Is claimed child living with taxpayer</Name>
            <Description>Is the dependent considered a child living with and claimed by the taxpayer? Used in the 1040
                XML.
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../isClaimedDependent"/>
                                </IsComplete>
                                <Dependency path="../isClaimedDependent"/>
                                <Any>
                                    <Equal>
                                        <Left>
                                            <Dependency module="dependentsRelationship" path="../xmlRelationship"/>
                                        </Left>
                                        <Right>
                                            <String>DAUGHTER</String>
                                        </Right>
                                    </Equal>
                                    <Equal>
                                        <Left>
                                            <Dependency module="dependentsRelationship" path="../xmlRelationship"/>
                                        </Left>
                                        <Right>
                                            <String>GRANDCHILD</String>
                                        </Right>
                                    </Equal>
                                    <Equal>
                                        <Left>
                                            <Dependency module="dependentsRelationship" path="../xmlRelationship"/>
                                        </Left>
                                        <Right>
                                            <String>STEPCHILD</String>
                                        </Right>
                                    </Equal>
                                </Any>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/xmlIsClaimedOtherDependent">
            <Name>Is claimed other dependent</Name>
            <Description>Is the dependent considered an other dependent and claimed by the taxpayer? Used in the 1040
                XML.
            </Description>

            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="../isClaimedDependent"/>
                    </IsComplete>
                    <Dependency path="../isClaimedDependent"/>
                    <Not>
                        <Dependency path="../xmlIsClaimedChildLivingWithTP"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/xmlClaimedChildWhoLivedWithYouCount">
            <Name>Claimed child who lived with you count</Name>
            <Description>A count of the child who lived with and are claimed by the taxpayer. Used in the 1040 XML.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Count>
                    <Dependency path="/familyAndHousehold/*/xmlIsClaimedChildLivingWithTP"/>
                </Count>
            </Derived>
        </Fact>
        <Fact path="/xmlClaimedOtherDependentsListedCount">
            <Name>Claimed other dependents listed count</Name>
            <Description>A count of the other dependents claimed by the taxpayer. Used in the 1040 XML.</Description>
            <Export mef="true"/>

            <Derived>
                <Count>
                    <Dependency path="/familyAndHousehold/*/xmlIsClaimedOtherDependent"/>
                </Count>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/fullTimeStudent">
            <Name>Full-time student</Name>
            <Description>Is the dependent a full-time student?</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/permanentTotalDisability">
            <Name>Permanent and total disability</Name>
            <Description>Is the dependent permanently and totally disabled? We intentionally do not AND this with
                "../disabilityStatusMayAffectBenefits" in our MeF export, as that would mark people as "not disabled"
                when the
                app simply did not ask them about their disability status.
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/ageTest">
            <Name>Age test</Name>
            <Description>Does the dependent pass the Age test to be a qualifying child?</Description>

            <Derived>
                <Any>
                    <All>
                        <LessThan>
                            <Left>
                                <Dependency path="../age"/>
                            </Left>
                            <Right>
                                <Int>19</Int>
                            </Right>
                        </LessThan>
                        <GreaterThan>
                            <Left>
                                <Dependency path="../dateOfBirth"/>
                            </Left>
                            <Right>
                                <Dependency module="filers" path="/minimumFilerDateOfBirth"/>
                            </Right>
                        </GreaterThan>
                    </All>
                    <Dependency path="../isAStudentUnder24"/>
                    <All>
                        <Dependency path="../permanentTotalDisability"/>
                        <Dependency path="../disabilityStatusMayAffectBenefits"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/residencyDuration">
            <Name>Residency duration</Name>
            <Description>What portion of the year did the dependent live with you?</Description>
            <Export stateSystems="true"/>

            <Writable>
                <Enum optionsPath="/residencyDurationOptions"/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/residencyTest">
            <Name>Residency test</Name>
            <Description>Did the dependent live with you for more than half the year? Used for dependents other than
                QSS.
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <NotEqual>
                    <Left>
                        <Dependency path="../residencyDuration"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/residencyDurationOptions">lessThanSixMonths</Enum>
                    </Right>
                </NotEqual>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/qssPersonResidencyTest">
            <Name>Residency test</Name>
            <Description>Did the dependent live with you for the whole year? This is the rule for QSS Persons. See
                https://www.irs.gov/publications/p501
            </Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../residencyDuration"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/residencyDurationOptions">allYear</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/flowAddPersonKeepingUpHome">
            <Name>Need to show screen AddPersonKeepingUpHome</Name>
            <Description>
                Flow variable for screen AddPersonKeepingUpHome.

                We only show this when
                * the TP is trying to qualify
                for HoH and QSS, and the person is still eligible as
                HohQualifyingPerson or QSSQualifyingPerson
                * OR the filer is
                MFS, could potentially be considered unmarried for
                the purposes of Form 2441, and this person could be a
                qualifying person
            </Description>

            <Derived>
                <Any>
                    <All>
                        <!-- We need to know this if the for MFS filers that could claim this person for CDCC -->
                        <Dependency module="filers" path="/mfsFilerCouldBeConsiderUnmarriedForCdcc"/>
                        <Dependency path="../cdccQualifyingPerson"/>
                    </All>
                    <All>
                        <Any>
                            <Dependency module="filers" path="/filerCouldQualifyForHoh"/>
                            <Dependency module="filers" path="/filerCouldQualifyForQss"/>
                        </Any>
                        <Any>
                            <Dependency module="dependentsRelationship" path="../qcRelationshipTest"/>
                            <All>
                                <Dependency module="dependentsRelationship" path="../qrRelationshipTest"/>
                                <Any>
                                    <Equal>
                                        <Left>
                                            <Dependency path="../residencyDuration"/>
                                        </Left>
                                        <Right>
                                            <Enum optionsPath="/residencyDurationOptions">sixToElevenMonths</Enum>
                                        </Right>
                                    </Equal>
                                    <Equal>
                                        <Left>
                                            <Dependency path="../residencyDuration"/>
                                        </Left>
                                        <Right>
                                            <Enum optionsPath="/residencyDurationOptions">allYear</Enum>
                                        </Right>
                                    </Equal>
                                </Any>
                            </All>
                        </Any>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/flowAddPersonKeepingUpParentsHome">
            <Name>Need to show screen AddPersonKeepingUpParentsHome</Name>
            <Description>Flow variable for screen AddPersonKeepingUpParentsHome</Description>
            <Derived>
                <All>
                    <Dependency module="filers" path="/filerCouldQualifyForHoh"/>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">parent</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../residencyDuration"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/residencyDurationOptions">lessThanSixMonths</Enum>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/flowAddPersonSsnValidForWork">
            <Name>Need to show screen AddPersonSsnValidForWork</Name>
            <Description>We only ask this question if the dependent is still on track for being either a qualfiying
                child for
                CTC or a qualifying child for EITC
            </Description>

            <Derived>
                <All>
                    <!-- These three criteria are the QC criteria we've already asked -->
                    <Dependency path="../residencyTest"/>
                    <Dependency module="dependentsRelationship" path="../qcRelationshipTest"/>
                    <Dependency path="../ageTest"/>
                    <Equal>
                        <Left>
                            <Dependency path="../tinType"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/tinTypeOptions">ssn</Enum>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/married">
            <Name>Married</Name>
            <Description>Is the dependent married?</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/writableJointReturn">
            <Name>Filing a joint return</Name>
            <Description>Are the dependent and their spouse filing a joint return?</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/jointReturn">
            <Name>Filing a joint return</Name>
            <Description>Are the dependent and their spouse filing a joint return?</Description>

            <Derived>
                <All>
                    <Dependency path="../married"/>
                    <Dependency path="../writableJointReturn"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/writableRequiredToFile">
            <Description>
                Are the dependent and their spouse required to file?
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/requiredToFile">
            <Description>
                Are the dependent and their spouse required to file?
            </Description>

            <Derived>
                <All>
                    <Dependency path="../married"/>
                    <Dependency path="../jointReturn"/>
                    <Dependency path="../writableRequiredToFile"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/writableFilingOnlyForRefund">
            <Name>Filing only for refund</Name>
            <Description>Are the dependent and their spousefiling a return only to claim a refund of income tax withheld
                or
                estimated tax paid?
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/filingOnlyForRefund">
            <Name>Filing only for refund</Name>
            <Description>Are the dependent and their spousefiling a return only to claim a refund of income tax withheld
                or
                estimated tax paid?
            </Description>

            <Derived>
                <All>
                    <Dependency path="../married"/>
                    <Dependency path="../jointReturn"/>
                    <Dependency path="../writableFilingOnlyForRefund"/>

                    <!-- We only ask either requiredToFile or filingOnlyForRefund, so if required to file is complete and true, we
          know this is false. Using the <All> below basically as parens -->
                    <All>
                        <IsComplete>
                            <Dependency path="../requiredToFile"/>
                        </IsComplete>
                        <Not>
                            <Dependency path="../requiredToFile"/>
                        </Not>
                    </All>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/jointReturnTest">
            <Name>Joint Return test</Name>
            <Description>Does the dependent pass the Joint Return test to be a qualifying child?</Description>

            <Derived>
                <Any>
                    <Not>
                        <Dependency path="../married"/>
                    </Not>
                    <Not>
                        <Dependency path="../jointReturn"/>
                    </Not>
                    <All>
                        <Dependency path="../filingOnlyForRefund"/>
                        <Not>
                            <Dependency path="../requiredToFile"/>
                        </Not>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/flowShowQcSupportTest">
            <Name>Flow should show QC support test.</Name>
            <Description>Used by the flow to decide whether to show screens to run the support test for the qualifying
                child.
                Comes before the joint return test.
            </Description>
            <Derived>
                <All>
                    <Dependency module="dependentsRelationship" path="../qcRelationshipTest"/>
                    <Dependency path="../ageTest"/>
                    <Dependency path="../residencyTest"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/qualifyingChild">
            <Name>Qualifying child</Name>
            <Description>Does the dependent pass all five qualifying child tests?</Description>
            <Export stateSystems="true"/>

            <Derived>
                <All>
                    <Dependency module="dependentsRelationship" path="../qcRelationshipTest"/>
                    <Dependency path="../ageTest"/>
                    <Dependency path="../residencyTest"/>
                    <Dependency path="../qcSupportTest"/>
                    <Dependency path="../jointReturnTest"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/eitcRelAgeResJointTest">
            <Name>EITC relationship age residency and joint return test</Name>
            <Description>Determines whether a dependent passes the relationship, age, residency and joint return test
            </Description>

            <Derived>
                <All>
                    <Dependency module="dependentsRelationship" path="../qcRelationshipTest"/>
                    <Dependency path="../ageTest"/>
                    <Dependency path="../livedWithTpInUsMostOfYear"/>
                    <Dependency path="../jointReturnTest"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/atLeastOneChildCanBeQCOfAnother">
            <Name>At least one child can be QC of another</Name>
            <Description>At least one child can be the qualifying child of another</Description>

            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <Count>
                            <Dependency path="/familyAndHousehold/*/isQualifyingChildOfAnother"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/atLeastOneChildFailsEitcRelAgeResJointTest">
            <Name>At least one child is disqualified because of relationship age residency or joint return
                test
            </Name>
            <Description>Whether at least one child is disqualified because of relationship, age, residency, or joint
                return
                test for EITC
            </Description>
            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <Count>
                            <Not>
                                <Dependency path="/familyAndHousehold/*/eitcRelAgeResJointTest"/>
                            </Not>
                        </Count>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/personQualifiesTPforEitc">
            <Description>
                The family member can be a QP for EITC, and the TP is eligible to receive EITC
            </Description>

            <Derived>
                <All>
                    <Dependency path="../eitcQualifyingChild"/>
                    <Dependency module="filers" path="/filersCouldQualifyForEitc"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/personQualifiesTPforCdcc">
            <Description>
                The household member can be a QP for CDCC, and the TP is eligible to receive CDCC
            </Description>

            <Derived>
                <All>
                    <Dependency path="../cdccQualifyingPerson"/>
                    <Dependency module="filers" path="/filersCouldQualifyForCdcc"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/personQualifiesTPforHoH">
            <Description>
                The household member can be a QP for HoH, and the TP is eligible to have a filing status of HoH
            </Description>

            <Derived>
                <All>
                    <Dependency path="../hohQualifyingPerson"/>
                    <Dependency module="filers" path="/filerCouldQualifyForHoh"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/personQualifiesTPforQss">
            <Description>
                The TP can be a QP for QSS, and the TP is eligible to have a filing status of QSS
            </Description>

            <Derived>
                <All>
                    <Dependency path="../qssQualifyingPerson"/>
                    <Dependency module="filers" path="/filerCouldQualifyForQss"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/eitcQualifyingChild">
            <Name>EITC Qualifying child</Name>
            <Description>
                Does the child qualify as a QC for EITC? This is mostly the same as the QC test, but omits the
                support test and has a different residency test.

                TODO: take into account QC of another
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="../eitcRelAgeResJointTest"/>
                    <Dependency path="../isClaimedIfClaimable"/>
                    <Not>
                        <Dependency module="dependentsBenefitSplit" path="../disqualifiedDueToParentalCustody"/>
                    </Not>
                    <Any>
                        <!-- If the child is the QC of another, the TP must claim that child in order to receive
            EITC for the child. This will happen when both the TP and the other TP are eligible to claim
            the child as a QC, and they apply tiebreaker rules. -->
                        <Not>
                            <Dependency path="../isQualifyingChildOfAnother"/>
                        </Not>
                        <Dependency path="../isClaimedDependent"/>
                    </Any>
                    <Any>
                        <!-- If the person is married, they must be a claimed dependent -->
                        <Not>
                            <Dependency path="../married"/>
                        </Not>
                        <Dependency path="../isClaimedDependent"/>
                    </Any>
                    <Any>
                        <!-- Either the QC is not eligible for a benefit split, or they are eligible and this TP
                 is the one eligible to claim them -->
                        <Not>
                            <Dependency module="dependentsBenefitSplit" path="../eligibleForBenefitSplit"/>
                        </Not>
                        <Dependency module="dependentsBenefitSplit" path="../tpCanClaimSplitBenefitsHohEitcCdcc"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/eitcQualifyingChildForCalculation">
            <Description>
                The child both qualifies the TP for EITC, and qualifies to increase the amount of EITC they will
                receive.

                EITC qualifying children use different paths for eligibility and calculation. A child may make a
                taxpayer eligible for the credit, but if they don't have an SSN, they will not increase the amount of
                the
                credit.
            </Description>

            <Derived>
                <All>
                    <Dependency path="../eitcQualifyingChild"/>
                    <Dependency path="../ssnValidForEITCCalculation"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/numEitcDependentsCollectionForCalculation">
            <Name>EITC Eligible Dependents Collection For Calculation</Name>
            <Description>The subset of people who qualify as qualifying children for EITC</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Count>
                    <Dependency path="/familyAndHousehold/*/eitcQualifyingChildForCalculation"/>
                </Count>
            </Derived>
        </Fact>
        <Fact path="/eitcDependentsWhoQualify">
            <Name>Qualified EIC Dependents</Name>
            <Description>The qualified people to list on Schedule EIC</Description>
            <Derived>
                <Filter path="/familyAndHousehold">
                    <Dependency path="eitcQualifyingChildForCalculation"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/scheduleEicDependents">
            <Description>
                The potential schedule EIC dependents, but only if we're actually receiving EITC
            </Description>

            <Derived>
                <Filter path="/potentialScheduleEicDependents">
                    <Dependency module="eitc" path="/isReceivingEitc"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/potentialScheduleEicDependents">
            <Name>Schedule EIC Dependents</Name>
            <Description>The people to list on Schedule EIC</Description>
            <Derived>
                <Switch>
                    <Case>
                        <!-- When there are dependents but none qualify, just list the first one; ... -->
                        <When>
                            <All>
                                <Equal>
                                    <Left>
                                        <CollectionSize>
                                            <Dependency path="/eitcDependentsWhoQualify"/>
                                        </CollectionSize>
                                    </Left>
                                    <Right>
                                        <Int>0</Int>
                                    </Right>
                                </Equal>
                                <GreaterThan>
                                    <Left>
                                        <CollectionSize>
                                            <Dependency path="/eitcDependentsCollection"/>
                                        </CollectionSize>
                                    </Left>
                                    <Right>
                                        <Int>0</Int>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <FirstNCollectionItems>
                                <Collection>
                                    <Dependency path="/eitcDependentsCollection"/>
                                </Collection>
                                <Count>
                                    <Int>1</Int>
                                </Count>
                            </FirstNCollectionItems>
                        </Then>
                    </Case>
                    <Case>
                        <!-- ... otherwise, list all who qualify. -->
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/eitcDependentsWhoQualify"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/couldntBeQCOfAnother">
            <Name>Flow variable for qualifying child of another</Name>
            <Description>Whether to display the qualifying child of another subsubsection</Description>

            <Derived>
                <Not>
                    <Dependency path="../askAboutQCOfAnother"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/askAboutQCOfAnother">
            <Description>
                Whether we need to see if the person is a QC of another to make a determination
            </Description>
            <Derived>
                <All>
                    <!-- If the person doesn't meet the age test, they couldn't be anyone's QC -->
                    <!-- We may be able to add a joint return test here as well -->
                    <Dependency path="../ageTest"/>
                    <Any>
                        <!-- The person is trying to qualify as a QR, so we need to know if they can be QC of
            another -->
                        <All>
                            <!-- We only show this if they've filled out all the QR info and it's true -->
                            <IsComplete>
                                <Dependency path="../qualifyingRelativeMinusNotQcTest"/>
                            </IsComplete>
                            <Dependency path="../qualifyingRelativeMinusNotQcTest"/>
                        </All>
                        <!-- Or the person is the TP's QC, but not their biological or adopted child so we need
            to see if they could
               be someone else's QC as well. -->
                        <Dependency path="../qualifyingChild"/>
                    </Any>
                    <Not>
                        <!-- If involved in a benefit split, we know who the qualifying people are -->
                        <Dependency module="dependentsBenefitSplit" path="../tpCanClaimSplitBenefitsHohEitcCdcc"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/writableCouldBeQualifyingChildOfAnother">
            <Name>Qualifying child of another taxpayer</Name>
            <Description>(writable) Is the dependent the qualifying child of any other taxpayer?</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/couldBeQualifyingChildOfAnother">
            <Description>Is the dependent the qualifying child of any other taxpayer?</Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="../couldntBeQCOfAnother"/>
                    </Not>
                    <Dependency path="../writableCouldBeQualifyingChildOfAnother"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/qrPathCouldBeQualifyingChildOfAnother">
            <Description>The dependent is not our qualifying child, but could be someone else's.</Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="../qualifyingChild"/>
                    </Not>
                    <Dependency path="../couldBeQualifyingChildOfAnother"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/writablePotentialClaimerMustFile">
            <Description>Is the other taxpayer (for whom the dependent could be a qualifying child) required to file a
                return?
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/potentialClaimerMustFile">
            <Description>Is the other taxpayer (for whom the dependent could be a qualifying child) required to file a
                return?
            </Description>
            <Derived>
                <All>
                    <Dependency path="../couldBeQualifyingChildOfAnother"/>
                    <Dependency path="../writablePotentialClaimerMustFile"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/writablePotentialClaimerDidFile">
            <Description>Is the other taxpayer (for whom the dependent could be a qualifying child) filing a return?
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/potentialClaimerDidFile">
            <Description>Is the other taxpayer (for whom the dependent could be a qualifying child) filing a return?
            </Description>
            <Derived>
                <All>
                    <Dependency path="../couldBeQualifyingChildOfAnother"/>
                    <Not>
                        <Dependency path="../potentialClaimerMustFile"/>
                    </Not>
                    <Dependency path="../writablePotentialClaimerDidFile"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/writablePotentialClaimerFiledOnlyForRefund">
            <Name>Other taxpayer is filing</Name>
            <Description>Is the other taxpayer (for whom the dependent is a qualifying child) filing solely for refund
                of
                income tax withheld or estimated tax paid?
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/potentialClaimerFiledOnlyForRefund">
            <Name>Other taxpayer is filing</Name>
            <Description>Is the other taxpayer (for whom the dependent is a qualifying child) filing solely for refund
                of
                income tax withheld or estimated tax paid?
            </Description>

            <Derived>
                <All>
                    <Dependency path="../couldBeQualifyingChildOfAnother"/>
                    <Not>
                        <Dependency path="../potentialClaimerMustFile"/>
                    </Not>
                    <Dependency path="../potentialClaimerDidFile"/>
                    <Dependency path="../writablePotentialClaimerFiledOnlyForRefund"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/qcOfAnotherButNot">
            <Description>The dependent would have been a qc of another but they are not filing, or not filing for
                credits/dependents
            </Description>

            <Derived>
                <All>
                    <Dependency path="../couldBeQualifyingChildOfAnother"/>
                    <Not>
                        <Dependency path="../potentialClaimerMustFile"/>
                    </Not>
                    <Any>
                        <Not>
                            <Dependency path="../potentialClaimerDidFile"/>
                        </Not>
                        <Dependency path="../potentialClaimerFiledOnlyForRefund"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/isQualifyingChildOfAnother">
            <Description>Whether the dependent is the qualifying child of another taxpayer. This includes tests that
                they can
                be the qualifying child of another taxpayer, and makes sure that that they count as a QC of another
                taxpayer due
                to how that taxpayer is filing.
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../qualifyingChild"/>
                                </IsComplete>
                                <Dependency path="../qualifyingChild"/>
                            </All>
                        </When>
                        <Then>
                            <All>
                                <Not>
                                    <Dependency path="../couldntBeQCOfAnother"/>
                                </Not>
                                <Dependency path="../couldBeQualifyingChildOfAnother"/>
                            </All>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <All>
                                <Not>
                                    <Dependency path="../couldntBeQCOfAnother"/>
                                </Not>
                                <Dependency path="../couldBeQualifyingChildOfAnother"/>
                                <Not>
                                    <Dependency path="../qcOfAnotherButNot"/>
                                </Not>
                            </All>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/tpClaims">
            <Name>Taxpayer claims dependent</Name>
            <Description>Whether the taxpayer wants to claim the dependent.</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/notQualifyingChildTest">
            <Name>Not qualifying child test</Name>
            <Description>The dependent passes the not qualifying child test for purposes of determining qualifying
                relative.
            </Description>

            <Derived>
                <Not>
                    <Dependency path="../isQualifyingChildOfAnother"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/memberOfHouseholdTest">
            <Name>Lived with you all year</Name>
            <Description>Did the dependent live with you all year as a member of your household?</Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../residencyDuration"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/residencyDurationOptions">allYear</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/relationshipMemberOfHouseholdTest">
            <Name>Relationship or member of household test</Name>
            <Description>The dependent passes the relationship/member of household test for purposes of determining
                qualifying
                relative.
            </Description>

            <Derived>
                <Any>
                    <Dependency module="dependentsRelationship" path="../qrRelationshipTest"/>
                    <Dependency path="../memberOfHouseholdTest"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/grossIncomeLimit">
            <Name>Gross income limit</Name>
            <Description>The gross income limit for purposes of the qualifying relative gross income test referenced in
                §152(d)(1)(B).
                Rev Proc .24 Gross Income Limitation for a Qualifying Relative §152(d)(1)(B)
            </Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Dollar>5050</Dollar>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/grossIncomeTest">
            <Name>Gross income test</Name>
            <Description>The dependent passes the gross income test for purposes of determining qualifying relative
                (their
                gross income was less than /grossIncomeLimit).
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/ownSupport">
            <Name>Own support</Name>
            <Description>Did the dependent provide more than half their own support?</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/qcSupportTest">
            <Name>Support test</Name>
            <Description>Does the dependent pass the Support test to be a qualifying child?</Description>

            <Derived>
                <Not>
                    <Dependency path="../ownSupport"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/writableQrSupportTest">
            <Name>Support test (for qualifying relative)</Name>
            <Description>The dependent passes the support test for purposes of determining qualifying relative (you
                provided
                more than half their support).
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/qrSupportTest">
            <Name>Support test (for qualifying relative)</Name>
            <Description>The dependent passes the support test for purposes of determining qualifying relative (you
                provided
                more than half their support).
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../ownSupport"/>
                                </IsComplete>
                                <Dependency path="../ownSupport"/>
                            </All>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="../writableQrSupportTest"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/qualifyingRelative">
            <Name>Qualifying relative</Name>
            <Description>Does the dependent pass all four qualifying relative tests?</Description>

            <Derived>
                <All>
                    <Dependency path="../notQualifyingChildTest"/>
                    <Dependency path="../qualifyingRelativeMinusNotQcTest"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/qualifyingRelativeMinusNotQcTest">
            <Description>Does the dependent pass the three tests that precede QC of another</Description>

            <Derived>
                <All>
                    <Dependency path="../relationshipMemberOfHouseholdTest"/>
                    <Dependency path="../grossIncomeTest"/>
                    <Dependency path="../qrSupportTest"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/writableUsResident">
            <Name>Resident of the U.S.</Name>
            <Description>The dependent resides in the United States of America.</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/writableUsNational">
            <Name>Dependent is U.S. National</Name>
            <Description>The dependent is not a citizen, but is a U.S. national.</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/writableCanadaMexicoResident">
            <Name>Resident of Canada or Mexico</Name>
            <Description>The dependent resides in Canada or Mexico.</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/isUsCitizenFullYear">
            <Name>Citizenship for dependent</Name>
            <Description>Whether the filer was a U.S. citizen for part of the tax year</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/usResident">
            <Name>Resident of the U.S.</Name>
            <Description>The dependent resides in the United States of America.</Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency path="../isUsCitizenFullYear"/>
                    </Not>
                    <Dependency path="../writableUsResident"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/usNational">
            <Name>Dependent is U.S. National</Name>
            <Description>
                The dependent is not a citizen, but is a U.S. national.
            </Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency path="../isUsCitizenFullYear"/>
                    </Not>
                    <Not>
                        <Dependency path="../usResident"/>
                    </Not>
                    <Dependency path="../writableUsNational"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/canadaMexicoResident">
            <Name>Resident of Canada or Mexico</Name>
            <Description>
                The dependent resides in Canada or Mexico and is not a U.S. citizen, resident, or national.
            </Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency path="../isUsCitizenFullYear"/>
                    </Not>
                    <Not>
                        <Dependency path="../usResident"/>
                    </Not>
                    <Not>
                        <Dependency path="../usNational"/>
                    </Not>
                    <Dependency path="../writableCanadaMexicoResident"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/citizenOrResidentTest">
            <Name>Citizen or resident test</Name>
            <Description>The dependent passes the Citizen or Resident Test for purposes of claiming as a dependent.
            </Description>

            <Derived>
                <Any>
                    <Dependency path="../citizenOrUsResidentTest"/>
                    <Dependency path="../canadaMexicoResident"/>
                    <Dependency path="../adoptedChildException"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/mayHaveNotlivedWithTaxpayerInUSForFullTaxYear">
            <Name>May not have lived with Taxpayer in U.S. for entire tax year test</Name>
            <Description>The dependent might not have been living with the taxpayer in the U.S. for the entire tax year.
                Either they were born or died during the tax year, are adopted or a foster child, or could have been
                kidnapped.
            </Description>
            <Derived>
                <Any>
                    <Dependency path="../childIsFosterOrAdopted"/>
                    <Dependency path="../yearOfBirthSameAsTaxYear"/>
                    <Dependency path="../deceased"/>
                    <Dependency path="../youngerThanEighteenAtEndOfYear"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/childIsAdopted">
            <Description>Is the person an adopted child?</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency module="dependentsRelationship" path="../relationship"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/relationshipOptions">adoptedChild</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/adoptedChildException">
            <Name>Adopted child exception to the citizen or resident test</Name>
            <Description>If the taxpayer is a U.S. citizen or U.S. national and legally adopts a child who isn't a U.S.
                citizen, U.S. resident alien, or U.S. national, then that child can pass the dependent residency test if
                they
                lived with the taxpayer all year as a member of the household. This exception also applies if the child
                was
                lawfully placed with the taxpayer for legal adoption and the child lived with the taxpayer for the rest
                of the
                year after placement (even if it wasn't all year).
            </Description>
            <Derived>
                <All>

                    <Dependency path="../childIsAdopted"/>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">adoptedChild</Enum>
                        </Right>
                    </Equal>

                    <Dependency module="filers" path="/eitherFilerUSCitizenOrNational"/>

                    <Equal>
                        <Left>
                            <Dependency path="../residencyDuration"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/residencyDurationOptions">allYear</Enum>
                        </Right>
                    </Equal>

                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/citizenOrUsResidentTest">
            <Name>Citizen or U.S. resident test</Name>
            <Description>A narrower Citizen or Resident Test for purposes of CTC and ODC, excluding residents of Canada
                and
                Mexico who are not U.S. nationals.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Any>
                    <Dependency path="../isUsCitizenFullYear"/>
                    <Dependency path="../usResident"/>
                    <Dependency path="../usNational"/>
                    <Dependency path="../adoptedChildException"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/eligibleDependentMinusFilerInformation">
            <Description>The person is an eligible dependent, but that's without taking into account whether the filer
                is
                eligible to claim dependents
            </Description>

            <Derived>
                <All>
                    <Dependency path="../qcOrQr"/>
                    <Not>
                        <Dependency module="dependentsBenefitSplit" path="../disqualifiedDueToParentalCustody"/>
                    </Not>
                    <Not>
                        <Dependency module="dependentsBenefitSplit" path="../tpCanClaimSplitBenefitsHohEitcCdcc"/>
                    </Not>
                    <Dependency path="../citizenOrResidentTest"/>
                    <Dependency path="../jointReturnTest"/>
                    <NotEqual>
                        <Left>
                            <Dependency path="../tinType"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/tinTypeOptions">none</Enum>
                        </Right>
                    </NotEqual>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/eligibleDependent">
            <Name>Eligible to be claimed as dependent</Name>
            <Description>The person is eligible to be claimed as a dependent.

                TODO: This does not account for qualifying child
                tiebreakers
                TODO: This does not account for MSAs, divorced/separated, etc.
            </Description>
            <Export stateSystems="true"/>

            <Derived>
                <All>
                    <Not>
                        <Dependency module="filers" path="/treatFilersAsDependents"/>
                    </Not>
                    <Dependency path="../eligibleDependentMinusFilerInformation"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/qcOrQr">
            <Description>The person is a Qualifying Child or a Qualifying Relative</Description>
            <Derived>
                <Any>
                    <Dependency path="../qualifyingChild"/>
                    <Dependency path="../qualifyingRelative"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/isClaimedDependent">
            <Name>Is claimed dependent</Name>
            <Description>Whether the person is both allowed to be claimed as a dependent, and has been claimed as a
                dependent.
                Exists as a derived fact to ensure that an edit that disqualifies a person as a dependent causes them to
                no
                longer count as a dependent.
            </Description>
            <Export downstreamFacts="true" stateSystems="true"/>
            <Derived>
                <All>
                    <Dependency path="../tpClaims"/>
                    <Dependency path="../eligibleDependent"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/isNotClaimedDependent">
            <Name>Is not claimed dependent</Name>
            <Description>The negation of is claimed dependent</Description>

            <Derived>
                <Not>
                    <Dependency path="../isClaimedDependent"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/tpHasClaimedButIsNotCurrentlyEligible">
            <Description>At some point, we gave the TP the chance to claim this dependent, but right now they're not
                eligible
                anymore
            </Description>
            <Derived>
                <All>
                    <Dependency path="../tpClaims"/>
                    <!-- Want to make sure we actually know if this person is actually eligible -->
                    <Dependency path="../isCompleted"/>
                    <Not>
                        <Dependency path="../eligibleDependent"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hasClaimedDependentsWhoAreNotCurrentlyEligible">
            <Description>At some point, we gave the TP the chance to claim this dependent, but currently at least one of
                those
                dependents is no longer eligible to be claimed
            </Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Filter path="/familyAndHousehold">
                                <Dependency path="tpHasClaimedButIsNotCurrentlyEligible"/>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasClaimedDependentsButIsNotEligibleToDoSo">
            <Description>The filer was at some point eligible to claim one or more dependents, and did so, but has since
                said
                they themselves are a dependent and so cannot have dependents of their own
            </Description>
            <Derived>
                <All>
                    <!-- The filer can't claim dependents because they themselves are dependents -->
                    <Dependency module="filers" path="/treatFilersAsDependents"/>
                    <!-- AND they have claimed dependents who aren't eligible, so we can assume it's because
          the filer became a
          dependent -->
                    <Dependency path="/hasClaimedDependentsWhoAreNotCurrentlyEligible"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hasClaimedDependentsWhoAreNoLongerEligibleToBeClaimed">
            <Description>The filer was at some point eligible to claim one or more dependents, and did so, but has since
                said
                they themselves are a dependent and so cannot have dependents of their own
            </Description>
            <Derived>
                <All>
                    <!-- The filer has claimed some dependents who are no longer eligible to be claimed -->
                    <Dependency path="/hasClaimedDependentsWhoAreNotCurrentlyEligible"/>

                    <!-- The filer isn't a dependent, so the dependents must have become ineligible based on their own facts -->
                    <Not>
                        <Dependency module="filers" path="/treatFilersAsDependents"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/tpHasClaimedEligibleDependentsButDependentIsNotCurrentlyComplete">
            <Description>At some point, we gave the TP the chance to claim this dependent (and so were complete up to
                that
                point), but now the dependent isn't complete and we haven't ruled them out as eligible
            </Description>
            <Derived>
                <All>
                    <!-- Okay, we know the filer go to the claim screen -->
                    <Dependency path="../tpClaims"/>

                    <!-- And we know the dependent is incomplete -->
                    <Dependency path="../isIncomplete"/>

                    <!-- And either we still know they're eligible or think they might be because eligibleDependent is incomplete -->
                    <Any>
                        <Dependency path="../eligibleDependent"/>
                        <Not>
                            <IsComplete>
                                <Dependency path="../eligibleDependent"/>
                            </IsComplete>
                        </Not>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hasClaimedEligibleDependentsButDependentIsNotCurrentlyComplete">
            <Description>At some point, we gave the TP the chance to claim a dependent, but currently at least one of
                those
                dependents has become incomplete
            </Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Filter path="/familyAndHousehold">
                                <Dependency path="tpHasClaimedEligibleDependentsButDependentIsNotCurrentlyComplete"/>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/isCompleted">
            <Name>Is Completed Dependent</Name>
            <Description>Whether the TP has finished filling out the dependent section for this dependent. Right now,
                we're
                assuming that we should always complete whether a person is eligible to be a dependent and has been
                claimed.
                When we come back to revisit the dependents section post-GC, we may want to expand this condition to
                other
                qualifiers (e.g. HohQualifyingPerson)
            </Description>
            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="../isClaimedDependent"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../eligibleDependent"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../cdccQualifyingPerson"/>
                    </IsComplete>


                    <Any>
                        <Not>
                            <!-- If they are not a claimed dependent, we have the info we need -->
                            <Dependency path="../isClaimedDependent"/>
                        </Not>
                        <!-- If they don't qualify for any benefits, we know what we need to know -->
                        <Dependency path="../doesNotQualifyForAnyBenefits"/>
                        <All>
                            <!-- otherwise we need their IP Pin and their TIN -->
                            <IsComplete>
                                <Dependency path="../tin"/>
                            </IsComplete>
                            <IsComplete>
                                <Dependency path="../hasIpPin"/>
                            </IsComplete>
                            <Dependency path="../weHaveIpPinIfWeShould"/>
                        </All>
                    </Any>
                    <IsComplete>
                        <Dependency path="../personQualifiesTPforHoH"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../personQualifiesTPforEitc"/>
                    </IsComplete>
                    <Any>
                        <!-- if a person is selected for HOH, -->
                        <Not>
                            <IsComplete>
                                <Dependency path="../isValidSelectedHohQP"/>
                            </IsComplete>
                        </Not>
                        <Not>
                            <Dependency path="../isValidSelectedHohQP"/>
                        </Not>
                        <All>
                            <Dependency path="../isValidSelectedHohQP"/>
                            <IsComplete>
                                <Dependency path="../tin"/>
                            </IsComplete>
                        </All>
                    </Any>
                    <Dependency path="../hasInfoForEITCQCUnclaimedDependent"/>

                    <Any>
                        <All>
                            <Any>
                                <Not>
                                    <Dependency path="../flowAddPersonLivedWithTpInUs"/>
                                </Not>
                                <IsComplete>
                                    <Dependency path="../monthsLivedWithTPInUS"/>
                                </IsComplete>
                            </Any>

                            <Any>
                                <Not>
                                    <Dependency path="../flowAddPersonKeepingUpHome"/>
                                </Not>
                                <IsComplete>
                                    <Dependency path="../tpPaidMostOfHomeUpkeep"/>
                                </IsComplete>
                            </Any>

                            <Any>
                                <Not>
                                    <Dependency path="../flowAddPersonKeepingUpParentsHome"/>
                                </Not>
                                <IsComplete>
                                    <Dependency path="../tpPaidMostOfParentHomeUpkeep"/>
                                </IsComplete>
                            </Any>
                        </All>

                        <!-- None of these supplemental questions are asked if the person is disqualifiedDueToParentalCustody -->
                        <Dependency module="dependentsBenefitSplit" path="../disqualifiedDueToParentalCustody"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/hasInfoForEITCQCUnclaimedDependent">
            <Derived>
                <!-- Get TIN and other values for EITC QC Unclaimed Dependents -->
                <Any>
                    <!-- If we don't know if you can be a EITC QC Unclaimed Dependent or if you're EITC Qualified, this is
          "complete" for now -->
                    <Not>
                        <IsComplete>
                            <Dependency path="../isEITCQCUnclaimedDependent"/>
                        </IsComplete>
                    </Not>
                    <Not>
                        <IsComplete>
                            <Dependency module="eitc" path="/eitcQualified"/>
                        </IsComplete>
                    </Not>

                    <All>
                        <!-- If you're not EITC qualified, none of this matters at all -->
                        <IsComplete>
                            <Dependency module="eitc" path="/eitcQualified"/>
                        </IsComplete>
                        <Not>
                            <Dependency module="eitc" path="/eitcQualified"/>
                        </Not>
                    </All>

                    <All>
                        <IsComplete>
                            <Dependency path="../isEITCQCUnclaimedDependent"/>
                        </IsComplete>
                        <Any>
                            <!-- Even if you are EITC qualified, is this dependent an EITC unclaimed dependent? If not, again, None of
              this matters -->
                            <Not>
                                <Dependency path="../isEITCQCUnclaimedDependent"/>
                            </Not>
                            <!-- Okay, so you qualify for EITC and this dependent is unclaimed but can count toward it, we need some
              info -->
                            <All>
                                <Dependency path="../isEITCQCUnclaimedDependent"/>
                                <IsComplete>
                                    <Dependency module="eitc" path="/eitcQualified"/>
                                </IsComplete>
                                <Dependency module="eitc" path="/eitcQualified"/>

                                <!-- If you said you don't have a TIN (it's not not none ;), then we don't need it. Otherwise, we do! -->
                                <!-- Also, if you don't have a TIN, you don't have a PIN, per Form 15227 -->
                                <Any>
                                    <Dependency path="../hasTinTypeOfNone"/>
                                    <All>
                                        <IsComplete>
                                            <Dependency path="../tin"/>
                                        </IsComplete>
                                        <IsComplete>
                                            <Dependency path="../hasIpPin"/>
                                        </IsComplete>
                                        <Dependency path="../weHaveIpPinIfWeShould"/>
                                    </All>
                                </Any>
                            </All>
                        </Any>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/isIncomplete">
            <Name>Is incomplete</Name>
            <Description>The opposite of isCompleted</Description>

            <Derived>
                <Not>
                    <Dependency path="../isCompleted"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/hohQualifyingPerson">
            <Name>Qualifying person for Head of Household</Name>
            <Description>
                The person can qualify you for Head of Household filing status.
            </Description>
            <Export downstreamFacts="true" stateSystems="true"/>

            <Derived>
                <All>
                    <!-- If the filer is eligible to file married, but is filing HOH by being considered unmarried, by having
          lived apart for six months then the QP needs to be in a more restrictive set of relationships BUT if the
          spouse is a nonresident alien, then the set of restrictive relationship is not used -->
                    <Any>
                        <Not>
                            <Dependency module="filingStatus" path="/eligibleForMFJ"/>
                        </Not>
                        <Dependency module="dependentsRelationship" path="../marriedHohRelationshipTest"/>
                    </Any>
                    <Not>
                        <Dependency module="dependentsBenefitSplit" path="../disqualifiedDueToParentalCustody"/>
                    </Not>
                    <Dependency path="../isClaimedIfClaimable"/>
                    <Any>
                        <All>
                            <Dependency path="../qualifyingChild"/>
                            <Dependency path="../tpPaidMostOfHomeUpkeep"/>
                            <!-- If the person is a QC of another, they have to be claimed in order to count as an hoh qualifying
              person-->
                            <Any>
                                <Not>
                                    <Dependency path="../isQualifyingChildOfAnother"/>
                                </Not>
                                <Dependency path="../isClaimedDependent"/>
                            </Any>
                            <Any>
                                <!-- The person is a QC who is single or is only not eligible to be a dependent because they're married -->
                                <All>
                                    <Dependency path="../qualifyingChild"/>
                                    <Any>
                                        <Not>
                                            <Dependency path="../married"/>
                                        </Not>
                                        <Dependency path="../eligibleDependentMinusFilerInformation"/>
                                    </Any>
                                </All>
                                <!-- OR the person is either an eligible dependent -->
                                <Dependency path="../eligibleDependent"/>
                                <!-- Or they're eligible for a benefit split, and the taxpayer is the one who can claim them for HoH -->
                                <All>
                                    <Dependency module="dependentsBenefitSplit"
                                                path="../tpCanClaimSplitBenefitsHohEitcCdcc"/>
                                    <!-- But also in this case, they are not allowed to be married -->
                                    <Not>
                                        <Dependency path="../married"/>
                                    </Not>
                                </All>
                            </Any>
                        </All>
                        <All>
                            <Dependency path="../qualifyingRelative"/>
                            <Dependency path="../eligibleDependent"/>
                            <Dependency path="../flowAddPersonKeepingUpParentsHome"/>
                            <Dependency path="../tpPaidMostOfParentHomeUpkeep"/>
                            <Equal>
                                <Left>
                                    <Dependency module="dependentsRelationship" path="../relationship"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/relationshipOptions">parent</Enum>
                                </Right>
                            </Equal>
                        </All>
                        <All>
                            <Dependency path="../qualifyingRelative"/>
                            <Any>
                                <!-- The person is either an eligible dependent -->
                                <Dependency path="../eligibleDependent"/>
                                <!-- Or they're eligible for a benefit split, and the taxpayer is the one who can claim them for HoH -->
                                <All>
                                    <Dependency module="dependentsBenefitSplit"
                                                path="../tpCanClaimSplitBenefitsHohEitcCdcc"/>
                                </All>
                            </Any>
                            <Dependency module="dependentsRelationship" path="../qrRelationshipTest"/>
                            <Dependency path="../residencyTest"/>
                            <Dependency path="../tpPaidMostOfHomeUpkeep"/>
                            <Dependency path="../flowAddPersonKeepingUpHome"/>
                        </All>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/isClaimedIfClaimable">
            <Description>
                Per the decision record
                https://git.irslabs.org/irslabs-prototypes/direct-file/-/wikis/Decision-log/Your-dependents,-qualifying-persons/Must-claim-dependent-on-return
                a claimable dependent must be claimed to act as a QP in TY2023

                This fact tests if the person is either claimed,
                or not claimable. This is necessary to be a QP for HOH, QSS, EITC, or CDCC.
            </Description>

            <Derived>
                <Any>
                    <Dependency path="../isClaimedDependent"/>
                    <Not>
                        <Dependency path="../eligibleDependent"/>
                    </Not>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/qssQualifyingPerson">
            <Name>Qualifying person for Qualified Surviving Spouse</Name>
            <Description>The person can qualify you for Qualified Surviving Spouse filing status.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="../tpPaidMostOfHomeUpkeep"/>
                    <Dependency path="../isClaimedIfClaimable"/>
                    <Any>
                        <Equal>
                            <Left>
                                <Dependency module="dependentsRelationship" path="../relationship"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/relationshipOptions">biologicalChild</Enum>
                            </Right>
                        </Equal>
                        <Dependency path="../childIsAdopted"/>
                        <Equal>
                            <Left>
                                <Dependency module="dependentsRelationship" path="../relationship"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/relationshipOptions">stepChild</Enum>
                            </Right>
                        </Equal>
                    </Any>
                    <!-- The child who meets any of the above three relationships must also meet requirements to be an eligible
          dependent, except for:
              * The joint return test
              * Gross income test
              * TP may be claimed as a dependent of another TP.
            This includes the citizen or resident test (specific rules for QSS) and the below
          -->
                    <Dependency path="../citizenOrResidentTest"/>
                    <Dependency path="../qssPersonResidencyTest"/>
                    <!-- A Person can either qualify as a QC (hence the age test) OR a QR -->
                    <!-- And then we need to look at the support test -->
                    <Any>
                        <All>
                            <Dependency path="../ageTest"/>
                            <Dependency path="../qcSupportTest"/>
                        </All>
                        <All>
                            <Dependency path="../notQualifyingChildTest"/>
                            <Dependency path="../qrSupportTest"/>
                        </All>
                    </Any>
                    <!-- If the TP is on the custodial side of the beenfit split, the person is not
               eligible to be claimed as a dependent, and therefore cannot be used for QSS-->
                    <Not>
                        <Dependency module="dependentsBenefitSplit" path="../tpCanClaimSplitBenefitsHohEitcCdcc"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/flowAddPersonLivedWithTpInUs">
            <Name>Need to show AddPersonLivedWithTpInUs screen</Name>
            <Description>
                Flow variable for AddPersonLivedWithTpInUs screen. We only ask if we're still trying to validate if
                the person may qualify as a QC for EITC. So we ask if:
                1. The filers are eligible for EITC
                2. The person already
                passes the age test and relationship test for EITC QC
                3. They've lived with the TP most of the year
            </Description>

            <Derived>
                <All>
                    <Dependency module="filers" path="/filersCouldQualifyForEitc"/>
                    <Dependency path="../ageTest"/>
                    <Dependency module="dependentsRelationship" path="../qcRelationshipTest"/>
                    <Dependency path="../residencyTest"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/livedWithTpInUsMostOfYear">
            <Name>Lived with taxpayer in U.S. most of the year</Name>
            <Description>
                Did the dependent live with the taxpayer in the U.S for most of the year?

                Note that "six" corresponds
                with the text "more than 6 months but less than 7 months." When reported on schedule EIC, this will be
                rounded
                up to a "7."
            </Description>

            <Derived>
                <All>
                    <Dependency path="../residencyTest"/>
                    <Any>
                        <Equal>
                            <Left>
                                <Dependency path="../monthsLivedWithTPInUS"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/monthsLivedWithTPInUSOptions">six</Enum>
                            </Right>
                        </Equal>
                        <Equal>
                            <Left>
                                <Dependency path="../monthsLivedWithTPInUS"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/monthsLivedWithTPInUSOptions">seven</Enum>
                            </Right>
                        </Equal>
                        <Equal>
                            <Left>
                                <Dependency path="../monthsLivedWithTPInUS"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/monthsLivedWithTPInUSOptions">eight</Enum>
                            </Right>
                        </Equal>
                        <Equal>
                            <Left>
                                <Dependency path="../monthsLivedWithTPInUS"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/monthsLivedWithTPInUSOptions">nine</Enum>
                            </Right>
                        </Equal>
                        <Equal>
                            <Left>
                                <Dependency path="../monthsLivedWithTPInUS"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/monthsLivedWithTPInUSOptions">ten</Enum>
                            </Right>
                        </Equal>
                        <Equal>
                            <Left>
                                <Dependency path="../monthsLivedWithTPInUS"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/monthsLivedWithTPInUSOptions">eleven</Enum>
                            </Right>
                        </Equal>
                        <Equal>
                            <Left>
                                <Dependency path="../monthsLivedWithTPInUS"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/monthsLivedWithTPInUSOptions">twelve</Enum>
                            </Right>
                        </Equal>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/monthsLivedWithTPInUS">
            <Description>How many months did the person live with the TP in the US?</Description>
            <Export mef="true" stateSystems="true"/>

            <Writable>
                <Enum optionsPath="/monthsLivedWithTPInUSOptions"/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/daysLivedWithTPInUS">
            <Description>How many days did the person live with the TP in the US?</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../monthsLivedWithTPInUS"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/monthsLivedWithTPInUSOptions">six</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Int>183</Int>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../monthsLivedWithTPInUS"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/monthsLivedWithTPInUSOptions">seven</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Int>212</Int>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../monthsLivedWithTPInUS"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/monthsLivedWithTPInUSOptions">eight</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Int>242</Int>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../monthsLivedWithTPInUS"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/monthsLivedWithTPInUSOptions">nine</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Int>273</Int>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../monthsLivedWithTPInUS"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/monthsLivedWithTPInUSOptions">ten</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Int>303</Int>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../monthsLivedWithTPInUS"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/monthsLivedWithTPInUSOptions">eleven</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Int>334</Int>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="../monthsLivedWithTPInUS"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/monthsLivedWithTPInUSOptions">twelve</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Int>365</Int>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/tpPaidMostOfHomeUpkeep">
            <Name>Taxpayer paid most of home upkeep</Name>
            <Description>Did taxpayer pay more than half the cost of keeping up the home shared with the dependent?
            </Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/tpPaidMostOfParentHomeUpkeep">
            <Name>Taxpayer paid most of parent's home upkeep</Name>
            <Description>Did taxpayer pay more than half the cost of keeping up their dependent parent's main home?
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/ssnEmploymentValidity">
            <Name>Employment validity</Name>
            <Description>Employment validity statements printed on dependent's Social Security card.</Description>

            <Writable>
                <Enum optionsPath="/familyAndHouseholdSsnEmploymentValidityOptions"/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/ssnValidForEmployment">
            <Name>Has an SSN valid for employment</Name>
            <Description>The dependent has a Social Security Number that is not marked "Not Valid For Employment", or
                that
                requires work authorization but that authorization is no longer valid.
            </Description>

            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Dependency path="../ssnEmploymentValidity"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/familyAndHouseholdSsnEmploymentValidityOptions">neither</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../ssnEmploymentValidity"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/familyAndHouseholdSsnEmploymentValidityOptions">
                                validOnlyWithDhsAuthorizationInEffect
                            </Enum>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/ssnOnlyForFederallyFundedBenefit">
            <Description>The dependent received their social security number solely to apply for a federally funded
                benefit,
                like Medicaid.
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/familyAndHousehold/*/ssnNotValidForEmployment">
            <Description>The SSN is marked "not valid" for employment</Description>
            <Export stateSystems="true"/>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../ssnEmploymentValidity"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/familyAndHouseholdSsnEmploymentValidityOptions">notValid</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/ssnValidForEITCCalculation">
            <Name>Has an SSN valid for employemnt</Name>
            <Description>The dependent has a Social Security Number that is not marked "Not Valid For Employment", or
                that
                requires work authorization but that authorization is no longer valid.
            </Description>
            <Derived>
                <All>
                    <!-- They must have an ssn, not an ITIN or ATIN -->
                    <Equal>
                        <Left>
                            <Dependency path="../tinType"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/tinTypeOptions">ssn</Enum>
                        </Right>
                    </Equal>
                    <Any>
                        <!-- The SSN has no restrictions -->
                        <Equal>
                            <Left>
                                <Dependency path="../ssnEmploymentValidity"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/familyAndHouseholdSsnEmploymentValidityOptions">neither</Enum>
                            </Right>
                        </Equal>
                        <!-- The SSN requires work authorization, and the authorization is currently in effect -->
                        <Equal>
                            <Left>
                                <Dependency path="../ssnEmploymentValidity"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/familyAndHouseholdSsnEmploymentValidityOptions">
                                    validOnlyWithDhsAuthorizationInEffect
                                </Enum>
                            </Right>
                        </Equal>
                        <!-- The SSN is not valid for employment, but was not issued solely for a federally funded benefit -->
                        <All>
                            <Dependency path="../ssnNotValidForEmployment"/>
                            <Not>
                                <Dependency path="../ssnOnlyForFederallyFundedBenefit"/>
                            </Not>
                        </All>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/eligibleCtc">
            <Name>Eligible for the Child Tax Credit</Name>
            <Description>The dependent is eligible for the Child Tax Credit (CTC).</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="../isClaimedDependent"/>
                    <Dependency path="../qualifyingChild"/>
                    <LessThan>
                        <Left>
                            <Dependency path="../age"/>
                        </Left>
                        <Right>
                            <Int>17</Int>
                        </Right>
                    </LessThan>
                    <Dependency path="../citizenOrUsResidentTest"/>
                    <Equal>
                        <Left>
                            <Dependency path="../tinType"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/tinTypeOptions">ssn</Enum>
                        </Right>
                    </Equal>
                    <Dependency path="../ssnValidForEmployment"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/isClaimedForCTC">
            <Name>Claimed for the Child Tax Credit Dependent</Name>
            <Description>The dependent is claimed for the Child Tax Credit (CTC).</Description>
            <Export mef="true"/>
            <Derived>
                <All>
                    <Dependency path="../eligibleCtc"/>
                    <Dependency module="ctcOdc" path="/ctcQualified"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/eligibleOdc">
            <Name>Eligible for the Credit for Other Dependents</Name>
            <Description>The dependent is eligible for the Credit for Other Dependents (ODC).</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="../isClaimedDependent"/>
                    <Not>
                        <Dependency path="../eligibleCtc"/>
                    </Not>
                    <Dependency path="../citizenOrUsResidentTest"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/isClaimedForODC">
            <Name>Claimed for the Credit for Other Dependents</Name>
            <Description>The dependent is claimed for the Credit for Other Dependents (ODC).</Description>
            <Export mef="true"/>
            <Derived>
                <All>
                    <Dependency path="../eligibleOdc"/>
                    <Dependency module="ctcOdc" path="/odcQualified"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/claimedStatus">
            <Name>Is Claimed</Name>
            <Description>The dependent's claimed status</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../isClaimedDependent"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/claimedStatus">claimed</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Not>
                                <Dependency path="../eligibleDependent"/>
                            </Not>
                        </When>
                        <Then>
                            <Enum optionsPath="/claimedStatus">doesNotQualify</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../isNotClaimedDependent"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/claimedStatus">unclaimed</Enum>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/isUnclaimedDependent">
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../claimedStatus"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/claimedStatus">unclaimed</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/doesNotQualify">
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../claimedStatus"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/claimedStatus">doesNotQualify</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/doesNotQualifyForAnyBenefits">
            <Derived>
                <All>
                    <Not>
                        <Dependency path="../eligibleDependent"/>
                    </Not>
                    <Not>
                        <Dependency path="../mayQualifyTPForTaxBenefits"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/mayQualifyTPForTaxBenefits">
            <Description>Household member may qualify TP for one of the benefits, but not certain unless filing status
                is
                known
            </Description>

            <Derived>
                <Any>
                    <Dependency path="../personQualifiesTPforHoH"/>
                    <Dependency path="../personQualifiesTPforQss"/>
                    <Dependency path="../personQualifiesTPforEitc"/>
                    <Dependency path="../personQualifiesTPforCdcc"/>
                    <!-- TODO: Verify that ctc and Odc should be in here -->
                    <Dependency path="../eligibleCtc"/>
                    <Dependency path="../eligibleOdc"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/doesQualifyTPForTaxBenefits">
            <Description>Household member qualifies TP for at least one benefit since we know filing status
            </Description>

            <Derived>
                <All>
                    <Dependency path="../mayQualifyTPForTaxBenefits"/>
                    <IsComplete>
                        <Dependency module="filingStatus" path="/filingStatus"/>
                    </IsComplete>
                    <Any>
                        <All>
                            <Dependency module="filingStatus" path="/eligibleForHoh"/>
                            <Dependency path="../personQualifiesTPforHoH"/>
                        </All>
                        <All>
                            <Dependency module="filingStatus" path="/eligibleForQss"/>
                            <Dependency path="../personQualifiesTPforQss"/>
                        </All>
                        <All>
                            <Dependency path="../personQualifiesTPforEitc"/>
                            <Dependency path="/eitcQualified" module="eitc"/>
                        </All>
                        <All>
                            <Dependency path="../personQualifiesTPforCdcc"/>
                            <Dependency path="/cdccQualified" module="cdcc"/>
                        </All>
                        <All>
                            <Dependency path="../eligibleCtc"/>
                            <Dependency path="/ctcQualified" module="ctcOdc"/>
                        </All>
                        <All>
                            <Dependency path="../eligibleOdc"/>
                            <Dependency path="/odcQualified" module="ctcOdc"/>
                        </All>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/hasIncompletePossibleBenefits">
            <Description>At least one of the benefits a household member qualifies for is not yet complete</Description>
            <Derived>
                <All>
                    <Dependency path="../mayQualifyTPForTaxBenefits"/>
                    <IsComplete>
                        <Dependency module="filingStatus" path="/filingStatus"/>
                    </IsComplete>
                    <Any>
                        <All>
                            <Dependency path="../personQualifiesTPforHoH"/>
                            <Not>
                                <IsComplete>
                                    <Dependency path="/eligibleForHoh" module="filingStatus"/>
                                </IsComplete>
                            </Not>
                        </All>
                        <All>
                            <Dependency path="../personQualifiesTPforQss"/>
                            <Not>
                                <IsComplete>
                                    <Dependency path="/eligibleForQss" module="filingStatus"/>
                                </IsComplete>
                            </Not>
                        </All>
                        <All>
                            <Dependency path="../personQualifiesTPforCdcc"/>
                            <Not>
                                <IsComplete>
                                    <Dependency path="/cdccQualified" module="cdcc"/>
                                </IsComplete>
                            </Not>
                        </All>
                        <All>
                            <Dependency path="../personQualifiesTPforEitc"/>
                            <Not>
                                <IsComplete>
                                    <Dependency path="/eitcQualified" module="eitc"/>
                                </IsComplete>
                            </Not>
                        </All>
                        <All>
                            <Dependency path="../eligibleCtc"/>
                            <Not>
                                <IsComplete>
                                    <Dependency path="/ctcQualified" module="ctcOdc"/>
                                </IsComplete>
                            </Not>
                        </All>
                        <All>
                            <Dependency path="../eligibleOdc"/>
                            <Not>
                                <IsComplete>
                                    <Dependency path="/odcQualified" module="ctcOdc"/>
                                </IsComplete>
                            </Not>
                        </All>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/qualifiesForStatuses">
            <Name>Qualifies for filing status(es)</Name>
            <Description>Whether a dependent qualifies the TP for filing status(es), leverages TP's info</Description>
            <Derived>
                <Any>
                    <Dependency path="../personQualifiesTPforQss"/>
                    <Dependency path="../personQualifiesTPforHoH"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/qualifiesForTaxCredits">
            <Name>Qualifies for tax credit(s)</Name>
            <Description>Whether a dependent qualifies the TP for tax credit(s), leverages TP's info. This requires the
                income
                section to be complete
            </Description>
            <Derived>
                <Any>
                    <All>
                        <Dependency path="../eligibleCtc"/>
                        <Dependency module="ctcOdc" path="/ctcQualified"/>
                    </All>
                    <All>
                        <Dependency path="../eligibleOdc"/>
                        <Dependency module="ctcOdc" path="/odcQualified"/>
                    </All>
                    <All>
                        <Dependency path="../eitcQualifyingChild"/>
                        <!-- This requires the income section to be complete -->
                        <Dependency module="eitc" path="/eitcQualified"/>
                    </All>
                    <All>
                        <!-- TODO: Add "the TP actually qualified for CDCC here"-->
                        <!-- https://git.irslabs.org/irslabs-prototypes/direct-file/-/issues/8667 -->
                        <Dependency path="../cdccQualifyingPerson"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/isEITCQCUnclaimedDependent">
            <Derived>
                <All>
                    <Dependency path="../eitcQualifyingChild"/>
                    <Dependency path="../isNotClaimedDependent"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/isEITCQCUnclaimedDependentWithTIN">
            <Description>The dependent is an EITC QC who is unclaimed and who has a TIN</Description>
            <Derived>
                <All>
                    <Dependency path="../isEITCQCUnclaimedDependent"/>
                    <Not>
                        <Dependency path="../hasTinTypeOfNone"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/isEITCQCUnclaimedDependentMissingTIN">
            <Description>The dependent is an EITC QC who is unclaimed and who we need a TIN for</Description>
            <Derived>
                <All>
                    <Dependency path="../isEITCQCUnclaimedDependentWithTIN"/>
                    <Not>
                        <IsComplete>
                            <Dependency path="../tin"/>
                        </IsComplete>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/qualifyingDependentsCollection">
            <Name>Qualifying Dependents Collection</Name>
            <Description>A collection of all the dependents that could be claimed</Description>
            <Derived>
                <Filter path="/familyAndHousehold">
                    <Dependency path="eligibleDependent"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/unclaimedEITCQcsCollection">
            <Name>Unclaimed EITC QCs</Name>
            <Description>A collection of people to be claimed as EITC QCs who have not been claimed as dependents
            </Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Filter path="/eitcDependentsCollection">
                    <Dependency path="isEITCQCUnclaimedDependent"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/unclaimedEITCQcsWithTINsCollection">
            <Description>A collection of people to be claimed as EITC QCs who have not been claimed as dependents that
                have
                TINs (that we might need to collect)
            </Description>
            <Derived>
                <Filter path="/eitcDependentsCollection">
                    <Dependency path="isEITCQCUnclaimedDependentWithTIN"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/unclaimedEITCQcsCollectionCount">
            <Description>How many unclaimed EITC QCs are are talking about</Description>
            <Derived>
                <CollectionSize>
                    <Dependency path="/unclaimedEITCQcsCollection"/>
                </CollectionSize>
            </Derived>
        </Fact>
        <Fact path="/hasAnyUnclaimedEITCQCs">
            <Description>Does the filer have more than zero EITC QC?</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/unclaimedEITCQcsCollectionCount"/>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasMoreThanOneUnclaimedEITCQC">
            <Description>Does the filer have more than one EITC QC?</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/unclaimedEITCQcsCollectionCount"/>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/familyAndHouseholdWhoDontQualifyForAnyBenefitsCollection">
            <Name>Dependents who don't qualify for any benefits</Name>
            <Description>A collection of dependents who don't qualify for any benefits</Description>
            <Derived>
                <Filter path="/familyAndHousehold">
                    <All>
                        <Not>
                            <Dependency path="eligibleDependent"/>
                        </Not>
                        <Not>
                            <Dependency path="mayQualifyTPForTaxBenefits"/>
                        </Not>
                    </All>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/familyAndHouseholdWhoHaveAnIpPinButNotReady">
            <Name>Dependents who don't qualify for any benefits</Name>
            <Description>A collection of dependents who don't qualify for any benefits</Description>
            <Derived>
                <Filter path="/qualifyingDependentsCollection">
                    <All>
                        <Not>
                            <Dependency path="eligibleDependent"/>
                        </Not>
                        <Not>
                            <Dependency path="mayQualifyTPForTaxBenefits"/>
                        </Not>
                    </All>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/hasAtLeastOneDependentWhoDoesntQualifyForAnyBenefits">
            <Name>At least one dependent who doesn't qualify for any benefits</Name>
            <Description>Checks whether there is at least one dependent that doesn't qualify for any benefits
            </Description>
            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/familyAndHouseholdWhoDontQualifyForAnyBenefitsCollection"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/claimedDependentsCollection">
            <Name>Claimed Dependents Collection</Name>
            <Description>The subset of claimable dependents that actually are claimed</Description>
            <Derived>
                <Filter path="/qualifyingDependentsCollection">
                    <Dependency path="isClaimedDependent"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/ctcDependentsCollection">
            <Name>CTC Eligible Dependents Collection</Name>
            <Description>The subset of claimed dependents who qualify for CTC</Description>
            <Derived>
                <Filter path="/claimedDependentsCollection">
                    <Dependency path="eligibleCtc"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/hasCtcDependentsCollectionCountGreaterThanOne">
            <Description>The count of subset of claimed dependents who qualify for CTC is greater than one</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/ctcDependentsCollection"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form8862CtcDependentsCollection">
            <Name>CTC Eligible Dependents when form 8862 is required for CTC Collection</Name>
            <Description>The subset of dependents who are claimed for CTC when the TP is required to use form 8862 for
                CTC
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="ctcOdc" path="/ctc8862Required"/>
                        </When>
                        <Then>
                            <Filter path="/claimedDependentsCollection">
                                <Dependency path="isClaimedForCTC"/>
                            </Filter>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/eitcDependentsCollection">
            <Name>EITC Eligible Dependents Collection</Name>
            <Description>The subset of people who qualify as qualifying children for EITC</Description>

            <Derived>
                <Filter path="/familyAndHousehold">
                    <Dependency path="eitcQualifyingChild"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/form8862EitcDependentsCollection">
            <Name>EITC Eligible Dependents for form 8862 Collection</Name>
            <Description>The subset of people who qualify as qualifying children for EITC when form 8862 is required,
                for PDF
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="eitc" path="/form8862RequiredAndHasQualifyingChildren"/>
                        </When>
                        <Then>
                            <Dependency path="/eitcDependentsCollection"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/odcDependentsCollection">
            <Name>ODC Eligible Dependents Collection</Name>
            <Description>The subset of claimed dependents who qualify for ODC</Description>

            <Derived>
                <Filter path="/claimedDependentsCollection">
                    <Dependency path="eligibleOdc"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/hasOdcDependentsCollectionCountGreaterThanOne">
            <Name>Whether the ODC Eligible Dependents Collection has a count greater than one</Name>
            <Description>The subset of claimed dependents who qualify for ODC</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/claimedDependentsCollection"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form8862OdcDependentsCollection">
            <Name>ODC Eligible Dependents when form 8862 is required for ODC Collection</Name>
            <Description>The subset of dependents that are claimed for ODC when form 8862 is required for
                ODC
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="ctcOdc" path="/ctc8862Required"/>
                        </When>
                        <Then>
                            <Filter path="/odcDependentsCollection">
                                <Dependency path="isClaimedForODC"/>
                            </Filter>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/unclaimedDependentsCollection">
            <Name>Unclaimed Dependents Collection</Name>
            <Description>The subset of people the TP has entered who have not been claimed as dependents</Description>
            <Derived>
                <Filter path="/familyAndHousehold">
                    <Dependency path="isNotClaimedDependent"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/deceasedEitcEligibleQcCollection">
            <Name>DeceasedEitcEligibleQcCollection</Name>
            <Description>The collection of EITC eligible QCs who died during the tax year. Required for form 8862, if
                the TP
                has to file form 8862.
            </Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Filter path="/eitcDependentsCollection">
                    <Dependency path="deceased"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/hasClaimedDependents">
            <Name>Claiming More Than 1 Dependents</Name>
            <Description>Are you claiming more than 1 dependents</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/claimedDependentsCollection"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/hasUnclaimedEITCQcsWithTINs">
            <Description>The filer has unclaimed EITC QCs for whom we still need to collect TINs</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Filter path="/unclaimedEITCQcsCollection">
                                <Dependency path="isEITCQCUnclaimedDependentWithTIN"/>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasUnclaimedEITCQcsAndQualifiesForEITC">
            <Description>The filer has unclaimed EITC QCs and qualifies for EITC overall</Description>
            <Derived>
                <All>
                    <Dependency module="eitc" path="/eitcQualified"/>
                    <GreaterThan>
                        <Left>
                            <CollectionSize>
                                <Dependency path="/unclaimedEITCQcsCollection"/>
                            </CollectionSize>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hasNoUnclaimedEITCQcsCollectionWhoNeedTINs">
            <Derived>
                <Any>
                    <!-- If we don't know if you qualify for EITC yet, this is complete -->
                    <Not>
                        <IsComplete>
                            <Dependency module="eitc" path="/eitcQualified"/>
                        </IsComplete>
                    </Not>
                    <!-- Or if you don't qualify for EITC, this is complete -->
                    <Not>
                        <Dependency module="eitc" path="/eitcQualified"/>
                    </Not>
                    <Not>
                        <Dependency path="/hasUnclaimedEITCQcsWithTINs"/>
                    </Not>
                    <Equal>
                        <Left>
                            <CollectionSize>
                                <Filter path="/unclaimedEITCQcsCollection">
                                    <Dependency path="isEITCQCUnclaimedDependentMissingTIN"/>
                                </Filter>
                            </CollectionSize>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/hasUnclaimedPeople">
            <Name>Has Unclaimed People</Name>
            <Description>Are there family or household members who have not been claimed as dependents?</Description>
            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/unclaimedDependentsCollection"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/hasPeople">
            <Name>FamilyAndHousehold has members</Name>
            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/familyAndHousehold"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/firstQualifyingDependent">
            <Name>First Qualifying Dependent</Name>
            <Description>The first qualifying dependent</Description>
            <Derived>
                <IndexOf>
                    <Collection>
                        <Dependency path="/qualifyingDependentsCollection"/>
                    </Collection>
                    <Index>
                        <Int>0</Int>
                    </Index>
                </IndexOf>
            </Derived>
        </Fact>
        <Fact path="/claimingMoreThan4Dependents">
            <Name>Claiming More Than 4 Dependents</Name>
            <Description>Are you claiming more than 4 dependents</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/claimedDependentsCollection/*/isClaimedDependent"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>4</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form8862ClaimingMoreThan4CtcDependents">
            <Name>Claiming More Than 4 CTC/RCTC/ACTC Dependents</Name>
            <Description>Are you claiming more than 4 dependents for CTC/RCTC/ACTC; for gating additional ctc dependents
                page
                for pdf form 8862
            </Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form8862CtcDependentsCollection/*/isClaimedDependent"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>4</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form8862ClaimingMoreThan4OdcDependents">
            <Name>Claiming More Than 4 ODC Dependents</Name>
            <Description>Are you claiming more than 4 dependents for ODC; for gating additional ODC dependents page for
                pdf
                form 8862
            </Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/form8862OdcDependentsCollection/*/isClaimedDependent"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>4</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/isMissingIpPin">
            <Name>Dependent is missing their IP Pin</Name>
            <Derived>
                <All>
                    <Dependency path="../hasIpPin"/>
                    <Not>
                        <Dependency path="../flowIpPinReady"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/weHaveIpPinIfWeShould">
            <Description>The filer says they have an IP Pin, they know it, and they've given it to us</Description>
            <Derived>
                <Any>
                    <!-- No IP Pin, no Problem -->
                    <Not>
                        <Dependency path="../hasIpPin"/>
                    </Not>
                    <!-- They've already said they don't have it -->
                    <Dependency path="../isMissingIpPin"/>
                    <All>
                        <Dependency path="../hasIpPin"/>
                        <Not>
                            <Dependency path="../isMissingIpPin"/>
                        </Not>
                        <IsComplete>
                            <Dependency path="../identityPin"/>
                        </IsComplete>
                    </All>

                </Any>
            </Derived>
        </Fact>
        <Fact path="/oneOrMoreDependentsAreMissingIpPin">
            <Name>One or more dependents are missing IP Pin</Name>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Filter path="/familyAndHousehold">
                                <Dependency path="isMissingIpPin"/>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/numEitcQualifyingChildren">
            <Name>Number of EITC Qualifying Children</Name>
            <Description>The number of dependents who qualify as QCs for EITC.</Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Count>
                    <Dependency path="/familyAndHousehold/*/eitcQualifyingChild"/>
                </Count>
            </Derived>
        </Fact>
        <Fact path="/claimedDependentsCount">
            <Name>Claimed Dependents Count</Name>
            <Description>The number of claimed dependents</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Count>
                    <Dependency path="/claimedDependentsCollection/*/isClaimedDependent"/>
                </Count>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/isAStudentUnder24">
            <Description>Allows the student person to pass the age test as a student. The same age test applies to QC
                for
                dependents and EITC.
            </Description>
            <Export mef="true"/>
            <Derived>
                <All>
                    <Dependency path="../fullTimeStudent"/>
                    <Dependency path="../studentStatusMayAffectBenefits"/>
                    <GreaterThan>
                        <Left>
                            <Dependency path="../dateOfBirth"/>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/minimumFilerDateOfBirth"/>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/scheduleEicLine4aYes">
            <Name>Schedule EIC Line 4a Yes checkbox</Name>
            <Description>Whether to mark the PDF checkbox for this EIC qualifying child.</Description>
            <Export stateSystems="true"/>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="../ageUnderNineteen"/>
                    </Not>
                    <Dependency path="../isAStudentUnder24"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/scheduleEicLine4aNo">
            <Name>Schedule EIC Line 4a No checkbox</Name>
            <Description>Whether to mark the PDF checkbox for this EIC qualifying child.</Description>
            <Export mef="true" stateSystems="true"/>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="../ageUnderNineteen"/>
                    </Not>
                    <Not>
                        <Dependency path="../isAStudentUnder24"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/scheduleEicLine4bYes">
            <Name>Schedule EIC Line 4b Yes checkbox</Name>
            <Description>Whether to mark the PDF checkbox for this EIC qualifying child.</Description>
            <Export stateSystems="true"/>
            <Derived>
                <All>
                    <Dependency path="../scheduleEicLine4aNo"/>
                    <Dependency path="../disabilityStatusMayAffectBenefits"/>
                    <Dependency path="../permanentTotalDisability"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/flowDidNotEnterPeople">
            <Description>The taxpayer has not entered people in their family and HH section</Description>
            <Derived>
                <Equal>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/familyAndHousehold"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/qssQualifyingDependentCollection">
            <Name>QSS Qualifying Dependent Collection</Name>
            <Description>A collection of all dependents that are QSS qualifying irrespective of claim status
            </Description>

            <Derived>
                <Filter path="/familyAndHousehold">
                    <Dependency path="qssQualifyingPerson"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/qssQualifyingUnclaimedCollection">
            <Name>QSS Qualifying Dependent Unclaimed Collection</Name>
            <Description>A collection of all dependents that are QSS qualifying and not claimed</Description>
            <Derived>
                <Filter path="/qssQualifyingDependentCollection">
                    <Dependency path="isNotClaimedDependent"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/qssQualifyingClaimedDependentCount">
            <Name>QSS Qualifying Claimed Dependent Count</Name>
            <Description>A count of all of the QSS qualifying dependents that are claimed</Description>
            <Derived>
                <CollectionSize>
                    <Filter path="/qssQualifyingDependentCollection">
                        <Dependency path="isClaimedDependent"/>
                    </Filter>
                </CollectionSize>
            </Derived>
        </Fact>
        <Fact path="/qssHasQualifyingUnclaimedDependent">
            <Name>Has QSS Qualifying Unclaimed Dependent</Name>
            <Description>Boolean check for whether there are any unclaimed QSS qualifying dependents</Description>
            <Export mef="true"/>
            <Derived>
                <All>
                    <GreaterThan>
                        <Left>
                            <CollectionSize>
                                <Dependency path="/qssQualifyingUnclaimedCollection"/>
                            </CollectionSize>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                    <Equal>
                        <Left>
                            <Dependency path="/qssQualifyingClaimedDependentCount"/>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </Equal>
                    <Dependency module="filingStatus" path="/isFilingStatusQSS"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/xmlFirstQssQualifyingUnclaimedDependent">
            <Name>First QSS Qualifying Unclaimed Dependent</Name>
            <Description>We need a name for the QualifyingPersonName field, and this is the intermediate
                step
            </Description>

            <Derived>
                <IndexOf>
                    <Collection>
                        <Dependency path="/qssQualifyingUnclaimedCollection"/>
                    </Collection>
                    <Index>
                        <Int>0</Int>
                    </Index>
                </IndexOf>
            </Derived>
        </Fact>
        <Fact path="/xmlFirstQssQualifyingUnclaimedDependentFirstName">
            <Name>First QSS Qualifying Unclaimed Dependent First Name</Name>
            <Description>First name of the QSS qualifying unclaimed dependent</Description>
            <Export mef="true"/>
            <Derived>
                <Dependency path="/xmlFirstQssQualifyingUnclaimedDependent/firstName"/>
            </Derived>
        </Fact>
        <Fact path="/xmlFirstQssQualifyingUnclaimedDependentLastName">
            <Name>First QSS Qualifying Unclaimed Dependent Last Name</Name>
            <Description>Last name of the QSS qualifying unclaimed dependent</Description>
            <Export mef="true"/>
            <Derived>
                <Dependency path="/xmlFirstQssQualifyingUnclaimedDependent/lastName"/>
            </Derived>
        </Fact>
        <Fact path="/hasHohQualifyingParent">
            <Name>Filer has a hoh qualifying parent</Name>
            <Description>This determines whether the filer's hoh qualifying person is a parent</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <All>
                                <Dependency path="/familyAndHousehold/*/hohQualifyingPerson"/>
                                <Equal>
                                    <Left>
                                        <Dependency module="dependentsRelationship"
                                                    path="/familyAndHousehold/*/relationship"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/relationshipOptions">parent</Enum>
                                    </Right>
                                </Equal>
                            </All>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hohQualifyingPeople">
            <Description>The set of people who qualify the TP for HoH</Description>
            <Derived>
                <Filter path="/familyAndHousehold">
                    <Dependency path="hohQualifyingPerson"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/hohQualifyingPerson">
            <Description>
                If the TP is HoH, this is the person that they've chosen to allow them to claim HoH status.
            </Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <CollectionItem collection="/hohQualifyingPeople"/>
            </Writable>
        </Fact>
        <Fact path="/hohQualifyingPersonStoppedExisting">
            <Description>Did you delete your HoH qualifying person?</Description>
            <Derived>
                <Not>
                    <IsComplete>
                        <Dependency path="/hohQualifyingPerson/existentialFact"/>
                    </IsComplete>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/hasUnqualifiedHohQualifyingPerson">
            <Description>The filer selected a dependent who, at the time, was an hohQualifyingPerson, but something
                changed
                and now they are not
            </Description>
            <Derived>

                <All>
                    <IsComplete>
                        <Dependency path="/hohQualifyingPerson"/>
                    </IsComplete>
                    <Not>
                        <Dependency path="/hohQualifyingPerson/hohQualifyingPerson"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/isBiologicalAdoptedFosterOrStepchild">
            <Name>Is Biological, Adopted, Foster, or Stepchild</Name>
            <Description>Is biological, adopted, foster, or stepchild</Description>
            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">biologicalChild</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">adoptedChild</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">fosterChild</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="dependentsRelationship" path="../relationship"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/relationshipOptions">stepChild</Enum>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/hasHohQualifyingChild">
            <Name>Has a child qualifying filer to file as HoH</Name>
            <Description>If the filer has a qualifying child type as hoh qualifying person</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <All>
                                <Dependency path="/familyAndHousehold/*/hohQualifyingPerson"/>
                                <Dependency path="/familyAndHousehold/*/isBiologicalAdoptedFosterOrStepchild"/>
                            </All>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/needsToRevisitHohQualifyingPersonSelectionOrFilingStatus">
            <Description>The filer's HoH qualifying person is no longer qualified or got deleted. They need to take
                corrective
                action.
            </Description>
            <BlockSubmissionOnTrue/>
            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusHOH"/>
                    <Dependency module="filingStatus" path="/eligibleForHoh"/>
                    <IsComplete>
                        <Dependency path="/hohQualifyingPerson"/>
                    </IsComplete>
                    <Any>
                        <Dependency path="/hohQualifyingPersonStoppedExisting"/>
                        <Dependency path="/hasUnqualifiedHohQualifyingPerson"/>
                    </Any>
                </All>
            </Derived>

        </Fact>
        <Fact path="/hasExactlyOneHohQP">
            <Derived>
                <Equal>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/hohQualifyingPeople"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/firstHohQP">
            <Derived>
                <IndexOf>
                    <Collection>
                        <Dependency path="/hohQualifyingPeople"/>
                    </Collection>
                    <Index>
                        <Int>0</Int>
                    </Index>
                </IndexOf>
            </Derived>
        </Fact>
        <Fact path="/hohQPHasTin">
            <Description>Whether the TP's HOH QP has a tin known to the TP</Description>
            <Derived>
                <NotEqual>
                    <Left>
                        <Dependency path="/hohQualifyingPerson/tinType"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/tinTypeOptions">none</Enum>
                    </Right>
                </NotEqual>
            </Derived>
        </Fact>
        <Fact path="/knockoutHohQpHasNoTin">
            <Description>
                The TP's chosen HOH QP does not have a TIN, so we must knock the user out of the product.
            </Description>
            <Derived>
                <All>
                    <Dependency path="/isFilingStatusHOH" module="filingStatus"/>
                    <Not>
                        <Dependency path="/hohQPHasTin"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/needToEnterHohQPTin">
            <Description>
                Whether the TP needs to enter the TIN for the HoH QP
            </Description>

            <Derived>
                <All>
                    <Dependency path="/hohQPHasTin"/>
                    <Not>
                        <IsComplete>
                            <Dependency path="/hohQualifyingPerson/tin"/>
                        </IsComplete>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/claimedHohQPs">
            <Description>The set of people who qualify the TP for HoH</Description>
            <Derived>
                <Filter path="/hohQualifyingPeople">
                    <Dependency path="isClaimedDependent"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/allHoHQPsAreClaimedDependents">
            <Derived>
                <Equal>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/claimedHohQPs"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <CollectionSize>
                            <Dependency path="/hohQualifyingPeople"/>
                        </CollectionSize>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/isSelectedHohQP">
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/hohQualifyingPerson"/>
                    </Left>
                    <Right>
                        <Dependency path=".."/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/isValidSelectedHohQP">
            <Description>Is both the selected HoH QP and is eligible to be</Description>
            <Derived>
                <All>
                    <Dependency path="../isSelectedHohQP"/>
                    <Dependency path="../hohQualifyingPerson"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/familyAndHousehold/*/needsToEnterTINForHoh">
            <Derived>
                <All>
                    <Dependency path="../isSelectedHohQP"/>
                    <Not>
                        <IsComplete>
                            <Dependency path="../tin"/>
                        </IsComplete>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/flowFamilyAndHouseholdKnockout">
            <Description>The user has been knocked out for reasons(s) defined in this module</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Any>
                    <Dependency path="/knockoutHohQpHasNoTin"/>
                    <Dependency path="/knockoutPersonBornAndDiedInTaxYearWithoutTin"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/mayNeedToFileForm8962">
            <Description>Whether TP may potentially need to file Form 8962</Description>
            <Derived>
                <All>
                    <GreaterThanOrEqual>
                        <Left>
                            <CollectionSize>
                                <Filter path="/1095As">
                                    <Dependency path="hasCoverageMonthsOrAptc"/>
                                </Filter>
                            </CollectionSize>
                        </Left>
                        <Right>
                            <Int>1</Int>
                        </Right>
                    </GreaterThanOrEqual>
                    <Dependency path="/maybeEligibleForPtc"/>
                    <Dependency path="/hasPtcQualifyingPlan"/>
                    <Dependency path="/applicableTaxPayerOrHasAptc"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/needsToFileForm8962">
            <Description>Whether TP need to file Form 8962</Description>
            <!-- Currently just exists as a placeholder wrapping fact, and could be deleted -->
            <Export mef="true" downstreamFacts="true"/>
            <Derived>
                <All>
                    <Dependency path="/mayNeedToFileForm8962"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/maybeEligibleForPtc">
            <Description>Maybe eligible for PTC based on dependence status</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Not>
                    <All>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        <Dependency module="filers" path="/isMFJDependent"/>
                    </All>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/ptcSectionIsComplete">
            <Description>PTC section is complete</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <All>
                    <Any>
                        <Not>
                            <Dependency path="/maybeEligibleForPtc"/>
                        </Not>
                        <Dependency path="/dependentTpForm8962NotNeeded"/>
                        <Dependency path="/ptcNotQualifiedNoAptc"/>
                        <All>
                            <Dependency path="/applicableTaxPayerOrHasAptc"/>
                            <!-- Ensures that we ask immigration status eligibility question when applicable -->
                            <Any>
                                <Not>
                                    <IsComplete>
                                        <Dependency
                                                path="/mayPotentiallyHaveTaxFamilyWithNonEligibleImmigrationStatus"/>
                                    </IsComplete>
                                </Not>
                                <Not>
                                    <Dependency path="/mayPotentiallyHaveTaxFamilyWithNonEligibleImmigrationStatus"/>
                                </Not>
                                <IsComplete>
                                    <Dependency path="/writableHasImmigrationStatusNotEligibleForMarketplace"/>
                                </IsComplete>
                            </Any>
                            <Dependency path="/1095AsIsDone"/>
                            <Any>
                                <Dependency path="/ptcNotQualifiedHasAptc"/>
                                <All>
                                    <Dependency path="/qualifiedForPtc"/>
                                    <IsComplete>
                                        <Dependency path="/netPtcAmount"/>
                                    </IsComplete>
                                </All>
                            </Any>
                        </All>
                    </Any>
                    <Dependency path="/uniqueCircumstancesIsComplete"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/uniqueCircumstancesIsComplete">
            <Description>Fact to ensure unique circumstances section is complete</Description>
            <Derived>
                <!-- Hack to enforce answering unique-circumstance should they be required through edit scenarios -->
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency
                                        path="/hasPtcQualifyingPlan"/> <!-- This internally checks /maybeEligibleForPtc -->
                                <Not>
                                    <Dependency path="/filerNotQualifiedForPtcBecauseOfStatusAndResidenceInfo"/>
                                </Not>
                            </All>
                        </When>
                        <Then>
                            <All>
                                <!-- handle mfs-exception-check -->
                                <Switch>
                                    <Case>
                                        <When>
                                            <All>
                                                <IsComplete>
                                                    <Dependency path="/isMFSAndCantBeClaimed"/>
                                                </IsComplete>
                                                <Dependency path="/isMFSAndCantBeClaimed"/>
                                            </All>
                                        </When>
                                        <Then>
                                            <IsComplete>
                                                <Dependency path="/writableHasMfsException"/>
                                            </IsComplete>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <True/>
                                        </Then>
                                    </Case>
                                </Switch>

                                <!-- handle mfs-exception-past-use -->
                                <Switch>
                                    <Case>
                                        <When>
                                            <All>
                                                <IsComplete>
                                                    <Dependency path="/hasMfsException"/>
                                                </IsComplete>
                                                <Dependency path="/hasMfsException"/>
                                            </All>
                                        </When>
                                        <Then>
                                            <IsComplete>
                                                <Dependency path="/writableClaimingMfsExceptionForFourthStraightYear"/>
                                            </IsComplete>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <True/>
                                        </Then>
                                    </Case>
                                </Switch>

                                <!-- handle below-100-medicaid -->
                                <Switch>
                                    <Case>
                                        <When>
                                            <All>
                                                <IsComplete>
                                                    <Dependency
                                                            path="/maybeApplicableTpAndNoAptcAndBelow100PovertyThreshold"/>
                                                </IsComplete>
                                                <Dependency
                                                        path="/maybeApplicableTpAndNoAptcAndBelow100PovertyThreshold"/>
                                            </All>
                                        </When>
                                        <Then>
                                            <IsComplete>
                                                <Dependency
                                                        path="/writableBelow100ThresholdAndNotEligibleForMedicaidBecauseOfImmigrationStatus"/>
                                            </IsComplete>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <True/>
                                        </Then>
                                    </Case>
                                </Switch>
                            </All>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/dependentTpSelfEnrolled">
            <Description>Whether the dependent TP self enrolled in a marketplace health plan</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/dependentTpEnrolledSomeoneElse">
            <Description>Whether the dependent TP enrolled someone else in a marketplace health plan</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/writableDependentTpOtherMembersArePartOfDifferentTaxFamily">
            <Description>(writable)Whether the other person the dependent tax payer enrolled is part of a different tax
                family
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/dependentTpOtherMembersArePartOfDifferentTaxFamily">
            <Description>Whether the other person the dependent tax payer enrolled is part of a different tax family
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/dependentTpEnrolledSomeoneElse "/>
                        </When>
                        <Then>
                            <Dependency path="/writableDependentTpOtherMembersArePartOfDifferentTaxFamily "/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/dependentTpRequiresAllocations">
            <Description>Scenarios(requires allocations) we don't support for dependent taxpayers</Description>
            <Derived>
                <All>
                    <Dependency module="filers"
                                path="/notMfjAndPrimaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits"/>
                    <Dependency path="/dependentTpSelfEnrolled"/>
                    <Dependency path="/dependentTpEnrolledSomeoneElse"/>
                    <IsComplete>
                        <Dependency path="/dependentTpOtherMembersArePartOfDifferentTaxFamily"/>
                    </IsComplete>
                    <Any>
                        <Dependency path="/claimedAndNotPartOfDifferentTaxFamily"/>
                        <Dependency path="/notClaimedAndPartOfDifferentTaxFamily"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/claimedAndNotPartOfDifferentTaxFamily">
            <Description>TP is being claimed and someone else enrolled is not part of a different tax family
            </Description>
            <Derived>
                <All>
                    <Dependency module="filers" path="/primaryFilerIsClaimedAsDependent"/>
                    <Not>
                        <Dependency path="/dependentTpOtherMembersArePartOfDifferentTaxFamily"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/notClaimedAndPartOfDifferentTaxFamily">
            <Description>TP is not being claimed and someone else enrolled is part of different tax family</Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency module="filers" path="/primaryFilerIsClaimedAsDependent"/>
                    </Not>
                    <Dependency path="/dependentTpOtherMembersArePartOfDifferentTaxFamily"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/dependentTpForm8962NotNeeded">
            <Description>If the dependent tp should see the non needed screen</Description>
            <Derived>
                <All>
                    <Dependency module="filers"
                                path="/notMfjAndPrimaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits"/>
                    <Any>
                        <Dependency path="/ptcDependentTpDidNotEnrollSelfOrOthers"/>
                        <Dependency path="/ptcDependentTpIsClaimedDidEnrollSelfAndNotOthers"/>
                        <Dependency path="/ptcDependentTpIsClaimedDidEnrollSelfAndOthersAndPartOfDifferentTaxFamily"/>
                        <Dependency
                                path="/ptcDependentTpDidNotEnrollSelfAndEnrolledOthersWhoIsPartOfDifferentTaxFamily"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/eitherDependentTpForm8962NotNeededOrNotQualifiedNoAptc">
            <Description>either dependentTpForm8962NotNeeded OR ptcNotQualifiedNoAptc</Description>
            <Derived>
                <Any>
                    <Dependency path="/dependentTpForm8962NotNeeded"/>
                    <Dependency path="/ptcNotQualifiedNoAptc"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/ptcNotClaimedDependentTpWhoOnlyEnrolledSelf">
            <Description>TP who is not being claimed, but could be, and only enrolled themselves</Description>
            <Derived>
                <All>
                    <Dependency module="filers"
                                path="/notMfjAndPrimaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits"/>
                    <Not>
                        <Dependency module="filers" path="/primaryFilerIsClaimedAsDependent"/>
                    </Not>
                    <Dependency path="/dependentTpSelfEnrolled"/>
                    <Not>
                        <Dependency path="/dependentTpEnrolledSomeoneElse"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/ptcNotClaimedDependentTpWhoOnlyEnrolledSomeoneElseNotPartOfDiffTaxFam">
            <Description>TP who is not being claimed, but could be, and only enrolled someone else who is not part of a
                different tax family
            </Description>
            <Derived>
                <All>
                    <Dependency module="filers"
                                path="/notMfjAndPrimaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits"/>
                    <Not>
                        <Dependency module="filers" path="/primaryFilerIsClaimedAsDependent"/>
                    </Not>
                    <Not>
                        <Dependency path="/dependentTpSelfEnrolled"/>
                    </Not>
                    <Dependency path="/dependentTpEnrolledSomeoneElse"/>
                    <Not>
                        <Dependency path="/dependentTpOtherMembersArePartOfDifferentTaxFamily"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/ptcNotClaimedDependentTpWhoEnrolledSelfAndSomeoneElseNotPartOfDiffTaxFam">
            <Description>TP who is not being claimed, but could be, and enrolled themselves and someone else who is not
                part
                of a different tax family
            </Description>
            <Derived>
                <All>
                    <Dependency module="filers"
                                path="/notMfjAndPrimaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits"/>
                    <Not>
                        <Dependency module="filers" path="/primaryFilerIsClaimedAsDependent"/>
                    </Not>
                    <Dependency path="/dependentTpSelfEnrolled"/>
                    <Dependency path="/dependentTpEnrolledSomeoneElse"/>
                    <Not>
                        <Dependency path="/dependentTpOtherMembersArePartOfDifferentTaxFamily"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/ptcDependentTpDidNotEnrollSelfOrOthers">
            <Description>Dependent TP did not enroll self and didn't enroll someone else</Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="/dependentTpSelfEnrolled"/>
                    </Not>
                    <Not>
                        <Dependency path="/dependentTpEnrolledSomeoneElse"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/ptcDependentTpIsClaimedDidEnrollSelfAndNotOthers">
            <Description>Dependent TP enrolled self and didn't enroll anyone else and is being claimed</Description>
            <Derived>
                <All>
                    <Dependency module="filers" path="/primaryFilerIsClaimedAsDependent"/>
                    <Dependency path="/dependentTpSelfEnrolled"/>
                    <Not>
                        <Dependency path="/dependentTpEnrolledSomeoneElse"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/ptcDependentTpIsClaimedDidEnrollSelfAndOthersAndPartOfDifferentTaxFamily">
            <Description>Dependent TP is claimed, did enroll self and someone else and someone is part of different tax
                family
            </Description>
            <Derived>
                <All>
                    <Dependency module="filers" path="/primaryFilerIsClaimedAsDependent"/>
                    <Dependency path="/dependentTpSelfEnrolled"/>
                    <Dependency path="/dependentTpEnrolledSomeoneElse"/>
                    <Dependency path="/dependentTpOtherMembersArePartOfDifferentTaxFamily"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/ptcDependentTpDidNotEnrollSelfAndEnrolledOthersWhoIsPartOfDifferentTaxFamily">
            <Description>Dependent TP did not enroll self, enrolled someone else and they are part of different tax
                family
            </Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="/dependentTpSelfEnrolled"/>
                    </Not>
                    <Dependency path="/dependentTpEnrolledSomeoneElse"/>
                    <Dependency path="/dependentTpOtherMembersArePartOfDifferentTaxFamily"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/dependentTpNeedToCollectMoreInfo">
            <Description>They have answered some basic quesitons about their tax family and we still need to collect
                more
                information
            </Description>
            <Derived>
                <Any>
                    <Dependency path="/ptcDependentTpNotClaimedAndOnlyEnrolledSelf"/>
                    <Dependency path="/ptcDependentTpOnlyEnrolledOthersAndNotPartOfDifferentTaxFamily"/>
                    <Dependency path="/ptcDependentTpNotClaimedEnrolledSelfAndOthersNotPartOfDifferentTaxFamily"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/ptcDependentTpNotClaimedAndOnlyEnrolledSelf">
            <Description>Dependent TP is not claimed and only enrolled self</Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency module="filers" path="/primaryFilerIsClaimedAsDependent"/>
                    </Not>
                    <Dependency path="/dependentTpSelfEnrolled"/>
                    <Not>
                        <Dependency path="/dependentTpEnrolledSomeoneElse"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/ptcDependentTpOnlyEnrolledOthersAndNotPartOfDifferentTaxFamily">
            <Description>Dependent TP that only enrolled someone else and they are not part of a different tax family
            </Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="/dependentTpSelfEnrolled"/>
                    </Not>
                    <Dependency path="/dependentTpEnrolledSomeoneElse"/>
                    <Not>
                        <Dependency path="/dependentTpOtherMembersArePartOfDifferentTaxFamily"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/ptcDependentTpNotClaimedEnrolledSelfAndOthersNotPartOfDifferentTaxFamily">
            <Description>Dependent TP that is not Claimed and enrolled self and someone else and they are not part of
                different tax family
            </Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency module="filers" path="/primaryFilerIsClaimedAsDependent"/>
                    </Not>
                    <Dependency path="/dependentTpSelfEnrolled"/>
                    <Dependency path="/dependentTpEnrolledSomeoneElse"/>
                    <Not>
                        <Dependency path="/dependentTpOtherMembersArePartOfDifferentTaxFamily"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/writableHasPtcQualifyingPlan">
            <Description>(Writable) Whether the TP is enrolled for a qualifying plan for at least one month
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/hasPtcQualifyingPlan">
            <Description>Whether the TP is enrolled for a qualifying plan for at least one month</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/maybeEligibleForPtc"/>
                        </When>
                        <Then>
                            <Switch>
                                <Case>
                                    <When>
                                        <Dependency module="filers"
                                                    path="/notMfjAndPrimaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits"/>
                                    </When>
                                    <Then>
                                        <Dependency path="/dependentTpNeedToCollectMoreInfo"/>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <True/>
                                    </When>
                                    <Then>
                                        <Dependency path="/writableHasPtcQualifyingPlan"/>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/hasPtcQualifyingPlanAndQsehra">
            <Description>Whether the TP has both a PTC qualifying plan and has FF in their box 12 codes in their W2
            </Description>
            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="/hasPtcQualifyingPlan"/>
                    </IsComplete>
                    <Dependency path="/hasPtcQualifyingPlan"/>
                    <Dependency module="formW2s" path="/hasQsehra"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/writableDependentsRequiredToFile">
            <Description>(writable)At least one dependent is required to file</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/dependentsRequiredToFile">
            <Description>At least one dependent is required to file</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/hasPtcQualifyingPlan"/>
                                <GreaterThanOrEqual>
                                    <Left>
                                        <Dependency module="familyAndHousehold" path="/claimedDependentsCount"/>
                                    </Left>
                                    <Right>
                                        <Int>1</Int>
                                    </Right>
                                </GreaterThanOrEqual>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/writableDependentsRequiredToFile "/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/writableSelfReportedHasMultiple1095As">
            <Description>(writable)TP has multiple 1095-As they need to report</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/selfReportedHasMultiple1095As">
            <Description>TP has multiple 1095-As they need to report</Description>
            <Derived>
                <All>
                    <Dependency path="/hasPtcQualifyingPlan"/>
                    <Dependency path="/writableSelfReportedHasMultiple1095As"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/writableIsAdditionalPersonInEnrollmentFamily">
            <Description>(Writable) Whether an additional person outside of your tax family is part of the enrollment
                family
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/isAdditionalPersonInEnrollmentFamily">
            <Description>Whether an additional person outside of your tax family is part of the enrollment family
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/hasPtcQualifyingPlan"/>
                                <Not>
                                    <Dependency module="filers"
                                                path="/notMfjAndPrimaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits"/>
                                </Not>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/writableIsAdditionalPersonInEnrollmentFamily"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/writableIsAdditionalPersonPartofDifferentTaxFamily">
            <Description>(Writable) is additional person also part of a different tax family</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/isAdditionalPersonPartofDifferentTaxFamily">
            <Description>Is additional person also part of a different tax family</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/isAdditionalPersonInEnrollmentFamily"/>
                        </When>
                        <Then>
                            <Dependency path="/writableIsAdditionalPersonPartofDifferentTaxFamily"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Any>
                                <All>
                                    <IsComplete>
                                        <Dependency path="/isAdditionalPersonInEnrollmentFamily"/>
                                    </IsComplete>
                                    <Not>
                                        <Dependency path="/isAdditionalPersonInEnrollmentFamily"/>
                                    </Not>
                                </All>
                                <Dependency module="filers"
                                            path="/notMfjAndPrimaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits"/>
                            </Any>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/writableIsEnrolledWithOtherFamily">
            <Description>(Writable) Is someone in your tax family, also enrolled with other family</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/isEnrolledWithOtherFamily">
            <Description>Is someone in your tax family, also enrolled with other family</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Not>
                                <Dependency path="/isAdditionalPersonPartofDifferentTaxFamily"/>
                            </Not>
                        </When>
                        <Then>
                            <Dependency path="/writableIsEnrolledWithOtherFamily"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/mayPotentiallyHaveTaxFamilyWithNonEligibleImmigrationStatus">
            <Description>Whether the TP is asked if their tax family has anyone that is ineligible for a marketplace
                plan
                because of their immigration status
            </Description>
            <Derived>
                <Any>
                    <All>
                        <Dependency path="/isAdditionalPersonInEnrollmentFamily"/>
                        <Not>
                            <Dependency path="/isEnrolledWithOtherFamily"/>
                        </Not>
                    </All>
                    <Not>
                        <Dependency module="filers" path="/allEligibleFilersAreUSCitizensOrNationals"/>
                    </Not>
                    <Dependency module="familyAndHousehold" path="/hasClaimedDependents"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/writableHasImmigrationStatusNotEligibleForMarketplace">
            <Description>(writable)Whether someone in tax family has an immigration status that we don't support on DF
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/hasImmigrationStatusNotEligibleForMarketplace">
            <Description>Whether someone in tax family has an immigration status that we don't support on DF
            </Description>
            <Derived>
                <All>
                    <Dependency path="/hasPtcQualifyingPlan"/>
                    <Dependency path="/mayPotentiallyHaveTaxFamilyWithNonEligibleImmigrationStatus"/>
                    <Dependency path="/writableHasImmigrationStatusNotEligibleForMarketplace"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/needsAllocations">
            <Description>Whether allocations are required for PTC/APTC, this is a KO because we don't support this
            </Description>
            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="/hasPtcQualifyingPlan"/>
                    </IsComplete>
                    <Dependency path="/hasPtcQualifyingPlan"/>
                    <Any>
                        <Dependency path="/isAdditionalPersonPartofDifferentTaxFamily"/>
                        <Dependency path="/isEnrolledWithOtherFamily"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/writableHasAdvancedPtc">
            <Description>(Writable) Whether the TP has recieved advaned payments of the PTC</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/hasAdvancedPtc">
            <Description>Whether the TP has recieved advaned payments of the PTC</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/hasPtcQualifyingPlan"/>
                        </When>
                        <Then>
                            <Dependency path="/writableHasAdvancedPtc"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filerNotQualifiedForPtcBecauseOfStatusAndResidenceInfo">
            <Description>Filer not qualified because of filing status and no APTC</Description>
            <Derived>
                <Any>
                    <All>
                        <IsComplete>
                            <Dependency path="/hasAdvancedPtc"/>
                        </IsComplete>
                        <Dependency module="filingStatus" path="/isFilingStatusHOH"/>
                        <Dependency module="filers" path="/isMarried"/>
                        <Not>
                            <Dependency module="filers" path="/secondaryFilerResidencyEligibleForMFJ"/>
                        </Not>
                        <Not>
                            <Dependency module="filers" path="/livedApartLastSixMonths"/>
                        </Not>
                    </All>
                    <All>
                        <Not>
                            <Dependency path="/hasAdvancedPtc"/>
                        </Not>
                        <Dependency module="filers"
                                    path="/notMfjAndPrimaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits"/>
                        <Not>
                            <Dependency module="filers" path="/primaryFilerIsClaimedAsDependent"/>
                        </Not>
                        <Any>
                            <Dependency path="/dependentTpSelfEnrolled"/>
                            <All>
                                <Dependency path="/dependentTpEnrolledSomeoneElse"/>
                                <Not>
                                    <Dependency path="/dependentTpOtherMembersArePartOfDifferentTaxFamily"/>
                                </Not>
                            </All>
                        </Any>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/qualifiedForPtc">
            <Description>qualifed for PTC</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <All>
                    <Dependency path="/hasPtcQualifyingPlan"/>
                    <Not>
                        <Dependency path="/filerNotQualifiedForPtcBecauseOfStatusAndResidenceInfo"/>
                    </Not>
                    <Dependency path="/potentiallyApplicableTaxPayer"/>
                    <IsComplete>
                        <Dependency path="/ptcHasZeroCoverageMonths"/>
                    </IsComplete>
                    <Not>
                        <Dependency path="/ptcHasZeroCoverageMonths"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/qualifiedForPtcNoAptcAndPtcTotalGreaterThanZero">
            <Description>TP qualifies for PTC and has no APTC, and they get a positive credit amount</Description>
            <Derived>
                <All>
                    <Dependency path="/qualifiedForPtc"/>
                    <Not>
                        <Dependency path="/hasAdvancedPtc"/>
                    </Not>
                    <GreaterThan>
                        <Left>
                            <Dependency path="/totalPtcAmountAllowed"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/qualifiedForPtcNoAptcAndPtcTotalIsZero">
            <Description>TP qualifies for PTC and has no APTC, and they get a credit of zero</Description>
            <Derived>
                <All>
                    <Dependency path="/qualifiedForPtc"/>
                    <Not>
                        <Dependency path="/hasAdvancedPtc"/>
                    </Not>
                    <Equal>
                        <Left>
                            <Dependency path="/totalPtcAmountAllowed"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/qualifiedForPtcHasAptcAndNetCreditIsZero">
            <Description>TP qualifies for PTC and has APTC, and they get a credit of zero</Description>
            <Derived>
                <All>
                    <Dependency path="/qualifiedForPtc"/>
                    <Dependency path="/hasAdvancedPtc"/>
                    <Equal>
                        <Left>
                            <Dependency path="/netPtcAmount"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/qualifiedForPtcHasAptcAndNetCreditIsPositive">
            <Description>TP qualifies for PTC and has APTC, and they get a positive credit</Description>
            <Derived>
                <All>
                    <Dependency path="/qualifiedForPtc"/>
                    <Dependency path="/hasAdvancedPtc"/>
                    <GreaterThan>
                        <Left>
                            <Dependency path="/netPtcAmount"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/qualifiedForPtcHasAptcAndNetCreditIsNegativeAndRepaymentLimitationIsNotActive">
            <Description>TP qualifies for PTC, has APTC, they get a negative credit, and repayment limitation is not
                applied
            </Description>
            <Derived>
                <All>
                    <Dependency path="/qualifiedForPtc"/>
                    <Dependency path="/hasAdvancedPtc"/>
                    <Dependency path="/netPtcAmountIsNegative"/>
                    <Not>
                        <Dependency path="/isRepaymentLimitationIsActive"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/qualifiedForPtcHasAptcAndNetCreditIsNegativeAndHasRepaymentLimitation">
            <Description>TP qualifies for PTC, has APTC, they get a negative credit, and repayment limitation applied
            </Description>
            <Derived>
                <All>
                    <Dependency path="/qualifiedForPtc"/>
                    <Dependency path="/hasAdvancedPtc"/>
                    <Dependency path="/netPtcAmountIsNegative"/>
                    <Dependency path="/isRepaymentLimitationIsActive"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/notDisqualifiedBecauseDependentTp">
            <Description>Whether you are not disqualifed because of dependent tp flow</Description>
            <Derived>
                <Any>
                    <Not>
                        <IsComplete>
                            <Dependency path="/dependentTpForm8962NotNeeded"/>
                        </IsComplete>
                    </Not>
                    <Not>
                        <Dependency path="/dependentTpForm8962NotNeeded"/>
                    </Not>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/ptcNotQualifiedNoAptc">
            <Description>Whether the TP is not qualified for PTC and doesn't have APTC</Description>
            <Derived>
                <All>
                    <Any>
                        <Not>
                            <Dependency path="/hasPtcQualifyingPlan"/>
                        </Not>
                        <All>
                            <Not>
                                <Dependency path="/hasAdvancedPtc"/>
                            </Not>
                            <Any>
                                <Dependency path="/filerNotQualifiedForPtcBecauseOfStatusAndResidenceInfo"/>
                                <Dependency path="/notPtcApplicableTaxPayer"/>
                                <All>
                                    <IsComplete>
                                        <Dependency path="/ptcHasZeroCoverageMonths"/>
                                    </IsComplete>
                                    <Dependency path="/ptcHasZeroCoverageMonths"/>
                                </All>
                            </Any>
                        </All>
                    </Any>
                    <Dependency path="/notDisqualifiedBecauseDependentTp"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/ptcNotQualifiedHasAptc">
            <Description>Whether the TP is not qualified for PTC and has APTC</Description>
            <Derived>
                <All>
                    <Not>
                        <Any>
                            <Dependency path="/tpNeedsToAdd1095A"/>
                            <Dependency path="/tpNeedsToDelete1095A"/>
                        </Any>
                    </Not>
                    <Dependency path="/hasAdvancedPtc"/>
                    <Any>
                        <Dependency path="/notPtcApplicableTaxPayer"/>
                        <All>
                            <IsComplete>
                                <Dependency path="/ptcHasZeroCoverageMonths"/>
                            </IsComplete>
                            <Dependency path="/ptcHasZeroCoverageMonths"/>
                        </All>
                    </Any>
                    <Dependency path="/notDisqualifiedBecauseDependentTp"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hasAtLeastOneComplete1095A">
            <Description>
                Whether the filer has at least one complete 1095-A.
                This is distinct from has1095A because it being
                complete means the filer can mark the collection hub as completed.
            </Description>
            <Derived>
                <All>
                    <GreaterThan>
                        <Left>
                            <Count>
                                <Dependency path="/1095As/*/safeIsComplete"/>
                            </Count>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/notApplicableTaxPayerAndHasAptc">
            <Description>Not an applicable tax payer and has APTC</Description>
            <Derived>
                <All>
                    <Dependency path="/notPtcApplicableTaxPayer"/>
                    <Dependency path="/hasAdvancedPtc"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/tpNeedsToAdd1095A">
            <Description>Whether the TP is prompted to add a 1095-A</Description>
            <BlockSubmissionOnTrue/>
            <Derived>
                <All>
                    <Dependency path="/hasPtcQualifyingPlan"/>
                    <Dependency path="/applicableTaxPayerOrHasAptc"/>
                    <Dependency path="/1095AsIsDone"/>
                    <Not>
                        <Dependency path="/has1095A"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/tpNeedsToDelete1095A">
            <Description>Whether the TP is prompted to delete a 1095-A (becasue we don't support more than 1)
            </Description>
            <BlockSubmissionOnTrue/>
            <Derived>
                <All>
                    <Dependency path="/hasPtcQualifyingPlan"/>
                    <Dependency path="/applicableTaxPayerOrHasAptc"/>
                    <Dependency path="/hasMultiple1095As"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/applicableTaxPayerOrHasAptc">
            <Description>TP is applicable or has APTC</Description>
            <Derived>
                <Any>
                    <Dependency path="/potentiallyApplicableTaxPayer"/>
                    <Dependency path="/hasAdvancedPtc"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/taxFamilySizeNegationBasedOnWhetherSomeoneCouldBeClaimed">
            <Description>The number to reduce the taxFamily size based on who can be claimed on the 1040</Description>
            <Derived>
                <Multiply>
                    <Add>
                        <Count>
                            <Dependency module="filers" path="/primarySomeoneCanClaimForTaxBenefits"/>
                        </Count>
                        <Count>
                            <Dependency module="filers" path="/secondarySomeoneCanClaimForTaxBenefits"/>
                        </Count>
                    </Add>
                    <Int>-1</Int>
                </Multiply>
            </Derived>
        </Fact>
        <Fact path="/taxFamilySize">
            <Description>Tax family size (Filers + dependents)</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <Add>
                                <Int>2</Int>
                                <Dependency module="familyAndHousehold" path="/claimedDependentsCount"/>
                                <Dependency path="/taxFamilySizeNegationBasedOnWhetherSomeoneCouldBeClaimed"/>
                            </Add>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Add>
                                <Int>1</Int>
                                <Dependency module="familyAndHousehold" path="/claimedDependentsCount"/>
                                <Dependency path="/taxFamilySizeNegationBasedOnWhetherSomeoneCouldBeClaimed"/>
                            </Add>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/federalPovertyLocationOptions">
            <Description>Option for which state is used to apply the federal poverty line</Description>
            <Derived>
                <EnumOptions>
                    <String>alaska</String>
                    <String>hawaii</String>
                    <String>other</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/federalPovertyLocation">
            <Description>The actual location chosen based on residency</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filers" path="/livedInAk"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/federalPovertyLocationOptions">alaska</Enum>
                        </Then>
                    </Case>
                    <!-- We don't support this right now -->
                    <Case>
                        <When>
                            <Dependency module="filers" path="/livedInHi"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/federalPovertyLocationOptions">hawaii</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Enum optionsPath="/federalPovertyLocationOptions">other</Enum>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/federalPovertyLineLocationIsAlaska">
            <Description>Whether federal poverty line location is Alaska</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/federalPovertyLocation"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/federalPovertyLocationOptions">alaska</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/federalPovertyLineLocationIsHawaii">
            <Description>Whether federal poverty line location is Hawaii</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/federalPovertyLocation"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/federalPovertyLocationOptions">hawaii</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/federalPovertyLineLocationIsOther">
            <Description>Whether federal poverty line location is other 48 states or DC (not Alaska or Hawaii)
            </Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/federalPovertyLocation"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/federalPovertyLocationOptions">other</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/federalPovertyLineMagicNumberStartingNumber">
            <Description>Magic number for the federal poverty line starting number based on residence, this form uses
                the
                previous year's number
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/federalPovertyLineLocationIsAlaska"/>
                        </When>
                        <Then>
                            <Dollar>18210</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="/federalPovertyLineLocationIsHawaii"/>
                        </When>
                        <Then>
                            <Dollar>16770</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="/federalPovertyLineLocationIsOther"/>
                        </When>
                        <Then>
                            <Dollar>14580</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/federalPovertyLineMagicNumberIncrement">
            <Description>Magic number for the federal poverty line increment based on residence, this form uses the
                previous
                year's number
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/federalPovertyLineLocationIsAlaska"/>
                        </When>
                        <Then>
                            <Dollar>6430</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="/federalPovertyLineLocationIsHawaii"/>
                        </When>
                        <Then>
                            <Dollar>5910</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="/federalPovertyLineLocationIsOther"/>
                        </When>
                        <Then>
                            <Dollar>5140</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/taxFamilySizeIsZero">
            <Description>Tax family size is zero</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/taxFamilySize"/>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/federalPovertyLevelThreshold">
            <Description>below 100% federal poverty level threshold, used on Form 8962 Line 4</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/taxFamilySizeIsZero"/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Add>
                                <Dependency path="/federalPovertyLineMagicNumberStartingNumber"/>
                                <Multiply>
                                    <Subtract>
                                        <Minuend>
                                            <Dependency path="/taxFamilySize"/>
                                        </Minuend>
                                        <Subtrahends>
                                            <Int>1</Int>
                                        </Subtrahends>
                                    </Subtract>
                                    <Dependency path="/federalPovertyLineMagicNumberIncrement"/>
                                </Multiply>
                            </Add>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/ptcMagi">
            <Description>MAGI based on worksheet for PTC</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/taxFamilySizeIsZero"/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Add>
                                <Dependency module="taxCalculations" path="/agi"/>
                                <Dependency module="interest" path="/taxExemptInterest"/>
                                <!-- Add Form 2555 lines 45 + 50 when we support foreign income -->
                                <Dependency module="socialSecurity" path="/nonTaxableSocialSecurityBenefits"/>
                            </Add>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/householdIncome">
            <Description>The household income for PTC (magi + dependents magi), used on Form 8962 Line 3</Description>
            <Export mef="true"/>
            <Derived>
                <GreaterOf>
                    <Dollar>0</Dollar>
                    <Dependency path="/ptcMagi"/>
                </GreaterOf>
            </Derived>
        </Fact>
        <Fact path="/householdIncomeAsARational">
            <Description>householdIncome as a Rational</Description>
            <Derived>
                <Multiply>
                    <RoundToInt>
                        <Dependency path="/householdIncome"/>
                    </RoundToInt>
                    <Rational>1/1</Rational>
                </Multiply>
            </Derived>
        </Fact>
        <Fact path="/federalPovertyLevelThresholdAsARational">
            <Description>federalPovertyLevelThreshold as a rational</Description>
            <Derived>
                <Multiply>
                    <RoundToInt>
                        <Dependency path="/federalPovertyLevelThreshold"/>
                    </RoundToInt>
                    <Rational>1/1</Rational>
                </Multiply>
            </Derived>
        </Fact>
        <Fact path="/householdIncomeAsPercent">
            <Description>The household income as a percent of the federal poverty line, used on Form 8962 Line 5
            </Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/taxFamilySizeIsZero"/>
                        </When>
                        <Then>
                            <Int>0</Int>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <GreaterThan>
                                <Left>
                                    <Dependency path="/householdIncome"/>
                                </Left>
                                <Right>
                                    <Multiply>
                                        <Dependency path="/federalPovertyLevelThreshold"/>
                                        <Int>4</Int>
                                    </Multiply>
                                </Right>
                            </GreaterThan>
                        </When>
                        <Then>
                            <Int>401</Int>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <!-- We intentionally want to round down based on the instructions for this line -->
                            <RoundToInt>
                                <StepwiseMultiply>
                                    <Multiplicand>
                                        <Multiply>
                                            <TruncateCents>
                                                <Divide>
                                                    <Dividend>
                                                        <Multiply>
                                                            <Dependency path="/householdIncomeAsARational"/>
                                                            <!-- Instructions indicate that we should be doing this -->
                                                            <Int>100</Int>
                                                        </Multiply>
                                                    </Dividend>
                                                    <Divisors>
                                                        <Dependency path="/federalPovertyLevelThresholdAsARational"/>
                                                    </Divisors>
                                                </Divide>
                                            </TruncateCents>
                                            <Dollar>1</Dollar>
                                        </Multiply>
                                    </Multiplicand>
                                    <Rate>
                                        <Rational>1/1</Rational>
                                    </Rate>
                                </StepwiseMultiply>
                            </RoundToInt>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/isHouseholdIncome401PercentOfPovertyLine">
            <!-- Not currently used, but theoretically used for line 6 of Form 8962 -->
            <Description>Whether line 5 on Form 8962 has the value 401</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/householdIncomeAsPercent"/>
                    </Left>
                    <Right>
                        <Int>401</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/applicableFigure">
            <Description>Applicable figure based on table 2 for Form 8962 instructions</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <LessThanOrEqual>
                                <Left>
                                    <Dependency path="/householdIncomeAsPercent"/>
                                </Left>
                                <Right>
                                    <Int>150</Int>
                                </Right>
                            </LessThanOrEqual>
                        </When>
                        <Then>
                            <Rational>0/10000</Rational>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <LessThanOrEqual>
                                <Left>
                                    <Dependency path="/householdIncomeAsPercent"/>
                                </Left>
                                <Right>
                                    <Int>300</Int>
                                </Right>
                            </LessThanOrEqual>
                        </When>
                        <Then>
                            <Multiply>
                                <Subtract>
                                    <Minuend>
                                        <Dependency path="/householdIncomeAsPercent"/>
                                    </Minuend>
                                    <Subtrahends>
                                        <Int>150</Int>
                                    </Subtrahends>
                                </Subtract>
                                <Rational>4/10000</Rational>
                            </Multiply>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <LessThanOrEqual>
                                <Left>
                                    <Dependency path="/householdIncomeAsPercent"/>
                                </Left>
                                <Right>
                                    <Int>399</Int>
                                </Right>
                            </LessThanOrEqual>
                        </When>
                        <Then>
                            <Switch>
                                <Case>
                                    <!-- TODO: consider adding isOdd/isEven helper method for Ints in Scala, as it would simplify this -->
                                    <!-- Is odd and needs to add an extra 0.00005 -->
                                    <When>
                                        <NotEqual>
                                            <Left>
                                                <StepwiseMultiply>
                                                    <Multiplicand>
                                                        <Multiply>
                                                            <Subtract>
                                                                <Minuend>
                                                                    <Dependency path="/householdIncomeAsPercent"/>
                                                                </Minuend>
                                                                <Subtrahends>
                                                                    <Int>300</Int>
                                                                </Subtrahends>
                                                            </Subtract>
                                                            <Dollar>25</Dollar>
                                                        </Multiply>
                                                    </Multiplicand>
                                                    <Rate>
                                                        <Rational>1/10</Rational>
                                                    </Rate>
                                                </StepwiseMultiply>
                                            </Left>
                                            <Right>
                                                <StepwiseMultiply>
                                                    <Multiplicand>
                                                        <Add>
                                                            <Multiply>
                                                                <Subtract>
                                                                    <Minuend>
                                                                        <Dependency path="/householdIncomeAsPercent"/>
                                                                    </Minuend>
                                                                    <Subtrahends>
                                                                        <Int>300</Int>
                                                                    </Subtrahends>
                                                                </Subtract>
                                                                <Dollar>25</Dollar>
                                                            </Multiply>
                                                            <Dollar>5</Dollar>
                                                        </Add>
                                                    </Multiplicand>
                                                    <Rate>
                                                        <Rational>1/10</Rational>
                                                    </Rate>
                                                </StepwiseMultiply>
                                            </Right>
                                        </NotEqual>
                                    </When>
                                    <Then>
                                        <Add>
                                            <Multiply>
                                                <Rational>25/100000</Rational>
                                                <Subtract>
                                                    <Minuend>
                                                        <Dependency path="/householdIncomeAsPercent"/>
                                                    </Minuend>
                                                    <Subtrahends>
                                                        <Int>300</Int>
                                                    </Subtrahends>
                                                </Subtract>
                                            </Multiply>
                                            <Rational>5/100000</Rational>
                                            <Rational>600/10000</Rational>
                                        </Add>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <True/>
                                    </When>
                                    <Then>
                                        <Add>
                                            <Rational>600/10000</Rational>
                                            <Multiply>
                                                <Rational>25/100000</Rational>
                                                <Subtract>
                                                    <Minuend>
                                                        <Dependency path="/householdIncomeAsPercent"/>
                                                    </Minuend>
                                                    <Subtrahends>
                                                        <Int>300</Int>
                                                    </Subtrahends>
                                                </Subtract>
                                            </Multiply>
                                        </Add>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <GreaterThanOrEqual>
                                <Left>
                                    <Dependency path="/householdIncomeAsPercent"/>
                                </Left>
                                <Right>
                                    <Int>400</Int>
                                </Right>
                            </GreaterThanOrEqual>
                        </When>
                        <Then>
                            <Rational>850/10000</Rational>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/formattedApplicableFigure">
            <Description>The applicable figure, but modified to be formatted based on the needs of the XML/PDF
            </Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/taxFamilySizeIsZero"/>
                        </When>
                        <Then>
                            <String/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <AsDecimalString scale="4">
                                <Dependency path="/applicableFigure"/>
                            </AsDecimalString>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/ptcAnnualContributionAmount">
            <Description>The annual contribution amount, used on Form 8962 Line 8a</Description>
            <Export mef="true"/>
            <Derived>
                <Round>
                    <!-- We convert householdIncome to an int and Truncate here to prevent the edge case of the intermediate value
          between householdIncome * applicableFigure being a number with too many decimal points that it gets rounded.
          For example, if the product was 1115.4958 this was previous getting rounded to 1115.50 when we represented
          this as a Dollar which when rounded would get rounded up to 1116 instead of rounding the original 1115.4958 to
          1115. -->
                    <Multiply>
                        <TruncateCents>
                            <Multiply>
                                <RoundToInt>
                                    <Dependency path="/householdIncome"/>
                                </RoundToInt>
                                <Dependency path="/applicableFigure"/>
                            </Multiply>
                        </TruncateCents>
                        <Dollar>1</Dollar>
                    </Multiply>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/ptcMontlyContributionAmount">
            <Description>monthly contriibution amount, used on Form 8962 Line 8b</Description>
            <Export mef="true"/>
            <Derived>
                <Round>
                    <Divide>
                        <Dividend>
                            <Dependency path="/ptcAnnualContributionAmount"/>
                        </Dividend>
                        <Divisors>
                            <Int>12</Int>
                        </Divisors>
                    </Divide>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/isBelow100PercentFederalPovertyLevel">
            <Description>Is below 100% federal poverty level</Description>
            <Derived>
                <LessThan>
                    <Left>
                        <Dependency path="/householdIncomeAsPercent"/>
                    </Left>
                    <Right>
                        <Int>100</Int>
                    </Right>
                </LessThan>
            </Derived>
        </Fact>
        <Fact path="/notPtcApplicableTaxPayerSoFar">
            <Description>Not an applicable tax payer for PTC because of MFS exception</Description>
            <Derived>
                <Any>
                    <Switch>
                        <Case>
                            <When>
                                <Dependency path="/isMFSAndCantBeClaimed"/>
                            </When>
                            <Then>
                                <Any>
                                    <Not>
                                        <Dependency path="/hasMfsException"/>
                                    </Not>
                                    <Dependency path="/claimingMfsExceptionForFourthStraightYear"/>
                                </Any>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <False/>
                            </Then>
                        </Case>
                    </Switch>

                    <Dependency module="filers"
                                path="/notMfjAndPrimaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/notPtcApplicableTaxPayer">
            <Description>Not an applicable tax payer</Description>
            <Derived>
                <Any>
                    <All>
                        <IsComplete>
                            <Dependency path="/notPtcApplicableTaxPayerSoFar"/>
                        </IsComplete>
                        <Dependency path="/notPtcApplicableTaxPayerSoFar"/>
                    </All>
                    <Not>
                        <Dependency path="/below100ThresholdAndNotEligibleForMedicaidBecauseOfImmigrationStatus"/>
                    </Not>
                    <Dependency path="/filerNotQualifiedForPtcBecauseOfStatusAndResidenceInfo"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/potentiallyApplicableTaxPayer">
            <Description>Potential applicable tax payer, we can't ensure this unless we get to a certain state in the
                flow
            </Description>
            <Derived>
                <All>
                    <Dependency path="/uniqueCircumstancesIsComplete"/>
                    <Any>
                        <Not>
                            <IsComplete>
                                <Dependency path="/notPtcApplicableTaxPayer"/>
                            </IsComplete>
                        </Not>
                        <Not>
                            <Dependency path="/notPtcApplicableTaxPayer"/>
                        </Not>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/potentiallyApplicableTaxPayerOrNotQualifiedPtcWhileTakingAptc">
            <Description>Potential applicable tax payer, OR did not qualify for PTC but took APTC</Description>

            <Derived>
                <Any>
                    <Dependency path="/potentiallyApplicableTaxPayer"/>
                    <Dependency path="/ptcNotQualifiedHasAptc"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/writableHasEmployerSponsoredPlan">
            <Description>(Writable) Whether the TP or anyone on the marketplace plan has an employer sponsored plan
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/hasEmployerSponsoredPlan">
            <Description>Whether the TP or anyone on the marketplace plan has an employer sponsored plan</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Any>
                                <Not>
                                    <Dependency path="/maybeEligibleForPtc"/>
                                </Not>
                                <All>
                                    <IsComplete>
                                        <Dependency path="/hasPtcQualifyingPlan"/>
                                    </IsComplete>
                                    <Not>
                                        <Dependency path="/hasPtcQualifyingPlan"/>
                                    </Not>
                                </All>
                            </Any>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/writableHasEmployerSponsoredPlan"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/isMFSAndCantBeClaimed">
            <Description>Has filing status of MFS and can't be claimed as a dependent TP</Description>
            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                    <Not>
                        <Dependency module="filers"
                                    path="/notMfjAndPrimaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/writableHasMfsException">
            <Description>(writable) TP has MFS exception</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/hasMfsException">
            <Description>TP has MFS exception</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/isMFSAndCantBeClaimed"/>
                        </When>
                        <Then>
                            <Dependency path="/writableHasMfsException"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/writableClaimingMfsExceptionForFourthStraightYear">
            <Description>(writable) TP claiming MFS exception for the fourth straight year</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/claimingMfsExceptionForFourthStraightYear">
            <Description>TP claiming MFS exception for the fourth straight year</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/hasMfsException"/>
                        </When>
                        <Then>
                            <Dependency path="/writableClaimingMfsExceptionForFourthStraightYear"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/claimingMfsException">
            <Description>TP is claiming the MFS exception on Form 8962</Description>
            <Export mef="true"/>
            <Derived>
                <Not>
                    <Dependency path="/claimingMfsExceptionForFourthStraightYear"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/maybeApplicableTpAndNoAptcAndBelow100PovertyThreshold">
            <Description>Has no APTC and is below the 100% FPL and is applicable TP</Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="/notPtcApplicableTaxPayerSoFar"/>
                    </Not>
                    <Not>
                        <Dependency path="/hasAdvancedPtc"/>
                    </Not>
                    <Dependency path="/isBelow100PercentFederalPovertyLevel"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/writableBelow100ThresholdAndNotEligibleForMedicaidBecauseOfImmigrationStatus">
            <Description>(writable) Whether anyone on the Marketplace plan is not eligible for Medicaid becasue of their
                immigration status
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/below100ThresholdAndNotEligibleForMedicaidBecauseOfImmigrationStatus">
            <Description>Whether anyone on the Marketplace plan is not eligible for Medicaid becasue of their
                immigration
                status
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/maybeApplicableTpAndNoAptcAndBelow100PovertyThreshold"/>
                        </When>
                        <Then>
                            <Dependency
                                    path="/writableBelow100ThresholdAndNotEligibleForMedicaidBecauseOfImmigrationStatus"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As">
            <Description>Collection of 1095-As</Description>
            <Writable>
                <Collection/>
            </Writable>
        </Fact>
        <Fact path="/1095AsIsDone">
            <Description>Is 1095-As collection done</Description>
            <Writable>
                <Boolean/>
            </Writable>
            <Placeholder>
                <False/>
            </Placeholder>
        </Fact>
        <Fact path="/1095As/*/hasEnteredAllMonthlyPremiums">
            <Description>TP has entered all valid monthly premiums</Description>
            <Derived>
                <All>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInJan"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyPremiumJan"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInJan"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInFeb"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyPremiumFeb"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInFeb"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInMar"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyPremiumMar"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInMar"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInApr"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyPremiumApr"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInApr"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInMay"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyPremiumMay"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInMay"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInJun"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyPremiumJun"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInJun"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInJul"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyPremiumJul"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInJul"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInAug"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyPremiumAug"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInAug"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInSep"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyPremiumSep"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInSep"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInOct"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyPremiumOct"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInOct"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInNov"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyPremiumNov"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInNov"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInDec"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyPremiumDec"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInDec"/>
                        </Not>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasEnteredAllMonthlySlcsp">
            <Description>TP has entered all valid monthly SLCSP premiums</Description>
            <Derived>
                <All>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInJan"/>
                            <Dependency path="../hasJanCoverageMonth"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlySlcspPremiumJan"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInJan"/>
                        </Not>
                        <Not>
                            <Dependency path="../hasJanCoverageMonth"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInFeb"/>
                            <Dependency path="../hasFebCoverageMonth"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlySlcspPremiumFeb"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInFeb"/>
                        </Not>
                        <Not>
                            <Dependency path="../hasFebCoverageMonth"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInMar"/>
                            <Dependency path="../hasMarCoverageMonth"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlySlcspPremiumMar"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInMar"/>
                        </Not>
                        <Not>
                            <Dependency path="../hasMarCoverageMonth"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInApr"/>
                            <Dependency path="../hasAprCoverageMonth"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlySlcspPremiumApr"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInApr"/>
                        </Not>
                        <Not>
                            <Dependency path="../hasAprCoverageMonth"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInMay"/>
                            <Dependency path="../hasMayCoverageMonth"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlySlcspPremiumMay"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInMay"/>
                        </Not>
                        <Not>
                            <Dependency path="../hasMayCoverageMonth"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInJun"/>
                            <Dependency path="../hasJunCoverageMonth"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlySlcspPremiumJun"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInJun"/>
                        </Not>
                        <Not>
                            <Dependency path="../hasJunCoverageMonth"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInJul"/>
                            <Dependency path="../hasJulCoverageMonth"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlySlcspPremiumJul"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInJul"/>
                        </Not>
                        <Not>
                            <Dependency path="../hasJulCoverageMonth"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInAug"/>
                            <Dependency path="../hasAugCoverageMonth"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlySlcspPremiumAug"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInAug"/>
                        </Not>
                        <Not>
                            <Dependency path="../hasAugCoverageMonth"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInSep"/>
                            <Dependency path="../hasSepCoverageMonth"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlySlcspPremiumSep"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInSep"/>
                        </Not>
                        <Not>
                            <Dependency path="../hasSepCoverageMonth"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInOct"/>
                            <Dependency path="../hasOctCoverageMonth"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlySlcspPremiumOct"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInOct"/>
                        </Not>
                        <Not>
                            <Dependency path="../hasOctCoverageMonth"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInNov"/>
                            <Dependency path="../hasNovCoverageMonth"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlySlcspPremiumNov"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInNov"/>
                        </Not>
                        <Not>
                            <Dependency path="../hasNovCoverageMonth"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInDec"/>
                            <Dependency path="../hasDecCoverageMonth"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlySlcspPremiumDec"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInDec"/>
                        </Not>
                        <Not>
                            <Dependency path="../hasDecCoverageMonth"/>
                        </Not>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasEnteredAllMonthlyAptc">
            <Description>TP has entered all valid monthly APTC</Description>
            <Derived>
                <All>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInJan"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyAptcPremiumJan"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInJan"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInFeb"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyAptcPremiumFeb"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInFeb"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInMar"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyAptcPremiumMar"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInMar"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInApr"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyAptcPremiumApr"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInApr"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInMay"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyAptcPremiumMay"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInMay"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInJun"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyAptcPremiumJun"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInJun"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInJul"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyAptcPremiumJul"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInJul"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInAug"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyAptcPremiumAug"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInAug"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInSep"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyAptcPremiumSep"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInSep"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInOct"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyAptcPremiumOct"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInOct"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInNov"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyAptcPremiumNov"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInNov"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="../policyIsActiveInDec"/>
                            <IsComplete>
                                <Dependency path="../writablePtcMonthlyAptcPremiumDec"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="../policyIsActiveInDec"/>
                        </Not>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/isComplete">
            <Description>If the 1095-A is complete</Description>
            <Derived>
                <Any>
                    <All>
                        <Dependency path="../hasAptcAndPolicyIsFullYearOrZeroCoverageMonths"/>
                        <IsComplete>
                            <Dependency path="../writableAptcAnnualAmount"/>
                        </IsComplete>
                        <Dependency path="../hasSeenLastAvailableScreen"/>
                    </All>
                    <All>
                        <Dependency path="/potentiallyApplicableTaxPayer"/>
                        <Dependency path="../hasNoCoverageMonthsAndNoAptc"/>
                    </All>
                    <All>
                        <Any>
                            <All>
                                <Dependency path="../hasPolicyForAllMonths"/>
                                <IsComplete>
                                    <Dependency path="../writablePremiumsOrSlcspChange"/>
                                </IsComplete>
                                <Any>
                                    <All>
                                        <Not>
                                            <Dependency path="../premiumsOrSlcspChange"/>
                                        </Not>
                                        <IsComplete>
                                            <Dependency path="../writablePtcAnnualPremium"/>
                                        </IsComplete>
                                    </All>
                                    <All>
                                        <Dependency path="../premiumsOrSlcspChange"/>
                                        <Dependency path="../hasEnteredAllMonthlyPremiums"/>
                                    </All>
                                </Any>
                            </All>
                            <All>
                                <Dependency path="../hasAtLeastOneCoverageMonth"/>
                                <Dependency path="../hasEnteredAllMonthlyPremiums"/>
                            </All>
                        </Any>
                        <IsComplete>
                            <Dependency path="../hasChangeInCircumstance"/>
                        </IsComplete>
                        <Any>
                            <All>
                                <Dependency path="../hasChangeOrPolicyIsNotForAllMonths"/>
                                <Dependency path="../hasEnteredAllMonthlySlcsp"/>
                            </All>
                            <All>
                                <Dependency path="../noChangesAnd12MonthPolicy"/>
                                <IsComplete>
                                    <Dependency path="../writableSlcspAnnualPremium"/>
                                </IsComplete>
                            </All>
                        </Any>
                        <Any>
                            <Not>
                                <Dependency path="/hasAdvancedPtc"/>
                            </Not>
                            <All>
                                <Dependency path="/hasAdvancedPtc"/>
                                <Dependency path="../showMonthlyAptc"/>
                                <Dependency path="../hasEnteredAllMonthlyAptc"/>
                            </All>
                            <All>
                                <Dependency path="/hasAdvancedPtc"/>
                                <Dependency path="../hasAptcAndPolicyIsFullYearOrZeroCoverageMonths"/>
                                <IsComplete>
                                    <Dependency path="../writableAptcAnnualAmount"/>
                                </IsComplete>
                            </All>
                        </Any>
                        <Dependency path="../hasSeenLastAvailableScreen"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/safeIsComplete">
            <Description>Switch-wrapped 'isComplete' so that it may be used when '../isComplete' is incomplete
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../isComplete"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../isComplete"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasSeenLastAvailableScreen">
            <Name>Has Seen last available screen for PTC</Name>
            <Description>Whether the user has seen the last available scren for this 1095.</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/has1095A">
            <Description>Whether the TP has started entering in a form 1095-A</Description>
            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/1095As"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/hasMultiple1095As">
            <Description>If the TP has added multiple 1095-As</Description>
            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/1095As"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>2</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/marketplaceState">
            <Description>The statethe marketplace plan is from</Description>

            <Writable>
                <Enum optionsPath="/statesAndDistrictsOptions"/>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/coverageMonths">
            <Description>List of applicable coverage months</Description>
            <Writable>
                <MultiEnum optionsPath="/1095As/*/monthOptions"/>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/policyNumber">
            <Description>Policy number associated with the 1095</Description>
            <Writable>
                <String/>
                <Limit type="Match">
                    <String>[\sA-Za-z0-9\-]+</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>50</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePolicyStartDate">
            <Description>(writable)Start date of policy</Description>
            <Writable>
                <Day/>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/policyStartDate">
            <Description>Start date of policy</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/potentiallyApplicableTaxPayer"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePolicyStartDate"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyStartDateMonthAsString">
            <Description>Starting month of policy as a String</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../policyStartsInJan"/>
                        </When>
                        <Then>
                            <String>January</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyStartsInFeb"/>
                        </When>
                        <Then>
                            <String>February</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyStartsInMar"/>
                        </When>
                        <Then>
                            <String>March</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyStartsInApr"/>
                        </When>
                        <Then>
                            <String>April</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyStartsInMay"/>
                        </When>
                        <Then>
                            <String>May</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyStartsInJun"/>
                        </When>
                        <Then>
                            <String>June</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyStartsInJul"/>
                        </When>
                        <Then>
                            <String>July</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyStartsInAug"/>
                        </When>
                        <Then>
                            <String>August</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyStartsInSep"/>
                        </When>
                        <Then>
                            <String>September</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyStartsInOct"/>
                        </When>
                        <Then>
                            <String>October</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyStartsInNov"/>
                        </When>
                        <Then>
                            <String>November</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyStartsInDec"/>
                        </When>
                        <Then>
                            <String>December</String>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/writablePolicyEndDate">
            <Description>(writable)End/termination date of policy</Description>
            <Writable>
                <Day/>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/policyEndDate">
            <Description>End/termination date of policy</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/potentiallyApplicableTaxPayer"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePolicyEndDate"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/writableSpecialPolicyModificationInStartingMonth">
            <Description>Whether someone on the plan was born, adopted, or placed for adoption or foster care during the
                month
                when the policy started
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/maybeHasPolicyDateException">
            <Description>Whether we need to ask the TP more questions to determine if they have a policy date
                exception
            </Description>
            <Derived>
                <All>
                    <Dependency path="/potentiallyApplicableTaxPayer"/>
                    <Dependency path="../writableSpecialPolicyModificationInStartingMonth"/>
                    <NotEqual>
                        <Left>
                            <Dependency path="../policyStartDate/day"/>
                        </Left>
                        <Right>
                            <Int>1</Int>
                        </Right>
                    </NotEqual>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/writableHasPolicyDateException">
            <Description>(Writable) whether the TP has a policy date exception and count the starting month of their
                policy as
                a qualifying month
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/hasPolicyDateException">
            <Description>Whether the TP has a policy date exception and count the starting month of their policy as a
                qualifying month
            </Description>
            <Derived>
                <All>
                    <Dependency path="../maybeHasPolicyDateException"/>
                    <Dependency path="../writableHasPolicyDateException"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasPolicyDateError">
            <Description>Whether there are errors with the taxpayer's entered policy dates</Description>
            <Derived>
                <LessThan>
                    <Left>
                        <Dependency path="../writablePolicyEndDate"/>
                    </Left>
                    <Right>
                        <Dependency path="../writablePolicyStartDate"/>
                    </Right>
                </LessThan>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasCoverageMonths">
            <Description>Has at least one coverage month</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/hasNoCoverageMonthsAndNoAptc">
            <Description>Has no coverage months and has no APTC</Description>
            <Derived>
                <All>
                    <Any>
                        <Not>
                            <Dependency path="../hasCoverageMonths"/>
                        </Not>
                        <Dependency path="../hasNoPotentialCoverageMonths"/>
                    </Any>
                    <Not>
                        <Dependency path="/hasAdvancedPtc"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyStartsInJan">
            <Description>Whether the starting date begins in Jan</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../policyStartDate/month"/>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyStartsInFeb">
            <Description>Whether the starting date begins in Feb</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../policyStartDate/month"/>
                    </Left>
                    <Right>
                        <Int>2</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyStartsInMar">
            <Description>Whether the starting date begins in Mar</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../policyStartDate/month"/>
                    </Left>
                    <Right>
                        <Int>3</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyStartsInApr">
            <Description>Whether the starting date begins in Apr</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../policyStartDate/month"/>
                    </Left>
                    <Right>
                        <Int>4</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyStartsInMay">
            <Description>Whether the starting date begins in May</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../policyStartDate/month"/>
                    </Left>
                    <Right>
                        <Int>5</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyStartsInJun">
            <Description>Whether the starting date begins in Jun</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../policyStartDate/month"/>
                    </Left>
                    <Right>
                        <Int>6</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyStartsInJul">
            <Description>Whether the starting date begins in Jul</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../policyStartDate/month"/>
                    </Left>
                    <Right>
                        <Int>7</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyStartsInAug">
            <Description>Whether the starting date begins in Aug</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../policyStartDate/month"/>
                    </Left>
                    <Right>
                        <Int>8</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyStartsInSep">
            <Description>Whether the starting date begins in Sep</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../policyStartDate/month"/>
                    </Left>
                    <Right>
                        <Int>9</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyStartsInOct">
            <Description>Whether the starting date begins in Oct</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../policyStartDate/month"/>
                    </Left>
                    <Right>
                        <Int>10</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyStartsInNov">
            <Description>Whether the starting date begins in Nov</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../policyStartDate/month"/>
                    </Left>
                    <Right>
                        <Int>11</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyStartsInDec">
            <Description>Whether the starting date begins in Dec</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../policyStartDate/month"/>
                    </Left>
                    <Right>
                        <Int>12</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyContainsOrEndsInFeb">
            <Description>Whether the policy contains or ends in Feb</Description>
            <Derived>
                <All>
                    <LessThan>
                        <Left>
                            <Dependency path="../policyStartDate/month"/>
                        </Left>
                        <Right>
                            <Int>2</Int>
                        </Right>
                    </LessThan>
                    <GreaterThanOrEqual>
                        <Left>
                            <Dependency path="../policyEndDate/month"/>
                        </Left>
                        <Right>
                            <Int>2</Int>
                        </Right>
                    </GreaterThanOrEqual>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyContainsOrEndsInMar">
            <Description>Whether the policy contains or ends in Mar</Description>
            <Derived>
                <All>
                    <LessThan>
                        <Left>
                            <Dependency path="../policyStartDate/month"/>
                        </Left>
                        <Right>
                            <Int>3</Int>
                        </Right>
                    </LessThan>
                    <GreaterThanOrEqual>
                        <Left>
                            <Dependency path="../policyEndDate/month"/>
                        </Left>
                        <Right>
                            <Int>3</Int>
                        </Right>
                    </GreaterThanOrEqual>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyContainsOrEndsInApr">
            <Description>Whether the policy contains or ends in Apr</Description>
            <Derived>
                <All>
                    <LessThan>
                        <Left>
                            <Dependency path="../policyStartDate/month"/>
                        </Left>
                        <Right>
                            <Int>4</Int>
                        </Right>
                    </LessThan>
                    <GreaterThanOrEqual>
                        <Left>
                            <Dependency path="../policyEndDate/month"/>
                        </Left>
                        <Right>
                            <Int>4</Int>
                        </Right>
                    </GreaterThanOrEqual>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyContainsOrEndsInMay">
            <Description>Whether the policy contains or ends in May</Description>
            <Derived>
                <All>
                    <LessThan>
                        <Left>
                            <Dependency path="../policyStartDate/month"/>
                        </Left>
                        <Right>
                            <Int>5</Int>
                        </Right>
                    </LessThan>
                    <GreaterThanOrEqual>
                        <Left>
                            <Dependency path="../policyEndDate/month"/>
                        </Left>
                        <Right>
                            <Int>5</Int>
                        </Right>
                    </GreaterThanOrEqual>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyContainsOrEndsInJun">
            <Description>Whether the policy contains or ends in Jun</Description>
            <Derived>
                <All>
                    <LessThan>
                        <Left>
                            <Dependency path="../policyStartDate/month"/>
                        </Left>
                        <Right>
                            <Int>6</Int>
                        </Right>
                    </LessThan>
                    <GreaterThanOrEqual>
                        <Left>
                            <Dependency path="../policyEndDate/month"/>
                        </Left>
                        <Right>
                            <Int>6</Int>
                        </Right>
                    </GreaterThanOrEqual>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyContainsOrEndsInJul">
            <Description>Whether the policy contains or ends in Jul</Description>
            <Derived>
                <All>
                    <LessThan>
                        <Left>
                            <Dependency path="../policyStartDate/month"/>
                        </Left>
                        <Right>
                            <Int>7</Int>
                        </Right>
                    </LessThan>
                    <GreaterThanOrEqual>
                        <Left>
                            <Dependency path="../policyEndDate/month"/>
                        </Left>
                        <Right>
                            <Int>7</Int>
                        </Right>
                    </GreaterThanOrEqual>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyContainsOrEndsInAug">
            <Description>Whether the policy contains or ends in Aug</Description>
            <Derived>
                <All>
                    <LessThan>
                        <Left>
                            <Dependency path="../policyStartDate/month"/>
                        </Left>
                        <Right>
                            <Int>8</Int>
                        </Right>
                    </LessThan>
                    <GreaterThanOrEqual>
                        <Left>
                            <Dependency path="../policyEndDate/month"/>
                        </Left>
                        <Right>
                            <Int>8</Int>
                        </Right>
                    </GreaterThanOrEqual>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyContainsOrEndsInSep">
            <Description>Whether the policy contains or ends in Sep</Description>
            <Derived>
                <All>
                    <LessThan>
                        <Left>
                            <Dependency path="../policyStartDate/month"/>
                        </Left>
                        <Right>
                            <Int>9</Int>
                        </Right>
                    </LessThan>
                    <GreaterThanOrEqual>
                        <Left>
                            <Dependency path="../policyEndDate/month"/>
                        </Left>
                        <Right>
                            <Int>9</Int>
                        </Right>
                    </GreaterThanOrEqual>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyContainsOrEndsInOct">
            <Description>Whether the policy contains or ends in Oct</Description>
            <Derived>
                <All>
                    <LessThan>
                        <Left>
                            <Dependency path="../policyStartDate/month"/>
                        </Left>
                        <Right>
                            <Int>10</Int>
                        </Right>
                    </LessThan>
                    <GreaterThanOrEqual>
                        <Left>
                            <Dependency path="../policyEndDate/month"/>
                        </Left>
                        <Right>
                            <Int>10</Int>
                        </Right>
                    </GreaterThanOrEqual>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyContainsOrEndsInNov">
            <Description>Whether the policy contains or ends in Nov</Description>
            <Derived>
                <All>
                    <LessThan>
                        <Left>
                            <Dependency path="../policyStartDate/month"/>
                        </Left>
                        <Right>
                            <Int>11</Int>
                        </Right>
                    </LessThan>
                    <GreaterThanOrEqual>
                        <Left>
                            <Dependency path="../policyEndDate/month"/>
                        </Left>
                        <Right>
                            <Int>11</Int>
                        </Right>
                    </GreaterThanOrEqual>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/monthOptions">
            <Description>Possible month options for a given 1095-A (policy)</Description>

            <Derived>
                <EnumOptions>
                    <EnumOption>
                        <Condition>
                            <Any>
                                <All>
                                    <Equal>
                                        <Left>
                                            <Dependency path="../policyStartDate/day"/>
                                        </Left>
                                        <Right>
                                            <Int>1</Int>
                                        </Right>
                                    </Equal>
                                    <Dependency path="../policyStartsInJan"/>
                                </All>
                                <All>
                                    <Dependency path="../policyStartsInJan"/>
                                    <Dependency path="../hasPolicyDateException"/>
                                </All>
                            </Any>
                        </Condition>
                        <Value>
                            <String>jan</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Any>
                                <All>
                                    <Equal>
                                        <Left>
                                            <Dependency path="../policyStartDate/day"/>
                                        </Left>
                                        <Right>
                                            <Int>1</Int>
                                        </Right>
                                    </Equal>
                                    <Dependency path="../policyStartsInFeb"/>
                                </All>
                                <All>
                                    <Dependency path="../policyStartsInFeb"/>
                                    <Dependency path="../hasPolicyDateException"/>
                                </All>
                                <Dependency path="../policyContainsOrEndsInFeb"/>
                            </Any>
                        </Condition>
                        <Value>
                            <String>feb</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Any>
                                <All>
                                    <Equal>
                                        <Left>
                                            <Dependency path="../policyStartDate/day"/>
                                        </Left>
                                        <Right>
                                            <Int>1</Int>
                                        </Right>
                                    </Equal>
                                    <Dependency path="../policyStartsInMar"/>
                                </All>
                                <All>
                                    <Dependency path="../policyStartsInMar"/>
                                    <Dependency path="../hasPolicyDateException"/>
                                </All>
                                <Dependency path="../policyContainsOrEndsInMar"/>
                            </Any>
                        </Condition>
                        <Value>
                            <String>mar</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Any>
                                <All>
                                    <Equal>
                                        <Left>
                                            <Dependency path="../policyStartDate/day"/>
                                        </Left>
                                        <Right>
                                            <Int>1</Int>
                                        </Right>
                                    </Equal>
                                    <Dependency path="../policyStartsInApr"/>
                                </All>
                                <All>
                                    <Dependency path="../policyStartsInApr"/>
                                    <Dependency path="../hasPolicyDateException"/>
                                </All>
                                <Dependency path="../policyContainsOrEndsInApr"/>
                            </Any>
                        </Condition>
                        <Value>
                            <String>apr</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Any>
                                <All>
                                    <Equal>
                                        <Left>
                                            <Dependency path="../policyStartDate/day"/>
                                        </Left>
                                        <Right>
                                            <Int>1</Int>
                                        </Right>
                                    </Equal>
                                    <Dependency path="../policyStartsInMay"/>
                                </All>
                                <All>
                                    <Dependency path="../policyStartsInMay"/>
                                    <Dependency path="../hasPolicyDateException"/>
                                </All>
                                <Dependency path="../policyContainsOrEndsInMay"/>
                            </Any>
                        </Condition>
                        <Value>
                            <String>may</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Any>
                                <All>
                                    <Equal>
                                        <Left>
                                            <Dependency path="../policyStartDate/day"/>
                                        </Left>
                                        <Right>
                                            <Int>1</Int>
                                        </Right>
                                    </Equal>
                                    <Dependency path="../policyStartsInJun"/>
                                </All>
                                <All>
                                    <Dependency path="../policyStartsInJun"/>
                                    <Dependency path="../hasPolicyDateException"/>
                                </All>
                                <Dependency path="../policyContainsOrEndsInJun"/>
                            </Any>
                        </Condition>
                        <Value>
                            <String>jun</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Any>
                                <All>
                                    <Equal>
                                        <Left>
                                            <Dependency path="../policyStartDate/day"/>
                                        </Left>
                                        <Right>
                                            <Int>1</Int>
                                        </Right>
                                    </Equal>
                                    <Dependency path="../policyStartsInJul"/>
                                </All>
                                <All>
                                    <Dependency path="../policyStartsInJul"/>
                                    <Dependency path="../hasPolicyDateException"/>
                                </All>
                                <Dependency path="../policyContainsOrEndsInJul"/>
                            </Any>
                        </Condition>
                        <Value>
                            <String>jul</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Any>
                                <All>
                                    <Equal>
                                        <Left>
                                            <Dependency path="../policyStartDate/day"/>
                                        </Left>
                                        <Right>
                                            <Int>1</Int>
                                        </Right>
                                    </Equal>
                                    <Dependency path="../policyStartsInAug"/>
                                </All>
                                <All>
                                    <Dependency path="../policyStartsInAug"/>
                                    <Dependency path="../hasPolicyDateException"/>
                                </All>
                                <Dependency path="../policyContainsOrEndsInAug"/>
                            </Any>
                        </Condition>
                        <Value>
                            <String>aug</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Any>
                                <All>
                                    <Equal>
                                        <Left>
                                            <Dependency path="../policyStartDate/day"/>
                                        </Left>
                                        <Right>
                                            <Int>1</Int>
                                        </Right>
                                    </Equal>
                                    <Dependency path="../policyStartsInSep"/>
                                </All>
                                <All>
                                    <Dependency path="../policyStartsInSep"/>
                                    <Dependency path="../hasPolicyDateException"/>
                                </All>
                                <Dependency path="../policyContainsOrEndsInSep"/>
                            </Any>
                        </Condition>
                        <Value>
                            <String>sep</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Any>
                                <All>
                                    <Equal>
                                        <Left>
                                            <Dependency path="../policyStartDate/day"/>
                                        </Left>
                                        <Right>
                                            <Int>1</Int>
                                        </Right>
                                    </Equal>
                                    <Dependency path="../policyStartsInOct"/>
                                </All>
                                <All>
                                    <Dependency path="../policyStartsInOct"/>
                                    <Dependency path="../hasPolicyDateException"/>
                                </All>
                                <Dependency path="../policyContainsOrEndsInOct"/>
                            </Any>
                        </Condition>
                        <Value>
                            <String>oct</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Any>
                                <All>
                                    <Equal>
                                        <Left>
                                            <Dependency path="../policyStartDate/day"/>
                                        </Left>
                                        <Right>
                                            <Int>1</Int>
                                        </Right>
                                    </Equal>
                                    <Dependency path="../policyStartsInNov"/>
                                </All>
                                <All>
                                    <Dependency path="../policyStartsInNov"/>
                                    <Dependency path="../hasPolicyDateException"/>
                                </All>
                                <Dependency path="../policyContainsOrEndsInNov"/>
                            </Any>
                        </Condition>
                        <Value>
                            <String>nov</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Any>
                                <All>
                                    <Not>
                                        <Dependency path="../policyStartsInDec"/>
                                    </Not>
                                    <Equal>
                                        <Left>
                                            <Dependency path="../policyEndDate/month"/>
                                        </Left>
                                        <Right>
                                            <Int>12</Int>
                                        </Right>
                                    </Equal>
                                </All>
                                <All>
                                    <Dependency path="../policyStartsInDec"/>
                                    <Dependency path="../hasPolicyDateException"/>
                                </All>
                            </Any>
                        </Condition>
                        <Value>
                            <String>dec</String>
                        </Value>
                    </EnumOption>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasCoverageMonthAndHasPotentialCoverageMonths">
            <Description>Indicates they have coverage month and has potential coverage months</Description>
            <Derived>
                <All>
                    <Dependency path="../hasCoverageMonths"/>
                    <Not>
                        <Dependency path="../hasNoPotentialCoverageMonths"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasNoPotentialCoverageMonths">
            <Description>Whether there are no month options available (ie. there are no potential coverage months)
            </Description>
            <Derived>
                <Equal>
                    <Left>
                        <EnumOptionsSize>
                            <Dependency path="../monthOptions"/>
                        </EnumOptionsSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/eligibleForCoverageMonths">
            <Description>Eligible for coverage months on the 1095-A</Description>
            <Derived>
                <All>
                    <Dependency path="../hasCoverageMonths"/>
                    <Dependency path="/potentiallyApplicableTaxPayer"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasJanCoverageMonth">
            <Description>Has coverage in the month of Jan</Description>
            <Derived>
                <All>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../monthOptions"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">jan</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../coverageMonths"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">jan</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <Dependency path="../eligibleForCoverageMonths"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasFebCoverageMonth">
            <Description>Has coverage in the month of Feb</Description>
            <Derived>
                <All>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../monthOptions"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">feb</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../coverageMonths"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">feb</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <Dependency path="../eligibleForCoverageMonths"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasMarCoverageMonth">
            <Description>Has coverage in the month of Mar</Description>
            <Derived>
                <All>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../monthOptions"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">mar</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../coverageMonths"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">mar</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <Dependency path="../eligibleForCoverageMonths"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasAprCoverageMonth">
            <Description>Has coverage in the month of Apr</Description>
            <Derived>
                <All>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../monthOptions"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">apr</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../coverageMonths"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">apr</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <Dependency path="../eligibleForCoverageMonths"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasMayCoverageMonth">
            <Description>Has coverage in the month of May</Description>
            <Derived>
                <All>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../monthOptions"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">may</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../coverageMonths"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">may</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <Dependency path="../eligibleForCoverageMonths"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasJunCoverageMonth">
            <Description>Has coverage in the month of Jun</Description>
            <Derived>
                <All>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../monthOptions"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">jun</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../coverageMonths"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">jun</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <Dependency path="../eligibleForCoverageMonths"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasJulCoverageMonth">
            <Description>Has coverage in the month of Jul</Description>
            <Derived>
                <All>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../monthOptions"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">jul</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../coverageMonths"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">jul</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <Dependency path="../eligibleForCoverageMonths"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasAugCoverageMonth">
            <Description>Has coverage in the month of Aug</Description>
            <Derived>
                <All>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../monthOptions"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">aug</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../coverageMonths"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">aug</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <Dependency path="../eligibleForCoverageMonths"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasSepCoverageMonth">
            <Description>Has coverage in the month of Sep</Description>
            <Derived>
                <All>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../monthOptions"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">sep</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../coverageMonths"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">sep</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <Dependency path="../eligibleForCoverageMonths"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasOctCoverageMonth">
            <Description>Has coverage in the month of Oct</Description>
            <Derived>
                <All>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../monthOptions"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">oct</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../coverageMonths"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">oct</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <Dependency path="../eligibleForCoverageMonths"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasNovCoverageMonth">
            <Description>Has coverage in the month of Nov</Description>
            <Derived>
                <All>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../monthOptions"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">nov</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../coverageMonths"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">nov</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <Dependency path="../eligibleForCoverageMonths"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasDecCoverageMonth">
            <Description>Has coverage in the month of Dec</Description>
            <Derived>
                <All>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../monthOptions"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">dec</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <EnumOptionsContains>
                        <Options>
                            <Dependency path="../coverageMonths"/>
                        </Options>
                        <Value>
                            <Enum optionsPath="../monthOptions">dec</Enum>
                        </Value>
                    </EnumOptionsContains>
                    <Dependency path="../eligibleForCoverageMonths"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/numberOfCoverageMonths">
            <Description>The number of months the TP had coverage months within a 1095-A</Description>
            <Derived>
                <Add>
                    <Count>
                        <Dependency path="../hasJanCoverageMonth"/>
                    </Count>
                    <Count>
                        <Dependency path="../hasFebCoverageMonth"/>
                    </Count>
                    <Count>
                        <Dependency path="../hasMarCoverageMonth"/>
                    </Count>
                    <Count>
                        <Dependency path="../hasAprCoverageMonth"/>
                    </Count>
                    <Count>
                        <Dependency path="../hasMayCoverageMonth"/>
                    </Count>
                    <Count>
                        <Dependency path="../hasJunCoverageMonth"/>
                    </Count>
                    <Count>
                        <Dependency path="../hasJulCoverageMonth"/>
                    </Count>
                    <Count>
                        <Dependency path="../hasAugCoverageMonth"/>
                    </Count>
                    <Count>
                        <Dependency path="../hasSepCoverageMonth"/>
                    </Count>
                    <Count>
                        <Dependency path="../hasOctCoverageMonth"/>
                    </Count>
                    <Count>
                        <Dependency path="../hasNovCoverageMonth"/>
                    </Count>
                    <Count>
                        <Dependency path="../hasDecCoverageMonth"/>
                    </Count>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasPolicyForAllMonths">
            <Description>Whether the policy lasts all 12 months</Description>
            <Derived>
                <All>
                    <Dependency path="../policyStartsInJan"/>
                    <Equal>
                        <Left>
                            <Dependency path="../policyEndDate/month"/>
                        </Left>
                        <Right>
                            <Int>12</Int>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyIsActiveInJan">
            <Description>Whether the policy is active in Jan</Description>
            <Derived>
                <Dependency path="../policyStartsInJan"/>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyIsActiveInFeb">
            <Description>Whether the policy is active in Feb</Description>
            <Derived>
                <Any>
                    <Dependency path="../policyStartsInFeb"/>
                    <Dependency path="../policyContainsOrEndsInFeb"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyIsActiveInMar">
            <Description>Whether the policy is active in Mar</Description>
            <Derived>
                <Any>
                    <Dependency path="../policyStartsInMar"/>
                    <Dependency path="../policyContainsOrEndsInMar"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyIsActiveInApr">
            <Description>Whether the policy is active in Apr</Description>
            <Derived>
                <Any>
                    <Dependency path="../policyStartsInApr"/>
                    <Dependency path="../policyContainsOrEndsInApr"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyIsActiveInMay">
            <Description>Whether the policy is active in May</Description>
            <Derived>
                <Any>
                    <Dependency path="../policyStartsInMay"/>
                    <Dependency path="../policyContainsOrEndsInMay"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyIsActiveInJun">
            <Description>Whether the policy is active in Jun</Description>
            <Derived>
                <Any>
                    <Dependency path="../policyStartsInJun"/>
                    <Dependency path="../policyContainsOrEndsInJun"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyIsActiveInJul">
            <Description>Whether the policy is active in Jul</Description>
            <Derived>
                <Any>
                    <Dependency path="../policyStartsInJul"/>
                    <Dependency path="../policyContainsOrEndsInJul"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyIsActiveInAug">
            <Description>Whether the policy is active in Aug</Description>
            <Derived>
                <Any>
                    <Dependency path="../policyStartsInAug"/>
                    <Dependency path="../policyContainsOrEndsInAug"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyIsActiveInSep">
            <Description>Whether the policy is active in Sep</Description>
            <Derived>
                <Any>
                    <Dependency path="../policyStartsInSep"/>
                    <Dependency path="../policyContainsOrEndsInSep"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyIsActiveInOct">
            <Description>Whether the policy is active in Oct</Description>
            <Derived>
                <Any>
                    <Dependency path="../policyStartsInOct"/>
                    <Dependency path="../policyContainsOrEndsInOct"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyIsActiveInNov">
            <Description>Whether the policy is active in Nov</Description>
            <Derived>
                <Any>
                    <Dependency path="../policyStartsInNov"/>
                    <Dependency path="../policyContainsOrEndsInNov"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/policyIsActiveInDec">
            <Description>Whether the policy is active in Dec</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../policyEndDate/month"/>
                    </Left>
                    <Right>
                        <Int>12</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/writablePremiumsOrSlcspChange">
            <Description>(writable)Whether the enrollment premiums or SLCSP change with the TY</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/premiumsOrSlcspChange">
            <Description>Whether the enrollment premiums or SLCSP change with the TY</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="../hasAtLeastOneCoverageMonth"/>
                                <Dependency path="../hasPolicyForAllMonths"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writablePremiumsOrSlcspChange"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/writablePtcAnnualPremium">
            <Description>(Writable) annual PTC premiums</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0.50</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/ptcAnnualPremium">
            <Description>Annual PTC premium</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Not>
                                <Dependency path="../premiumsOrSlcspChange"/>
                            </Not>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcAnnualPremium"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/writableSlcspAnnualPremium">
            <Description>(Writable) annual SLCSP premium</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/slcspAnnualPremium">
            <Description>annual SLCSP premium</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../noChangesAnd12MonthPolicy"/>
                        </When>
                        <Then>
                            <Dependency path="../writableSlcspAnnualPremium"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyPremiumJan">
            <Description>Premium in Jan</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../ptcAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../ptcAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyIsActiveInJan"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyPremiumJan"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyPremiumFeb">
            <Description>Premium in Feb</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../ptcAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../ptcAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyIsActiveInFeb"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyPremiumFeb"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyPremiumMar">
            <Description>Premium in Mar</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../ptcAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../ptcAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyIsActiveInMar"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyPremiumMar"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyPremiumApr">
            <Description>Premium in Apr</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../ptcAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../ptcAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyIsActiveInApr"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyPremiumApr"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyPremiumMay">
            <Description>Premium in May</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../ptcAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../ptcAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyIsActiveInMay"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyPremiumMay"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyPremiumJun">
            <Description>Premium in Jun</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../ptcAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../ptcAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyIsActiveInJun"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyPremiumJun"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyPremiumJul">
            <Description>Premium in Jul</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../ptcAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../ptcAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyIsActiveInJul"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyPremiumJul"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyPremiumAug">
            <Description>Premium in Aug</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../ptcAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../ptcAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyIsActiveInAug"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyPremiumAug"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyPremiumSep">
            <Description>Premium in Sep</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../ptcAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../ptcAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyIsActiveInSep"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyPremiumSep"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyPremiumOct">
            <Description>Premium in Oct</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../ptcAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../ptcAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyIsActiveInOct"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyPremiumOct"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyPremiumNov">
            <Description>Premium in Nov</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../ptcAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../ptcAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyIsActiveInNov"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyPremiumNov"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyPremiumDec">
            <Description>Premium in Dec</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../ptcAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../ptcAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../policyIsActiveInDec"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyPremiumDec"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyPremiumJan">
            <Description>(writable)Premium in Jan</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0.50</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyPremiumFeb">
            <Description>(writable)Premium in Feb</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0.50</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyPremiumMar">
            <Description>(writable)Premium in Mar</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0.50</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyPremiumApr">
            <Description>(writable)Premium in Apr</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0.50</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyPremiumMay">
            <Description>(writable)Premium in May</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0.50</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyPremiumJun">
            <Description>(writable)Premium in Jun</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0.50</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyPremiumJul">
            <Description>(writable)Premium in Jul</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0.50</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyPremiumAug">
            <Description>(writable)Premium in Aug</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0.50</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyPremiumSep">
            <Description>(writable)Premium in Sep</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0.50</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyPremiumOct">
            <Description>(writable)Premium in Oct</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0.50</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyPremiumNov">
            <Description>(writable)Premium in Nov</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0.50</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyPremiumDec">
            <Description>(writable)Premium in Dec</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0.50</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/hasChangeInCircumstance">
            <Description>Whether the TP or anyone enrolled in Marketplace plan have a change in circumstance that wasn't
                already reported
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/hasChangeOrPolicyIsNotForAllMonths">
            <Description>Whether there is a change in premiums or circumstances or the policy is not for all 12 months
            </Description>
            <Derived>
                <Any>
                    <Dependency path="../premiumsOrSlcspChange"/>
                    <Dependency path="../hasChangeInCircumstance"/>
                    <Not>
                        <Dependency path="../hasPolicyForAllMonths"/>
                    </Not>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/showMonthlyAptc">
            <Description>Whether to show Monthly APTC question (has APTC and hasChangeOrPolicyIsNotForAllMonths)
            </Description>
            <Derived>
                <All>
                    <Dependency path="../hasChangeOrPolicyIsNotForAllMonths"/>
                    <Dependency path="/hasAdvancedPtc"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/noChangesAnd12MonthPolicy">
            <Description>Whether there is no change in premiums and no change in circumstances and the policy for all 12
                months
            </Description>
            <Derived>
                <All>
                    <Dependency path="../hasPolicyForAllMonths"/>
                    <Not>
                        <Dependency path="../premiumsOrSlcspChange"/>
                    </Not>
                    <Not>
                        <Dependency path="../hasChangeInCircumstance"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasStateMarketplacePlan">
            <Description>Has a state issued marketplace plan (as opposed to a federal plan)</Description>
            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Dependency path="../marketplaceState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/statesAndDistrictsOptions">ca</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../marketplaceState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/statesAndDistrictsOptions">co</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../marketplaceState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/statesAndDistrictsOptions">ct</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../marketplaceState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/statesAndDistrictsOptions">dc</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../marketplaceState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/statesAndDistrictsOptions">ga</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../marketplaceState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/statesAndDistrictsOptions">id</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../marketplaceState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/statesAndDistrictsOptions">ky</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../marketplaceState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/statesAndDistrictsOptions">me</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../marketplaceState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/statesAndDistrictsOptions">md</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../marketplaceState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/statesAndDistrictsOptions">ma</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../marketplaceState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/statesAndDistrictsOptions">mn</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../marketplaceState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/statesAndDistrictsOptions">nv</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../marketplaceState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/statesAndDistrictsOptions">nj</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../marketplaceState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/statesAndDistrictsOptions">nm</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../marketplaceState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/statesAndDistrictsOptions">ny</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../marketplaceState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/statesAndDistrictsOptions">pa</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../marketplaceState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/statesAndDistrictsOptions">ri</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../marketplaceState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/statesAndDistrictsOptions">vt</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../marketplaceState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/statesAndDistrictsOptions">va</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../marketplaceState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/statesAndDistrictsOptions">wa</Enum>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlySlcspPremiumJan">
            <Description>SLCSP Premium in Jan</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../slcspAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../slcspAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../hasJanCoverageMonth"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlySlcspPremiumJan"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlySlcspPremiumFeb">
            <Description>SLCSP Premium in Feb</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../slcspAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../slcspAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../hasFebCoverageMonth"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlySlcspPremiumFeb"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlySlcspPremiumMar">
            <Description>SLCSP Premium in Mar</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../slcspAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../slcspAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../hasMarCoverageMonth"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlySlcspPremiumMar"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlySlcspPremiumApr">
            <Description>SLCSP Premium in Apr</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../slcspAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../slcspAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../hasAprCoverageMonth"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlySlcspPremiumApr"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlySlcspPremiumMay">
            <Description>SLCSP Premium in May</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../slcspAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../slcspAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../hasMayCoverageMonth"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlySlcspPremiumMay"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlySlcspPremiumJun">
            <Description>SLCSP Premium in Jun</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../slcspAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../slcspAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../hasJunCoverageMonth"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlySlcspPremiumJun"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlySlcspPremiumJul">
            <Description>SLCSP Premium in Jul</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../slcspAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../slcspAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../hasJulCoverageMonth"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlySlcspPremiumJul"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlySlcspPremiumAug">
            <Description>SLCSP Premium in Aug</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../slcspAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../slcspAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../hasAugCoverageMonth"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlySlcspPremiumAug"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlySlcspPremiumSep">
            <Description>SLCSP Premium in Sep</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../slcspAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../slcspAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../hasSepCoverageMonth"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlySlcspPremiumSep"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlySlcspPremiumOct">
            <Description>SLCSP Premium in Oct</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../slcspAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../slcspAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../hasOctCoverageMonth"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlySlcspPremiumOct"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlySlcspPremiumNov">
            <Description>SLCSP Premium in Nov</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../slcspAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../slcspAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../hasNovCoverageMonth"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlySlcspPremiumNov"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlySlcspPremiumDec">
            <Description>SLCSP Premium in Dec</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../slcspAnnualPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../slcspAnnualPremium"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../hasDecCoverageMonth"/>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlySlcspPremiumDec"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/slcspPremiumPlaceholderJan">
            <Description>SLCSP placeholder for Jan when month is not a coverage month and the amount should be 0
            </Description>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/slcspPremiumPlaceholderFeb">
            <Description>SLCSP placeholder for Feb when month is not a coverage month and the amount should be 0
            </Description>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/slcspPremiumPlaceholderMar">
            <Description>SLCSP placeholder for Mar when month is not a coverage month and the amount should be 0
            </Description>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/slcspPremiumPlaceholderApr">
            <Description>SLCSP placeholder for Apr when month is not a coverage month and the amount should be 0
            </Description>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/slcspPremiumPlaceholderMay">
            <Description>SLCSP placeholder for May when month is not a coverage month and the amount should be 0
            </Description>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/slcspPremiumPlaceholderJun">
            <Description>SLCSP placeholder for Jun when month is not a coverage month and the amount should be 0
            </Description>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/slcspPremiumPlaceholderJul">
            <Description>SLCSP placeholder for Jul when month is not a coverage month and the amount should be 0
            </Description>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/slcspPremiumPlaceholderAug">
            <Description>SLCSP placeholder for Aug when month is not a coverage month and the amount should be 0
            </Description>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/slcspPremiumPlaceholderSep">
            <Description>SLCSP placeholder for Sep when month is not a coverage month and the amount should be 0
            </Description>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/slcspPremiumPlaceholderOct">
            <Description>SLCSP placeholder for Oct when month is not a coverage month and the amount should be 0
            </Description>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/slcspPremiumPlaceholderNov">
            <Description>SLCSP placeholder for Nov when month is not a coverage month and the amount should be 0
            </Description>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/slcspPremiumPlaceholderDec">
            <Description>SLCSP placeholder for Dec when month is not a coverage month and the amount should be 0
            </Description>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlySlcspPremiumJan">
            <Description>(writable)SLCSP Premium in Jan</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlySlcspPremiumFeb">
            <Description>(writable)SLCSP Premium in Feb</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlySlcspPremiumMar">
            <Description>(writable)SLCSP Premium in Mar</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlySlcspPremiumApr">
            <Description>(writable)SLCSP Premium in Apr</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlySlcspPremiumMay">
            <Description>(writable)SLCSP Premium in May</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlySlcspPremiumJun">
            <Description>(writable)SLCSP Premium in Jun</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlySlcspPremiumJul">
            <Description>(writable)SLCSP Premium in Jul</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlySlcspPremiumAug">
            <Description>(writable)SLCSP Premium in Aug</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlySlcspPremiumSep">
            <Description>(writable)SLCSP Premium in Sep</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlySlcspPremiumOct">
            <Description>(writable)SLCSP Premium in Oct</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlySlcspPremiumNov">
            <Description>(writable)SLCSP Premium in Nov</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlySlcspPremiumDec">
            <Description>(writable)SLCSP Premium in Dec</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyAptcPremiumJan">
            <Description>APTC Premium in Jan</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../aptcAnnualAmount"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../aptcAnnualAmount"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/hasAdvancedPtc"/>
                                <Dependency path="../policyIsActiveInJan"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyAptcPremiumJan"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyAptcPremiumFeb">
            <Description>APTC Premium in Feb</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../aptcAnnualAmount"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../aptcAnnualAmount"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/hasAdvancedPtc"/>
                                <Dependency path="../policyIsActiveInFeb"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyAptcPremiumFeb"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyAptcPremiumMar">
            <Description>APTC Premium in Mar</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../aptcAnnualAmount"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../aptcAnnualAmount"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/hasAdvancedPtc"/>
                                <Dependency path="../policyIsActiveInMar"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyAptcPremiumMar"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyAptcPremiumApr">
            <Description>APTC Premium in Apr</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../aptcAnnualAmount"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../aptcAnnualAmount"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/hasAdvancedPtc"/>
                                <Dependency path="../policyIsActiveInApr"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyAptcPremiumApr"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyAptcPremiumMay">
            <Description>APTC Premium in May</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../aptcAnnualAmount"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../aptcAnnualAmount"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/hasAdvancedPtc"/>
                                <Dependency path="../policyIsActiveInMay"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyAptcPremiumMay"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyAptcPremiumJun">
            <Description>APTC Premium in Jun</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../aptcAnnualAmount"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../aptcAnnualAmount"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/hasAdvancedPtc"/>
                                <Dependency path="../policyIsActiveInJun"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyAptcPremiumJun"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyAptcPremiumJul">
            <Description>APTC Premium in Jul</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../aptcAnnualAmount"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../aptcAnnualAmount"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/hasAdvancedPtc"/>
                                <Dependency path="../policyIsActiveInJul"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyAptcPremiumJul"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyAptcPremiumAug">
            <Description>APTC Premium in Aug</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../aptcAnnualAmount"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../aptcAnnualAmount"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/hasAdvancedPtc"/>
                                <Dependency path="../policyIsActiveInAug"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyAptcPremiumAug"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyAptcPremiumSep">
            <Description>APTC Premium in Sep</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../aptcAnnualAmount"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../aptcAnnualAmount"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/hasAdvancedPtc"/>
                                <Dependency path="../policyIsActiveInSep"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyAptcPremiumSep"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyAptcPremiumOct">
            <Description>APTC Premium in Oct</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../aptcAnnualAmount"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../aptcAnnualAmount"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/hasAdvancedPtc"/>
                                <Dependency path="../policyIsActiveInOct"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyAptcPremiumOct"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyAptcPremiumNov">
            <Description>APTC Premium in Nov</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../aptcAnnualAmount"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../aptcAnnualAmount"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/hasAdvancedPtc"/>
                                <Dependency path="../policyIsActiveInNov"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyAptcPremiumNov"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/ptcMonthlyAptcPremiumDec">
            <Description>APTC Premium in Dec</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../aptcAnnualAmount"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Divide>
                                <Dividend>
                                    <Dependency path="../aptcAnnualAmount"/>
                                </Dividend>
                                <Divisors>
                                    <Int>12</Int>
                                </Divisors>
                            </Divide>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/hasAdvancedPtc"/>
                                <Dependency path="../policyIsActiveInDec"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writablePtcMonthlyAptcPremiumDec"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyAptcPremiumJan">
            <Description>(writable)APTC Premium in Jan</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyAptcPremiumFeb">
            <Description>(writable)APTC Premium in Feb</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyAptcPremiumMar">
            <Description>(writable)APTC Premium in Mar</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyAptcPremiumApr">
            <Description>(writable)APTC Premium in Apr</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyAptcPremiumMay">
            <Description>(writable)APTC Premium in May</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyAptcPremiumJun">
            <Description>(writable)APTC Premium in Jun</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyAptcPremiumJul">
            <Description>(writable)APTC Premium in Jul</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyAptcPremiumAug">
            <Description>(writable)APTC Premium in Aug</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyAptcPremiumSep">
            <Description>(writable)APTC Premium in Sep</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyAptcPremiumOct">
            <Description>(writable)APTC Premium in Oct</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyAptcPremiumNov">
            <Description>(writable)APTC Premium in Nov</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writablePtcMonthlyAptcPremiumDec">
            <Description>(writable)APTC Premium in Dec</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/writableAptcAnnualAmount">
            <Description>(Writable) annual APTC premium</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0.50</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/1095As/*/aptcAnnualAmount">
            <Description>Annual APTC amount</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../hasAptcAndPolicyIsFullYearOrZeroCoverageMonths"/>
                        </When>
                        <Then>
                            <Dependency path="../writableAptcAnnualAmount"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../hasNoAptcAndPolicyIsFullYearOrZeroCoverageMonths"/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasZeroCoverageMonths">
            <Description>The number of coverage months is zero</Description>
            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Dependency path="../numberOfCoverageMonths"/>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasAtLeastOneCoverageMonth">
            <Description>The number of coverage months is zero</Description>
            <Derived>
                <All>
                    <GreaterThanOrEqual>
                        <Left>
                            <Dependency path="../numberOfCoverageMonths"/>
                        </Left>
                        <Right>
                            <Int>1</Int>
                        </Right>
                    </GreaterThanOrEqual>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasAptcAndPolicyIsFullYearOrZeroCoverageMonths">
            <Description>Has APTC and either policy is for all 12 months or there are no coverage months</Description>
            <Derived>
                <All>
                    <Any>
                        <Dependency path="../noChangesAnd12MonthPolicy"/>
                        <Dependency path="../hasZeroCoverageMonths"/>
                    </Any>
                    <Dependency path="/hasAdvancedPtc"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasNoAptcAndPolicyIsFullYearOrZeroCoverageMonths">
            <Description>Doesn't have APTC and either policy is for all 12 months or there are no coverage months
            </Description>
            <Derived>
                <All>
                    <Any>
                        <Dependency path="../noChangesAnd12MonthPolicy"/>
                        <Dependency path="../hasZeroCoverageMonths"/>
                    </Any>
                    <Not>
                        <Dependency path="/hasAdvancedPtc"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/1095As/*/hasCoverageMonthsOrAptc">
            <Description>Either has coverage months or APTC</Description>
            <Derived>
                <Any>
                    <Dependency path="../hasAtLeastOneCoverageMonth"/>
                    <Dependency path="/hasAdvancedPtc"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/ptcCanReportAnnualTotals">
            <Description>Whether the TP can report annual totals</Description>
            <Export mef="true"/>
            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <CollectionSize>
                            <Filter path="/1095As">
                                <Any>
                                    <Dependency path="noChangesAnd12MonthPolicy"/>
                                    <All>
                                        <Dependency path="hasZeroCoverageMonths"/>
                                        <Dependency path="/hasAdvancedPtc"/>
                                    </All>
                                </Any>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/totalPtcAnnualPremium">
            <Description>Total PTC annual premiums</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/ptcCanReportAnnualTotals"/>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcAnnualPremium"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/totalAnnualSlcspPremium">
            <Description>Total annual SLCSP premiums</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/ptcCanReportAnnualTotals"/>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/slcspAnnualPremium"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/totalAnnualAptcAmount">
            <Description>Total annual APTC amount</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/ptcCanReportAnnualTotals"/>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/aptcAnnualAmount"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/annualMaxPremiumAssitance">
            <Description>Annual max premium assitance, Form 8962 Line 11d</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/ptcCanReportAnnualTotals"/>
                        </When>
                        <Then>
                            <Switch>
                                <Case>
                                    <When>
                                        <Not>
                                            <IsComplete>
                                                <Dependency path="/totalAnnualSlcspPremium"/>
                                            </IsComplete>
                                        </Not>
                                    </When>
                                    <Then>
                                        <Dollar>0</Dollar>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <True/>
                                    </When>
                                    <Then>
                                        <GreaterOf>
                                            <Dollar>0</Dollar>
                                            <Subtract>
                                                <Minuend>
                                                    <Dependency path="/totalAnnualSlcspPremium"/>
                                                </Minuend>
                                                <Subtrahends>
                                                    <Dependency path="/ptcAnnualContributionAmount"/>
                                                </Subtrahends>
                                            </Subtract>
                                        </GreaterOf>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/annualPtcAllowed">
            <Description>Max PTC allowed</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/ptcCanReportAnnualTotals"/>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/annualMaxPremiumAssitance"/>
                                <Switch>
                                    <Case>
                                        <When>
                                            <Not>
                                                <IsComplete>
                                                    <Dependency path="/totalPtcAnnualPremium"/>
                                                </IsComplete>
                                            </Not>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dependency path="/totalPtcAnnualPremium"/>
                                        </Then>
                                    </Case>
                                </Switch>
                            </LesserOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/submittedAnnualContributionAmountForAnnual">
            <Description>The submitted annual contribution if annual is applicable, Line 11c</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/ptcCanReportAnnualTotals"/>
                        </When>
                        <Then>
                            <Dependency path="/ptcAnnualContributionAmount"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/needsToFileForm8962Monthly">
            <Description>Needs to File Form 8962 and needs to file montly</Description>
            <Export mef="true"/>
            <Derived>
                <All>
                    <Dependency path="/mayNeedToFileForm8962"/>
                    <Not>
                        <Dependency path="/ptcCanReportAnnualTotals"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hasActive1095APolicyInJan">
            <Description>Has at least one active policy in Jan</Description>
            <Export mef="true"/>
            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <CollectionSize>
                            <Filter path="/1095As">
                                <Dependency path="policyIsActiveInJan"/>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/hasActive1095APolicyInFeb">
            <Description>Has at least one active policy in Feb</Description>
            <Export mef="true"/>
            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <CollectionSize>
                            <Filter path="/1095As">
                                <Dependency path="policyIsActiveInFeb"/>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/hasActive1095APolicyInMar">
            <Description>Has at least one active policy in Mar</Description>
            <Export mef="true"/>
            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <CollectionSize>
                            <Filter path="/1095As">
                                <Dependency path="policyIsActiveInMar"/>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/hasActive1095APolicyInApr">
            <Description>Has at least one active policy in Apr</Description>
            <Export mef="true"/>
            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <CollectionSize>
                            <Filter path="/1095As">
                                <Dependency path="policyIsActiveInApr"/>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/hasActive1095APolicyInMay">
            <Description>Has at least one active policy in May</Description>
            <Export mef="true"/>
            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <CollectionSize>
                            <Filter path="/1095As">
                                <Dependency path="policyIsActiveInMay"/>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/hasActive1095APolicyInJun">
            <Description>Has at least one active policy in Jun</Description>
            <Export mef="true"/>
            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <CollectionSize>
                            <Filter path="/1095As">
                                <Dependency path="policyIsActiveInJun"/>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/hasActive1095APolicyInJul">
            <Description>Has at least one active policy in Jul</Description>
            <Export mef="true"/>
            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <CollectionSize>
                            <Filter path="/1095As">
                                <Dependency path="policyIsActiveInJul"/>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/hasActive1095APolicyInAug">
            <Description>Has at least one active policy in Aug</Description>
            <Export mef="true"/>
            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <CollectionSize>
                            <Filter path="/1095As">
                                <Dependency path="policyIsActiveInAug"/>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/hasActive1095APolicyInSep">
            <Description>Has at least one active policy in Sep</Description>
            <Export mef="true"/>
            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <CollectionSize>
                            <Filter path="/1095As">
                                <Dependency path="policyIsActiveInSep"/>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/hasActive1095APolicyInOct">
            <Description>Has at least one active policy in Oct</Description>
            <Export mef="true"/>
            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <CollectionSize>
                            <Filter path="/1095As">
                                <Dependency path="policyIsActiveInOct"/>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/hasActive1095APolicyInNov">
            <Description>Has at least one active policy in Nov</Description>
            <Export mef="true"/>
            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <CollectionSize>
                            <Filter path="/1095As">
                                <Dependency path="policyIsActiveInNov"/>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/hasActive1095APolicyInDec">
            <Description>Has at least one active policy in Dec</Description>
            <Export mef="true"/>
            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <CollectionSize>
                            <Filter path="/1095As">
                                <Dependency path="policyIsActiveInDec"/>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcPremiumForJan">
            <Description>The monthly PTC premium for Jan</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInJan"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyPremiumJan"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcPremiumForFeb">
            <Description>The monthly PTC premium for Feb</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInFeb"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyPremiumFeb"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcPremiumForMar">
            <Description>The monthly PTC premium for Mar</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInMar"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyPremiumMar"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcPremiumForApr">
            <Description>The monthly PTC premium for Apr</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInApr"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyPremiumApr"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcPremiumForMay">
            <Description>The monthly PTC premium for May</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInMay"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyPremiumMay"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcPremiumForJun">
            <Description>The monthly PTC premium for Jun</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInJun"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyPremiumJun"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcPremiumForJul">
            <Description>The monthly PTC premium for Jul</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInJul"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyPremiumJul"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcPremiumForAug">
            <Description>The monthly PTC premium for Aug</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInAug"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyPremiumAug"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcPremiumForSep">
            <Description>The monthly PTC premium for Sep</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInSep"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyPremiumSep"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcPremiumForOct">
            <Description>The monthly PTC premium for Oct</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInOct"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyPremiumOct"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcPremiumForNov">
            <Description>The monthly PTC premium for Nov</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInNov"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyPremiumNov"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcPremiumForDec">
            <Description>The monthly PTC premium for Dec</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInDec"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyPremiumDec"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcSlcspPremiumForJan">
            <Description>The monthly PTC SLCSP premium for Jan</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInJan"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlySlcspPremiumJan"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcSlcspPremiumForFeb">
            <Description>The monthly PTC SLCSP premium for Feb</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInFeb"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlySlcspPremiumFeb"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcSlcspPremiumForMar">
            <Description>The monthly PTC SLCSP premium for Mar</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInMar"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlySlcspPremiumMar"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcSlcspPremiumForApr">
            <Description>The monthly PTC SLCSP premium for Apr</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInApr"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlySlcspPremiumApr"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcSlcspPremiumForMay">
            <Description>The monthly PTC SLCSP premium for May</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInMay"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlySlcspPremiumMay"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcSlcspPremiumForJun">
            <Description>The monthly PTC SLCSP premium for Jun</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInJun"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlySlcspPremiumJun"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcSlcspPremiumForJul">
            <Description>The monthly PTC SLCSP premium for Jul</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInJul"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlySlcspPremiumJul"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcSlcspPremiumForAug">
            <Description>The monthly PTC SLCSP premium for Aug</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInAug"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlySlcspPremiumAug"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcSlcspPremiumForSep">
            <Description>The monthly PTC SLCSP premium for Sep</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInSep"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlySlcspPremiumSep"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcSlcspPremiumForOct">
            <Description>The monthly PTC SLCSP premium for Oct</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInOct"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlySlcspPremiumOct"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcSlcspPremiumForNov">
            <Description>The monthly PTC SLCSP premium for Nov</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInNov"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlySlcspPremiumNov"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcSlcspPremiumForDec">
            <Description>The monthly PTC SLCSP premium for Dec</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInDec"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlySlcspPremiumDec"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcContributionAmountForJan">
            <Description>The monthly PTC contribution amount for Jan</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInJan"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/ptcMontlyContributionAmount"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcContributionAmountForFeb">
            <Description>The monthly PTC contribution amount for Feb</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInFeb"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/ptcMontlyContributionAmount"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcContributionAmountForMar">
            <Description>The monthly PTC contribution amount for Mar</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInMar"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/ptcMontlyContributionAmount"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcContributionAmountForApr">
            <Description>The monthly PTC contribution amount for Apr</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInApr"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/ptcMontlyContributionAmount"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcContributionAmountForMay">
            <Description>The monthly PTC contribution amount for May</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInMay"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/ptcMontlyContributionAmount"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcContributionAmountForJun">
            <Description>The monthly PTC contribution amount for Jun</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInJun"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/ptcMontlyContributionAmount"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcContributionAmountForJul">
            <Description>The monthly PTC contribution amount for Jul</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInJul"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/ptcMontlyContributionAmount"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcContributionAmountForAug">
            <Description>The monthly PTC contribution amount for Aug</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInAug"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/ptcMontlyContributionAmount"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcContributionAmountForSep">
            <Description>The monthly PTC contribution amount for Sep</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInSep"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/ptcMontlyContributionAmount"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcContributionAmountForOct">
            <Description>The monthly PTC contribution amount for Oct</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInOct"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/ptcMontlyContributionAmount"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcContributionAmountForNov">
            <Description>The monthly PTC contribution amount for Nov</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInNov"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/ptcMontlyContributionAmount"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcContributionAmountForDec">
            <Description>The monthly PTC contribution amount for Dec</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInDec"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/ptcMontlyContributionAmount"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcMaxPremiumAssitanceForJan">
            <Description>The monthly PTC max premium assitance for Jan</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInJan"/>
                            </All>
                        </When>
                        <Then>
                            <GreaterOf>
                                <Dollar>0</Dollar>
                                <Subtract>
                                    <Minuend>
                                        <Dependency path="/monthlyPtcSlcspPremiumForJan"/>
                                    </Minuend>
                                    <Subtrahends>
                                        <Dependency path="/monthlyPtcContributionAmountForJan"/>
                                    </Subtrahends>
                                </Subtract>
                            </GreaterOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcMaxPremiumAssitanceForFeb">
            <Description>The monthly PTC max premium assitance for Feb</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInFeb"/>
                            </All>
                        </When>
                        <Then>
                            <GreaterOf>
                                <Dollar>0</Dollar>
                                <Subtract>
                                    <Minuend>
                                        <Dependency path="/monthlyPtcSlcspPremiumForFeb"/>
                                    </Minuend>
                                    <Subtrahends>
                                        <Dependency path="/monthlyPtcContributionAmountForFeb"/>
                                    </Subtrahends>
                                </Subtract>
                            </GreaterOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcMaxPremiumAssitanceForMar">
            <Description>The monthly PTC max premium assitance for Mar</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInMar"/>
                            </All>
                        </When>
                        <Then>
                            <GreaterOf>
                                <Dollar>0</Dollar>
                                <Subtract>
                                    <Minuend>
                                        <Dependency path="/monthlyPtcSlcspPremiumForMar"/>
                                    </Minuend>
                                    <Subtrahends>
                                        <Dependency path="/monthlyPtcContributionAmountForMar"/>
                                    </Subtrahends>
                                </Subtract>
                            </GreaterOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcMaxPremiumAssitanceForApr">
            <Description>The monthly PTC max premium assitance for Apr</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInApr"/>
                            </All>
                        </When>
                        <Then>
                            <GreaterOf>
                                <Dollar>0</Dollar>
                                <Subtract>
                                    <Minuend>
                                        <Dependency path="/monthlyPtcSlcspPremiumForApr"/>
                                    </Minuend>
                                    <Subtrahends>
                                        <Dependency path="/monthlyPtcContributionAmountForApr"/>
                                    </Subtrahends>
                                </Subtract>
                            </GreaterOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcMaxPremiumAssitanceForMay">
            <Description>The monthly PTC max premium assitance for May</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInMay"/>
                            </All>
                        </When>
                        <Then>
                            <GreaterOf>
                                <Dollar>0</Dollar>
                                <Subtract>
                                    <Minuend>
                                        <Dependency path="/monthlyPtcSlcspPremiumForMay"/>
                                    </Minuend>
                                    <Subtrahends>
                                        <Dependency path="/monthlyPtcContributionAmountForMay"/>
                                    </Subtrahends>
                                </Subtract>
                            </GreaterOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcMaxPremiumAssitanceForJun">
            <Description>The monthly PTC max premium assitance for Jun</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInJun"/>
                            </All>
                        </When>
                        <Then>
                            <GreaterOf>
                                <Dollar>0</Dollar>
                                <Subtract>
                                    <Minuend>
                                        <Dependency path="/monthlyPtcSlcspPremiumForJun"/>
                                    </Minuend>
                                    <Subtrahends>
                                        <Dependency path="/monthlyPtcContributionAmountForJun"/>
                                    </Subtrahends>
                                </Subtract>
                            </GreaterOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcMaxPremiumAssitanceForJul">
            <Description>The monthly PTC max premium assitance for Jul</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInJul"/>
                            </All>
                        </When>
                        <Then>
                            <GreaterOf>
                                <Dollar>0</Dollar>
                                <Subtract>
                                    <Minuend>
                                        <Dependency path="/monthlyPtcSlcspPremiumForJul"/>
                                    </Minuend>
                                    <Subtrahends>
                                        <Dependency path="/monthlyPtcContributionAmountForJul"/>
                                    </Subtrahends>
                                </Subtract>
                            </GreaterOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcMaxPremiumAssitanceForAug">
            <Description>The monthly PTC max premium assitance for Aug</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInAug"/>
                            </All>
                        </When>
                        <Then>
                            <GreaterOf>
                                <Dollar>0</Dollar>
                                <Subtract>
                                    <Minuend>
                                        <Dependency path="/monthlyPtcSlcspPremiumForAug"/>
                                    </Minuend>
                                    <Subtrahends>
                                        <Dependency path="/monthlyPtcContributionAmountForAug"/>
                                    </Subtrahends>
                                </Subtract>
                            </GreaterOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcMaxPremiumAssitanceForSep">
            <Description>The monthly PTC max premium assitance for Sep</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInSep"/>
                            </All>
                        </When>
                        <Then>
                            <GreaterOf>
                                <Dollar>0</Dollar>
                                <Subtract>
                                    <Minuend>
                                        <Dependency path="/monthlyPtcSlcspPremiumForSep"/>
                                    </Minuend>
                                    <Subtrahends>
                                        <Dependency path="/monthlyPtcContributionAmountForSep"/>
                                    </Subtrahends>
                                </Subtract>
                            </GreaterOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcMaxPremiumAssitanceForOct">
            <Description>The monthly PTC max premium assitance for Oct</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInOct"/>
                            </All>
                        </When>
                        <Then>
                            <GreaterOf>
                                <Dollar>0</Dollar>
                                <Subtract>
                                    <Minuend>
                                        <Dependency path="/monthlyPtcSlcspPremiumForOct"/>
                                    </Minuend>
                                    <Subtrahends>
                                        <Dependency path="/monthlyPtcContributionAmountForOct"/>
                                    </Subtrahends>
                                </Subtract>
                            </GreaterOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcMaxPremiumAssitanceForNov">
            <Description>The monthly PTC max premium assitance for Nov</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInNov"/>
                            </All>
                        </When>
                        <Then>
                            <GreaterOf>
                                <Dollar>0</Dollar>
                                <Subtract>
                                    <Minuend>
                                        <Dependency path="/monthlyPtcSlcspPremiumForNov"/>
                                    </Minuend>
                                    <Subtrahends>
                                        <Dependency path="/monthlyPtcContributionAmountForNov"/>
                                    </Subtrahends>
                                </Subtract>
                            </GreaterOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcMaxPremiumAssitanceForDec">
            <Description>The monthly PTC max premium assitance for Dec</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInDec"/>
                            </All>
                        </When>
                        <Then>
                            <GreaterOf>
                                <Dollar>0</Dollar>
                                <Subtract>
                                    <Minuend>
                                        <Dependency path="/monthlyPtcSlcspPremiumForDec"/>
                                    </Minuend>
                                    <Subtrahends>
                                        <Dependency path="/monthlyPtcContributionAmountForDec"/>
                                    </Subtrahends>
                                </Subtract>
                            </GreaterOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcAllowedForJan">
            <Description>The monthly PTC allowed for Jan</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInJan"/>
                            </All>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/monthlyPtcMaxPremiumAssitanceForJan"/>
                                <Dependency path="/monthlyPtcPremiumForJan"/>
                            </LesserOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcAllowedForFeb">
            <Description>The monthly PTC allowed for Feb</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInFeb"/>
                            </All>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/monthlyPtcMaxPremiumAssitanceForFeb"/>
                                <Dependency path="/monthlyPtcPremiumForFeb"/>
                            </LesserOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcAllowedForMar">
            <Description>The monthly PTC allowed for Mar</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInMar"/>
                            </All>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/monthlyPtcMaxPremiumAssitanceForMar"/>
                                <Dependency path="/monthlyPtcPremiumForMar"/>
                            </LesserOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcAllowedForApr">
            <Description>The monthly PTC allowed for Apr</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInApr"/>
                            </All>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/monthlyPtcMaxPremiumAssitanceForApr"/>
                                <Dependency path="/monthlyPtcPremiumForApr"/>
                            </LesserOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcAllowedForMay">
            <Description>The monthly PTC allowed for May</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInMay"/>
                            </All>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/monthlyPtcMaxPremiumAssitanceForMay"/>
                                <Dependency path="/monthlyPtcPremiumForMay"/>
                            </LesserOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcAllowedForJun">
            <Description>The monthly PTC allowed for Jun</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInJun"/>
                            </All>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/monthlyPtcMaxPremiumAssitanceForJun"/>
                                <Dependency path="/monthlyPtcPremiumForJun"/>
                            </LesserOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcAllowedForJul">
            <Description>The monthly PTC allowed for Jul</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInJul"/>
                            </All>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/monthlyPtcMaxPremiumAssitanceForJul"/>
                                <Dependency path="/monthlyPtcPremiumForJul"/>
                            </LesserOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcAllowedForAug">
            <Description>The monthly PTC allowed for Aug</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInAug"/>
                            </All>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/monthlyPtcMaxPremiumAssitanceForAug"/>
                                <Dependency path="/monthlyPtcPremiumForAug"/>
                            </LesserOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcAllowedForSep">
            <Description>The monthly PTC allowed for Sep</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInSep"/>
                            </All>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/monthlyPtcMaxPremiumAssitanceForSep"/>
                                <Dependency path="/monthlyPtcPremiumForSep"/>
                            </LesserOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcAllowedForOct">
            <Description>The monthly PTC allowed for Oct</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInOct"/>
                            </All>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/monthlyPtcMaxPremiumAssitanceForOct"/>
                                <Dependency path="/monthlyPtcPremiumForOct"/>
                            </LesserOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcAllowedForNov">
            <Description>The monthly PTC allowed for Nov</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInNov"/>
                            </All>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/monthlyPtcMaxPremiumAssitanceForNov"/>
                                <Dependency path="/monthlyPtcPremiumForNov"/>
                            </LesserOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyPtcAllowedForDec">
            <Description>The monthly PTC allowed for Dec</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInDec"/>
                            </All>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/monthlyPtcMaxPremiumAssitanceForDec"/>
                                <Dependency path="/monthlyPtcPremiumForDec"/>
                            </LesserOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyAptcPremiumForJan">
            <Description>The monthly APTC premium for Jan</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInJan"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyAptcPremiumJan"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyAptcPremiumForFeb">
            <Description>The monthly APTC premium for Feb</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInFeb"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyAptcPremiumFeb"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyAptcPremiumForMar">
            <Description>The monthly APTC premium for Mar</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInMar"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyAptcPremiumMar"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyAptcPremiumForApr">
            <Description>The monthly APTC premium for Apr</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInApr"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyAptcPremiumApr"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyAptcPremiumForMay">
            <Description>The monthly APTC premium for May</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInMay"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyAptcPremiumMay"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyAptcPremiumForJun">
            <Description>The monthly APTC premium for Jun</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInJun"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyAptcPremiumJun"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyAptcPremiumForJul">
            <Description>The monthly APTC premium for Jul</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInJul"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyAptcPremiumJul"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyAptcPremiumForAug">
            <Description>The monthly APTC premium for Aug</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInAug"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyAptcPremiumAug"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyAptcPremiumForSep">
            <Description>The monthly APTC premium for Sep</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInSep"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyAptcPremiumSep"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyAptcPremiumForOct">
            <Description>The monthly APTC premium for Oct</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInOct"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyAptcPremiumOct"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyAptcPremiumForNov">
            <Description>The monthly APTC premium for Nov</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInNov"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyAptcPremiumNov"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/monthlyAptcPremiumForDec">
            <Description>The monthly APTC premium for Dec</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/needsToFileForm8962Monthly"/>
                                <Dependency path="/hasActive1095APolicyInDec"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/1095As/*/ptcMonthlyAptcPremiumDec"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/totalPtcAmountAllowed">
            <Description>Total PTC amount allowed, used on Form 8962, Line 24</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/ptcCanReportAnnualTotals"/>
                        </When>
                        <Then>
                            <Dependency path="/annualPtcAllowed"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="/needsToFileForm8962Monthly"/>
                        </When>
                        <Then>
                            <Add>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyPtcAllowedForJan"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyPtcAllowedForJan"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyPtcAllowedForFeb"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyPtcAllowedForFeb"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyPtcAllowedForMar"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyPtcAllowedForMar"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyPtcAllowedForApr"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyPtcAllowedForApr"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyPtcAllowedForMay"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyPtcAllowedForMay"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyPtcAllowedForJun"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyPtcAllowedForJun"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyPtcAllowedForJul"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyPtcAllowedForJul"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyPtcAllowedForAug"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyPtcAllowedForAug"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyPtcAllowedForSep"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyPtcAllowedForSep"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyPtcAllowedForOct"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyPtcAllowedForOct"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyPtcAllowedForNov"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyPtcAllowedForNov"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyPtcAllowedForDec"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyPtcAllowedForDec"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                            </Add>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/totalAptcAmountTaken">
            <Description>Total APTC amount taken, used on Form 8962, Line 25</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/ptcCanReportAnnualTotals"/>
                        </When>
                        <Then>
                            <Dependency path="/totalAnnualAptcAmount"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="/needsToFileForm8962Monthly"/>
                        </When>
                        <Then>
                            <Add>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyAptcPremiumForJan"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyAptcPremiumForJan"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyAptcPremiumForFeb"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyAptcPremiumForFeb"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyAptcPremiumForMar"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyAptcPremiumForMar"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyAptcPremiumForApr"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyAptcPremiumForApr"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyAptcPremiumForMay"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyAptcPremiumForMay"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyAptcPremiumForJun"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyAptcPremiumForJun"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyAptcPremiumForJul"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyAptcPremiumForJul"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyAptcPremiumForAug"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyAptcPremiumForAug"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyAptcPremiumForSep"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyAptcPremiumForSep"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyAptcPremiumForOct"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyAptcPremiumForOct"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyAptcPremiumForNov"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyAptcPremiumForNov"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                                <Switch>
                                    <Case>
                                        <When>
                                            <IsComplete>
                                                <Dependency path="/monthlyAptcPremiumForDec"/>
                                            </IsComplete>
                                        </When>
                                        <Then>
                                            <Dependency path="/monthlyAptcPremiumForDec"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                            </Add>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/netPtcAmount">
            <Description>The net PTC amount</Description>
            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency path="/totalPtcAmountAllowed"/>
                    </Minuend>
                    <Subtrahends>
                        <Dependency path="/totalAptcAmountTaken"/>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/netPtcAmountIsZeroOrPositive">
            <Description>Helper fact to determine if PTC amount is zero or positive</Description>
            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <Dependency path="/netPtcAmount"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/netPtcAmountIsNegative">
            <Description>Helper fact to determine if PTC amount is negative</Description>
            <Derived>
                <LessThan>
                    <Left>
                        <Dependency path="/netPtcAmount"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </LessThan>
            </Derived>
        </Fact>
        <Fact path="/netPtcAmountWhenZeroOrPositive">
            <Description>net PTC amount when amount is zero or positive, used on Form 8962 Line 26</Description>
            <Export mef="true" downstreamFacts="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/netPtcAmountIsZeroOrPositive"/>
                        </When>
                        <Then>
                            <Dependency path="/netPtcAmount"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/isReceivingPtc">
            <Description>The credit being received is positive</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <All>
                    <Dependency path="/needsToFileForm8962"/>  <!-- This might be redundant -->
                    <IsComplete>
                        <Dependency path="/netPtcAmountWhenZeroOrPositive"/>
                    </IsComplete>
                    <NotEqual>
                        <Left>
                            <Dependency path="/netPtcAmountWhenZeroOrPositive"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </NotEqual>
                </All>
            </Derived>
        </Fact>
        <Fact path="/owesPtc">
            <Description>The TP owes PTC</Description>
            <Derived>
                <All>
                    <Dependency path="/needsToFileForm8962"/> <!-- This might be redundant -->
                    <GreaterThan>
                        <Left>
                            <Dependency path="/lesserOfNetPtcAmountAndRepaymentLimitation"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/netPtcAmountWhenNegative">
            <Description>net PTC amount when amount is negative, used on Form 8962 Line 27</Description>
            <Export mef="true" downstreamFacts="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/netPtcAmountIsNegative"/>
                        </When>
                        <Then>
                            <Multiply>
                                <Dependency path="/netPtcAmount"/>
                                <Int>-1</Int>
                            </Multiply>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/ptcRepaymentLimitationLessThan200PercentFplSingle">
            <Description>Repayment limitation based on lt 200% FPL (federal poverty limit) and single Rev Proc .07
                Refundable
                Credit for Coverage Under a Qualified Health Plan § 36B(f)(2)(B)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>375</Dollar>
            </Derived>
        </Fact>
        <Fact path="/ptcRepaymentLimitationLessThan200PercentFplOther">
            <Description>Repayment limitation lt 200% FPL and not signle Rev Proc .07 Refundable Credit for Coverage
                Under a
                Qualified Health Plan § 36B(f)(2)(B)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>750</Dollar>
            </Derived>
        </Fact>
        <Fact path="/ptcRepaymentLimitationLessThan300PercentFplSingle">
            <Description>Repayment limitation based on lt 300% FPL and single Rev Proc .07 Refundable Credit for
                Coverage
                Under a Qualified Health Plan § 36B(f)(2)(B)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>950</Dollar>
            </Derived>
        </Fact>
        <Fact path="/ptcRepaymentLimitationLessThan300PercentFplOther">
            <Description>Repayment limitation lt 300% FPL and not signle Rev Proc .07 Refundable Credit for Coverage
                Under a
                Qualified Health Plan § 36B(f)(2)(B)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>1900</Dollar>
            </Derived>
        </Fact>
        <Fact path="/ptcRepaymentLimitationLessThan400PercentFplSingle">
            <Description>Repayment limitation based on lt 400% FPL and single Rev Proc .07 Refundable Credit for
                Coverage
                Under a Qualified Health Plan § 36B(f)(2)(B)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>1575</Dollar>
            </Derived>
        </Fact>
        <Fact path="/ptcRepaymentLimitationLessThan400PercentFplOther">
            <Description>Repayment limitation lt 400% FPL and not signle Rev Proc .07 Refundable Credit for Coverage
                Under a
                Qualified Health Plan § 36B(f)(2)(B)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>3150</Dollar>
            </Derived>
        </Fact>
        <Fact path="/ptcRepaymentLimitation">
            <Description>PTC repayment limitation, Line 28</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <!-- Workaround to ensure this line is blank when tax family size is 0 -->
                    <Case>
                        <When>
                            <Dependency path="/taxFamilySizeIsZero"/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="/netPtcAmountWhenNegative"/>
                                </IsComplete>
                                <LessThan>
                                    <Left>
                                        <Dependency path="/householdIncomeAsPercent"/>
                                    </Left>
                                    <Right>
                                        <Int>200</Int>
                                    </Right>
                                </LessThan>
                            </All>
                        </When>
                        <Then>
                            <Switch>
                                <Case>
                                    <When>
                                        <Dependency module="filingStatus" path="/isFilingStatusSingle"/>
                                    </When>
                                    <Then>
                                        <Dependency path="/ptcRepaymentLimitationLessThan200PercentFplSingle"/>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <True/>
                                    </When>
                                    <Then>
                                        <Dependency path="/ptcRepaymentLimitationLessThan200PercentFplOther"/>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="/netPtcAmountWhenNegative"/>
                                </IsComplete>
                                <LessThan>
                                    <Left>
                                        <Dependency path="/householdIncomeAsPercent"/>
                                    </Left>
                                    <Right>
                                        <Int>300</Int>
                                    </Right>
                                </LessThan>
                            </All>
                        </When>
                        <Then>
                            <Switch>
                                <Case>
                                    <When>
                                        <Dependency module="filingStatus" path="/isFilingStatusSingle"/>
                                    </When>
                                    <Then>
                                        <Dependency path="/ptcRepaymentLimitationLessThan300PercentFplSingle"/>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <True/>
                                    </When>
                                    <Then>
                                        <Dependency path="/ptcRepaymentLimitationLessThan300PercentFplOther"/>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="/netPtcAmountWhenNegative"/>
                                </IsComplete>
                                <LessThan>
                                    <Left>
                                        <Dependency path="/householdIncomeAsPercent"/>
                                    </Left>
                                    <Right>
                                        <Int>400</Int>
                                    </Right>
                                </LessThan>
                            </All>
                        </When>
                        <Then>
                            <Switch>
                                <Case>
                                    <When>
                                        <Dependency module="filingStatus" path="/isFilingStatusSingle"/>
                                    </When>
                                    <Then>
                                        <Dependency path="/ptcRepaymentLimitationLessThan400PercentFplSingle"/>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <True/>
                                    </When>
                                    <Then>
                                        <Dependency path="/ptcRepaymentLimitationLessThan400PercentFplOther"/>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="/netPtcAmountWhenNegative"/>
                                </IsComplete>
                                <GreaterThanOrEqual>
                                    <Left>
                                        <Dependency path="/householdIncomeAsPercent"/>
                                    </Left>
                                    <Right>
                                        <Int>400</Int>
                                    </Right>
                                </GreaterThanOrEqual>
                            </All>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/isRepaymentLimitationIsActive">
            <Description>When the repayment limitation is active</Description>
            <Derived>
                <All>
                    <Equal>
                        <Left>
                            <Dependency path="/ptcRepaymentLimitation"/>
                        </Left>
                        <Right>
                            <Dependency path="/lesserOfNetPtcAmountAndRepaymentLimitation"/>
                        </Right>
                    </Equal>
                    <LessThan>
                        <Left>
                            <Dependency path="/ptcRepaymentLimitation"/>
                        </Left>
                        <Right>
                            <Dependency path="/netPtcAmountWhenNegative"/>
                        </Right>
                    </LessThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/ptcAmountOwedDisplayedAsZero">
            <Description>/lesserOfNetPtcAmountAndRepaymentLimitation represents a PTC amount owed. Instead of displaying
                this
                amount as a negative number in the summary, display 0 to communicate that no positive credit is being
                given.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="/lesserOfNetPtcAmountAndRepaymentLimitation"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/lesserOfNetPtcAmountAndRepaymentLimitation">
            <Description>The lesser of the net PTC amount and the repayment limitation, used on Form 1040 Schedule 2,
                Line 1a
                and on Form 8962 Line 29
            </Description>
            <Export mef="true" downstreamFacts="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="/netPtcAmountWhenNegative"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Switch>
                                <Case>
                                    <When>
                                        <All>
                                            <IsComplete>
                                                <Dependency path="/ptcRepaymentLimitation"/>
                                            </IsComplete>
                                            <NotEqual>
                                                <Left>
                                                    <Dependency path="/ptcRepaymentLimitation"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>0</Dollar>
                                                </Right>
                                            </NotEqual>
                                        </All>
                                    </When>
                                    <Then>
                                        <LesserOf>
                                            <Dependency path="/netPtcAmountWhenNegative"/>
                                            <Dependency path="/ptcRepaymentLimitation"/>
                                        </LesserOf>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <True/>
                                    </When>
                                    <Then>
                                        <Dependency path="/netPtcAmountWhenNegative"/>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/ptcHasZeroCoverageMonths">
            <Description>TP has zero coverage months across all 1095As, you should check if this is complete when
                using
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/applicableTaxPayerOrHasAptc"/>
                                <GreaterThan>
                                    <Left>
                                        <CollectionSize>
                                            <Dependency path="/1095As"/>
                                        </CollectionSize>
                                    </Left>
                                    <Right>
                                        <Int>0</Int>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <Equal>
                                <Left>
                                    <CollectionSize>
                                        <Dependency path="/1095As"/>
                                    </CollectionSize>
                                </Left>
                                <Right>
                                    <CollectionSize>
                                        <Filter path="/1095As">
                                            <Dependency path="hasZeroCoverageMonths"/>
                                        </Filter>
                                    </CollectionSize>
                                </Right>
                            </Equal>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/potentiallyEligibleForAltCalcBecauseMarriedThisYear">
            <Description>May potentially qualify for alternative calculations for excess APTC based on being married
                this year
            </Description>
            <Derived>
                <All>
                    <Dependency path="/hasAdvancedPtc"/>
                    <IsComplete>
                        <Dependency path="/netPtcAmountWhenNegative"/>
                    </IsComplete>
                    <Dependency module="filers" path="/isMarried"/>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/writableWantsToUseAltCalculations">
            <Description>(writable)Whether the TP wants to use the alt calculations for excess APTC</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/wantsToUseAltCalculations">
            <Description>Whether the TP wants to use the alt calculations for excess APTC</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/potentiallyEligibleForAltCalcBecauseMarriedThisYear"/>
                        </When>
                        <Then>
                            <Dependency path="/writableWantsToUseAltCalculations"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/noQualifiedPlanAndNotADependentTaxPayer">
            <Description>The TP is not have a qualifying plan and is not a non MFJ dependent TP</Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="/hasPtcQualifyingPlan"/>
                    </Not>
                    <Not>
                        <Dependency module="filers"
                                    path="/notMfjAndPrimaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/flowPtcKnockout">
            <Description>The user has been knocked out for reasons(s) defined in this module</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Any>
                    <Dependency path="/dependentTpRequiresAllocations"/>
                    <Dependency path="/hasPtcQualifyingPlanAndQsehra"/>
                    <Dependency path="/needsAllocations"/>
                    <Dependency path="/hasEmployerSponsoredPlan"/>
                    <Dependency path="/dependentsRequiredToFile"/>
                    <Dependency path="/selfReportedHasMultiple1095As"/>
                    <Dependency path="/hasImmigrationStatusNotEligibleForMarketplace"/>
                    <Dependency path="/wantsToUseAltCalculations"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filersRequiredToFileForm8889">
            <Description>The collection of filers that are required to file form 8889 to report on their HSA
                contributions
                and/or distributions
            </Description>
            <Derived>
                <Filter path="/filers">
                    <Any>
                        <Dependency path="hasMadeContributionsToHsa"/>
                        <Dependency path="hasHsaDistributions"/>
                        <!-- TODO: if they acquired an interest in an HSA because of the death of the account beneficiary   -->
                        <!-- TODO: if they must include certain amounts in income because they failed to be an eligible individual
            during the testing period -->
                    </Any>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/numberOfFilersRequiredToFileForm8889">
            <Description>The number of filers required to file a 8889.</Description>
            <Derived>
                <CollectionSize>
                    <Dependency path="/filersRequiredToFileForm8889"/>
                </CollectionSize>
            </Derived>
        </Fact>
        <Fact path="/filers/*/writablePrimaryFilerHasMadeContributionsToHsa">
            <Description>Writable: Whether the primary tp has made contributions to an HSA</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/primaryFilerMayHaveOnlyNonW2Contributions">
            <Description>Whether the primary filer might have only non-employer HSA contributions</Description>
            <Derived>
                <All>
                    <Dependency path="../mayHaveHsaContributions"/>
                    <Not>
                        <Dependency module="formW2s" path="/hasPrimaryFilerHsaContributionsFromW2s"/>
                    </Not>
                    <Dependency module="filers" path="../isPrimaryFiler"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/primaryFilerHasNonW2ContributionsInTy">
            <Description>Whether the primary filer has made non-employer (W2) contributions in the TY</Description>
            <Derived>
                <All>
                    <Dependency path="../primaryFilerMayHaveOnlyNonW2Contributions"/>
                    <Dependency path="../writablePrimaryFilerHasMadeContributionsToHsa"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/writableSecondaryFilerHasMadeContributionsToHsa">
            <Description>Writable: Whether the secondary tp has made contributions to an HSA</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/flowSecondaryFilerHasNoHsaContributionsOnW2andMFJ">
            <Description>The secondary filer has does not have code W in W2, box 12 and is filing MFJ</Description>
            <Derived>
                <All>
                    <Dependency path="/secondaryFiler/mayHaveHsaContributions"/>
                    <Not>
                        <Dependency module="formW2s" path="/hasSecondaryFilerHsaContributionsFromW2s"/>
                    </Not>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/secondaryFilerMayHaveOnlyNonW2Contributions">
            <Description>Whether the secondary filer might have only non-employer HSA contributions</Description>
            <Derived>
                <All>
                    <Dependency path="/flowSecondaryFilerHasNoHsaContributionsOnW2andMFJ"/>
                    <Dependency module="filers" path="../isSecondaryFiler"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/secondaryFilerHasNonW2ContributionsInTy">
            <Description>Whether the secondary filer has made non-employer (W2) contributions in the TY</Description>
            <Derived>
                <All>
                    <Dependency path="../secondaryFilerMayHaveOnlyNonW2Contributions"/>
                    <Dependency path="../writableSecondaryFilerHasMadeContributionsToHsa"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/primaryFilerHasMadeContributionsToHsa">
            <Description>Whether the primary tp has made contributions to an HSA</Description>
            <Derived>
                <All>
                    <Dependency path="../mayHaveHsaContributions"/>
                    <Not>
                        <Dependency path="../flowSkipToHsaTestingPeriodContributionCheck"/>
                    </Not>
                    <Any>
                        <Dependency module="formW2s" path="/hasPrimaryFilerHsaContributionsFromW2s"/>
                        <Dependency path="../primaryFilerHasNonW2ContributionsInTy"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/secondaryFilerHasMadeContributionsToHsa">
            <Description>Whether the secondary tp has made contributions to an HSA</Description>
            <Derived>
                <All>
                    <Dependency path="../mayHaveHsaContributions"/>
                    <Not>
                        <Dependency path="../flowSkipToHsaTestingPeriodContributionCheck"/>
                    </Not>
                    <Any>
                        <Dependency module="formW2s" path="/hasSecondaryFilerHsaContributionsFromW2s"/>
                        <Dependency path="../secondaryFilerHasNonW2ContributionsInTy"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/flowSkipToHsaTestingPeriodContributionCheck">
            <Description>Whether the filer doesn't have contributions in the TY and should skip to the testing period
                section
                instead of answering the remaining coverage and contribution questions.
            </Description>
            <Derived>
                <Any>
                    <All>
                        <Dependency path="../primaryFilerMayHaveOnlyNonW2Contributions"/>
                        <Not>
                            <Dependency path="../primaryFilerHasNonW2ContributionsInTy"/>
                        </Not>
                    </All>
                    <All>
                        <Dependency path="../secondaryFilerMayHaveOnlyNonW2Contributions"/>
                        <Not>
                            <Dependency path="../secondaryFilerHasNonW2ContributionsInTy"/>
                        </Not>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hasHsaContributionsAndCanBeClaimedAsDependent">
            <Description>Whether the filer has contributions and can be claimed as a dependent. KO condition for TY24
            </Description>
            <Derived>
                <All>
                    <Dependency path="../hasMadeContributionsToHsa"/>
                    <Dependency module="filers" path="../canBeClaimed"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutFilerIsDependentAndContributesToHsa">
            <Name>Knockout when Box 12 has contributions for code W but TP is dependent</Name>
            <Description>Filer has entered W2 contributions for HSA in Box 12 and has dependency status</Description>
            <Derived>
                <Any>
                    <Dependency path="/primaryFiler/hasHsaContributionsAndCanBeClaimedAsDependent"/>
                    <Dependency path="/secondaryFiler/hasHsaContributionsAndCanBeClaimedAsDependent"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hasHsaContributionsNotExceedLimits">
            <Description>The TP has HSA contributions which do not exceed limits.</Description>
            <Derived>
                <Any>
                    <All>
                        <Dependency module="filers" path="../isPrimaryFiler"/>
                        <GreaterThan>
                            <Left>
                                <Dependency path="../hsaContributionsTotal"/>
                            </Left>
                            <Right>
                                <Dollar>0</Dollar>
                            </Right>
                        </GreaterThan>
                        <!-- <Not>
              <Dependency path="../hsaContributionLimitExceeded" />
            </Not> -->
                    </All>
                    <All>
                        <Dependency module="filers" path="../isSecondaryFiler"/>
                        <GreaterThan>
                            <Left>
                                <Dependency path="../hsaContributionsTotal"/>
                            </Left>
                            <Right>
                                <Dollar>0</Dollar>
                            </Right>
                        </GreaterThan>
                        <!-- <Not>
              <Dependency path="../hsaContributionLimitExceeded" />
            </Not> -->
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/someFilersHaveHsaContributionsNotExceedLimits">
            <Description>The TP has HSA contributions which do not exceed limits.</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/filers/*/hasHsaContributionsNotExceedLimits"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/requiresForm8889">
            <Description>Whether the TP is required to file one or more form 8889s reporting on their HSAs</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/numberOfFilersRequiredToFileForm8889"/>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasHsaMedicalSavingsAccountType">
            <Description>Whether the user has a medical savings account</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/hasHsaMedicalSavingsAccountTypeDerived">
            <Description>Whether the user has a medical savings account after accounting for edit conditions
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/someFilerHasSomeHsaActivityNotConsideringKos"/>
                        </When>
                        <Then>
                            <Dependency path="/hasHsaMedicalSavingsAccountType"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowToExcessContributionsPreviousYear">
            <Description>Flow to the hsa-excess-contributions-previous-year screen</Description>
            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="/hasHsaMedicalSavingsAccountTypeDerived"/>
                    </IsComplete>
                    <Not>
                        <Dependency path="/hasHsaMedicalSavingsAccountTypeDerived"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/writableHasHsaExcessContributionsPreviousYear">
            <Description>Writable: Whether the tp has excess HSA Contributions from the previous year</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/hasHsaExcessContributionsPreviousYear">
            <Description>Whether the tp has excess HSA Contributions from the previous year after accounting for edit
                conditions
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/flowToExcessContributionsPreviousYear"/>
                        </When>
                        <Then>
                            <Dependency path="/writableHasHsaExcessContributionsPreviousYear"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/skipToHsaExcessContributions">
            <Description>When /writableHasHsaExcessContributionsPreviousYear is False then skip to the
                hsa-excess-contributions-y-n screen
            </Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="/hasHsaExcessContributionsPreviousYear"/>
                    </Not>
                    <Not>
                        <Dependency path="/hasHsaMedicalSavingsAccountTypeDerived"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/flowToHsaExcessContributions">
            <Description>Flow to the hsa-excess-contributions-y-n screen</Description>
            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="/skipToHsaExcessContributions"/>
                    </IsComplete>
                    <Dependency path="/skipToHsaExcessContributions"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/writableHasHsaWithdrawnExcessContributionsYesNo">
            <Description>Writable: Whether the tp has withdrawn excess HSA contributions before the tax day
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/hasHsaWithdrawnExcessContributionsYesNo">
            <Description>Whether the tp has withdrawn excess HSA contributions before the tax day after accounting for
                edit
                conditions
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/flowToHsaExcessContributions"/>
                        </When>
                        <Then>
                            <Dependency path="/writableHasHsaWithdrawnExcessContributionsYesNo"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutHsaExcessContributions">
            <Description>Knockout due to excess contributions before answering coverage and contributions section
                questions
            </Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <Any>
                    <Dependency path="/hasHsaExcessContributionsPreviousYear"/>
                    <Dependency path="/hasHsaWithdrawnExcessContributionsYesNo"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutHsaMedicalSavingsAccountType">
            <Name>Knockout Due to a Medical Savings Account</Name>
            <Description>Has a set of facts that cause a knockout</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <All>
                    <Not>
                        <Dependency path="/flowToExcessContributionsPreviousYear"/>
                    </Not>
                    <Not>
                        <Dependency path="/flowToHsaExcessContributions"/>
                    </Not>
                    <Dependency path="/hasHsaMedicalSavingsAccountTypeDerived"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hasHsaDistributions">
            <Name>Has HSA Distributions</Name>
            <Description>Whether there are any HSA distributions listed</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/hsaDistributions"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/isHsaSectionComplete">
            <Description>Whether the HSA Section is complete</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <!-- Intro section always needs to be complete -->
                    <Dependency path="/hsaIntroSectionIsComplete"/>
                    <!-- check for completeness of the testing period contribution check  -->
                    <Dependency path="/hsaTestingPeriodCheckSectionIsComplete"/>
                    <Any>
                        <!-- No HSA activity -->
                        <Not>
                            <Dependency path="/someFilerHasSomeHsaActivity"/>
                        </Not>
                        <!-- Or TP has completed Coverage and contributions + distributions -->
                        <All>
                            <Dependency path="/hsaCoverageAndContributionsSectionIsComplete"/>
                            <Dependency path="/hasCompletedHsaDistributions"/>
                        </All>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hsaIntroSectionIsComplete">
            <Description>Whether the TP has answered all the required sections in the HSA intro section</Description>
            <Derived>
                <All>
                    <!--          Primary Filer has completed their intro questions-->
                    <Any>
                        <Dependency module="formW2s" path="/hasPrimaryFilerHsaContributionsFromW2s"/>
                        <All>
                            <Not>
                                <Dependency module="formW2s" path="/hasPrimaryFilerHsaContributionsFromW2s"/>
                            </Not>
                            <IsComplete>
                                <Dependency path="/someFilerHadNonW2HsaActivity"/>
                            </IsComplete>
                            <Any>
                                <Not>
                                    <Dependency path="/someFilerHadNonEmployerHsaActivity"/>
                                </Not>
                                <All>
                                    <Dependency path="/someFilerHadNonEmployerHsaActivity"/>
                                    <IsComplete>
                                        <Dependency path="/writablePrimaryFilerHadNonW2HsaActivity"/>
                                    </IsComplete>
                                </All>
                            </Any>
                        </All>
                    </Any>
                    <!--         Secondary filer has completed their intro questions, if required -->
                    <Any>
                        <Not>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </Not>
                        <Dependency module="formW2s" path="/hasSecondaryFilerHsaContributionsFromW2s"/>
                        <All>
                            <Not>
                                <Dependency module="formW2s" path="/hasSecondaryFilerHsaContributionsFromW2s"/>
                            </Not>
                            <IsComplete>
                                <Dependency path="/someFilerHadNonW2HsaActivity"/>
                            </IsComplete>
                            <Any>
                                <Not>
                                    <Dependency path="/someFilerHadNonEmployerHsaActivity"/>
                                </Not>
                                <All>
                                    <Dependency path="/someFilerHadNonEmployerHsaActivity"/>
                                    <IsComplete>
                                        <Dependency path="/writableSecondaryFilerHadNonW2HsaActivity"/>
                                    </IsComplete>
                                </All>
                            </Any>
                        </All>
                    </Any>
                    <!--          If any filers have HSA activity, they've answered all subsequent questions -->
                    <Any>
                        <Not>
                            <Dependency path="/someFilerHasSomeHsaActivityNotConsideringKos"/>
                        </Not>
                        <All>
                            <Dependency path="/someFilerHasSomeHsaActivityNotConsideringKos"/>
                            <IsComplete>
                                <Dependency path="/hasHsaMedicalSavingsAccountType"/>
                            </IsComplete>
                            <Any>
                                <Not>
                                    <Dependency path="/flowToExcessContributionsPreviousYear"/>
                                </Not>
                                <IsComplete>
                                    <Dependency path="/writableHasHsaExcessContributionsPreviousYear"/>
                                </IsComplete>
                            </Any>
                            <Any>
                                <Not>
                                    <Dependency path="/flowToHsaExcessContributions"/>
                                </Not>
                                <IsComplete>
                                    <Dependency path="/writableHasHsaWithdrawnExcessContributionsYesNo"/>
                                </IsComplete>
                            </Any>
                        </All>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isFilingStatusMfjOrMfs">
            <Description>Whether the filing status is MFJ or MFS</Description>
            <Derived>
                <Any>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/hsaCoverageAndContributionsSectionIsComplete">
            <Description>Whether the TP's HSA coverage and contributions section can be considered complete
            </Description>
            <Derived>
                <Equal>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/filersWithHsa"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <CollectionSize>
                            <Filter path="/filersWithHsa">
                                <Dependency path="hasCompletedCoverageAndContribution"/>
                            </Filter>
                        </CollectionSize>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/mfjBothFilersHaveHsaContributionsOnW2">
            <Description>Whether both filers have employer HSA contributions.</Description>
            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Dependency module="formW2s" path="/hasPrimaryFilerHsaContributionsFromW2s"/>
                    <Dependency module="formW2s" path="/hasSecondaryFilerHsaContributionsFromW2s"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hasMadeContributionsToHsa">
            <Description>Whether the filer has made contributions to an HSA and must file form 8889.</Description>
            <Derived>
                <Any>
                    <All>
                        <Dependency module="filers" path="../isPrimaryFiler"/>
                        <Dependency path="../primaryFilerHasMadeContributionsToHsa"/>
                    </All>
                    <All>
                        <Dependency module="filers" path="../isSecondaryFiler"/>
                        <Dependency path="../secondaryFilerHasMadeContributionsToHsa"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filers/*/mayHaveHsaContributions">
            <Description>Whether the filer has HSA contributions and we may need to collect additional coverage and
                contribution information. This sets up the questions to ask on the per filer basis. One of which is that
                they
                did not have any contributions.
            </Description>
            <Derived>
                <All>
                    <Dependency path="../mayHaveHsaContributionsNotConsideringKos"/>
                    <Not>
                        <Dependency path="/flowKnockoutHsaExcessContributions"/>
                    </Not>
                    <Not>
                        <Dependency path="/flowKnockoutHsaMedicalSavingsAccountType"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/mayHaveHsaContributionsNotConsideringKos">
            <Description>Whether the filer may have HSA activity before accounting for KOs in the intro section
            </Description>
            <Derived>
                <Any>
                    <All>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        <Dependency module="filers" path="../isSecondaryFiler"/>
                        <Any>
                            <Dependency module="formW2s" path="/hasSecondaryFilerHsaContributionsFromW2s"/>
                            <All>
                                <Dependency path="/secondaryFilerHadNonW2HsaActivity"/>
                                <Dependency path="/someFilerHadNonEmployerHsaActivity"/>
                            </All>
                        </Any>
                    </All>
                    <All>
                        <Dependency module="filers" path="../isPrimaryFiler"/>
                        <Any>
                            <Dependency module="formW2s" path="/hasPrimaryFilerHsaContributionsFromW2s"/>
                            <All>
                                <Dependency path="/primaryFilerHadNonW2HsaActivity"/>
                                <Dependency path="/someFilerHadNonEmployerHsaActivity"/>
                            </All>
                        </Any>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaFundingDistributionsTotal">
            <Description>Total qualified HSA funding distribution. This is reported on the primary filer's Form 8889
                line 10
            </Description>
            <Export mef="true"/>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/filersWithHsa">
            <Description>The collection of filers with HSA contribution information we may need to collect</Description>

            <Derived>
                <Filter path="/filers">
                    <Dependency path="mayHaveHsaContributions"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/filersWithHsaContributions">
            <Description>The collection of filers with HSA contributions that must file Form 8889 Part 1</Description>
            <Derived>
                <Filter path="/filersWithHsa">
                    <Dependency path="hasMadeContributionsToHsa"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/bothFilersHaveHsa">
            <Description>Whether the filing status is MFJ and both filers have separate HSAs</Description>
            <Derived>
                <Equal>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/filersWithHsaContributions"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>2</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/flowShowHsaYesNo">
            <Description>Whether to show the screen that asks about HSA activity</Description>
            <Derived>
                <Any>
                    <Not>
                        <Dependency module="formW2s" path="/hasPrimaryFilerHsaContributionsFromW2s"/>
                    </Not>
                    <All>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        <Not>
                            <Dependency module="formW2s" path="/hasSecondaryFilerHsaContributionsFromW2s"/>
                        </Not>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/someFilerHadNonW2HsaActivity">
            <Description>Whether some filer had non-W2 HSA activity</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/someFilerHadNonEmployerHsaActivity">
            <Description>Whether some filer had non-W2 HSA activity after accounting for edit conditions</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/flowShowHsaYesNo"/>
                        </When>
                        <Then>
                            <Dependency path="/someFilerHadNonW2HsaActivity"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/hsaDistributions/*/writableDistributionsRolloverBool">
            <Description>Whether any of the distributions from box 1 are a rollover to another HSA</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/hsaDistributions/*/writableDistributionsRolloverAmount">
            <Description>The total amount of distributions that were a rollover to another HSA</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/hsaDistributions/*/distributionsRolloverAmount">
            <Description>The total amount of distributions that were a rollover to another HSA</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="../writableDistributionsRolloverBool"/>
                                <IsComplete>
                                    <Dependency path="../writableDistributionsRolloverAmount"/>
                                </IsComplete>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writableDistributionsRolloverAmount"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowShowHsaPrimaryYesNo">
            <Description>Whether to show the screen that asks about HSA activity for the primary filer</Description>
            <Derived>
                <All>
                    <Dependency path="/someFilerHadNonEmployerHsaActivity"/>
                    <Not>
                        <Dependency module="formW2s" path="/hasPrimaryFilerHsaContributionsFromW2s"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/flowShowHsaMfsLine6Check">
            <Description>Whether the filer will see the hsa coverage screen for the MFS line 6 check.</Description>
            <Derived>
                <All>
                    <Dependency module="filers" path="/isMarried"/>
                    <Not>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    </Not>
                    <Dependency path="../flowShouldAskForHsaHdhpCoverageType"/>
                    <Dependency path="../hasFamilyHdhp"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/writableMfsLine6Check">
            <Description>Writable: whether a Health Savings Account (HSA) had contributions for the tax year
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/mfsLine6Check">
            <Description>Whether a Health Savings Account (HSA) had contributions for the tax year</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../flowShowHsaMfsLine6Check"/>
                        </When>
                        <Then>
                            <Dependency path="../writableMfsLine6Check"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/causesHsaMfsLine6Knockout">
            <Description>Whether the filer is knocked out due to their HSA contributions</Description>
            <Derived>
                <Dependency path="../mfsLine6Check"/>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutMFSLine6Check">
            <Description>When Primary TP who is MFS has a spouse that had HSA contributions during the tax year, they
                are
                knocked out
            </Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <Dependency path="/primaryFiler/causesHsaMfsLine6Knockout"/>
            </Derived>
        </Fact>
        <Fact path="/writablePrimaryFilerHadNonW2HsaActivity">
            <Description>Whether primary filer had non-W2 HSA activity</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/primaryFilerHadNonW2HsaActivity">
            <Description>Whether primary filer had non-W2 HSA activity</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/flowShowHsaPrimaryYesNo"/>
                        </When>
                        <Then>
                            <Dependency path="/writablePrimaryFilerHadNonW2HsaActivity"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowShowHsaSecondaryYesNo">
            <Description>Whether to show the screen that asks about HSA activity for the secondary filer</Description>
            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Dependency path="/flowShowHsaYesNo"/>
                    <Dependency path="/someFilerHadNonEmployerHsaActivity"/>
                    <Not>
                        <Dependency module="formW2s" path="/hasSecondaryFilerHsaContributionsFromW2s"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/writableSecondaryFilerHadNonW2HsaActivity">
            <Description>Whether secondary filer had non-W2 HSA activity</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/secondaryFilerHadNonW2HsaActivity">
            <Description>Whether secondary filer had non-W2 HSA activity</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/flowShowHsaSecondaryYesNo"/>
                        </When>
                        <Then>
                            <Dependency path="/writableSecondaryFilerHadNonW2HsaActivity"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/someFilerHasSomeHsaActivityNotConsideringKos">
            <Description>Whether at least one filer had some HSA activity before accounting for intro section KOs
            </Description>
            <Derived>
                <Any>
                    <Dependency path="/primaryFiler/mayHaveHsaContributionsNotConsideringKos"/>
                    <Dependency path="/secondaryFiler/mayHaveHsaContributionsNotConsideringKos"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/someFilerHasSomeHsaActivity">
            <Description>Whether at least one filer has HSA activity. If
                true, we will need to
                learn about the HSA account type,
                coverage, contributions, and distributions for the filer.
            </Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/filersWithHsa"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hasCompletedCoverageAndContribution">
            <Description>Whether the filer has completed the required HSA coverage and contributions
                sections
            </Description>
            <Derived>
                <Any>
                    <!-- complete if they didn't have any coverage / contributions in that year -->
                    <Not>
                        <Dependency path="../hasMadeContributionsToHsa"/>
                    </Not>
                    <!-- Or they completed all the required questions in the section -->
                    <All>
                        <IsComplete>
                            <Dependency path="../hasMadeContributionsToHsa"/>
                        </IsComplete>
                        <IsComplete>
                            <Dependency path="../enrolledInMedicare"/>
                        </IsComplete>
                        <IsComplete>
                            <Dependency path="../hsaHdhpCoverageStatus"/>
                        </IsComplete>
                        <IsComplete>
                            <Dependency path="../typeOfHdhp"/>
                        </IsComplete>
                        <IsComplete>
                            <Dependency path="../hadOtherCoverageIneligibleForHSA"/>
                        </IsComplete>
                        <Any>
                            <Not>
                                <Dependency path="../flowShowHsaMfsLine6Check"/>
                            </Not>
                            <IsComplete>
                                <Dependency path="../writableMfsLine6Check"/>
                            </IsComplete>
                        </Any>
                        <Any>
                            <Not>
                                <Dependency path="../flowShouldAskForChangeInMaritalStatusDuringTaxYear"/>
                            </Not>
                            <IsComplete>
                                <Dependency path="../writableChangeInMaritalStatusDuringTaxYear"/>
                            </IsComplete>
                        </Any>
                        <Any>
                            <Not>
                                <Dependency path="../flowShouldAskIfChangeInMaritalStatusAffectsContributionLimit"/>
                            </Not>
                            <IsComplete>
                                <Dependency path="../writableMaritalChangeAffectContributionLimitBool"/>
                            </IsComplete>
                        </Any>
                        <!-- These two are optional (i.e. we don't need to check their completeness for this section): -->
                        <!-- hsa-contributions-add-contributions-made-ty -->
                        <!-- hsa-contributions-add-contributions-made-ty+1 -->
                        <IsComplete>
                            <Dependency path="../hasMadeQualifiedHsaFundingDistribution"/>
                        </IsComplete>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/hsaHdhpCoverageStatusOptions">
            <Description>Options for a filers high deductible health plan (HDHP) status</Description>
            <Derived>
                <EnumOptions>
                    <String>allYear</String>
                    <String>partOfYear</String>
                    <String>noneOfYear</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaHdhpCoverageStatus">
            <Description>Whether the filer had a HDHP for all, part, or none of the year</Description>
            <Writable>
                <Enum optionsPath="/hsaHdhpCoverageStatusOptions"/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/hsaHdhpCoverageStatusDerived">
            <Description>Whether the filer had a HDHP for all, part, or none of the year. After accounting for edit
                conditions.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="../hasMadeContributionsToHsa"/>
                                <Not>
                                    <Dependency path="/flowKnockoutHdhpCoverageStatusNotNeeded"/>
                                </Not>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../hsaHdhpCoverageStatus"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/hsaDistributions/*/causesEarningsOnExcessContributionsKO">
            <Name>HSA earnings on excess contributions knockout</Name>
            <Description>Filer has entered more than $0 on Box 2 for HSA distributions, knocking them out</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/someFilerCanHaveDistribution"/>
                                <IsComplete>
                                    <Dependency path="../writableEarningsOnExcessContributions"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../writableEarningsOnExcessContributions"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutEarningsOnExcessContributions">
            <Name>HSA earnings on excess contributions flow knockout</Name>
            <Description>Flow knockout form when a filer has entered more than $0 on Box 2 for HSA distributions,
                knocking
                them out
            </Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/hsaDistributions/*/causesEarningsOnExcessContributionsKO"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hsaDistributionCodeOptions">
            <Description>Distribution code options for 1099-SA Box3</Description>
            <Derived>
                <EnumOptions>
                    <String>normalDistribution</String>
                    <String>excessContributions</String>
                    <String>disability</String>
                    <String>deathOtherThanCode6</String>
                    <String>prohibitedTransaction</String>
                    <String>deathDistributionAfterYear</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/hsaDistributions/*/hsaDistributionCode">
            <Name>hsa distribution code 1099-SA</Name>
            <Description>Box 3 of form 1099-SA: Distribution code</Description>
            <Writable>
                <Enum optionsPath="/hsaDistributionCodeOptions"/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/hsaHdhpCoverageStatusKnockout">
            <Description>Whether the filer is knocked out due to their HDHP coverage status.</Description>
            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="../hsaHdhpCoverageStatusDerived"/>
                    </IsComplete>
                    <Equal>
                        <Left>
                            <Dependency path="../hsaHdhpCoverageStatusDerived"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/hsaHdhpCoverageStatusOptions">partOfYear</Enum>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hasHsaDistributions">
            <Description>Whether the filer has HSA distributions.</Description>
            <Derived>
                <All>
                    <Dependency path="../hasHsaCanHaveDistribution"/>
                    <GreaterThan>
                        <Left>
                            <Dependency path="../totalHsaDistributions"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hadCoverageDisqualifyingHsaContributions">
            <Description>Whether the filer had coverage disquailfying HSA contributions.</Description>
            <Derived>
                <False/>
            </Derived>
        </Fact>
        <Fact path="/filers/*/wasEligibleToMakeHsaContributionsAllYear">
            <Description>Whether the filer was eligible to make HSA contributions all year. Rule of last year does not
                apply.
            </Description>
            <Derived>
                <All>
                    <Dependency path="../hasHdhpCoverageAllYear"/>
                    <Equal>
                        <Left>
                            <Dependency path="../enrolledInMedicareDerived"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/enrolledInMedicareOptions">noneOfYear</Enum>
                        </Right>
                    </Equal>
                    <Not>
                        <Dependency path="../hadCoverageDisqualifyingHsaContributions"/>
                    </Not>
                    <Not>
                        <Dependency module="filers" path="../canBeClaimed"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hsaDistributions">
            <Description>The distributions associated with an HSA</Description>
            <Writable>
                <Collection/>
            </Writable>
        </Fact>
        <Fact path="/hsaDistributions/*/filer">
            <Description>The filer who the HSA distributions belong to.</Description>
            <Writable>
                <CollectionItem collection="/filers"/>
            </Writable>
            <Placeholder>
                <Dependency module="filers" path="/primaryFiler"/>
            </Placeholder>
        </Fact>
        <Fact path="/filers/*/hsaDistributionNotNormalKnockout">
            <Description>Whether the filer is knocked out due to their HSA distribution code other than 1</Description>
            <Derived>
                <All>
                    <Dependency path="/someFilerCanHaveDistribution"/>
                    <IsComplete>
                        <Dependency path="/hsaDistributions/*/hsaDistributionCode"/>
                    </IsComplete>
                    <Not>
                        <Equal>
                            <Left>
                                <Dependency path="/hsaDistributions/*/hsaDistributionCode"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/hsaDistributionCodeOptions">normalDistribution</Enum>
                            </Right>
                        </Equal>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutHsaDistributionsNotNormal">
            <Description>Knockout due to any of filers having HSA distribution code other than 1</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/filers/*/hsaDistributionNotNormalKnockout"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutHsaDistributionCode">
            <Name>Knockout due to distribution code not being normal distribution</Name>
            <Description>User selects HSA distribution code other than code 1</Description>
            <BlockSubmissionOnTrue/>
            <Derived>
                <Dependency path="/flowKnockoutHsaDistributionsNotNormal"/>
            </Derived>
        </Fact>
        <Fact path="/hsaDistributions/*/writableGrossDistribution">
            <Description>Box 1 of form 1099-SA: Gross Distribution</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/hsaDistributions/*/grossDistribution">
            <Description>Box 1 of form 1099-SA: Gross Distribution</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableGrossDistribution"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../writableGrossDistribution"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/hsaDistributions/*/modifiedDistribution">
            <Description>Writable gross distribution minus distribution rollovers minus excess withdrawn amount
            </Description>
            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency path="../grossDistribution"/>
                    </Minuend>
                    <Subtrahends>
                        <Add>
                            <Dependency path="../distributionsRolloverAmount"/>
                            <Dependency path="../withdrawnExcessContributionsAmount"/>
                        </Add>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/hsaDistributions/*/writableTrusteeName">
            <Description>The entity that paid the hsa distribution</Description>
            <Writable>
                <String/>
                <Limit type="Match">
                    <String>[\sA-Za-z0-9\-]+</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>75</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/hsaDistributions/*/hasWithdrawnExcessContributions">
            <Description>Whether part of the total distributions withdrawn were excess contributions</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/hsaDistributions/*/writableWithdrawnExcessContributionsAmount">
            <Description>Amount of excess contributions and earnings on them withdrawn before the end of the tax year.
            </Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/hsaDistributions/*/withdrawnExcessContributionsAmount">
            <Description>Amount of excess contributions and earnings on them withdrawn before the end of the tax year.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="../hasWithdrawnExcessContributions"/>
                                <IsComplete>
                                    <Dependency path="../writableWithdrawnExcessContributionsAmount"/>
                                </IsComplete>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writableWithdrawnExcessContributionsAmount"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/hsaDistributions/*/hasWithdrawnMoreThanGrossDistributions">
            <Description>Whether the excess withdrawn contributions is greater than the gross distributions amount.
            </Description>
            <Derived>
                <All>
                    <Dependency path="../hasWithdrawnExcessContributions"/>
                    <GreaterThan>
                        <Left>
                            <Dependency path="../withdrawnExcessContributionsAmount"/>
                        </Left>
                        <Right>
                            <Dependency path="../writableGrossDistribution"/>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hsaDistributions/*/hasRolloverAmountMoreThanGrossDistributions">
            <Description>Whether the rollover amount is greater than the gross distributions amount.</Description>
            <Derived>
                <All>

                    <Dependency path="../writableDistributionsRolloverBool"/>
                    <GreaterThan>
                        <Left>
                            <Dependency path="../writableDistributionsRolloverAmount"/>
                        </Left>
                        <Right>
                            <Dependency path="../writableGrossDistribution"/>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hsaDistributions/*/writableEarningsOnExcessContributions">
            <Description>Box 2 of form 1099-SA: Earnings on excess contributions</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/hsaDistributions/*/writableFmvOnDateOfDeath">
            <Description>Box 4 of form 1099-SA: fair market value on date of death</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/hsaDistributions/*/writableQualifiedMedExpenses">
            <Description>Total amount of qualified medical expenses paid for in tax year using
                distributions from this HSA
                account. Informs form 8889, line 15
            </Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/hsaDistributions/*/secondaryFilerUsedWithoutMFJ">
            <Name>Secondary filer has HSA distribution Form 8889 when primary filer is not filing jointly</Name>
            <Description>Whether secondary filer has HSA distribution records when primary filer is not filing jointly
            </Description>

            <Derived>
                <All>
                    <!-- We only display the distribution section if someone could have distributions so only need to alert if
          some filer can have distributions -->
                    <Dependency path="/someFilerCanHaveDistribution"/>
                    <Not>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    </Not>
                    <Dependency path="../belongsToSecondaryFiler"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hsaDistributions/*/hasDistributionsWithoutHsaActivity">
            <Description>Whether the filer had distributions as form 8889 listed after claiming they had no HSA
                activity
            </Description>
            <Derived>
                <All>
                    <!-- We only display the distribution section if someone could have distributions so only need to alert if
          some filer can have distributions -->
                    <Dependency path="/someFilerCanHaveDistribution"/>
                    <!-- We want to give precedence to the secondary filer error and not create a double error -->
                    <Not>
                        <Dependency path="../secondaryFilerUsedWithoutMFJ"/>
                    </Not>
                    <IsComplete>
                        <Dependency path="../filer/hasHsaCanHaveDistribution"/>
                    </IsComplete>
                    <Not>
                        <Dependency path="../filer/hasHsaCanHaveDistribution"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hasHsaDistributionsWithoutActivity">
            <Description>Whether the TP has any distributions that must be removed because they reported not having HSA
                activity in the TY
            </Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/hsaDistributions/*/hasDistributionsWithoutHsaActivity"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hsaDistributions/secondaryFilerUsedWithoutMFJ">
            <Name>Secondary filer has HSA distribution Form 8889 when primary filer is not filing jointly</Name>
            <Description>Whether secondary filer has HSA distribution records when primary filer is not filing jointly
            </Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/hsaDistributions/*/secondaryFilerUsedWithoutMFJ"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hsaDistributions/*/hasSeenLastAvailableScreen">
            <Description>Whether the filer has completed the HSA distributions</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/hsaDistributions/*/isComplete">
            <Description>Whether the filer has completed the HSA distributions</Description>
            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="../writableDistributionsRolloverBool"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../writableTrusteeName"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../writableGrossDistribution"/>
                    </IsComplete>
                    <Any>
                        <Not>
                            <Dependency path="../writableDistributionsRolloverBool"/>
                        </Not>
                        <IsComplete>
                            <Dependency path="../writableDistributionsRolloverAmount"/>
                        </IsComplete>
                    </Any>
                    <IsComplete>
                        <Dependency path="../hasWithdrawnExcessContributions"/>
                    </IsComplete>
                    <Any>
                        <Not>
                            <Dependency path="../hasWithdrawnExcessContributions"/>
                        </Not>
                        <IsComplete>
                            <Dependency path="../writableWithdrawnExcessContributionsAmount"/>
                        </IsComplete>
                    </Any>
                    <IsComplete>
                        <Dependency path="../hsaDistributionCode"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../writableQualifiedMedExpenses"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../hasSeenLastAvailableScreen"/>
                    </IsComplete>
                    <Dependency path="../hasSeenLastAvailableScreen"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hasCompletedHsaDistributions">
            <Description>Whether the HSA distributions section can be considered done.</Description>
            <Derived>
                <Any>
                    <Not>
                        <Dependency path="/someFilerCanHaveDistribution"/>
                    </Not>
                    <All>
                        <IsComplete>
                            <Dependency path="/hsaDistributionsIsDone"/>
                        </IsComplete>
                        <Dependency path="/hsaDistributionsIsDone"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/hsaDistributionsIsDone">
            <Description>Whether the TP is done adding the HSA distributions</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/flowShouldAskForHsaHdhpCoverageType">
            <Description>Whether we should ask the filer about their HDHP coverage type</Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="/flowKnockoutHsaCoverageChanging"/>
                    </Not>
                    <Not>
                        <Dependency path="/flowKnockoutNotEnrolledInHdhp"/>
                    </Not>
                    <Dependency path="../hasHdhpCoverageAllYear"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/flowShouldAskHadCoverageIneligibleForHSAContributions">
            <Description>Whether we should ask if the filer had any other coverage that would make them ineligible for
                HSA
                contributions
            </Description>
            <Derived>
                <All>
                    <Dependency path="../flowShouldAskForHsaHdhpCoverageType"/>
                    <Dependency path="../hasSelfOnlyOrFamilyHdhp"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaNonemployerContributionsTotal">
            <Description>Filer's total nonemployer HSA contributions. Use for downstream calculations.</Description>
            <Derived>
                <Add>
                    <Dependency path="../hsaNonemployerContributionsTaxYear"/>
                    <Dependency path="../hsaNonemployerContributionsTaxYearPlusOne"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaNonemployerContributionsTotalForExport">
            <Description>Primary filer's total nonemployer HSA contributions. This is reported on the primary filer's
                Form
                8889 line 2. Sometimes left incomplete.
            </Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../hasMadeContributionsToHsa"/>
                        </When>
                        <Then>
                            <Dependency path="../hsaNonemployerContributionsTotal"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaContributionsW2sTotal">
            <Description>A Filer's HSA total employer contributions reported on W-2s</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                                <Dependency module="filers" path="../isSecondaryFiler"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <Dependency module="formW2s" path="/secondaryFilerTotalHsaContributionsFromW2s"/>
                            </Round>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Round>
                                <Dependency module="formW2s" path="/primaryFilerTotalHsaContributionsFromW2s"/>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaTotalContributionLimit">
            <Description>Form 8889 Line 8: the total contribution limit for the filer</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../hasMadeContributionsToHsa"/>
                        </When>
                        <Then>
                            <Round>
                                <Add>
                                    <Dependency path="../hsaContributionLimitLessAddition"/>
                                    <Dependency path="../additionToHsaContributionLimit"/>
                                </Add>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaContributionsTotal">
            <Description>A filer's HSA total employer and non-employer contributions</Description>
            <Derived>
                <Round>
                    <Add>
                        <Dependency path="../hsaEmployerContributionsAndFundingDistributionTotal"/>
                        <Dependency path="../hsaNonemployerContributionsTotal"/>
                    </Add>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaEmployerContributionsAndFundingDistributionTotal">
            <Description>Form 8889 Line 11: the sum of the employer contributions and their qualified HSA funding
                distributions. Always complete; use for computations.
            </Description>
            <Derived>
                <Round>
                    <Add>
                        <Dependency path="../hsaContributionsW2sTotal"/>
                        <Dependency path="../hsaFundingDistributionsTotal"/>
                    </Add>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaEmployerContributionsAndFundingDistributionTotalForExport">
            <Description>Form 8889 Line 11 for use by PDF and XML outputs; sometimes left incomplete.</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../hasMadeContributionsToHsa"/>
                        </When>
                        <Then>
                            <Dependency path="../hsaEmployerContributionsAndFundingDistributionTotal"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaContributionLimitLessLine11">
            <Description>Form 8889 Line 12: the total contribution limit less sum of the employer contributions and
                their
                qualified HSA funding
                distributions.
            </Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../hasMadeContributionsToHsa"/>
                        </When>
                        <Then>
                            <GreaterOf>
                                <Dollar>0</Dollar>
                                <Subtract>
                                    <Minuend>
                                        <Dependency path="../hsaTotalContributionLimit"/>
                                    </Minuend>
                                    <Subtrahends>
                                        <Dependency path="../hsaEmployerContributionsAndFundingDistributionTotal"/>
                                    </Subtrahends>
                                </Subtract>
                            </GreaterOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaTotalDeductibleAmount">
            <Description>
                Form 8889 Line 13: The total deductible amount based off the filer's HSA coverage and contributions.

                Complete when the filer hasMadeContributionsToHsa
            </Description>
            <Export mef="true" stateSystems="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../hasMadeContributionsToHsa"/>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="../hsaNonemployerContributionsTotal"/>
                                <Dependency path="../hsaContributionLimitLessLine11"/>
                            </LesserOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hasHsaDeduction">
            <Description>Whether the filer has a deductible amount</Description>
            <Derived>
                <All>
                    <Dependency path="../hasMadeContributionsToHsa"/>
                    <GreaterThan>
                        <Left>
                            <Dependency path="../hsaTotalDeductibleAmount"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isFilingMfJAndBothFilersHaveHsaDeductions">
            <Description>Whether the TP is married filing jointly and both filers have HSA deductions</Description>
            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Dependency path="/primaryFiler/hasHsaDeduction"/>
                    <Dependency path="/secondaryFiler/hasHsaDeduction"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/bothFilersHsaNonEmployerContributionsTotal">
            <Description>Amount of both filers' HSA total non-employer contributions</Description>
            <Derived>
                <Add>
                    <Dependency path="/primaryFiler/hsaNonemployerContributionsTotal"/>
                    <Dependency path="/secondaryFiler/hsaNonemployerContributionsTotal"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/hasHsaDeduction">
            <Description>Whether the TP (either filer or spouse) has any deductible amount based on their HSA
                contributions
            </Description>
            <Derived>
                <Any>
                    <Dependency path="/primaryFiler/hasHsaDeduction"/>
                    <Dependency path="/secondaryFiler/hasHsaDeduction"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hasExcessHsaContributions">
            <Description>Whether the filer had excess contributions and may be required to pay additional tax
            </Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../hsaNonemployerContributionsTotal"/>
                    </Left>
                    <Right>
                        <Dependency path="../hsaTotalDeductibleAmount"/>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hsaTotalDeductibleAmount">
            <Description>The total deductible amount based off the taxpayer's (filer and spouse when applicable) HSA
                coverage
                and contributions
            </Description>
            <Export downstreamFacts="true" mef="true"/>
            <Derived>
                <!-- We need a switch here because otherwise this would always have a 0 value (even when the TP didn't have an
        HSA) -->
                <Switch>
                    <Case>
                        <When>
                            <!-- If we use /hasHsaDeduction here we wouldn't be able to export zero values-->
                            <Any>
                                <Dependency path="/primaryFiler/hasMadeContributionsToHsa"/>
                                <Dependency path="/secondaryFiler/hasMadeContributionsToHsa"/>
                            </Any>
                        </When>
                        <Then>
                            <CollectionSum>
                                <Dependency path="/filersWithHsaContributions/*/hsaTotalDeductibleAmount"/>
                            </CollectionSum>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/additionToHsaContributionLimit">
            <Description>Form 8889 Line 7: Addition to the contribution limit</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../hasMadeContributionsToHsa"/>
                        </When>
                        <Then>
                            <Round>
                                <Switch>
                                    <Case>
                                        <When>
                                            <All>
                                                <Dependency path="../wasEligibleToMakeHsaContributionsAllYear"/>
                                                <Dependency module="filers" path="../age55OrOlder"/>
                                                <Dependency path="../isCoveredByFamilyHdhp"/>
                                                <Dependency module="filers" path="/isMarried"/>
                                            </All>
                                        </When>
                                        <Then>
                                            <Dependency module="constants" path="/hsaOver55AdditionalCoverageLimit"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaContributionLimitExceeded">
            <Description>Whether the filer has exceeded the HSA contribution limit (line 2 + line 11(line 9 + line 10)
                is
                greater than line 8)
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../hsaTotalContributionLimit"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <GreaterThan>
                                <Left>
                                    <Dependency path="../hsaContributionsTotal"/>
                                </Left>
                                <Right>
                                    <Dependency path="../hsaTotalContributionLimit"/>
                                </Right>
                            </GreaterThan>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaContributionLimitExceededAmount">
            <Description>Whether the filer has exceeded the HSA contribution limit</Description>
            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency path="../hsaContributionsTotal"/>
                    </Minuend>
                    <Subtrahends>
                        <Dependency path="../hsaTotalContributionLimit"/>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/filers/*/causesHsaContributionsOverLimitKnockout">
            <Description>Whether the filer is knocked out when their HSA contributions are over the limit</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/hsaCoverageAndContributionsSectionIsComplete"/>
                                <Dependency path="../hsaContributionLimitExceeded"/>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowHsaContributionsOverLimitKnockout">
            <Description>The filer is knocked out when their HSA contributions are over the limit</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Any>
                                <Dependency path="/primaryFiler/causesHsaContributionsOverLimitKnockout"/>
                                <Dependency path="/secondaryFiler/causesHsaContributionsOverLimitKnockout"/>
                            </Any>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowHsaContributionsSummaryTableOverageVisibility">
            <Description>Whether the HSA contributions summary table overage should be visible</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/primaryFiler/causesHsaContributionsOverLimitKnockout"/>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowHsaContributionsSummaryTableOverageVisibilitySpouse">
            <Description>Whether the HSA contributions summary table overage should be visible</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                                <Dependency path="/secondaryFiler/causesHsaContributionsOverLimitKnockout"/>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaPdfFilerName">
            <Description>The name displayed on the HSA form 8889 used for PDF to combine MFJ names when applicable
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <!-- When MFJ and only one filer has a separate 8889, combine the filers' names -->
                        <When>
                            <All>
                                <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                                <Equal>
                                    <Left>
                                        <Dependency path="/numberOfFilersRequiredToFileForm8889"/>
                                    </Left>
                                    <Right>
                                        <Int>1</Int>
                                    </Right>
                                </Equal>
                            </All>
                        </When>
                        <Then>
                            <Paste sep=",">
                                <Dependency module="filers" path="/primaryFiler/fullName"/>
                                <Dependency module="filers" path="/secondaryFiler/fullName"/>
                            </Paste>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency module="filers" path="../fullName"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hasSelfOnlyHdhp">
            <Description>Whether the filer has a self-only HDHP.</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../typeOfHdhpDerived"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/typeOfHdhpOptions">selfOnly</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hasFamilyHdhp">
            <Description>Whether the filer has a family HDHP.</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../typeOfHdhpDerived"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/typeOfHdhpOptions">family</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hasSelfOnlyOrFamilyHdhp">
            <Description>Whether the filer selected either Self-Only or Family HDHP coverage.</Description>
            <Derived>
                <Any>
                    <Dependency path="../hasSelfOnlyHdhp"/>
                    <Dependency path="../hasFamilyHdhp"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filers/*/isCoveredByFamilyHdhp">
            <Description>Whether the filer can be considered covered by the family coverage HDHP</Description>
            <Derived>
                <Any>
                    <Dependency path="/hsaMarriedFilersHaveFamilyCoverage"/>
                    <Dependency path="../hasFamilyHdhp"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filers/*/isCoveredByFamilyHdhpForExport">
            <Description>Form 8889 Line 1 checkbox for PDF, XML export.</Description>
            <Export mef="true"/>
            <Derived>
                <All>
                    <Dependency path="../hasMadeContributionsToHsa"/>
                    <Dependency path="../isCoveredByFamilyHdhp"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/isCoveredBySelfOnlyHdhp">
            <Description>Whether the filer can be considered covered by the self-only coverage HDHP</Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="../isCoveredByFamilyHdhp"/>
                    </Not>
                    <Dependency path="../hasSelfOnlyHdhp"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/isCoveredBySelfOnlyHdhpForExport">
            <Description>Form 8889 Line 1 checkbox for PDF, XML export.</Description>
            <Export mef="true"/>
            <Derived>
                <All>
                    <Dependency path="../hasMadeContributionsToHsa"/>
                    <Dependency path="../isCoveredBySelfOnlyHdhp"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hsaDistributions/*/belongsToPrimaryFiler">
            <Description>The HSA distribution belongs to the primary filer</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../filer"/>
                    </Left>
                    <Right>
                        <Dependency module="filers" path="/primaryFiler"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/hsaDistributions/*/belongsToSecondaryFiler">
            <Description>The HSA distribution belongs to the secondary filer</Description>
            <Derived>
                <Not>
                    <Equal>
                        <Left>
                            <Dependency path="../filer"/>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/primaryFiler"/>
                        </Right>
                    </Equal>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerHsaDistributions">
            <Name>Primary Filer HSA distributions</Name>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/primaryFiler/hasHsaCanHaveDistribution"/>
                        </When>
                        <Then>
                            <Filter path="/hsaDistributions">
                                <Dependency path="belongsToPrimaryFiler"/>
                            </Filter>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerDistributionsRolloverAmountTotal">
            <Description>Primary filer total HSA distributions rollover amount</Description>
            <Derived>
                <Round>
                    <CollectionSum>
                        <Dependency path="/primaryFilerHsaDistributions/*/distributionsRolloverAmount"/>
                    </CollectionSum>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerHsaDistributions">
            <Name>Secondary Filer HSA distributions</Name>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/secondaryFiler/hasHsaCanHaveDistribution"/>
                        </When>
                        <Then>
                            <Filter path="/hsaDistributions">
                                <Not>
                                    <Dependency path="belongsToPrimaryFiler"/>
                                </Not>
                            </Filter>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerDistributionsRolloverAmountTotal">
            <Description>Secondary filer total HSA distributions rollover amount</Description>
            <Derived>
                <Round>
                    <CollectionSum>
                        <Dependency path="/secondaryFilerHsaDistributions/*/distributionsRolloverAmount"/>
                    </CollectionSum>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/hsaDistributions/*/causesUnqualifiedDistributionsKnockout">
            <Description>Whether the filer is knocked out due to entering unqualified distributions</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/someFilerCanHaveDistribution"/>
                                <IsComplete>
                                    <Dependency path="../writableQualifiedMedExpenses"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../modifiedDistribution"/>
                                    </Left>
                                    <Right>
                                        <Dependency path="../writableQualifiedMedExpenses"/>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutHsaUnqualifiedDistributions">
            <Description>Knockout due to filer entering a value for Box 4 of form 1099-SA</Description>
            <BlockSubmissionOnTrue/>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/hsaDistributions/*/causesUnqualifiedDistributionsKnockout"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hsaDistributions/*/causesFmvKnockout">
            <Description>Whether the filer is knocked out due to their FMV</Description>
            <Derived>
                <All>
                    <Dependency path="/someFilerCanHaveDistribution"/>
                    <IsComplete>
                        <Dependency path="../writableFmvOnDateOfDeath"/>
                    </IsComplete>
                    <GreaterThan>
                        <Left>
                            <Dependency path="../writableFmvOnDateOfDeath"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutHsaDistributionFMV">
            <Description>Knockout due to filer entering a value for Box 4 of form 1099-SA</Description>
            <BlockSubmissionOnTrue/>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/hsaDistributions/*/causesFmvKnockout"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaRolloverTotal">
            <Description>Amount of distributions rolled over into other HSAs</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                                <Dependency module="filers" path="../isSecondaryFiler"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/secondaryFilerDistributionsRolloverAmountTotal"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filers" path="../isPrimaryFiler"/>
                        </When>
                        <Then>
                            <Dependency path="/primaryFilerDistributionsRolloverAmountTotal"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/totalHsaDistributions">
            <Description>Appears on Form 8889 line 14a.</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                                <Dependency module="filers" path="../isSecondaryFiler"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/secondaryFilerHsaDistributions/*/writableGrossDistribution"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filers" path="../isPrimaryFiler"/>
                        </When>
                        <Then>
                            <Round>
                                <CollectionSum>
                                    <Dependency path="/primaryFilerHsaDistributions/*/writableGrossDistribution"/>
                                </CollectionSum>
                            </Round>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/hadOtherCoverageIneligibleForHSAOptions">
            <Description>Enum for if the filer had other health coverage that would make them ineligible for HSA
                contributions
            </Description>
            <Derived>
                <EnumOptions>
                    <String>wholeYear</String>
                    <String>partOfYear</String>
                    <String>noneOfYear</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hadOtherCoverageIneligibleForHSA">
            <Description>Duration that filer had other health coverage that would make them ineligible for HSA
                contributions
            </Description>
            <Writable>
                <Enum optionsPath="/hadOtherCoverageIneligibleForHSAOptions"/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/hadOtherCoverageIneligibleForHsaDerived">
            <Description>Duration that filer had other health coverage that would make them ineligible for HSA
                contributions
                after accounting for edit conditions
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../flowShouldAskHadCoverageIneligibleForHSAContributions"/>
                        </When>
                        <Then>
                            <Dependency path="../hadOtherCoverageIneligibleForHSA"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/causesOtherCoveragePartOfYearKnockOut">
            <Description>Whether filer had other health coverage that would make them ineligible for HSA contributions
                for
                part of the year
            </Description>
            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="/filers/*/hadOtherCoverageIneligibleForHsaDerived"/>
                    </IsComplete>
                    <Equal>
                        <Left>
                            <Dependency path="/filers/*/hadOtherCoverageIneligibleForHsaDerived"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/hadOtherCoverageIneligibleForHSAOptions">partOfYear</Enum>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutOtherCoveragePartOfYear">
            <Description>Knockout due to not having HDHP coverage all year</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/filers/*/causesOtherCoveragePartOfYearKnockOut"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/filers/*/causesOtherCoverageWholeYearKnockOut">
            <Description>Whether filer had other health coverage that would make them ineligible for HSA contributions
                for the
                whole year
            </Description>
            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="/filers/*/hadOtherCoverageIneligibleForHsaDerived"/>
                    </IsComplete>
                    <Equal>
                        <Left>
                            <Dependency path="/filers/*/hadOtherCoverageIneligibleForHsaDerived"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/hadOtherCoverageIneligibleForHSAOptions">wholeYear</Enum>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutOtherCoverageWholeYear">
            <Description>Knockout due to not having HDHP coverage all year</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/filers/*/causesOtherCoverageWholeYearKnockOut"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaBaseContributionLimit">
            <Description>The filer's HSA base contribution limit, regardless of age.</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="../wasEligibleToMakeHsaContributionsAllYear"/>
                                <Equal>
                                    <Left>
                                        <Dependency path="../typeOfHdhpDerived"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/typeOfHdhpOptions">selfOnly</Enum>
                                    </Right>
                                </Equal>
                                <Not>
                                    <Dependency path="/hsaMarriedFilersHaveFamilyCoverage"/>
                                </Not>
                            </All>
                        </When>
                        <Then>
                            <Dependency module="constants" path="/hsaSelfOnlyCoverageLimit"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="../wasEligibleToMakeHsaContributionsAllYear"/>
                                <Dependency path="../isCoveredByFamilyHdhp"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency module="constants" path="/hsaFamilyCoverageLimit"/>
                        </Then>
                    </Case>
                    <Case>
                        <!-- Partial year coverage would not have $0 limit, but we rely on KOs to ensure that anyone reaching this
            calculation does have $0 limit. -->
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaInitialContributionLimit">
            <Description>Maximum amount of HSA contributions for the tax year. Reported on line 3 of form 8889.
            </Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../hasMadeContributionsToHsa"/>
                        </When>
                        <Then>
                            <Round>
                                <Switch>
                                    <Case>
                                        <When>
                                            <Any>
                                                <All>
                                                    <Dependency path="../wasEligibleToMakeHsaContributionsAllYear"/>
                                                    <Dependency module="filers" path="../age55OrOlder"/>
                                                    <Any>
                                                        <Dependency path="../isCoveredByFamilyHdhp"/>
                                                        <Dependency path="../isCoveredBySelfOnlyHdhp"/>
                                                    </Any>
                                                    <Not>
                                                        <Dependency module="filers" path="/isMarried"/>
                                                    </Not>
                                                </All>
                                                <All>
                                                    <Dependency path="../wasEligibleToMakeHsaContributionsAllYear"/>
                                                    <Dependency module="filers" path="../age55OrOlder"/>
                                                    <Dependency path="../isCoveredBySelfOnlyHdhp"/>
                                                    <Dependency module="filers" path="/isMarried"/>
                                                </All>
                                            </Any>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dependency path="../hsaBaseContributionLimit"/>
                                                <Dependency module="constants"
                                                            path="/hsaOver55AdditionalCoverageLimit"/>
                                            </Add>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dependency path="../hsaBaseContributionLimit"/>
                                        </Then>
                                    </Case>
                                </Switch>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hasHdhpCoverageAllYear">
            <Description>Whether the filer had HDHP coverage for the whole year</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../hsaHdhpCoverageStatusDerived"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/hsaHdhpCoverageStatusOptions">allYear</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hasMetFamilyContributionLimitRule">
            <Description>Whether the filer has met the conditions for a special rule to where we need to calculate the
                optimal
                line 6 value for the filer.
            </Description>
            <Derived>
                <All>
                    <!-- parent fact is complete -->
                    <Dependency path="/hsaMarriedFilersHaveFamilyCoverage"/>
                    <Dependency path="/bothFilersHaveHsa"/>
                    <Dependency path="../hasHdhpCoverageAllYear"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hsaPrimaryFilerContributionTotalLessAddition">
            <Description>Helper calculation for primary: The sum of lines 2 and 11 less line 7.</Description>
            <Derived>
                <Subtract>
                    <Minuend>
                        <Add>
                            <Dependency path="/primaryFiler/hsaNonemployerContributionsTotal"/>
                            <Dependency path="/primaryFiler/hsaEmployerContributionsAndFundingDistributionTotal"/>
                        </Add>
                    </Minuend>
                    <Subtrahends>
                        <Dependency path="/primaryFiler/additionToHsaContributionLimit"/>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/hsaPrimaryFilerAllocatedContributionLimit">
            <Description>The calculated contribution limit for the primary filer. This should only be used when the
                filer has
                met the family contribution limit rule.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <LessThan>
                                <Left>
                                    <Dependency path="/hsaPrimaryFilerContributionTotalLessAddition"/>
                                </Left>
                                <Right>
                                    <Dollar>0</Dollar>
                                </Right>
                            </LessThan>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="/hsaPrimaryFilerContributionTotalLessAddition"/>
                                    </Left>
                                    <Right>
                                        <Dependency path="/primaryFiler/hsaContributionLimitLessMsaContributions"/>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/primaryFiler/hsaContributionLimitLessMsaContributions"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/hsaPrimaryFilerContributionTotalLessAddition"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/hsaSecondaryFilerAllocatedContributionLimit">
            <Description>The calculated contribution limit for the secondary filer. This should only be used when the
                filer
                has met the family contribution limit rule.
            </Description>
            <!-- Note: this is not a common fact defined on the filers collection because the secondary and primary filer have
      differring calculations
      and the secondary filers calculation is dependent on the primary filer's which would be a circular dependency if
      defined in a single fact -->
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <LessThanOrEqual>
                                <Left>
                                    <Subtract>
                                        <Minuend>
                                            <Dependency
                                                    path="/secondaryFiler/hsaContributionLimitLessMsaContributions"/>
                                        </Minuend>
                                        <Subtrahends>
                                            <Dependency path="/hsaPrimaryFilerAllocatedContributionLimit"/>
                                        </Subtrahends>
                                    </Subtract>
                                </Left>
                                <Right>
                                    <Dollar>0</Dollar>
                                </Right>
                            </LessThanOrEqual>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Subtract>
                                <Minuend>
                                    <Dependency path="/secondaryFiler/hsaContributionLimitLessMsaContributions"/>
                                </Minuend>
                                <Subtrahends>
                                    <Dependency path="/hsaPrimaryFilerAllocatedContributionLimit"/>
                                </Subtrahends>
                            </Subtract>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaAllocatedContributionLimit">
            <Description>The calculated contribution limit for the case where both filers have HSAs and are filing
                jointly and
                we must determine the
                correct contribution limit for each filer
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filers" path="../isPrimaryFiler"/>
                        </When>
                        <Then>
                            <Dependency path="/hsaPrimaryFilerAllocatedContributionLimit"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filers" path="../isSecondaryFiler"/>
                        </When>
                        <Then>
                            <Dependency path="/hsaSecondaryFilerAllocatedContributionLimit"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaContributionLimitLessAddition">
            <Description>Form 8889 Line 6: the contribution limit less the addition in line 7.</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../hasMadeContributionsToHsa"/>
                        </When>
                        <Then>
                            <Round>
                                <Switch>
                                    <Case>
                                        <When>
                                            <Dependency path="../hasMetFamilyContributionLimitRule"/>
                                        </When>
                                        <Then>
                                            <Dependency path="../hsaAllocatedContributionLimit"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dependency path="../hsaContributionLimitLessMsaContributions"/>
                                        </Then>
                                    </Case>
                                </Switch>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/hsaMarriedFilersHaveFamilyCoverage">
            <Description>Whether the return is for MFJ filers with at least one having family coverage.</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="/primaryFiler/typeOfHdhpDerived"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="/secondaryFiler/typeOfHdhpDerived"/>
                                </IsComplete>
                            </All>
                        </When>
                        <Then>
                            <All>
                                <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                                <Any>
                                    <Equal>
                                        <Left>
                                            <Dependency path="/primaryFiler/typeOfHdhpDerived"/>
                                        </Left>
                                        <Right>
                                            <Enum optionsPath="/typeOfHdhpOptions">family</Enum>
                                        </Right>
                                    </Equal>
                                    <Equal>
                                        <Left>
                                            <Dependency path="/secondaryFiler/typeOfHdhpDerived"/>
                                        </Left>
                                        <Right>
                                            <Enum optionsPath="/typeOfHdhpOptions">family</Enum>
                                        </Right>
                                    </Equal>
                                </Any>
                            </All>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaContributionLimitLessMsaContributions">
            <Description>Reported on line 5 of form 8889.</Description>
            <!-- This will need to be updated when we support Archer MSAs. -->
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../hasMadeContributionsToHsa"/>
                        </When>
                        <Then>
                            <Dependency path="../hsaInitialContributionLimit"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/taxableHsaDistributionTotal">
            <Description>Sets the value for line 16 of form 8889.</Description>
            <!-- This relies on hsa-ko-unqualified-distributions knocking out distributions where `writableGrossDistribution`
      does not equal `writableQualifiedMedExpenses. -->
            <!-- This will need to be updated if we support lines 16 or 17a. -->
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../hasHsaCanHaveDistribution"/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaCalculatedTaxableHsaDistributionTotal">
            <Description>Reported on line 16 of form 8889.</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <NotEqual>
                                <Left>
                                    <Dependency path="../taxableHsaDistributionTotal"/>
                                </Left>
                                <Right>
                                    <Dollar>0</Dollar>
                                </Right>
                            </NotEqual>
                        </When>
                        <Then>
                            <Dependency path="../taxableHsaDistributionTotal"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Equal>
                                    <Left>
                                        <Dependency path="../taxableHsaDistributionTotal"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </Equal>
                                <NotEqual>
                                    <Left>
                                        <Dependency path="../totalHsaDistributions"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </NotEqual>
                            </All>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <!-- Left undefined to leave blank if taxableHsaDistributionTotal AND totalHsaDistributions are $0 -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerWithdrawnExcessContributionsAmount">
            <Description>Primary filer total HSA distributions excess contributions amount</Description>
            <Derived>
                <Round>
                    <CollectionSum>
                        <Dependency path="/primaryFilerHsaDistributions/*/withdrawnExcessContributionsAmount"/>
                    </CollectionSum>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerWithdrawnExcessContributionsAmount">
            <Description>Secondary filer total HSA distributions excess contributions amount</Description>
            <Derived>
                <Round>
                    <CollectionSum>
                        <Dependency path="/secondaryFilerHsaDistributions/*/withdrawnExcessContributionsAmount"/>
                    </CollectionSum>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaTotalExcessContributionsWithdrawnInTime">
            <Description>Amount of HSA excess contributions withdrawn in time</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                                <Dependency module="filers" path="../isSecondaryFiler"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/secondaryFilerWithdrawnExcessContributionsAmount"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filers" path="../isPrimaryFiler"/>
                        </When>
                        <Then>
                            <Dependency path="/primaryFilerWithdrawnExcessContributionsAmount"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaRolloversAndTimelyWithdrawals">
            <Description>Reported on line 14b of form 8889.</Description>
            <Export mef="true"/>
            <Derived>
                <Add>
                    <Dependency path="../hsaTotalExcessContributionsWithdrawnInTime"/>
                    <Dependency path="../hsaRolloverTotal"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerHsaQualifiedMedExpenses">
            <Description>Primary filer total HSA qualified medical expenses.</Description>
            <Derived>
                <Round>
                    <CollectionSum>
                        <Dependency path="/primaryFilerHsaDistributions/*/writableQualifiedMedExpenses"/>
                    </CollectionSum>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerHsaQualifiedMedExpenses">
            <Description>Secondary filer total HSA qualified medical expenses.</Description>
            <Derived>
                <Round>
                    <CollectionSum>
                        <Dependency path="/secondaryFilerHsaDistributions/*/writableQualifiedMedExpenses"/>
                    </CollectionSum>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaQualifiedMedExpenses">
            <Description>Reported on line 15 of form 8889.</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                                <Dependency module="filers" path="../isSecondaryFiler"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/secondaryFilerHsaQualifiedMedExpenses"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filers" path="../isPrimaryFiler"/>
                        </When>
                        <Then>
                            <Dependency path="/primaryFilerHsaQualifiedMedExpenses"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaNetDistributionAmount">
            <Description>Determines the net amount of HSA distributions.</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <GreaterThan>
                                <Left>
                                    <Add>
                                        <Dependency path="../totalHsaDistributions"/>
                                        <Dependency path="../hsaRolloversAndTimelyWithdrawals"/>
                                    </Add>
                                </Left>
                                <Right>
                                    <Dollar>0</Dollar>
                                </Right>
                            </GreaterThan>
                        </When>
                        <Then>
                            <GreaterOf>
                                <Dollar>0</Dollar>
                                <Subtract>
                                    <Minuend>
                                        <Dependency path="../totalHsaDistributions"/>
                                    </Minuend>
                                    <Subtrahends>
                                        <Dependency path="../hsaRolloversAndTimelyWithdrawals"/>
                                    </Subtrahends>
                                </Subtract>
                            </GreaterOf>
                        </Then>
                    </Case>
                    <!-- Left undefined to avoid zero output when minuend and subtrahend are both zero, and unexported. -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hsaCalculatedDistributionAmount">
            <Description>Reported on line 14c of form 8889.</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <NotEqual>
                                <Left>
                                    <Dependency path="../hsaNetDistributionAmount"/>
                                </Left>
                                <Right>
                                    <Dollar>0</Dollar>
                                </Right>
                            </NotEqual>
                        </When>
                        <Then>
                            <Dependency path="../hsaNetDistributionAmount"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Equal>
                                    <Left>
                                        <Dependency path="../hsaNetDistributionAmount"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </Equal>
                                <NotEqual>
                                    <Left>
                                        <Dependency path="../totalHsaDistributions"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </NotEqual>
                            </All>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <!-- Left undefined to leave blank if hsaNetDistributionAmount AND totalHsaDistributions are $0 -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/changeInMaritalStatusDuringTaxYearOptions">
            <Description>Enum for filer marital status changed this tax year options</Description>
            <Derived>
                <EnumOptions>
                    <String>wasMarriedOrDivorcedThisYear</String>
                    <String>wasNotMarriedNorDivorcedThisYear</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/filers/*/writableChangeInMaritalStatusDuringTaxYear">
            <Description>(Writable) Whether the taxpayer declared they experienced a change in marital status during
                this tax
                year.
            </Description>

            <Writable>
                <Enum optionsPath="/changeInMaritalStatusDuringTaxYearOptions"/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/changeInMaritalStatusDuringTaxYear">
            <Description>Whether the taxpayer declared they experienced a change in marital status during this tax
                year.
            </Description>

            <Derived>
                <Switch>
                    <!-- SCENARIO: User has answered `hsa-coverage-marital-status` screen. -->
                    <Case>
                        <When>
                            <Dependency path="../flowShouldAskForChangeInMaritalStatusDuringTaxYear"/>
                        </When>
                        <Then>
                            <Equal>
                                <Left>
                                    <Dependency path="../writableChangeInMaritalStatusDuringTaxYear"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/changeInMaritalStatusDuringTaxYearOptions">
                                        wasMarriedOrDivorcedThisYear
                                    </Enum>
                                </Right>
                            </Equal>
                        </Then>
                    </Case>
                    <!-- SCENARIO: User has not answered `hsa-coverage-marital-status` screen. -->
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/checkForChangeInMaritalStatusDuringTaxYear">
            <Description>Whether to show screen asking if the filer experienced a change in marital status this tax
                year.
            </Description>
            <Derived>
                <All>
                    <!-- They should be asked for change in marital status if they are not single ... -->
                    <Not>
                        <Dependency module="filers" path="/isSingle"/>
                    </Not>
                    <!-- ... AND they did not have any other disqualifying health coverage. -->
                    <Switch>
                        <!-- SCENARIO: User has answered question on `hsa-coverage-other-y-n`. -->
                        <Case>
                            <When>
                                <IsComplete>
                                    <Dependency path="../hadOtherCoverageIneligibleForHsaDerived"/>
                                </IsComplete>
                            </When>
                            <Then>
                                <Equal>
                                    <Left>
                                        <Dependency path="../hadOtherCoverageIneligibleForHsaDerived"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/hadOtherCoverageIneligibleForHSAOptions">noneOfYear</Enum>
                                    </Right>
                                </Equal>
                            </Then>
                        </Case>
                        <!-- SCENARIO: User has not answered question on `hsa-coverage-other-y-n`. -->
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <True/>
                            </Then>
                        </Case>
                    </Switch>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/flowShouldAskForChangeInMaritalStatusDuringTaxYear">
            <Description>Whether to show the screen asking a filer experienced a change in marital status this tax
                year.
            </Description>
            <Derived>
                <All>
                    <Dependency path="../hasMadeContributionsToHsa"/>
                    <Dependency path="../checkForChangeInMaritalStatusDuringTaxYear"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/checkIfChangeInMaritalStatusAffectsContributionLimit">
            <Description>Whether to show screen asking if a change in marital status this tax year affects the filer's
                contribution limit.
            </Description>
            <Derived>
                <All>
                    <Dependency path="../changeInMaritalStatusDuringTaxYear"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/flowShouldAskIfChangeInMaritalStatusAffectsContributionLimit">
            <Description>Whether to show the screen asking if a change in marital status affects a filer's contribution
                limit.
            </Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="../checkIfChangeInMaritalStatusAffectsContributionLimit"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/filers/*/writableMaritalChangeAffectContributionLimitBool">
            <Description>Whether any of the distributions from box 6 are a rollover to another HSA</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/causesMaritalChangeAffectsContributionLimitKnockout">
            <Description>Used in the flow to determine whether to show Form 8889 line 6 knockout.</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="../flowShouldAskIfChangeInMaritalStatusAffectsContributionLimit"/>
                                <IsComplete>
                                    <Dependency path="../writableMaritalChangeAffectContributionLimitBool"/>
                                </IsComplete>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writableMaritalChangeAffectContributionLimitBool"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutMaritalChangeAffectsContributionLimit">
            <Name>Knockout when the filer/spouse contribution limit is affected by marital status change this tax
                year.
            </Name>
            <Description>At least one Form 8889 has a set of facts that cause a knockout</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/filers/*/causesMaritalChangeAffectsContributionLimitKnockout"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hasMadeQualifiedHsaFundingDistribution">
            <Description>Whether the filer has made qualified HSA funding distributions</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/hasMadeQualifiedHsaFundingDistributionDerived">
            <Description>Whether the filer has made qualified HSA funding distributions after accounting for edit
                conditions
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../hasMadeContributionsToHsa"/>
                        </When>
                        <Then>
                            <Dependency path="../hasMadeQualifiedHsaFundingDistribution"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutMadeQualifiedHsaFundingDistribution">
            <Description>Knockout due to a qualified HSA funding distribution</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <Any>
                    <Dependency path="/primaryFiler/hasMadeQualifiedHsaFundingDistributionDerived"/>
                    <Dependency path="/secondaryFiler/hasMadeQualifiedHsaFundingDistributionDerived"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/someFilersMadeTestingPeriodContribution">
            <Description>Whether TP made HSA contribution during testing period of TP - 1</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/flowHsaTestingPeriodCheckYes">
            <Name>TP has additional conctributions during testing period TY-1</Name>
            <Description>TP confirmed addtional contributions during testing period TY-1</Description>
            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="/someFilersMadeTestingPeriodContribution"/>
                    </IsComplete>
                    <Dependency path="/someFilersMadeTestingPeriodContribution"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/someFilersHaveTestingPeriodAdditionalIncome">
            <Description>Whether TP have additional income due to use of last month rule during testing period of TP -
                1
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/flowKnockoutHsaTestingPeriodAdditionalIncomeYes">
            <Name>Knockout because of additional income resulting from use of the last-month rule</Name>
            <Description>TP has additonal income to report resulting from use of the last-month rule</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <All>
                    <Dependency path="/flowShowHsaTestingPeriodContributionCheck"/>
                    <Dependency path="/flowHsaTestingPeriodCheckYes"/>
                    <IsComplete>
                        <Dependency path="/someFilersHaveTestingPeriodAdditionalIncome"/>
                    </IsComplete>
                    <Dependency path="/someFilersHaveTestingPeriodAdditionalIncome"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hasToShowTestingPeriodCheck">
            <Description>Whether the filer does not have W2 HSA and do not have HSA activity.</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="filers" path="../isPrimaryFilerOrMfjAndEither"/>
                                <IsComplete>
                                    <Dependency path="../flowSkipToHsaTestingPeriodContributionCheck"/>
                                </IsComplete>
                                <Dependency path="../flowSkipToHsaTestingPeriodContributionCheck"/>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <!-- TP reported having non-employer(W2) contributions, but the filer had contributions in the TY -->
                            <All>
                                <Dependency module="filers" path="../isPrimaryFilerOrMfjAndEither"/>
                                <Dependency path="/flowShowHsaYesNo"/>
                                <Dependency path="/someFilerHadNonEmployerHsaActivity"/>
                                <Not>
                                    <Dependency path="../mayHaveHsaContributions"/>
                                </Not>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filersTestingPeriodCheck">
            <Description>The collection of filers which need to go to testing period contribution check</Description>

            <Derived>
                <Filter path="/filers">
                    <Dependency path="hasToShowTestingPeriodCheck"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/bothFilersHaveToShowTestingPeriodCheck">
            <Description>Whether the filing status is MFJ and both filers have separate HSAs</Description>
            <Derived>
                <Equal>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/filersTestingPeriodCheck"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>2</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/flowShowHsaTestingPeriodContributionCheck">
            <Description>Show testing period contributions check</Description>
            <Derived>
                <Any>
                    <Dependency path="/primaryFiler/hasToShowTestingPeriodCheck"/>
                    <Dependency path="/secondaryFiler/hasToShowTestingPeriodCheck"/>
                    <Dependency path="/bothFilersHaveToShowTestingPeriodCheck"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/knockoutNoPaymentsHsaDistribution">
            <Description>Filer is knocked out if they have no taxable income and no credits, but have HSA
                distributions.
            </Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency module="estimatedPayments" path="/paidEstimatedTaxesOrFromLastYear"/>
                    </Not>
                    <Dependency module="taxCalculations" path="/knockoutHasNoPaymentsOrCredits"/>
                    <Equal>
                        <Left>
                            <Dependency module="interest" path="/taxExemptInterest"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="income" path="/pensionsAndAnnuities"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency module="socialSecurity" path="/socialSecurityBenefits"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </Equal>
                    <Any>
                        <Dependency path="/primaryFiler/hasHsaDistributions"/>
                        <Dependency path="/secondaryFiler/hasHsaDistributions"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hsaTestingPeriodCheckSectionIsComplete">
            <Description>Whether the TP has answered all the required sections in the HSA testing period contribution
                check
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <!-- section is available, last screen answered -->
                            <All>
                                <Dependency path="/flowShowHsaTestingPeriodContributionCheck"/>
                                <IsComplete>
                                    <Dependency path="/someFilersMadeTestingPeriodContribution"/>
                                </IsComplete>
                                <Any>
                                    <Not>
                                        <Dependency path="/flowHsaTestingPeriodCheckYes"/>
                                    </Not>
                                    <IsComplete>
                                        <Dependency path="/someFilersHaveTestingPeriodAdditionalIncome"/>
                                    </IsComplete>
                                </Any>
                            </All>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <!-- section is not available -->
                            <Not>
                                <Dependency path="/flowShowHsaTestingPeriodContributionCheck"/>
                            </Not>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hasHsaCanHaveDistribution">
            <Description>Whether the filer has HSA and therefore can have distributions</Description>
            <Derived>
                <Dependency path="../mayHaveHsaContributions"/>
            </Derived>
        </Fact>
        <Fact path="/filersWithHsaCanHaveDistribution">
            <Description>The collection of filers with HSA that can have distributions</Description>
            <Derived>
                <Filter path="/filers">
                    <Dependency path="hasHsaCanHaveDistribution"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/someFilerCanHaveDistribution">
            <Description>Whether at least one filer has HSA and can have distributions.</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/filersWithHsaCanHaveDistribution"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/enrolledInMedicareOptions">
            <Description>Enum for filer Medicare enrollment values</Description>
            <Derived>
                <EnumOptions>
                    <String>allYear</String>
                    <String>partOfYear</String>
                    <String>noneOfYear</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/filers/*/enrolledInMedicare">
            <Description>Whether filer was enrolled in Medicare all, part, or none of the year</Description>
            <Writable>
                <Enum optionsPath="/enrolledInMedicareOptions"/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/enrolledInMedicareDerived">
            <Description>The filers enrolledInMedicare answer after accounting for edit conditions.</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../hasMadeContributionsToHsa"/>
                        </When>
                        <Then>
                            <Dependency path="../enrolledInMedicare"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/flowEnrolledInMedicarePartOfYear">
            <Description>Whether filer was enrolled in Medicare part of the year</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../enrolledInMedicareDerived"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/enrolledInMedicareOptions">partOfYear</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/filers/*/flowNotEnrolledInHdhp">
            <Description>Whether filer was not enrolled in HDHP</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/filers/*/hsaHdhpCoverageStatusDerived"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/hsaHdhpCoverageStatusOptions">noneOfYear</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/filers/*/flowEnrolledInMedicareAllYear">
            <Description>Whether filer was enrolled in Medicare for the whole year</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../enrolledInMedicareDerived"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/enrolledInMedicareOptions">allYear</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/filers/*/enrolledInMedicarePartOfYearKnockout">
            <Description>Whether the filer was knocked out of the flow due to their answer to medicare enrollment
            </Description>
            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="../flowEnrolledInMedicarePartOfYear"/>
                    </IsComplete>
                    <Dependency path="../flowEnrolledInMedicarePartOfYear"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/notEnrolledInHdhpKnockout">
            <Description>Whether the filer was knocked out of the flow due to not being enrolled in HDHP</Description>
            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="../flowNotEnrolledInHdhp"/>
                    </IsComplete>
                    <Dependency path="../flowNotEnrolledInHdhp"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/enrolledInMedicareAllYearKnockout">
            <Description>Whether the filer was knocked out of the flow due to medicare enrollment for the whole year
            </Description>
            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="../flowEnrolledInMedicareAllYear"/>
                    </IsComplete>
                    <Dependency path="../flowEnrolledInMedicareAllYear"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutHsaCoverageChanging">
            <Description>Knockout due to Medicare coverage changing during the year</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/filers/*/enrolledInMedicarePartOfYearKnockout"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutNotEnrolledInHdhp">
            <Description>Knockout due to not being enrolled in HDHP</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/filers/*/notEnrolledInHdhpKnockout"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutEnrolledInMedicareAllYear">
            <Description>Knockout due to Medicare coverage during the whole year</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/filers/*/enrolledInMedicareAllYearKnockout"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/typeOfHdhpOptions">
            <Description>Enum for filer High Deductible Health Plan coverage values</Description>
            <Derived>
                <EnumOptions>
                    <String>selfOnly</String>
                    <String>family</String>
                    <String>both</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/filers/*/typeOfHdhp">
            <Description>Filer's type of HDHP coverage</Description>
            <Writable>
                <Enum optionsPath="/typeOfHdhpOptions"/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/typeOfHdhpDerived">
            <Description>Filer's HDHP coverage after accounting for edit conditions</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../flowShouldAskForHsaHdhpCoverageType"/>
                        </When>
                        <Then>
                            <Dependency path="../typeOfHdhp"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/flowBothSelfAndFamilyHdhpCoverage">
            <Description>Whether filer had both self and family HDHP coverage</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../typeOfHdhpDerived"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/typeOfHdhpOptions">both</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/filers/*/typeOfHdhpKnockout">
            <Description>Whether the filer was knocked out of the flow due to their answer to self and family HDHP
                coverage
            </Description>
            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="../flowBothSelfAndFamilyHdhpCoverage"/>
                    </IsComplete>
                    <Dependency path="../flowBothSelfAndFamilyHdhpCoverage"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutHsaSelfAndFamilyCoverage">
            <Description>Knockout due to having both self and family HDHP coverage</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/filers/*/typeOfHdhpKnockout"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutHdhpCoverageNotAllYear">
            <Description>Knockout due to not having HDHP coverage all year</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/filers/*/hsaHdhpCoverageStatusKnockout"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutHsaCoverage">
            <Description>Knockout due to HSA coverage details</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <Any>
                    <Dependency path="/flowKnockoutHsaCoverageChanging"/>
                    <Dependency path="/flowKnockoutHsaSelfAndFamilyCoverage"/>
                    <Dependency path="/flowKnockoutHdhpCoverageNotAllYear"/>
                    <Dependency path="/flowKnockoutOtherCoveragePartOfYear"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutContributionSummaryNoneAllowed">
            <Name>Knockout with summary conditions, due to hsa contributions made by TP not eligible to make
                contributions
            </Name>
            <Description>Multiple coditons met on multiple HSA screens</Description>
            <BlockSubmissionOnTrue/>
            <Derived>
                <Any>
                    <!-- Conditions from hsa-coverage-medicare-status -->
                    <Dependency path="/flowKnockoutEnrolledInMedicareAllYear"/>
                    <!-- Conditions from hsa-coverage-status -->
                    <Dependency path="/flowKnockoutNotEnrolledInHdhp"/>
                    <!-- hsa-coverage-other-y-n -->
                    <Dependency path="/flowKnockoutOtherCoverageWholeYear"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutHdhpCoverageStatusNotNeeded">
            <Description>Knockout due to either Medicare enrollment for full year or part of the year</Description>
            <Derived>
                <Any>
                    <Dependency path="/flowKnockoutHsaCoverageChanging"/>
                    <Dependency path="/flowKnockoutEnrolledInMedicareAllYear"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filers/*/writableHsaNonemployerContributionsTaxYear">
            <Description>Filer's nonemployer HSA contributions this tax year</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/filers/*/hsaNonemployerContributionsTaxYear">
            <Description>Filer's nonemployer HSA contributions this tax year</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../writableHsaNonemployerContributionsTaxYear"/>
                                </IsComplete>
                                <Dependency path="../hasMadeContributionsToHsa"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <Dependency path="../writableHsaNonemployerContributionsTaxYear"/>
                            </Round>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0.00</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/writableHsaNonemployerContributionsTaxYearPlusOne">
            <Description>Filer's nonemployer HSA contributions tax year plus one</Description>
            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/filers/*/hsaNonemployerContributionsTaxYearPlusOne">
            <Description>Filer's nonemployer HSA contributions tax year plus one</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../writableHsaNonemployerContributionsTaxYearPlusOne"/>
                                </IsComplete>
                                <Dependency path="../hasMadeContributionsToHsa"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <Dependency path="../writableHsaNonemployerContributionsTaxYearPlusOne"/>
                            </Round>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0.00</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowHsaKnockout">
            <Description>The user has been knocked out for reasons(s) defined in this module</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Any>
                    <Dependency path="/knockoutNoPaymentsHsaDistribution"/>
                    <Dependency path="/flowKnockoutHsaMedicalSavingsAccountType"/>
                    <Dependency path="/flowKnockoutHsaDistributionCode"/>
                    <Dependency path="/flowKnockoutOtherCoveragePartOfYear"/>
                    <Dependency path="/flowKnockoutOtherCoverageWholeYear"/>
                    <Dependency path="/flowKnockoutEarningsOnExcessContributions"/>
                    <Dependency path="/flowKnockoutHsaTestingPeriodAdditionalIncomeYes"/>
                    <Dependency path="/flowKnockoutHsaUnqualifiedDistributions"/>
                    <Dependency path="/flowKnockoutHsaDistributionFMV"/>
                    <Dependency path="/flowKnockoutMaritalChangeAffectsContributionLimit"/>
                    <Dependency path="/flowKnockoutMFSLine6Check"/>
                    <Dependency path="/flowHsaContributionsOverLimitKnockout"/>
                    <Dependency path="/flowKnockoutHsaExcessContributions"/>
                    <Dependency path="/flowKnockoutContributionSummaryNoneAllowed"/>
                    <Dependency path="/flowKnockoutHdhpCoverageStatusNotNeeded"/>
                    <Dependency path="/flowKnockoutNotEnrolledInHdhp"/>
                    <Dependency path="/flowKnockoutMadeQualifiedHsaFundingDistribution"/>
                    <Dependency path="/flowKnockoutHsaCoverage"/>
                    <Dependency path="/flowKnockoutFilerIsDependentAndContributesToHsa"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/taxExemptInterest">
            <Name>Tax Exempt Interest</Name>
            <Description>Tax exempt interest income to report on line 2a of Form 1040. N.B. We write this to box 2a, but
                then
                never use it again outside of calculating EITC eligibility and SSB taxibility
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Round>
                    <CollectionSum>
                        <Dependency path="/interestReports/*/taxExemptInterest"/>
                    </CollectionSum>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/interestIncome">
            <Name>Interest income</Name>
            <Description>Taxable interest income to report on line 2b of Form 1040.</Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <Dependency path="/requiresScheduleB"/>
                            </When>
                            <Then>
                                <CollectionSum>
                                    <!-- We're intentionally summing rounded numbers because that is what Schedule B requires:
                  https://git.irslabs.org/irslabs-prototypes/direct-file/-/issues/8375 -->
                                    <Dependency path="/interestReports/*/roundedTaxableInterest"/>
                                </CollectionSum>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <CollectionSum>
                                    <Dependency path="/interestReports/*/taxableInterest"/>
                                </CollectionSum>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/netInvestmentIncomeThresholdForMfs">
            <Name>Net investment income threshold for MFS filing status</Name>
            <Description>The max income before someone is eligible to pay net investment income tax</Description>

            <Derived>
                <Dollar>125000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/netInvestmentIncomeThresholdForMfjOrQss">
            <Name>Net investment income threshold for MFJ or QSS filing status</Name>
            <Description>The max income before someone is eligible to pay net investment income tax</Description>

            <Derived>
                <Dollar>250000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/netInvestmentIncomeThresholdForSingleOrHoh">
            <Name>Net investment income threshold for Single or HOH filing status</Name>
            <Description>The max income before someone is eligible to pay net investment income tax</Description>

            <Derived>
                <Dollar>200000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/hasInterestIncomeAndAgiAboveThresholdForMfs">
            <Name>Net investment income disqualifier for MFS</Name>
            <Description>Checks to see if you may need to file for net investment income taxes and thus disqualifies you
                for
                Direct File
            </Description>
            <Derived>
                <All>
                    <!-- We only knockout the filer after they've seen the deduction screens, since that's when they verify their
                final AGI -->
                    <Dependency module="flow" path="/flowHasSeenDeductions"/>
                    <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                    <GreaterThan>
                        <Left>
                            <Dependency path="/interestIncome"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                    <GreaterThan>
                        <Left>
                            <Dependency module="taxCalculations" path="/agi"/>
                        </Left>
                        <Right>
                            <Dependency path="/netInvestmentIncomeThresholdForMfs"/>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hasInterestIncomeAndAgiAboveThresholdForMfjOrQss">
            <Name>Net investment income disqualifier for MFJ or QSS</Name>
            <Description>Checks to see if you may need to file for net investment income taxes and thus disqualifies you
                for
                Direct File
            </Description>
            <Derived>
                <All>
                    <!-- We only knockout the filer after they've seen the deduction screens, since that's when they verify their
                final AGI -->
                    <Dependency module="flow" path="/flowHasSeenDeductions"/>
                    <Any>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        <Dependency module="filingStatus" path="/isFilingStatusQSS"/>
                    </Any>
                    <GreaterThan>
                        <Left>
                            <Dependency path="/interestIncome"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                    <GreaterThan>
                        <Left>
                            <Dependency module="taxCalculations" path="/agi"/>
                        </Left>
                        <Right>
                            <Dependency path="/netInvestmentIncomeThresholdForMfjOrQss"/>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hasInterestIncomeAndAgiAboveThresholdForSingleOrHoh">
            <Name>Net investment income disqualifier for or Single or HOH</Name>
            <Description>Checks to see if you may need to file for net investment income taxes and thus disqualifies you
                for
                Direct File
            </Description>
            <Derived>
                <All>
                    <!-- We only knockout the filer after they've seen the deduction screens, since that's when they verify their
                final AGI -->
                    <Dependency module="flow" path="/flowHasSeenDeductions"/>
                    <Any>
                        <Dependency module="filingStatus" path="/isFilingStatusSingle"/>
                        <Dependency module="filingStatus" path="/isFilingStatusHOH"/>
                    </Any>
                    <GreaterThan>
                        <Left>
                            <Dependency path="/interestIncome"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                    <GreaterThan>
                        <Left>
                            <Dependency module="taxCalculations" path="/agi"/>
                        </Left>
                        <Right>
                            <Dependency path="/netInvestmentIncomeThresholdForSingleOrHoh"/>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/interestReports">
            <Name>Interest income</Name>
            <Description>Interest income, with or without a Form 1099-INT.</Description>

            <Writable>
                <Collection/>
            </Writable>
        </Fact>
        <Fact path="/minimumInterestIncome">
            <Name>Minimum Interest Income</Name>
            <Description>Miniumum dollar amount needed where someone will get a 1099-INT form</Description>
            <Derived>
                <Dollar>10</Dollar>
            </Derived>
        </Fact>
        <Fact path="/maximumTaxableInterestIncomeBeforeScheduleB">
            <Name>Maximum Taxable Interest Income Before Schedule B</Name>
            <Description>The maximum interest income allowed before Schedule B is required.</Description>

            <Derived>
                <Dollar>1500</Dollar>
            </Derived>
        </Fact>
        <Fact path="/interestReportsIsDone">
            <Name>interestReportsIsIsDone is Done</Name>
            <Description>The user has clicked "Done" for their interestReportsIsIsDone</Description>
            <Export downstreamFacts="true"/>
            <Writable>
                <Boolean/>
            </Writable>
            <Placeholder>
                <False/>
            </Placeholder>
        </Fact>
        <Fact path="/primaryFilerHasIncompleteInterestReports">
            <Name>At least one of Primary Filer's interest reports are incomplete</Name>
            <Description>Whether at least one of Primary Filer's interest reports are incomplete</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <All>
                                <Dependency path="/interestReports/*/belongsToPrimaryFiler"/>
                                <Not>
                                    <Dependency path="/interestReports/*/isComplete"/>
                                </Not>
                            </All>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerHasIncompleteInterestReports">
            <Name>At least one of Secondary Filer's interest reports are incomplete</Name>
            <Description>Whether at least one of Secondary Filer's interest reports are incomplete</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <All>
                                <Dependency path="/interestReports/*/belongsToSecondaryFiler"/>
                                <Not>
                                    <Dependency path="/interestReports/*/isComplete"/>
                                </Not>
                            </All>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasInterestReports">
            <Name>Has interest reports</Name>
            <Description>Whether the TP has any interest reports</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/interestReports"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/hasSeenLastAvailableScreen">
            <Name>Has seen last available screen</Name>
            <Description>The user has gone through the entire flow of interest screens</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/isComplete">
            <Name>Is complete</Name>
            <Description>Whether the interest report is complete.</Description>

            <Derived>
                <All>
                    <IsComplete>
                        <!-- Without this completeness check, `isComplete` resolves as incomplete, instead of false -->
                        <Dependency path="../hasSeenLastAvailableScreen"/>
                    </IsComplete>
                    <Dependency path="../hasSeenLastAvailableScreen"/>
                    <IsComplete>
                        <Dependency path="../taxableInterest"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../taxWithheld"/>
                    </IsComplete>
                    <Any>
                        <!-- Either withholding is 0, or we collect a payer TIN -->
                        <Equal>
                            <Left>
                                <Dependency path="../taxWithheld"/>
                            </Left>
                            <Right>
                                <Dollar>0</Dollar>
                            </Right>
                        </Equal>
                        <IsComplete>
                            <Dependency path="../payer/tin"/>
                        </IsComplete>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/has1099">
            <Name>Has 1099</Name>
            <Description>Whether there is a Form 1099-INT for this interest income.</Description>
            <Export stateSystems="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/factaFilingRequired">
            <Name>Has FACTA filing requirement box checked</Name>
            <Description>Whether there is a Form 1099-INT with the FACTA filing requirement box checked</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/hasRequiredFactaFilings">
            <Name>Has required FACTA filings</Name>
            <Description>Whether any of the 1099-INT forms have a required FACTA filing box checked</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <All>
                                <IsComplete>
                                    <Dependency path="/interestReports/*/factaFilingRequired"/>
                                </IsComplete>
                                <Dependency path="/interestReports/*/factaFilingRequired"/>
                                <!-- Ensures modifying an existing interest report doesn't cause issues -->
                                <IsComplete>
                                    <Dependency path="/interestReports/*/has1099"/>
                                </IsComplete>
                                <Dependency path="/interestReports/*/has1099"/>
                            </All>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/filer">
            <Name>Filer</Name>
            <Description>The taxpayer who received the interest income.</Description>

            <Writable>
                <CollectionItem collection="/filers"/>
            </Writable>
            <Placeholder>
                <Dependency path="/primaryFiler"/>
            </Placeholder>
        </Fact>
        <Fact path="/interestReports/*/belongsToPrimaryFiler">
            <Name>Interest report belongs to primary filer</Name>
            <Description>The interest report belongs to the primary filer</Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../filer"/>
                    </Left>
                    <Right>
                        <Dependency module="filers" path="/primaryFiler"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/belongsToSecondaryFiler">
            <Name>Interest report belongs to secondary filer</Name>
            <Description>The interest report belongs to the secondary filer</Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="../filer"/>
                    </Left>
                    <Right>
                        <Dependency module="filers" path="/secondaryFiler"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/secondaryFilerUsedWithoutMFJ">
            <Name>Secondary filer has interest reports when primary filer is not filing jointly</Name>
            <Description>Whether secondary filer has interest reports when primary filer is not filing jointly
            </Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    </Not>
                    <Dependency path="../belongsToSecondaryFiler"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/interestReports/secondaryFilerUsedWithoutMFJ">
            <Name>Secondary filer has interest reports when primary filer is not filing jointly</Name>
            <Description>Whether secondary filer has interest reports when primary filer is not filing jointly
            </Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/interestReports/*/secondaryFilerUsedWithoutMFJ"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/recipientTin">
            <Description>The recipient's TIN</Description>
            <Export stateSystems="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../belongsToPrimaryFiler"/>
                        </When>
                        <Then>
                            <Dependency module="filers" path="/primaryFiler/tin"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="../belongsToSecondaryFiler"/>
                        </When>
                        <Then>
                            <Dependency module="filers" path="/secondaryFiler/tin"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/payer">
            <Name>Payer</Name>
            <Description>The entity that paid the interest income, used on Form 1040 Schedule B, Part 1, Line 1
            </Description>
            <Export mef="true" stateSystems="true"/>

            <Writable>
                <String/>
                <Limit type="Match">
                    <String>(([A-Za-z0-9#\-\(\)]|&amp;|')\s?)*([A-Za-z0-9#\-\(\)]|&amp;|')</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>75</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/writablePayerNameLine2">
            <Name>Payer</Name>
            <Description>The entity that paid the interest income, used on Form 1040 Schedule B, Part 1, Line 2
            </Description>

            <Writable>
                <String/>
                <Limit type="Match">
                    <String>(([A-Za-z0-9#/%\-\(\)]|&amp;|')\s?)*([A-Za-z0-9#/%\-\(\)]|&amp;|')</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>75</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/payerNameLine2">
            <Name>Payer</Name>
            <Description>The entity that paid the interest income, used on Form 1040 Schedule B, Part 1, Line 2
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writablePayerNameLine2"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../writablePayerNameLine2"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <String/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/payer/tin">
            <Name>TIN</Name>
            <Description>
                The taxpayer identification number of the payer on the interest report.
            </Description>
            <Export mef="true" stateSystems="true"/>

            <Writable>
                <EIN/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/writable1099Amount">
            <Name>1099 Amount of interest income</Name>
            <Description>Box 1 on the 1099-INT.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/1099Amount">
            <Name>1099 Amount of interest income</Name>
            <Description>
                Box 1 on the 1099-INT.
            </Description>
            <Export stateSystems="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writable1099Amount"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../writable1099Amount"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/writableEarlyWithdrawlPenaltyAmount">
            <Name>1099 Early Withdrawl Penalty Amount</Name>
            <Description>Box 2 on the 1099-INT.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/earlyWithdrawlPenaltyAmount">
            <Name>1099 Early Withdrawl Penalty Amount</Name>
            <Description>
                Box 2 on the 1099-INT.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableEarlyWithdrawlPenaltyAmount"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../writableEarlyWithdrawlPenaltyAmount"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutHasEarlyWithdrawlPenalty">
            <Name>Knockout Has Early Withdrawl Penalty</Name>
            <Description>Whether user is knocked out for having a early withdrawl penalty. Happens if the user has more
                than
                $0 in early withdrawl penalty (box 2) across all their 1099-INTs.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSum>
                            <Dependency path="/interestReports/*/earlyWithdrawlPenaltyAmount"/>
                        </CollectionSum>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/writableSpecifiedPrivateActivityBondInterest">
            <Name>1099 Specified Private Activity Bond Interest</Name>
            <Description>Box 9 on the 1099-INT.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/specifiedPrivateActivityBondInterest">
            <Name>1099 Specified Private Activity Bond Interest</Name>
            <Description>
                Box 9 on the 1099-INT.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableSpecifiedPrivateActivityBondInterest"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../writableSpecifiedPrivateActivityBondInterest"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/writableMarketDiscount">
            <Name>1099 Market Discount</Name>
            <Description>Box 10 on the 1099-INT.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/marketDiscount">
            <Name>1099 Market Discount</Name>
            <Description>
                Box 10 on the 1099-INT.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableMarketDiscount"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../writableMarketDiscount"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/writableBondPremium">
            <Name>1099 Bond Premium</Name>
            <Description>Box 11 on the 1099-INT.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/bondPremium">
            <Name>1099 Bond Premium</Name>
            <Description>
                Box 11 on the 1099-INT.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableBondPremium"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../writableBondPremium"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/writableBondPremiumOnTreasuryObligations">
            <Name>1099 Bond Premium on Treasury Obligations</Name>
            <Description>Box 12 on the 1099-INT.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/bondPremiumOnTreasuryObligations">
            <Name>1099 Bond Premium on Treasury Obligations</Name>
            <Description>
                Box 12 on the 1099-INT.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableBondPremiumOnTreasuryObligations"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../writableBondPremiumOnTreasuryObligations"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/writableBondPremiumOnTaxExemptBond">
            <Name>1099 Bond Premium on Tax Exempt Bond</Name>
            <Description>Box 13 on the 1099-INT.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/bondPremiumOnTaxExemptBond">
            <Name>1099 Bond Premium on Tax Exempt Bond</Name>
            <Description>
                Box 13 on the 1099-INT.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableBondPremiumOnTaxExemptBond"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../writableBondPremiumOnTaxExemptBond"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/writableTaxExemptAndTaxCreditBondCusipNo">
            <Name>1099 Tax Exempt And Tax Credit Bond CUSIP No</Name>
            <Description>Box 14 on the 1099-INT.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <String/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/taxExemptAndTaxCreditBondCusipNo">
            <Name>1099 Tax Exempt And Tax Credit Bond CUSIP No</Name>
            <Description>
                Box 14 on the 1099-INT.
            </Description>
            <Export stateSystems="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableTaxExemptAndTaxCreditBondCusipNo"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../writableTaxExemptAndTaxCreditBondCusipNo"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <String/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutHasBonds">
            <Name>Knockout Has Bonds</Name>
            <Description>Whether user is knocked out for having a bonds. Happens if the user has more than
                $0 in bonds (boxes 9
                - 13) across all their 1099-INTs.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSum>
                            <Add>
                                <Dependency path="/interestReports/*/specifiedPrivateActivityBondInterest"/>
                                <Dependency path="/interestReports/*/marketDiscount"/>
                                <Dependency path="/interestReports/*/bondPremium"/>
                                <Dependency path="/interestReports/*/bondPremiumOnTreasuryObligations"/>
                                <Dependency path="/interestReports/*/bondPremiumOnTaxExemptBond"/>
                            </Add>
                        </CollectionSum>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/taxableInterest">
            <Name>Taxable interest</Name>
            <Description>Taxable interest, either from box 1 of the 1099-INT or interest reported without a 1099-INT
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../has1099"/>
                        </When>
                        <Then>
                            <Add>
                                <Dependency path="../interestOnGovernmentBonds"/>
                                <Dependency path="../1099Amount"/>
                            </Add>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="../no1099Amount"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/roundedTaxableInterest">
            <Description>Rounded version of taxable interest, may be reported on Form 1040 Schedule B, Part 1, Line 1
            </Description>
            <Export mef="true"/>


            <Derived>
                <Round>
                    <Dependency path="../taxableInterest"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/hasInterestIncome">
            <Name>Has interest income</Name>
            <Description>Interest income is greater than 0</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/interestIncome"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/requiresScheduleB">
            <Description>Whether TP requires schedule B</Description>
            <Export mef="true"/>
            <Derived>
                <Any>
                    <GreaterThan>
                        <Left>
                            <CollectionSum>
                                <Dependency path="/interestReports/*/taxableInterest"/>
                            </CollectionSum>
                        </Left>
                        <Right>
                            <Dependency path="/maximumTaxableInterestIncomeBeforeScheduleB"/>
                        </Right>
                    </GreaterThan>
                    <Dependency module="income" path="/hasForeignAccountsOrTrusts"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/writableInterestOnGovernmentBonds">
            <Name>Interest on government bonds</Name>
            <Description>Box 3 on the 1099-INT. This is the writable optional fact. Can be left incomplete. Please use
                the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/interestOnGovernmentBonds">
            <Name>Interest on government bonds</Name>
            <Description>Box 3 on the 1099-INT.</Description>
            <Export stateSystems="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../writableInterestOnGovernmentBonds"/>
                                </IsComplete>
                                <Dependency path="../has1099"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writableInterestOnGovernmentBonds"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/writableTaxWithheld">
            <Name>(Writable) Federal income tax withheld</Name>
            <Description>Box 4 on the 1099-INT.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/taxWithheld">
            <Name>Federal income tax withheld</Name>
            <Description>Comes from box 4 on a 1099-INT. Set to 0 if there is no 1099-INT. We may be able to replace
                this with
                a default value in the future. Entities that pay interest are required to provide a 1099-INT to anyone
                from whom
                they withheld interest (https://www.irs.gov/instructions/i1099int#en_US_202201_publink1000275706)
            </Description>
            <Export downstreamFacts="true" mef="true" stateSystems="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <Dependency path="../has1099"/>
                            </When>
                            <Then>
                                <Switch>
                                    <Case>
                                        <When>
                                            <All>
                                                <IsComplete>
                                                    <Dependency path="../writableTaxWithheld"/>
                                                </IsComplete>
                                                <Dependency path="../has1099"/>
                                            </All>
                                        </When>
                                        <Then>
                                            <Dependency path="../writableTaxWithheld"/>
                                        </Then>
                                    </Case>
                                    <Case>
                                        <When>
                                            <True/>
                                        </When>
                                        <Then>
                                            <Dollar>0</Dollar>
                                        </Then>
                                    </Case>
                                </Switch>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/hasFederalWithholding">
            <Description>Controls whether to ask the filer for the payer's TIN if they have a value inside of Box 4 -
                Federal
                income tax withheld.
            </Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSum>
                            <Dependency path="../taxWithheld"/>
                        </CollectionSum>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/writableForeignTaxPaid">
            <Name>(Writable) Foreign tax paid</Name>
            <Description>Box 6 on the 1099-INT.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/foreignTaxPaid">
            <Name>Foreign tax paid</Name>
            <Description>Comes from box 6 on a 1099-INT. Set to 0 if there is no 1099-INT. We may be able to replace
                this with
                a default value in the future. Entities that pay interest are required to provide a 1099-INT to anyone
                from whom
                they withheld interest (https://www.irs.gov/instructions/i1099int#en_US_202201_publink1000275706)
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../has1099"/>
                        </When>
                        <Then>
                            <Switch>
                                <Case>
                                    <When>
                                        <IsComplete>
                                            <Dependency path="../writableForeignTaxPaid"/>
                                        </IsComplete>
                                    </When>
                                    <Then>
                                        <Dependency path="../writableForeignTaxPaid"/>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <True/>
                                    </When>
                                    <Then>
                                        <Dollar>0</Dollar>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutHasForeignTaxPaid">
            <Name>Flow Has Foreign Tax Paid</Name>
            <Description>Knocks out the filer if they have value in Box 6 - Foreign Tax Paid.</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <NotEqual>
                                <Left>
                                    <Dependency path="/interestReports/*/foreignTaxPaid"/>
                                </Left>
                                <Right>
                                    <Dollar>0</Dollar>
                                </Right>
                            </NotEqual>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/writableTaxExemptInterest">
            <Name>Tax-exempt interest</Name>
            <Description>Box 8 on the 1099-INT.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/taxExemptInterest">
            <Name>Tax-exempt interest</Name>
            <Description>Comes from box 8 on a 1099-INT. Set to 0 if there is no 1099 int. We may be able to replace
                this with
                a default value in the future.
            </Description>
            <Export stateSystems="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../has1099"/>
                        </When>
                        <Then>
                            <Switch>
                                <Case>
                                    <When>
                                        <IsComplete>
                                            <Dependency path="../writableTaxExemptInterest"/>
                                        </IsComplete>
                                    </When>
                                    <Then>
                                        <Dependency path="../writableTaxExemptInterest"/>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <True/>
                                    </When>
                                    <Then>
                                        <Dollar>0</Dollar>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutTaxExemptInterest">
            <Description>Knocks out the filer if they have value in Box 8 - Tax Exempt Interest.</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <NotEqual>
                                <Left>
                                    <Dependency path="/interestReports/*/taxExemptInterest"/>
                                </Left>
                                <Right>
                                    <Dollar>0</Dollar>
                                </Right>
                            </NotEqual>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/writableState">
            <Name>State</Name>
            <Description>Box 15 on the 1099-INT.</Description>

            <Writable>
                <Enum optionsPath="/incomeFormStateOptions"/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/state">
            <Name>State</Name>
            <Description>Alias for writableState to avoid breaking our backend with our convention for optional
                fields.
            </Description>

            <Derived>
                <Dependency path="../writableState"/>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutStateTaxWithheld">
            <Name>Flow Knockout State Tax Withheld</Name>
            <Description>Used when the amount entered in box 17 of 1099-INT is greater than zero</Description>
            <BlockSubmissionOnTrue/>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/interestReports/*/hasStateTaxWithheld"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/hasStateTaxWithheld">
            <Description>If the user has entered a value of more than zero in box 17 of 1099-INT</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../stateTaxWithheld"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutWithholdingUnsupportedState">
            <Name>Flow Knockout Withholding Unsupported State</Name>
            <Description>Used to control a knockout for if the filer received withholding of state taxes from a
                different
                state for any of their 1099Gs.
            </Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/interestReports/*/hasKnockoutWithholdingInDifferentState"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/hasKnockoutWithholdingInDifferentState">
            <Name>Has Knockout Withholding In Different State</Name>
            <Description>Checks to see if the withholding of state taxes is from a different state.</Description>

            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="../state"/>
                    </IsComplete>
                    <Equal>
                        <Left>
                            <Dependency path="../state"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/incomeFormStateOptions">differentState</Enum>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/interestReports/*/writableStateIdNumber">
            <Name>State identification number</Name>
            <Description>Box 16 on the 1099-INT.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <String/>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/stateIdNumber">
            <Name>State identification number</Name>
            <Description>Box 16 on the 1099-INT.</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableStateIdNumber"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../writableStateIdNumber"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <String/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>

        </Fact>
        <Fact path="/interestReports/*/writableStateTaxWithheld">
            <Name>State tax withheld</Name>
            <Description>Box 17 on the 1099-INT.

                This is the writable optional fact. Can be left incomplete. Please use the
                derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/interestReports/*/stateTaxWithheld">
            <Name>State tax withheld</Name>
            <Description>Box 17 on the 1099-INT.</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableStateTaxWithheld"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../writableStateTaxWithheld"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>

        </Fact>
        <Fact path="/interestReports/*/no1099Amount">
            <Name>Taxable interest</Name>
            <Description>Amount of taxable interest (no Form 1099-INT present).</Description>
            <Export stateSystems="true"/>

            <Writable>
                <Dollar/>
            </Writable>
            <Placeholder>
                <Dollar>0</Dollar>
            </Placeholder>
        </Fact>
        <Fact path="/primaryFilerInterestReports">
            <Description>Interest reports belonging to the primary filer</Description>

            <Derived>
                <Filter path="/interestReports">
                    <Dependency path="belongsToPrimaryFiler"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerInterestReportsWith1099Amount">
            <Description>Interest reports belonging to the primary filer that have a 1099Amount</Description>

            <Derived>
                <Filter path="/primaryFilerInterestReports">
                    <IsComplete>
                        <Dependency path="1099Amount"/>
                    </IsComplete>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerInterestReportsWithNo1099Amount">
            <Description>Interest reports belonging to the primary filer that have a no1099Amount</Description>

            <Derived>
                <Filter path="/primaryFilerInterestReports">
                    <IsComplete>
                        <Dependency path="no1099Amount"/>
                    </IsComplete>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerInterestTotal">
            <Description>Total interest amount of the interest reports belonging to the primary filer</Description>

            <Derived>
                <Add>
                    <CollectionSum>
                        <Dependency path="/primaryFilerInterestReportsWithNo1099Amount/*/no1099Amount"/>
                    </CollectionSum>
                    <CollectionSum>
                        <Dependency path="/primaryFilerInterestReportsWith1099Amount/*/1099Amount"/>
                    </CollectionSum>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerInterestReports">
            <Description>Interest reports belonging to the secondary filer</Description>

            <Derived>
                <Filter path="/interestReports">
                    <Dependency path="belongsToSecondaryFiler"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerInterestReportsWith1099Amount">
            <Description>Interest reports belonging to the secondary filer that have a 1099Amount</Description>

            <Derived>
                <Filter path="/secondaryFilerInterestReports">
                    <IsComplete>
                        <Dependency path="1099Amount"/>
                    </IsComplete>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerInterestReportsWithNo1099Amount">
            <Description>Interest reports belonging to the secondary filer that have a no1099Amount</Description>

            <Derived>
                <Filter path="/secondaryFilerInterestReports">
                    <IsComplete>
                        <Dependency path="no1099Amount"/>
                    </IsComplete>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerInterestTotal">
            <Description>Total interest amount of the interest reports belonging to the secondary filer</Description>

            <Derived>
                <Add>
                    <CollectionSum>
                        <Dependency path="/secondaryFilerInterestReportsWithNo1099Amount/*/no1099Amount"/>
                    </CollectionSum>
                    <CollectionSum>
                        <Dependency path="/secondaryFilerInterestReportsWith1099Amount/*/1099Amount"/>
                    </CollectionSum>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/filers/*/interestReportsTotal">
            <Name>total interests</Name>
            <Description>Total interests reported and not reported on Form 1099.</Description>
            <Export stateSystems="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filers" path="../isPrimaryFiler"/>
                        </When>
                        <Then>
                            <Dependency path="/primaryFilerInterestTotal"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filers" path="../isSecondaryFiler"/>
                        </When>
                        <Then>
                            <Dependency path="/secondaryFilerInterestTotal"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowInterestKnockout">
            <Description>The user has been knocked out for reasons(s) defined in this module</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Any>
                    <Dependency path="/interestReports/hasRequiredFactaFilings"/>
                    <Dependency path="/flowKnockoutHasEarlyWithdrawlPenalty"/>
                    <Dependency path="/flowKnockoutHasBonds"/>
                    <Dependency path="/flowKnockoutHasForeignTaxPaid"/>
                    <Dependency path="/flowKnockoutWithholdingUnsupportedState"/>
                    <Dependency path="/flowKnockoutStateTaxWithheld"/>
                    <Dependency path="/hasInterestIncomeAndAgiAboveThresholdForMfs"/>
                    <Dependency path="/hasInterestIncomeAndAgiAboveThresholdForMfjOrQss"/>
                    <Dependency path="/hasInterestIncomeAndAgiAboveThresholdForSingleOrHoh"/>
                    <Dependency path="/flowKnockoutTaxExemptInterest"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/defaultTaxDay">
            <Name>Tax Day</Name>
            <Description>The due date for refunds and payments in the tax year for any state that doesn't have an
                exception
                due to holiday or disaster.
            </Description>
            <Export downstreamFacts="true"/>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Day>2025-04-15</Day>
            </Derived>
        </Fact>
        <Fact path="/resubmissionDeadline">
            <Description>The last day that DF will accept resubmissions</Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Day>2025-04-20</Day>
            </Derived>
        </Fact>
        <Fact path="/massachusettsAndMaineDeadline">
            <Description>Deadline for filing taxes in MA or ME, sometimes varies due to state holiday</Description>
            <Export downstreamFacts="true"/>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Day>2025-04-15</Day>
            </Derived>
        </Fact>
        <Fact path="/taxYear">
            <Name>Tax year</Name>
            <Description>The tax year of the return.</Description>
            <Export downstreamFacts="true" mef="true"/>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Int>2024</Int>
            </Derived>
        </Fact>
        <Fact path="/isTaxYearLeapYear">
            <Description>Whether the tax year is a leap year</Description>
            <Derived>
                <Switch>
                    <!-- TODO: replace this with the calc to determine leap year (e.g. divisible by 4, but not 100 unless also divisible by 400) -->
                    <Case>
                        <When>
                            <Any>
                                <Equal>
                                    <Left>
                                        <Dependency path="/taxYear"/>
                                    </Left>
                                    <Right>
                                        <Int>2024</Int>
                                    </Right>
                                </Equal>
                                <Equal>
                                    <Left>
                                        <Dependency path="/taxYear"/>
                                    </Left>
                                    <Right>
                                        <Int>2028</Int>
                                    </Right>
                                </Equal>
                            </Any>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/lastTaxYear">
            <Name>Last tax year</Name>
            <Description>The previous tax year.</Description>

            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency path="/taxYear"/>
                    </Minuend>
                    <Subtrahends>
                        <Int>1</Int>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/taxYearMinusTwo">
            <Name>The tax year minus two</Name>
            <Description>The tax year before last.</Description>

            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency path="/taxYear"/>
                    </Minuend>
                    <Subtrahends>
                        <Int>2</Int>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/taxYearMinusThree">
            <Name>The tax year minus three</Name>
            <Description>Three tax years ago.</Description>

            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency path="/taxYear"/>
                    </Minuend>
                    <Subtrahends>
                        <Int>3</Int>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/taxYearPlusTwo">
            <Name>The tax year after next</Name>
            <Description>The tax year after next. Used for third-party designee authority duration.</Description>

            <Derived>
                <Add>
                    <Dependency path="/taxYear"/>
                    <Int>2</Int>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/nextTaxYear">
            <Name>Next tax year</Name>
            <Description>The next tax year.</Description>
            <Derived>
                <Add>
                    <Dependency path="/taxYear"/>
                    <Int>1</Int>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/majorityOfDaysInYear">
            <Name>Majority of days in year</Name>
            <Description>More than 6 months. This should be changed to 184 in a leap year</Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/isTaxYearLeapYear"/>
                        </When>
                        <Then>
                            <Int>184</Int>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Int>183</Int>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/minorityOfDaysInYear">
            <Description>Less than 6 months. This may need to manually change in a leap year.</Description>
            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency path="/majorityOfDaysInYear"/>
                    </Minuend>
                    <Subtrahends>
                        <Int>1</Int>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/saversCreditOctDateForSameYearContribution">
            <Name>Saver's Credit October Date</Name>
            <Description>The day in October after which a distribution no longer affects the Saver's Credit.
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Int>16</Int>
            </Derived>
        </Fact>
        <Fact path="/irsPhoneNumber">
            <Name>IRS Phone Number</Name>
            <Description>The phone number we tell filers to call in help text</Description>
            <Derived>
                <String>800-829-1040</String>
            </Derived>
        </Fact>
        <Fact path="/monthOptions">
            <Name>Month Options</Name>
            <Description>Options for months</Description>
            <Derived>
                <EnumOptions>
                    <String>jan</String>
                    <String>feb</String>
                    <String>mar</String>
                    <String>apr</String>
                    <String>may</String>
                    <String>jun</String>
                    <String>jul</String>
                    <String>aug</String>
                    <String>sep</String>
                    <String>oct</String>
                    <String>nov</String>
                    <String>dec</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/suffixOptions">
            <Description>Options for name suffixes</Description>
            <Derived>
                <EnumOptions>
                    <String>Sr</String>
                    <String>Jr</String>
                    <String>I</String>
                    <String>II</String>
                    <String>III</String>
                    <String>IV</String>
                    <String>V</String>
                    <String>VI</String>
                    <String>VII</String>
                    <String>VIII</String>
                    <String>IX</String>
                    <String>X</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/incomeFormStateOptions">
            <Name>The state in which a person received income</Name>
            <Description>The list of states that will appear on a "State tax" box on your W2 or 1099</Description>
            <Derived>
                <EnumOptions>
                    <String>sameState</String>
                    <String>differentState</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/statesAndDistrictsOptions">
            <Description>List of all 50 states and DC</Description>
            <Derived>
                <EnumOptions>
                    <String>al</String>
                    <String>ak</String>
                    <String>az</String>
                    <String>ar</String>
                    <String>ca</String>
                    <String>co</String>
                    <String>ct</String>
                    <String>de</String>
                    <String>dc</String>
                    <String>fl</String>
                    <String>ga</String>
                    <String>hi</String>
                    <String>id</String>
                    <String>il</String>
                    <String>in</String>
                    <String>ia</String>
                    <String>ks</String>
                    <String>ky</String>
                    <String>la</String>
                    <String>me</String>
                    <String>md</String>
                    <String>ma</String>
                    <String>mi</String>
                    <String>mn</String>
                    <String>ms</String>
                    <String>mo</String>
                    <String>mt</String>
                    <String>ne</String>
                    <String>nv</String>
                    <String>nh</String>
                    <String>nj</String>
                    <String>nm</String>
                    <String>ny</String>
                    <String>nc</String>
                    <String>nd</String>
                    <String>oh</String>
                    <String>ok</String>
                    <String>or</String>
                    <String>pa</String>
                    <String>ri</String>
                    <String>sc</String>
                    <String>sd</String>
                    <String>tn</String>
                    <String>tx</String>
                    <String>ut</String>
                    <String>vt</String>
                    <String>va</String>
                    <String>wa</String>
                    <String>wv</String>
                    <String>wi</String>
                    <String>wy</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/scopedStateOptions">
            <Name>The options for deciding whether a filer is in an in-scope state</Name>
            <Description>These options include both the actual in-scope states and the knockout options</Description>
            <Derived>
                <EnumOptions>
                    <String>moreThanOne</String>
                    <String>ak</String>
                    <String>az</String>
                    <String>ca</String>
                    <String>ct</String>
                    <String>fl</String>
                    <String>id</String>
                    <String>il</String>
                    <String>ks</String>
                    <!-- <String>la</String> Update /livesInCommunityPropertyState when adding Lousiana-->
                    <String>me</String>
                    <String>md</String>
                    <String>ma</String>
                    <String>nv</String>
                    <String>nh</String>
                    <String>nj</String>
                    <String>nm</String>
                    <String>ny</String>
                    <String>nc</String>
                    <String>or</String>
                    <String>pa</String>
                    <String>sd</String>
                    <String>tn</String>
                    <String>tx</String>
                    <String>wa</String>
                    <String>wi</String>
                    <String>wy</String>
                    <String>noneOfThese</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/hasStateFilingIntegration">
            <Name>The list of states that Direct File links out to</Name>
            <Description>
                These options are used in the sign and submit section to link to state tools.

                Note: This should be
                obtained from the state api, not the fact graph.
                Wherever possible, do not use this fact. Instead, request the
                state profile from the state-api.
                If a state profile is returned, Direct File "hasStateFilingIntegration" with
                the state.
            </Description>
            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">az</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">ca</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">ct</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">id</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">il</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">ks</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">me</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">ma</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">md</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">nc</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">nj</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">nm</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">ny</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">or</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">pa</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">wa</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">wi</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/stateCanTransferData">
            <Name>The list of states with "full integration" with Direct File that can transfer data</Name>
            <Description>
                These options are used in the sign and submit section to link to state tools.

                Note: This should be
                obtained from the state api, not the fact graph.
                Wherever possible, do not use this fact. Instead, request the
                state profile from the state-api.
                If a state profile is returned, and has a redirectUrl configured, then
                "stateCanTransferData".
            </Description>
            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">az</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">id</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">il</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">ma</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">md</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">nc</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">nj</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">nm</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">ny</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">or</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">pa</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">wi</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/scopedStateDoesNotHavePersonalIncomeTax">
            <Name>Whether or not the in scope state has personal income tax.</Name>
            <Description>These options are used in the sign and submit section and dashboard to determine what
                information to
                display about potential state taxes filing needs.
            </Description>
            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">wa</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/hasNoStateIncomeTax">
            <Name>State has an individual income tax</Name>
            <Description>
                Whether the taxayer lives in a state without an individual income tax; used for purposes of
                validating
                boxes 15-20 of Form W-2.
            </Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">ak</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">fl</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">nh</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">nv</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">sd</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">tn</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">tx</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">wa</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">wy</Enum>
                        </Left>
                        <Right>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerSsnEmploymentValidityOptions">
            <Name>SSN Employment Validity Options</Name>
            <Description>Options for SSN Employment validity</Description>
            <Derived>
                <EnumOptions>
                    <String>neither</String>
                    <String>notValid</String>
                    <String>validOnlyWithDhsAuthorization</String>
                    <String>validOnlyWithDhsAuthorizationExpired</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/ssnEmploymentValidityOptions">
            <Name>SSN Employment Validity Options</Name>
            <Description>Options for SSN Employment validity</Description>
            <Derived>
                <EnumOptions>
                    <String>neither</String>
                    <String>notValid</String>
                    <String>validOnlyWithDhsAuthorization</String>
                    <String>validOnlyWithDhsAuthorizationExpired</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/yesNoUnknownOptions">
            <Name>Yes/No/Unknown Options</Name>
            <Description>Options for yes/no/unknown enum</Description>
            <Derived>
                <EnumOptions>
                    <String>yes</String>
                    <String>no</String>
                    <String>unknown</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/moreLessEqualOptions">
            <Name>More/Less/Equal Options</Name>
            <Description>Options for More/Less/Equal enum</Description>
            <Derived>
                <EnumOptions>
                    <String>more</String>
                    <String>less</String>
                    <String>equal</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/tinTypeOptions">
            <Name>TIN type Options</Name>
            <Description>Options for TIN type</Description>
            <Derived>
                <EnumOptions>
                    <String>ssn</String>
                    <String>itin</String>
                    <String>atin</String>
                    <String>none</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/tinTypeOptionsLong">
            <Name>TIN type Options</Name>
            <Description>Options for TIN type</Description>
            <Derived>
                <EnumOptions>
                    <String>ssn</String>
                    <String>itin</String>
                    <String>atin</String>
                    <String>none</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/copyOptions">
            <Description>A hacky enum used to get copy to the client that can later be translated, since raw strings
                from the
                fact graph cannot
            </Description>
            <Derived>
                <EnumOptions>
                    <String>i</String>
                    <String>we</String>
                    <String>otherThanYourSpouse</String>
                    <String>doNotIncludeYourSpouse</String>
                    <String>emptyString</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/signaturePinEnteredByCode">
            <Name>Signature Pin Entered by Code</Name>
            <Description>The code representing how the taxpayer's signature pin was entered. Used to populate return
                header
                fields in the 1040 XML.
            </Description>
            <Export mef="true"/>

            <Derived>
                <String>Taxpayer</String>
            </Derived>
        </Fact>
        <Fact path="/combatPayOptions">
            <Name>Combat Pay Options</Name>
            <Description>Options for combat pay</Description>
            <Derived>
                <EnumOptions>
                    <EnumOption>
                        <Condition>
                            <Dependency module="formW2s" path="/onlyMFJSpouseHasCombatPay"/>
                        </Condition>
                        <Value>
                            <String>useSpouseCombatPay</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Dependency module="formW2s" path="/onlyPrimaryFilerHasCombatPay"/>
                        </Condition>
                        <Value>
                            <String>usePrimaryCombatPay</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Dependency module="formW2s" path="/bothFilersHasCombatPay"/>
                        </Condition>
                        <Value>
                            <String>useBothCombatPay</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Dependency module="formW2s" path="/bothFilersHasCombatPay"/>
                        </Condition>
                        <Value>
                            <String>usePrimaryNotSpouseCombatPay</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Dependency module="formW2s" path="/bothFilersHasCombatPay"/>
                        </Condition>
                        <Value>
                            <String>useSpouseNotPrimaryCombatPay</String>
                        </Value>
                    </EnumOption>
                    <String>noCombatPay</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/apfForm1099MiscPayer">
            <Description>The name of the payer on the 1099-Misc form for the Alaska Permanent Fund Dividend.
            </Description>
            <Derived>
                <String>State of Alaska</String>
            </Derived>
        </Fact>
        <Fact path="/apfForm1099MiscPayerEin">
            <Description>The EIN of the payer on the 1099-Misc form for the Alaska Permanent Fund Dividend.
            </Description>
            <Derived>
                <!--      The alaskaPFD (https://pfd.alaska.gov/payments/tax-information) Federal Tax Identification number is 92-6001185-->
                <EIN>926001185</EIN>
            </Derived>
        </Fact>
        <Fact path="/totalDistributionTaxableStartYear">
            <Name>Total Distribution taxable</Name>
            <Description>The date before which a TP cannot claim a total distribution on 1099-R in current scope.
            </Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Day>1936-01-02</Day>
            </Derived>
        </Fact>
        <Fact path="/form1099RsDistributionCodeValidChars">
            <Description>Characters that appear in DF-supported distribution codes.</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <String>247BGH</String>
            </Derived>
        </Fact>
        <Fact path="/hsaExcessContributionsPenalty">
            <Description>Penalty for excess HSA contributions.</Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <String>6%</String>
            </Derived>
        </Fact>
        <Fact path="/hsaSelfOnlyCoverageLimit">
            <Description>Self-only coverage limit for HSA contributions. Changes
                each year, amount can be found in Form 8889
                and instructions.
                Rev Proc .01 HSA Inflation Adjusted Items §223(b)(2)(A)
            </Description>
            <Export downstreamFacts="true"/>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>4150</Dollar>
            </Derived>
        </Fact>
        <Fact path="/hsaFamilyCoverageLimit">
            <Description>Family coverage limit for HSA contributions. Changes
                each year, amount can be found in Form 8889 and
                instructions.
                Rev Proc .01 HSA Inflation Adjusted Items §223(b)(2)(B)
            </Description>
            <Export downstreamFacts="true"/>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>8300</Dollar>
            </Derived>
        </Fact>
        <Fact path="/hsaOver55AdditionalCoverageLimit">
            <Description>Additional coverage limit for HSA contributions when TP is over 55. See instructions for form
                8889
                for details.
            </Description>
            <Export downstreamFacts="true"/>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>1000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/alaskaPfdAmount">
            <Description>Total value of the Alaska Permanent Fund</Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Add>
                    <Dependency path="/alaskaPfdAmountDividendPortion"/>
                    <Dependency path="/alaskaPfdAmountEnergyReliefPaymentPortion"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/alaskaPfdAmountDividendPortion">
            <Description>Portion of the Alaska Permanent Fund that was the normal dividend distribution</Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>1403.83</Dollar>
            </Derived>
        </Fact>
        <Fact path="/alaskaPfdAmountEnergyReliefPaymentPortion">
            <Description>Portion of the Alaska Permanent Fund that was a one-time engergy relief payment</Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>298.17</Dollar>
            </Derived>
        </Fact>
        <Fact path="/hdhpMinAnnualDeductibleSelf">
            <Description>High Deductible Health Plan (HDHP) minimum annual deductible for self-only coverage (source
                https://www.irs.gov/pub/irs-drop/rp-23-23.pdf)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>1600</Dollar>
            </Derived>
        </Fact>
        <Fact path="/hdhpMinAnnualDeductibleFamily">
            <Description>High Deductible Health Plan (HDHP) minimum annual deductible for family coverage (source
                https://www.irs.gov/pub/irs-drop/rp-23-23.pdf)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>3200</Dollar>
            </Derived>
        </Fact>
        <Fact path="/hdhpMaxOOPExpensesSelf">
            <Description>High Deductible Health Plan (HDHP) maximum out-of-pocket expenses for self-only coverage
                (source
                https://www.irs.gov/pub/irs-drop/rp-23-23.pdf)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>8050</Dollar>
            </Derived>
        </Fact>
        <Fact path="/hdhpMaxOOPExpensesFamily">
            <Description>High Deductible Health Plan (HDHP) maximum out-of-pocket expenses for family coverage (source
                https://www.irs.gov/pub/irs-drop/rp-23-23.pdf)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>16100</Dollar>
            </Derived>
        </Fact>
        <Fact path="/hsaForm5498DueDate">
            <Description>The last day that form 5498s can be sent to the TP</Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Day>2025-06-02</Day>
            </Derived>
        </Fact>
        <Fact path="/paidEstimatedTaxesWithFormerSpouseOptions">
            <Name>Paid estimated taxes with former spouse options</Name>
            <Description>Options for which TP paid estimated taxes with a former spouse</Description>
            <Derived>
                <EnumOptions>
                    <EnumOption>
                        <Condition>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </Condition>
                        <Value>
                            <String>spouseDid</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </Condition>
                        <Value>
                            <String>bothDid</String>
                        </Value>
                    </EnumOption>
                    <String>tpDid</String>
                    <String>neither</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/paidEstimatedTaxesOrFromLastYear">
            <Name>Paid estimated taxes or from last year</Name>
            <Description>Whether the TP paid estimated taxes last year, or chose to apply their previous year's refund
                to this
                year's taxes
            </Description>
            <Export downstreamFacts="true"/>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/paidEstimatedTaxesOrFromLastYearUnderDifferentName">
            <Name>Paid estimated taxes or from last year under different name</Name>
            <Description>Whether the TP or their spouse paid estimated taxes under a different legal name</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/knockoutPaidEstimatedTaxesUnderDifferentLastName">
            <Name>Flow is knocked out</Name>
            <Description>Knockout paid estimated taxes under a different legal name.</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="/paidEstimatedTaxesOrFromLastYear"/>
                    </IsComplete>
                    <Dependency path="/paidEstimatedTaxesOrFromLastYear"/>
                    <Dependency path="/paidEstimatedTaxesOrFromLastYearUnderDifferentName"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/paidEstimatedTaxesWithFormerSpouse">
            <Name>Paid estimated taxes with former spouse</Name>
            <Description>Whether the TP or their spouse paid estimated taxes with a former spouse</Description>
            <Writable>
                <Enum optionsPath="/paidEstimatedTaxesWithFormerSpouseOptions"/>
            </Writable>
        </Fact>
        <Fact path="/spousePaidEstimatedTaxesWithFormerSpouse">
            <Name>Spouse paid estimated taxes with former spouse</Name>
            <Description>Whether the spouse paid estimated taxes with a former spouse</Description>
            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Dependency path="/paidEstimatedTaxesWithFormerSpouse"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/paidEstimatedTaxesWithFormerSpouseOptions">bothDid</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="/paidEstimatedTaxesWithFormerSpouse"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/paidEstimatedTaxesWithFormerSpouseOptions">spouseDid</Enum>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/tpPaidEstimatedTaxesWithFormerSpouse">
            <Name>TP paid estimated taxes with former spouse</Name>
            <Description>Whether the TP paid estimated taxes with a former spouse</Description>
            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Dependency path="/paidEstimatedTaxesWithFormerSpouse"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/paidEstimatedTaxesWithFormerSpouseOptions">bothDid</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="/paidEstimatedTaxesWithFormerSpouse"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/paidEstimatedTaxesWithFormerSpouseOptions">tpDid</Enum>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/someTPPaidEstimatedTaxesWithFormerSpouse">
            <Name>Some TP Paid estimated taxes with former spouse</Name>
            <Description>Either the primary or secondary filer paid taxes with a former spouse</Description>
            <Derived>
                <Any>
                    <Dependency path="/spousePaidEstimatedTaxesWithFormerSpouse"/>
                    <Dependency path="/tpPaidEstimatedTaxesWithFormerSpouse"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerDivorcedSpouseTaxID">
            <Name>Primary Filer Divorced Spouse Tax ID</Name>
            <Description>The Tax ID of a former spouse with whom the primary filer has already paid estimated taxes.
            </Description>
            <Writable>
                <TIN/>
            </Writable>
        </Fact>
        <Fact path="/secondaryFilerDivorcedSpouseTaxID">
            <Name>Secondary Filer Divorced Spouse Tax ID</Name>
            <Description>The Tax ID of a former spouse with whom the secondary filer has already paid estimated taxes.
            </Description>
            <Writable>
                <TIN/>
            </Writable>
        </Fact>
        <Fact path="/estimatedTaxPaymentWritable">
            <Name>Estimated Tax Payment Writable</Name>
            <Description>The amount that the TP paid previously in estimated taxes</Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/estimatedTaxesIsComplete">
            <Description>Has the Filer answered all the necessary questions in estimated taxes?</Description>
            <Export downstreamFacts="true"/>
            <Derived>

                <Any>
                    <!-- They didn't pay estimated taxes last year -->
                    <All>
                        <IsComplete>
                            <Dependency path="/paidEstimatedTaxesOrFromLastYear"/>
                        </IsComplete>
                        <Not>
                            <Dependency path="/paidEstimatedTaxesOrFromLastYear"/>
                        </Not>
                    </All>

                    <!-- They DID pay estimated taxes last year -->
                    <All>
                        <IsComplete>
                            <Dependency path="/paidEstimatedTaxesOrFromLastYear"/>
                        </IsComplete>
                        <Dependency path="/paidEstimatedTaxesOrFromLastYear"/>

                        <IsComplete>
                            <Dependency path="/paidEstimatedTaxesOrFromLastYearUnderDifferentName"/>
                        </IsComplete>

                        <!-- Did we get all the info we need if they paid with a former spouse? -->
                        <IsComplete>
                            <Dependency path="/paidEstimatedTaxesWithFormerSpouse"/>
                        </IsComplete>
                        <Any>
                            <Not>
                                <Dependency path="/tpPaidEstimatedTaxesWithFormerSpouse"/>
                            </Not>
                            <All>
                                <Dependency path="/tpPaidEstimatedTaxesWithFormerSpouse"/>
                                <IsComplete>
                                    <Dependency path="/primaryFilerDivorcedSpouseTaxID"/>
                                </IsComplete>
                            </All>
                        </Any>

                        <!-- Did we get all the info about whether the spouse paid with a former spouse? -->
                        <Any>
                            <Not>
                                <Dependency path="/spousePaidEstimatedTaxesWithFormerSpouse"/>
                            </Not>
                            <All>
                                <Dependency path="/spousePaidEstimatedTaxesWithFormerSpouse"/>
                                <IsComplete>
                                    <Dependency path="/secondaryFilerDivorcedSpouseTaxID"/>
                                </IsComplete>
                            </All>
                        </Any>

                        <!-- And do we finally know how much was paid? -->
                        <IsComplete>
                            <Dependency path="/estimatedTaxPaymentWritable"/>
                        </IsComplete>
                    </All>
                </Any>

            </Derived>
        </Fact>
        <Fact path="/estimatedAndFromLastYear">
            <Name>Estimated And From Last Year</Name>
            <Description>2023 estimated tax payments and amount applied from 2022 return (line 26 1040)</Description>
            <Export downstreamFacts="true" mef="true"/>
            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <All>
                                    <IsComplete>
                                        <Dependency path="/paidEstimatedTaxesOrFromLastYear"/>
                                    </IsComplete>
                                    <!-- We only fill out estimated taxes paid if the user indicates that they paid them -->
                                    <Dependency path="/paidEstimatedTaxesOrFromLastYear"/>
                                </All>
                            </When>
                            <Then>
                                <Dependency path="/estimatedTaxPaymentWritable"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/additionalStandardDeductionItems">
            <Name>Additional standard deduction items</Name>
            <Description>The count of the number of blindness or old age items among the filers.</Description>
            <Export mef="true"/>

            <Derived>
                <Add>
                    <Count>
                        <Dependency module="filers" path="/primaryFiler/isBlind"/>
                    </Count>
                    <Count>
                        <Dependency module="filers" path="/primaryFiler/age65OrOlder"/>
                    </Count>
                    <Dependency path="/secondaryFilerAdditionalStandardDeductionItems"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/filerMFSAndSpouseIsEligibleForStandardDeductions">
            <Name>Filer is MFS and the spouse is eligible for standard deduction</Name>
            <Description>When the Filer is MFS and the spouse info is relevant to standard deductions</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/treatAsMFS"/>
                    <Not>
                        <Dependency module="filers" path="/MFSSpouseProvidesNoBenefits"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isSpouseInfoApplicableForStandardDeductions">
            <Name>Spouse eligible for additional standard deduction items</Name>
            <Description>Whether or not the spouse's information is applicable to the standard deduction calculations
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Dependency path="/filerMFSAndSpouseIsEligibleForStandardDeductions"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerAdditionalStandardDeductionItems">
            <Name>Secondary Filer Additional Standard Deduction Items</Name>
            <Description>Additional Standard Deduction Items from the secondary filer</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/isSpouseInfoApplicableForStandardDeductions"/>
                        </When>
                        <Then>
                            <Add>
                                <Count>
                                    <Dependency module="filers" path="/secondaryFiler/isBlind"/>
                                </Count>
                                <Count>
                                    <Dependency path="/secondaryFilerIs65OrOlderForDeduction"/>
                                </Count>
                            </Add>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Int>0</Int>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerIs65OrOlderForDeduction">
            <Name>Secondary Filer is 65 or Older for Deduction</Name>
            <Description>Whether the secondary filer counts as 65 or older for the standard deduction. Takes into
                account
                possible death during the tax year
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                                <Dependency module="filers" path="/isWidowedInTaxYear"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency module="filers" path="/MFJDeceasedSpouseReachedAge65ForStandardD"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                        </When>
                        <Then>
                            <Dependency module="filers" path="/MFSSpouse65OrOlder"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <All>
                                <Not>
                                    <Dependency module="filingStatus" path="/isFilingStatusHOH"/>
                                </Not>
                                <Dependency module="filers" path="/secondaryFiler/age65OrOlder"/>
                            </All>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/isSpouse65OrOlder">
            <Name>Is spouse 65 or older?</Name>
            <Description>Whether the primary filer's spouse is 65 or older. Used in form 1040 to populate the
                Spouse65OrOlderInd XML element.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="/secondaryFilerIs65OrOlderForDeduction"/>
                                </IsComplete>
                                <Dependency path="/isSpouseInfoApplicableForStandardDeductions"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/secondaryFilerIs65OrOlderForDeduction"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/additionalStandardDeductionMultiplier">
            <Name>Additional standard deduction multiplier</Name>
            <Description>The amount to add to the standard deduction for each additional item.
                Rev Proc .15 Standard Deduction
                §63(f)

                TODO: Replace Any/Equal with
                Include
            </Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Any>
                                <Dependency module="filingStatus" path="/isFilingStatusHOH"/>
                                <Dependency module="filingStatus" path="/isFilingStatusSingle"/>
                            </Any>
                        </When>
                        <Then>
                            <Dollar>1950</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Any>
                                <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                                <Dependency module="filingStatus" path="/isFilingStatusQSS"/>
                                <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                            </Any>
                        </When>
                        <Then>
                            <Dollar>1550</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/additionalStandardDeduction">
            <Name>Additional standard deduction</Name>
            <Description>The additional amount to add to the standard deduction to account for blindness or old age.
            </Description>

            <Derived>
                <Multiply>
                    <Dependency path="/additionalStandardDeductionItems"/>
                    <Dependency path="/additionalStandardDeductionMultiplier"/>
                </Multiply>
            </Derived>
        </Fact>
        <Fact path="/MFJStandardDeduction">
            <Name>Married Filing Jointly Standard Deduction</Name>
            <Description>Standard Deduction for filers who are married filing jointly.
                Rev Proc .15 Standard Deduction
                §1(j)(2)(A)
            </Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Dollar>
                    29200
                </Dollar>
            </Derived>
        </Fact>
        <Fact path="/singleOrMFSStandardDeduction">
            <Name>Single or Married Filing Separately Standard Deduction</Name>
            <Description>Standard Deduction for filers who are married filing separately or single.
                Rev Proc .15 Standard
                Deduction §1(j)(2)(C) §1(j)(2)(D)

            </Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Dollar>
                    14600
                </Dollar>
            </Derived>
        </Fact>
        <Fact path="/HoHStandardDeduction">
            <Name>HoH Standard Deduction</Name>
            <Description>Standard Deduction for filers who are filing HoH.
                Rev Proc .15 Standard Deduction §1(j)(2)(B)
            </Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Dollar>
                    21900
                </Dollar>
            </Derived>
        </Fact>
        <Fact path="/filingStatusStandardDeduction">
            <Name>Filing status standard deduction</Name>
            <Description>The amount of the standard deduction based on filing status alone.

                TODO: Replace Any/Equal with
                Include
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Any>
                                <Dependency module="filingStatus" path="/isFilingStatusSingle"/>
                                <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                            </Any>
                        </When>
                        <Then>
                            <Dependency path="/singleOrMFSStandardDeduction"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusHOH"/>
                        </When>
                        <Then>
                            <Dependency path="/HoHStandardDeduction"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Any>
                                <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                                <Dependency module="filingStatus" path="/isFilingStatusQSS"/>
                            </Any>
                        </When>
                        <Then>
                            <Dependency path="/MFJStandardDeduction"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/normalStandardDeduction">
            <Name>Normal standard deduction</Name>
            <Description>The amount to use as the standard deduction if a filer cannot be claimed as a dependent.
            </Description>

            <Derived>
                <Add>
                    <Dependency path="/filingStatusStandardDeduction"/>
                    <Dependency path="/additionalStandardDeduction"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/minimumStandardDeduction">
            <Name>Minimum standard deduction</Name>
            <Description>The alternative amount to use as the standard deduction if a filer can be claimed as a
                dependent.
                This amount is not used if it exceeds the normal amount of the standard deduction.
            </Description>
            Rev Proc .15 Standard Deduction §63(c)(5)
            <TaxYear>2024</TaxYear>

            <Derived>
                <Add>
                    <GreaterOf>
                        <Dollar>1300</Dollar>
                        <Add>
                            <Dependency module="income" path="/employerIncomeSubtotal"/>
                            <Dollar>450</Dollar>
                        </Add>
                    </GreaterOf>
                    <Dependency path="/additionalStandardDeduction"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/standardDeduction">
            <Name>Standard deduction</Name>
            <Description>The amount of the standard deduction</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Not>
                                <Dependency module="filers" path="/treatFilersAsDependents"/>
                            </Not>
                        </When>
                        <Then>
                            <Dependency path="/normalStandardDeduction"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filers" path="/treatFilersAsDependents"/>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/minimumStandardDeduction"/>
                                <Dependency path="/normalStandardDeduction"/>
                            </LesserOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/hasSchedule3">
            <Description>Some actual logic for when sched 3 is required goes here</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Any>
                                <Dependency module="saversCredits" path="/qualifiedForSaverCredit"/>
                                <Dependency module="elderlyAndDisabled"
                                            path="/qualifiedForCreditForElderlyAndDisabled"/>
                                <Dependency module="cdcc" path="/cdccQualified"/>
                                <All>
                                    <IsComplete>
                                        <Dependency module="ptc" path="/netPtcAmountWhenZeroOrPositive"/>
                                    </IsComplete>
                                    <GreaterThan>
                                        <Left>
                                            <Dependency module="ptc" path="/netPtcAmountWhenZeroOrPositive"/>
                                        </Left>
                                        <Right>
                                            <Dollar>0</Dollar>
                                        </Right>
                                    </GreaterThan>
                                </All>
                            </Any>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/sched3Line1">
            <Description>Schedule 3 Line 1: PLACEHOLDER</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/sched3Line3">
            <Description>Schedule 3 Line 3: PLACEHOLDER</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/sched3Line5b">
            <Description>Schedule 3 Line 5b: PLACEHOLDER</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/sched3Line6f">
            <Description>Schedule 3 Line 6f: PLACEHOLDER</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/sched3Line6l">
            <Description>Schedule 3 Line 6l: PLACEHOLDER</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/sched3Line6m">
            <Description>Schedule 3 Line 6m: PLACEHOLDER</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/totalOtherNonrefundableCredits">
            <Description>Schedule 3 Line 7: The total of the other nonrefundable credits</Description>
            <Export mef="true"/>
            <Derived>
                <Add>
                    <Dependency module="elderlyAndDisabled" path="/totalEdc"/>
                    <Dependency path="/sched3Line6f"/> <!-- PLACEHOLDER -->
                    <Dependency path="/sched3Line6l"/> <!-- PLACEHOLDER -->
                    <Dependency path="/sched3Line6m"/> <!-- PLACEHOLDER -->
                    <!-- TODO: add more as we continue to support other credits -->
                </Add>
            </Derived>
        </Fact>
        <Fact path="/line8OfSchedule3">
            <Name>Line 8 of Schedule 3</Name>
            <Description>Line 8 of schedule 3 (non-refundable credits) for line 20 of form 1040</Description>
            <Export mef="true" downstreamFacts="true"/>
            <Derived>
                <Add>
                    <Dependency path="/sched3Line1"/> <!-- PLACEHOLDER -->
                    <Dependency module="cdcc" path="/cdccTotalCredit"/>
                    <Dependency path="/sched3Line3"/> <!-- PLACEHOLDER -->
                    <Dependency module="saversCredits" path="/qualifiedSaverCreditAmount"/>
                    <Dependency path="/sched3Line5b"/> <!-- PLACEHOLDER -->
                    <Dependency path="/totalOtherNonrefundableCredits"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/hasTaxLiabilityBeforeNrCredits">
            <Name>Has Tax Liability Before Nonrefundable Credits</Name>
            <Description>Whether the taxpayer has tax liability before credits are applied.</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency module="taxCalculations" path="/totalTentativeTax"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasTaxLiabilityAfterCdcc">
            <Name>Has Tax Liability After CDCC</Name>
            <Description>Whether the taxpayer still has tax liability after CDCC is subtracted.</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Subtract>
                            <Minuend>
                                <Dependency module="taxCalculations" path="/totalTentativeTax"/>
                            </Minuend>
                            <Subtrahends>
                                <Dependency module="cdcc" path="/cdccTotalCredit"/>
                            </Subtrahends>
                        </Subtract>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasTaxLiabilityAfterEdc">
            <Name>Has Tax Liability After EDC</Name>
            <Description>Whether the taxpayer still has tax liability after EDC is subtracted.</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Subtract>
                            <Minuend>
                                <Dependency module="taxCalculations" path="/totalTentativeTax"/>
                            </Minuend>
                            <Subtrahends>
                                <Dependency module="cdcc" path="/cdccTotalCredit"/>
                                <Dependency module="elderlyAndDisabled" path="/totalEdc"/>
                            </Subtrahends>
                        </Subtract>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasTaxLiabilityAfterSavers">
            <Name>Has Tax Liability After Saver's Credit</Name>
            <Description>Whether the taxpayer still has tax liability after Saver's is subtracted.</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Subtract>
                            <Minuend>
                                <Dependency module="taxCalculations" path="/totalTentativeTax"/>
                            </Minuend>
                            <Subtrahends>
                                <Dependency module="cdcc" path="/cdccTotalCredit"/>
                                <Dependency module="elderlyAndDisabled" path="/totalEdc"/>
                                <Dependency module="saversCredits" path="/qualifiedSaverCreditAmount"/>
                            </Subtrahends>
                        </Subtract>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/otherPaymentsAndRefundableCreditsTotal">
            <Description>Amount from Schedule 3, line 15 (line 31 1040)</Description>
            <Export mef="true" downstreamFacts="true"/>
            <Derived>
                <Add>
                    <Switch>
                        <Case>
                            <When>
                                <IsComplete>
                                    <Dependency module="ptc" path="/netPtcAmountWhenZeroOrPositive"/>
                                </IsComplete>
                            </When>
                            <Then>
                                <Dependency module="ptc" path="/netPtcAmountWhenZeroOrPositive"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/filingStatusOptions">
            <Name>Filing Status Options</Name>
            <Description>Options for filing status</Description>
            <Derived>
                <EnumOptions>
                    <EnumOption>
                        <Condition>
                            <Dependency path="/eligibleForMFJ"/>
                        </Condition>
                        <Value>
                            <String>marriedFilingJointly</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Dependency path="/eligibleForMFS"/>
                        </Condition>
                        <Value>
                            <String>marriedFilingSeparately</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Dependency path="/eligibleForSingle"/>
                        </Condition>
                        <Value>
                            <String>single</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Dependency path="/eligibleForHoh"/>
                        </Condition>
                        <Value>
                            <String>headOfHousehold</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Dependency path="/eligibleForQss"/>
                        </Condition>
                        <Value>
                            <String>qualifiedSurvivingSpouse</String>
                        </Value>
                    </EnumOption>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/filingStatusInitialOptions">
            <Derived>
                <EnumOptions>
                    <String>wantsMarriedFilingJointly</String>
                    <String>wantsMarriedFilingSeparately</String>
                    <EnumOption>
                        <Condition>
                            <Any>
                                <All>
                                    <Dependency module="filers" path="/livedApartLastSixMonths"/>
                                    <Not>
                                        <IsComplete>
                                            <Dependency module="familyAndHousehold" path="/familyAndHouseholdIsDone"/>
                                        </IsComplete>
                                    </Not>
                                </All>
                                <All>
                                    <Dependency module="familyAndHousehold" path="/familyAndHouseholdIsDone"/>
                                    <Dependency module="filers" path="/livedApartLastSixMonths"/>
                                    <Dependency path="/eligibleForHoh"/>
                                </All>
                            </Any>
                        </Condition>
                        <Value>
                            <String>wantsToSeeIfTheyQualifyHeadOfHousehold</String>
                        </Value>
                    </EnumOption>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/filingStatusOptionsCapitalized">
            <Name>The options for filing status with capitalizations</Name>
            <Description>The options for filing status with capitalizations</Description>
            <Derived>
                <EnumOptions>
                    <String>single</String>
                    <String>qualifiedSurvivingSpouse</String>
                    <String>headOfHousehold</String>
                    <String>marriedFilingSeparately</String>
                    <String>marriedFilingJointly</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/filingStatusCapitalized">
            <Name>Filing status with capitalizations</Name>
            <Description>The filing status selected by the taxpayer with capitalizations</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/isFilingStatusSingle"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/filingStatusOptionsCapitalized">single</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/filingStatusOptionsCapitalized">marriedFilingJointly</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="/isFilingStatusMFS"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/filingStatusOptionsCapitalized">marriedFilingSeparately</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="/isFilingStatusHOH"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/filingStatusOptionsCapitalized">headOfHousehold</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="/isFilingStatusQSS"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/filingStatusOptionsCapitalized">qualifiedSurvivingSpouse</Enum>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/recommendedFilingStatusCapitalized">
            <Name>Filing status with capitalizations</Name>
            <Description>The filing status selected by the taxpayer with capitalizations</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/recommendedFilingStatus"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/filingStatusOptions">single</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/filingStatusOptionsCapitalized">single</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/recommendedFilingStatus"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/filingStatusOptions">marriedFilingJointly</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/filingStatusOptionsCapitalized">marriedFilingJointly</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/recommendedFilingStatus"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/filingStatusOptions">marriedFilingSeparately</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/filingStatusOptionsCapitalized">marriedFilingSeparately</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/recommendedFilingStatus"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/filingStatusOptions">headOfHousehold</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/filingStatusOptionsCapitalized">headOfHousehold</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/recommendedFilingStatus"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/filingStatusOptions">qualifiedSurvivingSpouse</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/filingStatusOptionsCapitalized">qualifiedSurvivingSpouse</Enum>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/recommendedFilingStatus">
            <Name>Recommended filing status</Name>
            <Description>The most advantageous filing status for the taxpayer.</Description>

            <Derived>
                <Switch>

                    <!-- If the taxpayer is eligible for a joint return -->
                    <Case>
                        <When>
                            <Dependency path="/eligibleForMFJ"/>
                        </When>
                        <Then>
                            <Switch>

                                <!-- They haven't specifically decided that they want a separate return -->
                                <Case>
                                    <When>
                                        <Not>
                                            <Dependency path="/wantsSeparateReturn"/>
                                        </Not>
                                    </When>
                                    <Then>
                                        <Enum optionsPath="/filingStatusOptions">marriedFilingJointly</Enum>
                                    </Then>
                                </Case>

                                <!-- If the taxpayer is married but doesn't want a joint return -->
                                <Case>
                                    <When>
                                        <True/>
                                    </When>
                                    <Then>
                                        <Switch>

                                            <!-- Head of Household if they're eligible -->
                                            <Case>
                                                <When>
                                                    <Dependency path="/eligibleForHoh"/>
                                                </When>
                                                <Then>
                                                    <Enum optionsPath="/filingStatusOptions">headOfHousehold</Enum>
                                                </Then>
                                            </Case>

                                            <!-- Married Filing Separately if not -->
                                            <Case>
                                                <When>
                                                    <Not>
                                                        <Dependency path="/eligibleForHoh"/>
                                                    </Not>
                                                </When>
                                                <Then>
                                                    <Enum optionsPath="/filingStatusOptions">marriedFilingSeparately
                                                    </Enum>
                                                </Then>
                                            </Case>
                                        </Switch>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>

                    <!-- Qualified Surviving Spouse if eligible -->
                    <Case>
                        <When>
                            <Dependency path="/eligibleForQss"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/filingStatusOptions">qualifiedSurvivingSpouse</Enum>
                        </Then>
                    </Case>

                    <!-- Head of Household if eligible -->
                    <Case>
                        <When>
                            <Dependency path="/eligibleForHoh"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/filingStatusOptions">headOfHousehold</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="/eligibleForMFS"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/filingStatusOptions">marriedFilingSeparately</Enum>
                        </Then>
                    </Case>

                    <!-- Single if not -->
                    <Case>
                        <When>
                            <Dependency path="/eligibleForSingle"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/filingStatusOptions">single</Enum>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filingStatus">
            <Name>Filing status</Name>
            <Description>The filing status selected by the taxpayer.</Description>
            <Export downstreamFacts="true" mef="true"/>
            <Writable>
                <Enum optionsPath="/filingStatusOptions"/>
            </Writable>
        </Fact>
        <Fact path="/isFilingStatusComplete">
            <Description>
                Is the filing status section complete?

                Mostly this is just "did they select a filing status", but if
                they're HOH
                they also need to select a QP.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="/filingStatus"/>
                    </IsComplete>
                    <Any>
                        <Not>
                            <Dependency path="/isFilingStatusHOH"/>
                        </Not>
                        <All>
                            <Dependency path="/isFilingStatusHOH"/>
                            <IsComplete>
                                <Dependency module="familyAndHousehold" path="/hohQualifyingPerson"/>
                            </IsComplete>
                        </All>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isFilingStatusSingle">
            <Export downstreamFacts="true"/>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/filingStatus"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/filingStatusOptions">single</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/isFilingStatusMFJ">
            <Export downstreamFacts="true" mef="true"/>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/filingStatus"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/filingStatusOptions">marriedFilingJointly</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/isFilingStatusQSS">
            <Export downstreamFacts="true"/>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/filingStatus"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/filingStatusOptions">qualifiedSurvivingSpouse</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/isFilingStatusHOH">
            <Export downstreamFacts="true"/>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/filingStatus"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/filingStatusOptions">headOfHousehold</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/isFilingStatusMFS">
            <Export downstreamFacts="true"/>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/filingStatus"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/filingStatusOptions">marriedFilingSeparately</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/showSingleFilingStatusScreen">
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/recommendedFilingStatus"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/filingStatusOptions">single</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/showMFJFilingStatusScreen">
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/recommendedFilingStatus"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/filingStatusOptions">marriedFilingJointly</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/showMFSFilingStatusScreen">
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/recommendedFilingStatus"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/filingStatusOptions">marriedFilingSeparately</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/showQSSFilingStatusScreen">
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/recommendedFilingStatus"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/filingStatusOptions">qualifiedSurvivingSpouse</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/showHoHFilingStatusScreen">
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/recommendedFilingStatus"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/filingStatusOptions">headOfHousehold</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/eligibleForMFJ">
            <Name>Eligible for joint return</Name>
            <Description>
                Whether the taxpayer is eligible to file jointly. This requires them being married or widowed during
                their tax year and the spouse must meet appropriate residency requirements.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="/maritalStatusAllowsFilingMarried"/>
                    <Dependency module="filers" path="/secondaryFilerResidencyEligibleForMFJ"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/eligibleForMFS">
            <Name>Eligible to file as MFS</Name>
            <Description>The TP is eligible to file as MFS</Description>

            <Derived>
                <Dependency path="/maritalStatusAllowsFilingMarried"/>
            </Derived>
        </Fact>
        <Fact path="/eligibleForSingle">
            <Name>Eligible to file as single</Name>
            <Description>The TP is eligible to file as single</Description>

            <Derived>
                <Not>
                    <Dependency path="/maritalStatusAllowsFilingMarried"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/eligibleForHoh">
            <Name>Eligible for Head of Household</Name>
            <Description>Whether the taxpayer is eligible for Head of Household filing status.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <GreaterThan>
                        <Left>
                            <Count>
                                <Dependency module="familyAndHousehold"
                                            path="/familyAndHousehold/*/hohQualifyingPerson"/>
                            </Count>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                    <Dependency module="filers" path="/filerCouldQualifyForHoh"/>
                    <!-- Filers who are eligible for QSS are not eligible for HOH, preventing them from taking a less
               advantageous refund 26 U.S.C. § 2(b)(1) -->
                    <Not>
                        <Dependency path="/eligibleForQss"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/eligibleForQss">
            <Name>Eligible for Qualified Surviving Spouse</Name>
            <Description>Whether the taxpayer is eligible for Qualified Surviving Spouse filing status.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency module="filers" path="/filerCouldQualifyForQss"/>
                    <GreaterThan>
                        <Left>
                            <Count>
                                <Dependency module="familyAndHousehold"
                                            path="/familyAndHousehold/*/qssQualifyingPerson"/>
                            </Count>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/pdfTextForFilingAsSurvivingSpouse">
            <Description>Text to show in PDF signature area. See 2024 instructions for 1040, p. 12 under "Death of a
                Taxpayer".
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="filers" path="/isWidowedInTaxYear"/>
                                <Dependency path="/isFilingStatusMFJ"/>
                            </All>
                        </When>
                        <Then>
                            <!-- Both English and Spanish instructions for 1040 say to use English phrase. -->
                            <String>Filing as surviving spouse</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <String/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/tpSelectedStatusInSpouseSection">
            <Description>
                The TP selected either MFS or MFJ status in the spouse section. Used in the filing status section to
                not display
                duplicative pages. We do not count if the user selected that they wanted to try for HoH -- in that
                case, we'll
                still show them the normal filing status screens (and they'll end up as HOH, MFJ, or MFS)
            </Description>

            <Derived>
                <Any>
                    <Dependency path="/wantsJointReturn"/>
                    <Dependency path="/wantsSeparateReturn"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/tpSelectedStatusInSpouseSectionAndCanUseIt">
            <Description>The filer said they wanted a Married status, but we need to also check whether they qualify for
                said
                status still, since they might have edited their relationship status
            </Description>
            <Derived>
                <All>
                    <Dependency path="/tpSelectedStatusInSpouseSection"/>
                    <Any>
                        <Dependency path="/treatAsMFJ"/>
                        <Dependency path="/treatAsMFS"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/statusSelectedInSpouseSection">
            <Description>The filing status the taxpayer chose</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/wantsJointReturn"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/filingStatusOptions">marriedFilingJointly</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="/wantsSeparateReturn"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/filingStatusOptions">marriedFilingSeparately</Enum>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/wantsJointReturn">
            <Name>Wants joint return</Name>
            <Description>Whether the taxpayer wants to file jointly with their spouse.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="/filingStatus"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="/isFilingStatusMFJ"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Equal>
                                <Left>
                                    <Dependency path="/filingStatusChoice"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/filingStatusInitialOptions">wantsMarriedFilingJointly</Enum>
                                </Right>
                            </Equal>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/wantsSeparateReturn">
            <Name>Wants separate return</Name>
            <Description>Whether the taxpayer wants to file separately with their spouse.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="/filingStatus"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="/isFilingStatusMFS"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Equal>
                                <Left>
                                    <Dependency path="/filingStatusChoice"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/filingStatusInitialOptions">wantsMarriedFilingSeparately</Enum>
                                </Right>
                            </Equal>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/wantsHeadOfHousehold">
            <Name>Wants head of household</Name>
            <Description>Whether the taxpayer wants to head of household status.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/filingStatusChoice"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/filingStatusInitialOptions">wantsToSeeIfTheyQualifyHeadOfHousehold</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/hasMultipleEligibleFilingStatuses">
            <Name>Has multiple eligible filing statuses</Name>
            <Description>The TP is eligible for multiple filing statuses</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <EnumOptionsSize>
                            <Dependency path="/filingStatusOptions"/>
                        </EnumOptionsSize>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/treatAsMFJ">
            <Name>Treat as MFJ</Name>
            <Description>Treat the TP as MFJ. They have either declared an MFJ filing status, or are attempting for an
                MFJ
                filing status
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <All>
                        <IsComplete>
                            <Dependency path="/filingStatus"/>
                        </IsComplete>
                        <!-- The TP is filing a joint return -->
                        <Dependency path="/isFilingStatusMFJ"/>
                        <Dependency path="/eligibleForMFJ"/>
                    </All>
                    <All>
                        <!-- or the TP is trying for a joint return, but hasn't yet declared their filing
            status. -->
                        <Not>
                            <IsComplete>
                                <Dependency path="/filingStatus"/>
                            </IsComplete>
                        </Not>
                        <Dependency path="/wantsJointReturn"/>
                        <Dependency path="/eligibleForMFJ"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/treatAsMFS">
            <Description>Treat the TP as MFS. They have either declared an MFS filing status, or are attempting for an
                MFS
                filing status
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <All>
                        <IsComplete>
                            <Dependency path="/filingStatus"/>
                        </IsComplete>
                        <!-- The TP is filing a separate return -->
                        <Dependency path="/isFilingStatusMFS"/>
                    </All>
                    <All>
                        <!-- or the TP is trying for a separate return, but hasn't yet declared their filing
            status. -->
                        <Not>
                            <IsComplete>
                                <Dependency path="/filingStatus"/>
                            </IsComplete>
                        </Not>
                        <Dependency path="/wantsSeparateReturn"/>
                        <Dependency path="/eligibleForMFS"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/treatAsHoh">
            <Description>Treat the TP as HoH. They have either declared an Hoh filing status, or are attempting for an
                HoH
                filing status
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <All>
                        <IsComplete>
                            <Dependency path="/filingStatus"/>
                        </IsComplete>
                        <Dependency path="/isFilingStatusHOH"/>
                    </All>
                    <All>
                        <Not>
                            <IsComplete>
                                <Dependency path="/filingStatus"/>
                            </IsComplete>
                        </Not>
                        <Dependency path="/wantsHeadOfHousehold"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/flowShowFilingStatusChoiceA">
            <Name>Flow show Filing Status Choice A</Name>
            <Description>Flow to control showing the Filing Status Choice A screen. Shown to filers who selected
                "married"
                marital or "widowed" marital status and the spouse's date of death was the tax year. Both spouses must
                have been
                citizens all year, end of year, or a reisdent for tax purposes. Additionally, the spouses must have
                lived apart
                for the last 6 months in the tax year.

                Additionally, we skip this screen if filing status is complete, in which
                case the taxpayer has to toggle their filing status from the filing status section.
            </Description>

            <Derived>
                <All>
                    <Dependency path="/eligibleForMFJ"/>
                    <Dependency module="filers" path="/livedApartLastSixMonths"/>
                    <Not>
                        <IsComplete>
                            <Dependency path="/filingStatus"/>
                        </IsComplete>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/flowShowFilingStatusChoiceB">
            <Name>Flow show Filing Status Choice B</Name>
            <Description>Flow to control showing the Filing Status Choice B screen. Shown to filers who selected
                "married"
                marital or "widowed" marital status and the spouse's date of death was the tax year. Both spouses must
                have been
                citizens all year, end of year, or a reisdent for tax purposes.

                Additionally, we skip this screen if filing
                status is complete, in which case the taxpayer has to toggle their filing status from the filing status
                section.
            </Description>

            <Derived>
                <All>
                    <Dependency path="/eligibleForMFJ"/>
                    <Not>
                        <Dependency module="filers" path="/livedApartLastSixMonths"/>
                    </Not>
                    <Not>
                        <IsComplete>
                            <Dependency path="/filingStatus"/>
                        </IsComplete>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filingStatusChoice">
            <Name>How the taxpayer wants to file</Name>
            <Description>Whether the taxpayer wants to file jointly, file separately with their spouse, or wait to see
                if they
                qualify for head of household status
            </Description>

            <Writable>
                <Enum optionsPath="/filingStatusInitialOptions"/>
            </Writable>
        </Fact>
        <Fact path="/maritalStatusAllowsFilingMarried">
            <Name>Marital status allows filing married</Name>
            <Description>The TP's declared marital status (either married or widowed in tax year) allows them to file as
                MFS
                or MFJ.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <Dependency module="filers" path="/isMarried"/>
                    <Dependency module="filers" path="/isWidowedInTaxYear"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/isFilingStatusValid">
            <Description>The user has invalidated their filing status</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Any>
                    <All>
                        <Dependency path="/isFilingStatusHOH"/>
                        <Dependency path="/eligibleForHoh"/>
                    </All>
                    <All>
                        <Dependency path="/isFilingStatusMFJ"/>
                        <Dependency path="/eligibleForMFJ"/>
                    </All>
                    <All>
                        <Dependency path="/isFilingStatusMFS"/>
                        <Dependency path="/eligibleForMFS"/>
                    </All>
                    <All>
                        <Dependency path="/isFilingStatusSingle"/>
                        <Dependency path="/eligibleForSingle"/>
                    </All>
                    <All>
                        <Dependency path="/isFilingStatusQSS"/>
                        <Dependency path="/eligibleForQss"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/hasValidFilingStatusWithNoChoice">
            <Description>The user's filing status is valid and their only choice</Description>
            <Derived>
                <All>
                    <Dependency path="/isFilingStatusValid"/>
                    <Not>
                        <Dependency path="/hasMultipleEligibleFilingStatuses"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hasValidFillingStatusWithChoice">
            <Description>The user's filing status is valid and they can choose it from many</Description>
            <Derived>
                <All>
                    <Dependency path="/isFilingStatusValid"/>
                    <Dependency path="/hasMultipleEligibleFilingStatuses"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hasInvalidFilingStatusWithNoChoice">
            <Description>The user's filing status is invalid. They have to switch to a certain status.</Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="/isFilingStatusValid"/>
                    </Not>
                    <Not>
                        <Dependency path="/hasMultipleEligibleFilingStatuses"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hasInvalidFilingStatusWithChoice">
            <Description>The user's filing status is invalid. They have to choose a status.</Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="/isFilingStatusValid"/>
                    </Not>
                    <Dependency path="/hasMultipleEligibleFilingStatuses"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/xmlQualifyingHOHPerson">
            <Name>Qualifying person for head of household</Name>
            <Description>Person to populate in IRS 1040 XML elements QualifyingHOH*</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <!-- If the user is HOH and has the HOH QP is not a claimed dependent -->
                                <Dependency path="/isFilingStatusHOH"/>
                                <Not>
                                    <Dependency module="familyAndHousehold"
                                                path="/hohQualifyingPerson/isClaimedDependent"/>
                                </Not>
                            </All>
                        </When>
                        <Then>
                            <Dependency module="familyAndHousehold" path="/hohQualifyingPerson"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/mfsSpouseOrQSSAndHOHNotDependentChild">
            <Name>Filing MFS Spouse Name or QSS/HOH not dependent child</Name>
            <Description>This is used to fill in the very specific box on the PDF under the filing status. It requires a
                name
                in the specific contexts laid out in the name field
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/isFilingStatusMFS"/>
                        </When>
                        <Then>
                            <Dependency module="filers" path="/secondaryFiler/mefFullName"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <!-- If the user is QSS and has no dependents -->
                                <Dependency path="/isFilingStatusQSS"/>
                                <Equal>
                                    <Left>
                                        <Count>
                                            <Dependency module="familyAndHousehold"
                                                        path="/qualifyingDependentsCollection/*/isClaimedDependent"/>
                                        </Count>
                                    </Left>
                                    <Right>
                                        <Int>0</Int>
                                    </Right>
                                </Equal>
                            </All>
                        </When>
                        <Then>
                            <Dependency module="familyAndHousehold"
                                        path="/xmlFirstQssQualifyingUnclaimedDependent/mefFullName"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <!-- If the user is HOH and has the HOH QP is not a claimed dependent -->
                                <Dependency path="/isFilingStatusHOH"/>
                                <Not>
                                    <Dependency module="familyAndHousehold"
                                                path="/hohQualifyingPerson/isClaimedDependent"/>
                                </Not>
                            </All>
                        </When>
                        <Then>
                            <Dependency module="familyAndHousehold" path="/hohQualifyingPerson/mefFullName"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <String/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/marriedAndLivedApartSecondaryFilerResidencyEligible">
            <Name>Married and lived apart and secondary filer residency eligible</Name>
            <Description>Determines if filer is married, lived apart from their spouse for 6 months, and met mfj
                requirements
                based on secondary filer residency status.
            </Description>
            <!-- Note: We could add a check here for having an hoh qualifying child since its specified on mural, but that
      should already be established for anyone who is this far along in the flow -->
            <Derived>
                <All>
                    <Dependency path="/maritalStatusAllowsFilingMarried"/>
                    <Dependency module="filers" path="/livedApartLastSixMonths"/>
                    <Dependency module="filers" path="/secondaryFilerResidencyEligibleForMFJ"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/pdfSpouseTin">
            <Name>Spouse's TIN for use in generating PDFs</Name>
            <Description>The spouse's TIN if it should appear in PDFs.
                Per IRS instructions, it appears for both MFJ and MFS.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Any>
                                <Dependency path="/isFilingStatusMFJ"/>
                                <Dependency path="/isFilingStatusMFS"/>
                            </Any>
                        </When>
                        <Then>
                            <Dependency module="filers" path="/secondaryFiler/tin"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/mefNameType">
            <Name>Full Name Type</Name>
            <Description>Regex to represent allowed characters in FullNameType of MeF</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <String>\sA-Za-z0-9\-</String>
            </Derived>
        </Fact>
        <Fact path="/mefZipCodeType">
            <Name>Zip Code Type</Name>
            <Description>Regex to represent allowed characters in ZIPCodeType of MeF</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <String>0-9</String>
            </Derived>
        </Fact>
        <Fact path="/mefBusinessNameLine1Type">
            <Name>Business Name Line 1 Type</Name>
            <Description>Regex to represent allowed characters in BusinessNameLine1Type of MeF</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <String>(([A-Za-z0-9#\-\(\)]|&amp;|')\s?)*([A-Za-z0-9#\-\(\)]|&amp;|')</String>
            </Derived>
        </Fact>
        <Fact path="/mefStateEmployerIdType">
            <Name>State Employer ID Type</Name>
            <Description>Regex to represent allowed characters in EmployerStateIdNum of MeF</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <String>([!-~£§ÁÉÍÑÓ×ÚÜáéíñóúü]\s?)*[!-~£§ÁÉÍÑÓ×ÚÜáéíñóúü]</String>
            </Derived>
        </Fact>
        <Fact path="/mefOccupationType">
            <Name>Occupation Type</Name>
            <Description>Regex to represent allowed characters in OccupationType of MeF</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <String>[\sA-Za-z0-9\-]+</String>
            </Derived>
        </Fact>
        <Fact path="/mefLocalityNmType">
            <Name>Locality Name Type</Name>
            <Description>Regex to represent allowed characters in LocalityNm of MeF</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <String>([!-~£§ÁÉÍÑÓ×ÚÜáéíñóúü]\s?)*[!-~£§ÁÉÍÑÓ×ÚÜáéíñóúü]</String>
            </Derived>
        </Fact>
        <Fact path="/requiresSchedule2">
            <Description>Whether Schedule 2 is required</Description>
            <Export mef="true"/>
            <Derived>
                <Any>
                    <IsComplete>
                        <Dependency module="ptc" path="/netPtcAmountWhenNegative"/>
                    </IsComplete>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/totalAdditionalTaxesOwed">
            <Description>Line 3 of schedule 2 for line 17 of form 1040</Description>
            <Export mef="true" downstreamFacts="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency module="ptc" path="/netPtcAmountWhenNegative"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency module="ptc" path="/lesserOfNetPtcAmountAndRepaymentLimitation"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/totalExemptPrimaryAndSpouseCount">
            <Name>Total Exempt Primary And Spouse Count</Name>
            <Description>Total Exempt Primary And Spouse Count</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <Int>2</Int>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Int>1</Int>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/totalExemptionsCount">
            <Name>Total Exemptions Count</Name>
            <Description>The sum of the number of claimed dependents and total exempt primary and spouse
                count
            </Description>
            <Export mef="true"/>

            <Derived>
                <Add>
                    <CollectionSum>
                        <Dependency path="/totalExemptPrimaryAndSpouseCount"/>
                    </CollectionSum>
                    <CollectionSum>
                        <Dependency module="familyAndHousehold" path="/claimedDependentsCount"/>
                    </CollectionSum>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/adjustmentsToIncome">
            <Name>Adjustments to income</Name>
            <Description>Adjustments to income to report on line 10 of Form 1040 and line 26 of Schedule.</Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Round>
                    <Add>
                        <Dependency module="studentLoanAdjustment" path="/studentLoanInterestAdjustmentAmount"/>
                        <Dependency path="/adjustmentsToIncomeExcludingStudentLoanInterest"/>
                    </Add>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/adjustmentsToIncomeExcludingStudentLoanInterest">
            <Description>The adjustments to income used in the calculatation of non-IRA deduction MAGIs to determine
                deducible
                amounts. Used in the Student Loan Interest Deduction and Social Security Benefits Worksheets. This
                should
                include be a sum of Schedule 1, lines 11 through 20, and 23 and 25
            </Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Add>
                    <!-- Educator Expenses -->
                    <Dependency module="educatorAdjustment" path="/educatorExpensesAdjustment"/>
                    <!-- Health savings account deduction -->
                    <Switch>
                        <Case>
                            <When>
                                <IsComplete>
                                    <Dependency module="hsa" path="/hsaTotalDeductibleAmount"/>
                                </IsComplete>
                            </When>
                            <Then>
                                <Dependency module="hsa" path="/hsaTotalDeductibleAmount"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                    <!-- Certain business expenses of reservists, performing artists, and fee-basis government officials. -->
                    <!-- Moving expenses for members of the Armed Forces. Attach Form 3903  -->
                    <!-- Deductible part of self-employment tax. Attach Schedule SE -->
                    <!-- Self-employed SEP, SIMPLE, and qualified plans -->
                    <!-- Self-employed health insurance deduction -->
                    <!-- Penalty on early withdrawal of savings -->
                    <!-- Alimony paid -->
                    <!-- IRA deduction -->
                    <!-- Archer MSA deduction  -->
                    <!-- Total other adjustments -->
                </Add>
            </Derived>
        </Fact>
        <Fact path="/agi">
            <Name>Adjusted Gross Income</Name>
            <Description>Total income to report on line 11 of Form 1040.</Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Round>
                    <Subtract>
                        <Minuend>
                            <Dependency module="income" path="/totalIncome"/>
                        </Minuend>
                        <Subtrahends>
                            <Dependency path="/adjustmentsToIncome"/>
                        </Subtrahends>
                    </Subtract>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/magiForStudentLoanInterestDeduction">
            <Name>Modified Adjusted Gross Income for Student Loan Interest Deduction</Name>
            <Description>This is AGI, but without student loan interest deduction. Line 4 of the Student Loan Interest
                Deduction Worksheet used for Schedule 1
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency module="income" path="/totalIncome"/>
                    </Minuend>
                    <Subtrahends>
                        <Dependency path="/adjustmentsToIncomeExcludingStudentLoanInterest"/>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/taxableIncome">
            <Name>Taxable income</Name>
            <Description>Taxable income as reported on line 15 of Form 1040.</Description>
            <Export mef="true"/>


            <Derived>
                <Round>
                    <GreaterOf>
                        <Subtract>
                            <Minuend>
                                <Dependency path="/agi"/>
                            </Minuend>
                            <Subtrahends>
                                <Dependency path="/totalDeductions"/>
                            </Subtrahends>
                        </Subtract>
                        <Dollar>0</Dollar>
                    </GreaterOf>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/qualifiedBusinessIncomeDeduction">
            <Name>Qualified business income deduction</Name>
            <Description>Qualified business income deductions for line 13 of Form 1040</Description>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/totalDeductions">
            <Name>Total deductions</Name>
            <Description>Total deductions as reported on line 14 of Form 1040.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Add>
                        <Dependency path="/standardOrItemizedDeductions"/>
                    </Add>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/wantsStandardDeduction">
            <Name>Wants standard deduction</Name>
            <Description>Will the taxpayer take the standard deduction?</Description>

            <Derived>
                <True/>
            </Derived>
        </Fact>
        <Fact path="/standardOrItemizedDeductions">
            <Name>Standard or itemized deductions</Name>
            <Description>The taxpayer's choice of standard or itemized deductions as reported on line 12
                of Form 1040.
                Currently only the standard deduction is supported.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <Dependency path="/wantsStandardDeduction"/>
                            </When>
                            <Then>
                                <Dependency module="standardDeduction" path="/standardDeduction"/>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/adjustmentsTotal">
            <Name>Other Deductions</Name>
            <Description>Deductions such as educator expenses and student loan interest</Description>
            <Derived>
                <Add>
                    <Dependency module="educatorAdjustment" path="/educatorExpensesAdjustment"/>
                    <Dependency module="studentLoanAdjustment" path="/studentLoanInterestAdjustmentAmount"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/hasAdjustments">
            <Name>Has adjustments</Name>
            <Description>Whether there are adjustments such as educator expenses and student loan interest greater than
                zero
            </Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/adjustmentsTotal"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/form8814Included">
            <Name>8814 Included</Name>
            <Description>Is Form 8814 included</Description>
            <Derived>
                <False/>
            </Derived>
        </Fact>
        <Fact path="/form4972Included">
            <Name>4972 Included</Name>
            <Description>Is Form 4972 included</Description>
            <Derived>
                <False/>
            </Derived>
        </Fact>
        <Fact path="/formOtherIncluded">
            <Name>Other Included</Name>
            <Description>Is another form included</Description>
            <Derived>
                <False/>
            </Derived>
        </Fact>
        <Fact path="/otherFormName">
            <Name>Other Form Name</Name>
            <Description>the name of the other form included</Description>
            <Derived>
                <String/>
            </Derived>
        </Fact>
        <Fact path="/roundedTaxableIncome">
            <Name>Rounded taxable income</Name>
            <Description>Income less than $100,000 uses the tax tables from the Instructions for Form
                1040. This fact selects
                the "midpoint" that corresponds to each entry in the tax tables, for use in calculating
                tenative tax.
            </Description>
            <Derived>
                <Switch>
                    <!-- No tax if you've got no taxable income -->
                    <Case>
                        <When>
                            <LessThanOrEqual>
                                <Left>
                                    <Dependency path="/taxableIncome"/>
                                </Left>
                                <Right>
                                    <Dollar>0</Dollar>
                                </Right>
                            </LessThanOrEqual>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <!-- There are three hardcoded midpoints for income less than $25 -->
                    <Case>
                        <When>
                            <LessThan>
                                <Left>
                                    <Dependency path="/taxableIncome"/>
                                </Left>
                                <Right>
                                    <Dollar>5</Dollar>
                                </Right>
                            </LessThan>
                        </When>
                        <Then>
                            <Dollar>2.50</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <LessThan>
                                <Left>
                                    <Dependency path="/taxableIncome"/>
                                </Left>
                                <Right>
                                    <Dollar>15</Dollar>
                                </Right>
                            </LessThan>
                        </When>
                        <Then>
                            <Dollar>10</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <LessThan>
                                <Left>
                                    <Dependency path="/taxableIncome"/>
                                </Left>
                                <Right>
                                    <Dollar>25</Dollar>
                                </Right>
                            </LessThan>
                        </When>
                        <Then>
                            <Dollar>20</Dollar>
                        </Then>
                    </Case>
                    <!-- The tax tables use increments of $25 for income between $25 and $3,000 -->
                    <Case>
                        <When>
                            <LessThan>
                                <Left>
                                    <Dependency path="/taxableIncome"/>
                                </Left>
                                <Right>
                                    <Dollar>3000</Dollar>
                                </Right>
                            </LessThan>
                        </When>
                        <Then>
                            <Add>
                                <StepwiseMultiply>
                                    <Multiplicand>
                                        <Dependency path="/taxableIncome"/>
                                    </Multiplicand>
                                    <Rate>
                                        <Rational>25/25</Rational> <!-- $25 for every whole $25 of income -->
                                    </Rate>
                                </StepwiseMultiply>
                                <Dollar>12.50</Dollar> <!-- Add $12.50 to find the midpoint of the row -->
                            </Add>
                        </Then>
                    </Case>
                    <!-- The tax tables use increments of $50 for income between $3,000 and $100,000 -->
                    <Case>
                        <When>
                            <LessThan>
                                <Left>
                                    <Dependency path="/taxableIncome"/>
                                </Left>
                                <Right>
                                    <Dollar>100000</Dollar>
                                </Right>
                            </LessThan>
                        </When>
                        <Then>
                            <Add>
                                <StepwiseMultiply>
                                    <Multiplicand>
                                        <Dependency path="/taxableIncome"/>
                                    </Multiplicand>
                                    <Rate>
                                        <Rational>50/50</Rational> <!-- $50 for every whole $50 of income -->
                                    </Rate>
                                </StepwiseMultiply>
                                <Dollar>25</Dollar> <!-- Add $25 to find the midpoint of the row -->
                            </Add>
                        </Then>
                    </Case>
                    <!-- Income of $100,000 and over uses the tax computation worksheet -->
                    <Case>
                        <When>
                            <GreaterThanOrEqual>
                                <Left>
                                    <Dependency path="/taxableIncome"/>
                                </Left>
                                <Right>
                                    <Dollar>100000</Dollar>
                                </Right>
                            </GreaterThanOrEqual>
                        </When>
                        <Then>
                            <Dependency path="/taxableIncome"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/tentativeTaxFromTaxableIncome">
            <Name>Tentative tax from taxable income</Name>
            <Description>Tentative tax as reported on line 16 of Form 1040.
                Rev Proc .01 Tax Rate Tables §1(j)(2)(A|B|C|D)
                TODO: Replace Any/Equal with Include
            </Description>
            <Export mef="true"/>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Round>
                    <Switch>
                        <!-- MARRIED FILING JOINTLY AND QUALIFIED SURVIVING SPOUSE -->
                        <Case>
                            <When>
                                <Any>
                                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                                    <Dependency module="filingStatus" path="/isFilingStatusQSS"/>
                                </Any>
                            </When>
                            <Then>
                                <Switch>
                                    <!-- Not over $23,200: 10% of the taxable income -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>23200</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Multiply>
                                                <Rational>10/100</Rational>
                                                <Dependency path="/roundedTaxableIncome"/>
                                            </Multiply>
                                        </Then>
                                    </Case>

                                    <!-- Over $23,200 but not over $94,300:
                $2,320 plus 12% of the excess over $23,200 -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>94300</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>2320</Dollar>
                                                <Multiply>
                                                    <Rational>12/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>23200</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>

                                    <!-- Over $94,300 but not over $201,050:
                $10,852 plus 22% of the excess over $94,300 -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>201050</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>10852</Dollar>
                                                <Multiply>
                                                    <Rational>22/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>94300</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>

                                    <!-- Over $201,050 but not over $383,900:
                $34,337 plus 24% of the excess over $201,050 -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>383900</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>34337</Dollar>
                                                <Multiply>
                                                    <Rational>24/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>201050</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>

                                    <!-- Over $383,900 but not over $487,450:
                $78,221 plus 32% of the excess over $383,900 -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>487450</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>78221</Dollar>
                                                <Multiply>
                                                    <Rational>32/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>383900</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>

                                    <!-- Over $487,450 but not over $731,200:
                $111,357 plus 35% of the excess over $487,450 -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>731200</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>111357</Dollar>
                                                <Multiply>
                                                    <Rational>35/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>487450</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>

                                    <!-- Over $731,200:
                $196,669.50 plus 37% of the excess over $731,200 -->
                                    <Case>
                                        <When>
                                            <GreaterThan>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>731200</Dollar>
                                                </Right>
                                            </GreaterThan>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>196669.50</Dollar>
                                                <Multiply>
                                                    <Rational>37/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>731200</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>
                                </Switch>
                            </Then>
                        </Case>

                        <!-- HEAD OF HOUSEHOLD -->
                        <Case>
                            <When>
                                <Dependency module="filingStatus" path="/isFilingStatusHOH"/>
                            </When>
                            <Then>
                                <Switch>
                                    <!-- Not over $16,550: 10% of the taxable income -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>16550</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Multiply>
                                                <Rational>10/100</Rational>
                                                <Dependency path="/roundedTaxableIncome"/>
                                            </Multiply>
                                        </Then>
                                    </Case>

                                    <!-- Over $16,550 but not over $63,100:
                $1,655 plus 12% of the excess over $16,550 -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>63100</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>1655</Dollar>
                                                <Multiply>
                                                    <Rational>12/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>16550</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>

                                    <!-- Over $63,100 but not over $100,500:
                $7,241 plus 22% of the excess over $63,100 -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>100500</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>7241</Dollar>
                                                <Multiply>
                                                    <Rational>22/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>63100</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>

                                    <!-- Over $100,500 but not over $191,950:
                   $15,469 plus 24% of the excess over $100,500 -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>191950</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>15469</Dollar>
                                                <Multiply>
                                                    <Rational>24/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>100500</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>

                                    <!-- Over $191,950 but not over $243,700:
                   $37,417 plus 32% of the excess over $191,950 -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>243700</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>37417</Dollar>
                                                <Multiply>
                                                    <Rational>32/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>191950</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>

                                    <!-- Over $243,700 but not over $609,350:
                   $53,977 plus 35% of the excess over $243,700 -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>609350</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>53977</Dollar>
                                                <Multiply>
                                                    <Rational>35/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>243700</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>

                                    <!-- Over $609,350:
                   $181,954.50 plus 37% of the excess over $609,350 -->
                                    <Case>
                                        <When>
                                            <GreaterThan>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>609350</Dollar>
                                                </Right>
                                            </GreaterThan>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>181954.50</Dollar>
                                                <Multiply>
                                                    <Rational>37/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>609350</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>
                                </Switch>
                            </Then>
                        </Case>

                        <!-- SINGLE -->
                        <Case>
                            <When>
                                <Dependency module="filingStatus" path="/isFilingStatusSingle"/>
                            </When>
                            <Then>
                                <Switch>
                                    <!-- Not over $11,600: 10% of the taxable income -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>11600</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Multiply>
                                                <Rational>10/100</Rational>
                                                <Dependency path="/roundedTaxableIncome"/>
                                            </Multiply>
                                        </Then>
                                    </Case>

                                    <!-- Over $11,600 but not over $47,150:
                   $1,160 plus 12% of the excess over $11,600 -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>47150</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>1160</Dollar>
                                                <Multiply>
                                                    <Rational>12/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>11600</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>

                                    <!-- Over $47,150 but not over $100,525:
                   $5,426 plus 22% of the excess over $47,150 -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>100525</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>5426</Dollar>
                                                <Multiply>
                                                    <Rational>22/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>47150</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>

                                    <!-- Over $100,525 but not over $191,950:
                   $17,168.50 plus 24% of the excess over $100,525 -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>191950</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>17168.50</Dollar>
                                                <Multiply>
                                                    <Rational>24/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>100525</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>

                                    <!-- Over $191,950 but not over $243,725:
                   $39,110.50 plus 32% of the excess over $191,950 -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>243725</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>39110.50</Dollar>
                                                <Multiply>
                                                    <Rational>32/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>191950</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>

                                    <!-- Over $243,725 but not over $609,350:
                   $55,678.50 plus 35% of the excess over $243,725 -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>609350</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>55678.50</Dollar>
                                                <Multiply>
                                                    <Rational>35/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>243725</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>

                                    <!-- Over $609,350:
                   $183,647.25 plus 37% of the excess over $609,350 -->
                                    <Case>
                                        <When>
                                            <GreaterThan>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>609350</Dollar>
                                                </Right>
                                            </GreaterThan>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>183647.25</Dollar>
                                                <Multiply>
                                                    <Rational>37/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>609350</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>
                                </Switch>
                            </Then>
                        </Case>

                        <!-- MARRIED FILING SEPARATELY -->
                        <Case>
                            <When>
                                <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                            </When>
                            <Then>
                                <Switch>
                                    <!-- Not over $11,600: 10% of the taxable income -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>11600</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Multiply>
                                                <Rational>10/100</Rational>
                                                <Dependency path="/roundedTaxableIncome"/>
                                            </Multiply>
                                        </Then>
                                    </Case>

                                    <!-- Over $11,600 but not over $47,150:
                   $1,160 plus 12% of the excess over $11,600 -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>47150</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>1160</Dollar>
                                                <Multiply>
                                                    <Rational>12/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>11600</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>

                                    <!-- Over $47,150 but not over $100,525:
                   $5,426 plus 22% of the excess over $47,150 -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>100525</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>5426</Dollar>
                                                <Multiply>
                                                    <Rational>22/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>47150</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>

                                    <!-- Over $100,525 but not over $191,950:
                   $17,168.50 plus 24% of the excess over $100,525 -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>191950</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>17168.50</Dollar>
                                                <Multiply>
                                                    <Rational>24/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>100525</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>

                                    <!-- Over $191,950 but not over $243,725:
                   $39,110.50 plus 32% of the excess over $191,950 -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>243725</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>39110.50</Dollar>
                                                <Multiply>
                                                    <Rational>32/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>191950</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>

                                    <!-- Over $243,725 but not over $365,600:
                   $55,678.50 plus 35% of the excess over $243,725 -->
                                    <Case>
                                        <When>
                                            <LessThanOrEqual>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>365600</Dollar>
                                                </Right>
                                            </LessThanOrEqual>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>55678.50</Dollar>
                                                <Multiply>
                                                    <Rational>35/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>243725</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>

                                    <!-- Over $365,600:
                   $98,334.75 plus 37% of the excess over $365,600 -->
                                    <Case>
                                        <When>
                                            <GreaterThan>
                                                <Left>
                                                    <Dependency path="/roundedTaxableIncome"/>
                                                </Left>
                                                <Right>
                                                    <Dollar>365600</Dollar>
                                                </Right>
                                            </GreaterThan>
                                        </When>
                                        <Then>
                                            <Add>
                                                <Dollar>98334.75</Dollar>
                                                <Multiply>
                                                    <Rational>37/100</Rational>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency path="/roundedTaxableIncome"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dollar>365600</Dollar>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Add>
                                        </Then>
                                    </Case>
                                </Switch>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/totalTentativeTax">
            <Name>Total tentative tax</Name>
            <Description>Total tentative tax as reported on line 18 of Form 1040.</Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Round>
                    <Add>
                        <Dependency path="/tentativeTaxFromTaxableIncome"/>
                        <Dependency module="schedule2" path="/totalAdditionalTaxesOwed"/>
                    </Add>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/nonRefundableCredits">
            <Name>Non-refundable credits</Name>
            <Description>Total amount of non-refundable tax credits as reported on line 21 of Form 1040.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Add>
                        <Dependency module="ctcOdc" path="/totalCtcAndOdc"/>
                        <Dependency module="schedule3" path="/line8OfSchedule3"/>
                    </Add>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/hasNonRefundableCredits">
            <Name>Has non-refundable credits</Name>
            <Description>Whether the taxpayer has non-refundable credits greater than zero</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/nonRefundableCredits"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/maxNonRefundableCredit">
            <Description>The max non refundable credit a TP can get</Description>
            <Derived>
                <LesserOf>
                    <Dependency path="/nonRefundableCredits"/>
                    <!-- The following dependency may not be necessary, we should check this when we finish credits -->
                    <Dependency path="/totalTentativeTax"/>
                </LesserOf>
            </Derived>
        </Fact>
        <Fact path="/taxLessNonRefundableCredits">
            <Name>Tax less non-refundable credits</Name>
            <Description>Tentative tax minus non-refundable tax credits as reported on line 22 of Form
                1040.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <GreaterOf>
                        <Subtract>
                            <Minuend>
                                <Dependency path="/totalTentativeTax"/>
                            </Minuend>
                            <Subtrahends>
                                <Dependency path="/nonRefundableCredits"/>
                            </Subtrahends>
                        </Subtract>
                        <Dollar>0</Dollar>
                    </GreaterOf>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/line21OfSchedule2">
            <Name>Line 21 of Schedule 2</Name>
            <Description>Other taxes, including self-employment Line 21 of schedule 2 for line 23 of form
                1040
            </Description>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/totalTax">
            <Name>Total tax</Name>
            <Description>Total tax as reported on line 24 of Form 1040.</Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Round>
                    <Add>
                        <Dependency path="/taxLessNonRefundableCredits"/>
                    </Add>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/totalTaxIsIncomplete">
            <Name>Total tax is incomplete</Name>
            <Description>The total tax calculation is incomplete, so the user cannot file</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <Not>
                    <IsComplete>
                        <Dependency path="/totalTax"/>
                    </IsComplete>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/form1099Withholding">
            <Name>Form 1099 withholding</Name>
            <Description>Federal income tax withheld from wages, as reported on line 25b of Form 1040.</Description>
            <Export mef="true"/>

            <Derived>
                <Add>
                    <CollectionSum>
                        <Dependency module="interest" path="/interestReports/*/taxWithheld"/>
                    </CollectionSum>
                    <CollectionSum>
                        <Dependency module="socialSecurity" path="/socialSecurityReports/*/federalTaxWithheld"/>
                    </CollectionSum>
                    <CollectionSum>
                        <Dependency module="unemployment" path="/form1099Gs/*/federalTaxWithheld"/>
                    </CollectionSum>
                    <Dependency module="form1099Misc" path="/form1099MiscFederalIncomeTaxWithheld"/>
                    <Dependency module="form1099Rs" path="/form1099RsFederalIncomeTaxWithheld"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/otherFormWithholding">
            <Name>Other Form withholding</Name>
            <Description>Federal income tax withheld from wages, as reported on line 25c of Form 1040.</Description>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/totalWithholding">
            <Name>Total withholding</Name>
            <Description>Total withholding as reported on line 25d of Form 1040.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Add>
                        <Dependency module="formW2s" path="/formW2Withholding"/>
                        <Dependency path="/form1099Withholding"/>
                    </Add>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/americanOpportunityCredit">
            <Name>American Opportunity Credit</Name>
            <Description>American opportunity credit from Form 8863, line 8 (line 29 1040)</Description>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/qualifiedForNonrefundableCredit">
            <Name>Qualified for nonrefundable credits</Name>
            <Description>Whether the TP has qualified for any nonrefundable credits.
                This fact drives whether a summarytable is
                displayed in the credit summary page.
                If you change that table, you must also change this fact.
            </Description>
            <Derived>
                <Any>
                    <Dependency module="ctcOdc" path="/odcQualified"/>
                    <Dependency module="ctcOdc" path="/ctcQualified"/>
                    <Dependency module="cdcc" path="/cdccQualified"/>
                    <Dependency module="saversCredits" path="/qualifiedForSaverCredit"/>
                    <Dependency module="elderlyAndDisabled" path="/qualifiedForCreditForElderlyAndDisabled"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/qualifiedForRefundableCredit">
            <Name>Qualified for refundable credits</Name>
            <Description>Whether the TP has qualified for any refundable credit
                This fact drives whether a summarytable is
                displayed in the credit summary page.
                If you change that table, you must also change this fact.
            </Description>

            <Derived>
                <!-- Needs to be updated when we support other credits -->
                <Any>
                    <!-- Because ACTC is refundable -->
                    <Dependency module="ctcOdc" path="/ctcQualified"/>
                    <Dependency module="eitc" path="/eitcQualified"/>
                    <!-- This fact should be true even when you just owe APTC -->
                    <Dependency module="ptc" path="/needsToFileForm8962"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/totalOtherPaymentsRefundableCredits">
            <Name>Total other payments and refundable credits</Name>
            <Description>Total other payments and refundable credits as reported on line 32 of Form 1040.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Add>
                        <Dependency module="eitc" path="/earnedIncomeCredit"/>
                        <Dependency module="ctcOdc" path="/additionalCtc"/>
                        <Dependency path="/americanOpportunityCredit"/>
                        <Dependency module="schedule3" path="/otherPaymentsAndRefundableCreditsTotal"/>
                    </Add>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/hasRefundableCredits">
            <Name>Has refundable credits</Name>
            <Description>Whether the taxpayer has refundable credits is greater than zero</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/totalOtherPaymentsRefundableCredits"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/totalPayments">
            <Name>Total payments</Name>
            <Description>Total payments as reported on line 33 of Form 1040.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Add>
                        <Dependency path="/totalWithholding"/>
                        <Dependency module="estimatedPayments" path="/estimatedAndFromLastYear"/>
                        <Dependency path="/totalOtherPaymentsRefundableCredits"/>
                    </Add>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/overpayment">
            <Name>Overpayment</Name>
            <Description>The amount that total payments exceed total taxes. Report on line 34 of Form
                1040.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <GreaterOf>
                        <Subtract>
                            <Minuend>
                                <Dependency path="/totalPayments"/>
                            </Minuend>
                            <Subtrahends>
                                <Dependency path="/totalTax"/>
                            </Subtrahends>
                        </Subtract>
                        <Dollar>0</Dollar>
                    </GreaterOf>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/taxWithCreditsApplied">
            <Name>Tax With Credits Applied</Name>
            <Description>The amount that total payments exceed total taxes. Report on line 34 of Form
                1040.
            </Description>

            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency path="/totalTax"/>
                    </Minuend>
                    <Subtrahends>
                        <Dependency path="/totalOtherPaymentsRefundableCredits"/>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/finalTaxAmount">
            <Name>Final tax amount</Name>
            <Description>The final tax amount -- either a refund or balance based on the positivity of the
                number
            </Description>

            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency path="/totalTax"/>
                    </Minuend>
                    <Subtrahends>
                        <Dependency path="/totalPayments"/>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/form8888Attached">
            <Name>Form 8888 Attached</Name>
            <Description>Do you have form 8888 attached?</Description>
            <Derived>
                <False/>
            </Derived>
        </Fact>
        <Fact path="/appliedToNextYearEstimated">
            <Name>Amount Applied To Next Year Estimated</Name>
            <Description>Amount of line 34 you want applied to your 2023 estimated tax (line 36 1040)</Description>

            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/dueRefund">
            <Name>Due refund</Name>
            <Description>Is the taxpayer due a refund?</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/overpayment"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/balanceDue">
            <Name>Balance due</Name>
            <Description>The amount that total taxes exceed total payments. Reported on line 37 of Form
                1040.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <GreaterOf>
                        <Subtract>
                            <Minuend>
                                <Dependency path="/totalTax"/>
                            </Minuend>
                            <Subtrahends>
                                <Dependency path="/totalPayments"/>
                            </Subtrahends>
                        </Subtract>
                        <Dollar>0</Dollar>
                    </GreaterOf>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/owesBalance">
            <Name>Owes balance</Name>
            <Description>Does the taxpayer owe taxes?</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/balanceDue"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/zeroBalance">
            <Name>Zero balance</Name>
            <Description>Does the taxpayer have a zero balance due?</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/finalTaxAmount"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/knockoutHasNoPaymentsOrCredits">
            <Name>Knockout no payments or credits</Name>
            <Description>TP is knocked out because they have no payments or credits</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Not>
                        <Dependency module="estimatedPayments" path="/paidEstimatedTaxesOrFromLastYear"/>
                    </Not>
                    <Equal>
                        <Left>
                            <Dependency module="income" path="/totalIncome"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="/agi"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="/totalTentativeTax"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="/nonRefundableCredits"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="/totalTax"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="/totalPayments"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/maxIncomeLimitForMFJ">
            <Description>max income before becoming ineligible as MFJ
                IRS notice 2023-75, adjusted limitation under
                25B(b)(1)(C) and 25B(b)(1)(D)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>76500</Dollar>
            </Derived>
        </Fact>
        <Fact path="/maxIncomeLimitForHOH">
            <Description>max income before becoming ineligible as HoH
                IRS notice 2023-75, adjusted limitation under
                25B(b)(1)(C) and 25B(b)(1)(D)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>57375</Dollar>
            </Derived>
        </Fact>
        <Fact path="/maxIncomeLimitForOther">
            <Description>max income before becoming ineligible as other filing statuses (non HoH or MFJ)
                IRS notice 2023-75,
                adjusted limitation under 25B(b)(1)(C) and 25B(b)(1)(D)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>38250</Dollar>
            </Derived>
        </Fact>
        <Fact path="/saversCreditMaxAgiLimit">
            <Description>Maximum AGI before becoming ineligible for the Saver's Credit</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <Dependency path="/maxIncomeLimitForMFJ"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusHOH"/>
                        </When>
                        <Then>
                            <Dependency path="/maxIncomeLimitForHOH"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/maxIncomeLimitForOther"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/saversCreditAgiLimitForFiftyPercent">
            <Description>Maximum income at which the applicable percentage is 50%
                IRS notice 2023-75, adjusted limitation under
                25B(b)(1)(A)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <Dollar>46000</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusHOH"/>
                        </When>
                        <Then>
                            <Dollar>34500</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>23000</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/saversCreditAgiLimitForTwentyPercent">
            <Description>Maximum income at which the applicable percentage is 20%
                IRS notice 2023-75, adjusted limitation under
                25B(b)(1)(B)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <Dollar>50000</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusHOH"/>
                        </When>
                        <Then>
                            <Dollar>37500</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>25000</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/isHohAgiEligibleForSaversCredit">
            <Description>Is HoH AGI eligible for savers credit</Description>

            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusHOH"/>
                    <LessThanOrEqual>
                        <Left>
                            <Dependency module="taxCalculations" path="/agi"/>
                        </Left>
                        <Right>
                            <Dependency path="/maxIncomeLimitForHOH"/>
                        </Right>
                    </LessThanOrEqual>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isMfjAgiEligibleForSaversCredit">
            <Description>Is MFJ AGI eligible for savers credit</Description>

            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <LessThanOrEqual>
                        <Left>
                            <Dependency module="taxCalculations" path="/agi"/>
                        </Left>
                        <Right>
                            <Dependency path="/maxIncomeLimitForMFJ"/>
                        </Right>
                    </LessThanOrEqual>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isOtherAgiEligibleForSaversCredit">
            <Description>Is other (not HoH or MFJ) AGI eligible for savers credit</Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency module="filingStatus" path="/isFilingStatusHOH"/>
                    </Not>
                    <Not>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    </Not>
                    <LessThanOrEqual>
                        <Left>
                            <Dependency module="taxCalculations" path="/agi"/>
                        </Left>
                        <Right>
                            <Dependency path="/maxIncomeLimitForOther"/>
                        </Right>
                    </LessThanOrEqual>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isAgiEligibleForSaversCredit">
            <Description>Is AGI eligible for Savers Credit</Description>

            <Derived>
                <Any>
                    <Dependency path="/isHohAgiEligibleForSaversCredit"/>
                    <Dependency path="/isMfjAgiEligibleForSaversCredit"/>
                    <Dependency path="/isOtherAgiEligibleForSaversCredit"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/eligibleForSaversCredit">
            <Description>Whether the TP(s) are eligible for the Saver's credit</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <All>
                    <Not>
                        <!-- We ban an MFJ dependent here, as they have opted not to take credits. -->
                        <Dependency module="filers" path="/isMFJDependent"/>
                    </Not>
                    <Switch>
                        <Case>
                            <When>
                                <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                            </When>
                            <Then>
                                <Any>
                                    <Dependency module="filers" path="/primaryFiler/isEligibleForSaversCredit"/>
                                    <Dependency module="filers" path="/secondaryFiler/isEligibleForSaversCredit"/>
                                </Any>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dependency module="filers" path="/primaryFiler/isEligibleForSaversCredit"/>
                            </Then>
                        </Case>
                    </Switch>
                    <Dependency path="/isAgiEligibleForSaversCredit"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/onlyPrimaryFilerEligibleForSaversCredit">
            <Description>Is the primary taxpayer the only taxpayer eligible?</Description>

            <Derived>
                <All>
                    <Dependency path="/eligibleForSaversCredit"/>
                    <Dependency module="filers" path="/primaryFiler/isEligibleForSaversCredit"/>
                    <Any>
                        <Not>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </Not>
                        <Not>
                            <Dependency module="filers" path="/secondaryFiler/isEligibleForSaversCredit"/>
                        </Not>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/onlySecondaryFilerEligibleForSaversCredit">
            <Description>Is the secondary taxpayer the only taxpayer eligible?</Description>

            <Derived>
                <All>
                    <Dependency path="/eligibleForSaversCredit"/>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Dependency module="filers" path="/secondaryFiler/isEligibleForSaversCredit"/>
                    <Not>
                        <Dependency module="filers" path="/primaryFiler/isEligibleForSaversCredit"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/bothFilersEligibleForSaversCredit">
            <Description>Are both taxpayers eligible?</Description>

            <Derived>
                <All>
                    <Dependency path="/eligibleForSaversCredit"/>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Dependency module="filers" path="/primaryFiler/isEligibleForSaversCredit"/>
                    <Dependency module="filers" path="/secondaryFiler/isEligibleForSaversCredit"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/saversCreditMultiplierOptions">
            <Description>Enum for the decimal multiplier used on Form 8880, line 9</Description>
            <Derived>
                <EnumOptions>
                    <String>fifty</String>
                    <String>twenty</String>
                    <String>ten</String>
                    <String>zero</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/pdfSaversCreditMultiplierAsInt">
            <Description>The savers credit multiplier as an int, used for the PDF output for Form 8880, line 9
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/saversCreditMultiplier"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/saversCreditMultiplierOptions">fifty</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Int>5</Int>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/saversCreditMultiplier"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/saversCreditMultiplierOptions">twenty</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Int>2</Int>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/saversCreditMultiplier"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/saversCreditMultiplierOptions">ten</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Int>1</Int>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Int>0</Int>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/saversCreditMultiplierAsRational">
            <Description>The savers credit multiplier as a rational number so that we can multiply it for Form 8880 line
                10
                calculations
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/saversCreditMultiplier"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/saversCreditMultiplierOptions">fifty</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Rational>5/10</Rational>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/saversCreditMultiplier"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/saversCreditMultiplierOptions">twenty</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Rational>2/10</Rational>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/saversCreditMultiplier"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/saversCreditMultiplierOptions">ten</Enum>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Rational>1/10</Rational>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Rational>0/10</Rational>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/saversCreditMultiplier">
            <Description>Mulitiplier used on Form 8880, line 9</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <LessThanOrEqual>
                                <Left>
                                    <Dependency module="taxCalculations" path="/agi"/>
                                </Left>
                                <Right>
                                    <Dependency path="/saversCreditAgiLimitForFiftyPercent"/>
                                </Right>
                            </LessThanOrEqual>
                        </When>
                        <Then>
                            <Enum optionsPath="/saversCreditMultiplierOptions">fifty</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <LessThanOrEqual>
                                <Left>
                                    <Dependency module="taxCalculations" path="/agi"/>
                                </Left>
                                <Right>
                                    <Dependency path="/saversCreditAgiLimitForTwentyPercent"/>
                                </Right>
                            </LessThanOrEqual>
                        </When>
                        <Then>
                            <Enum optionsPath="/saversCreditMultiplierOptions">twenty</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <LessThanOrEqual>
                                <Left>
                                    <Dependency module="taxCalculations" path="/agi"/>
                                </Left>
                                <Right>
                                    <Dependency path="/saversCreditMaxAgiLimit"/>
                                </Right>
                            </LessThanOrEqual>
                        </When>
                        <Then>
                            <Enum optionsPath="/saversCreditMultiplierOptions">ten</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Enum optionsPath="/saversCreditMultiplierOptions">zero</Enum>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerIsEligibleForSaversCredit">
            <Description>Whether the secondary filer is actually applicable and eligible for the saver's credit
            </Description>
            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Dependency module="filers" path="/secondaryFiler/isEligibleForSaversCredit"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/unfilteredPrimaryFilerIraAndAbleContributions">
            <Description>Total IRA and ABLE account contributions for the primary filer, not filtered by eligibility
            </Description>
            <Derived>
                <!-- Implement when we support this, placeholder for now -->
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerIraAndAbleContributions">
            <Description>Total IRA and ABLE account contributions for the primary filer, used in Form 8880 Line 1a
            </Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filers" path="/primaryFiler/isEligibleForSaversCredit"/>
                        </When>
                        <Then>
                            <Dependency path="/unfilteredPrimaryFilerIraAndAbleContributions"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/unfilteredSecondaryFilerIraAndAbleContributions">
            <Description>Total IRA and ABLE account contributions for the secondary filer, not filtered by eligibility
            </Description>
            <Derived>
                <!-- Implement when we support this, placeholder for now -->
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerIraAndAbleContributions">
            <Description>Total IRA and ABLE account contributions for the secondary filer, used in Form 8880 Line 1b
            </Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/secondaryFilerIsEligibleForSaversCredit"/>
                        </When>
                        <Then>
                            <Dependency path="/unfilteredSecondaryFilerIraAndAbleContributions"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/unfilteredPrimaryFilersDeferralsAndContributions">
            <Description>The total sum of deferrals and contributions for the Primary TP, not conditional on
                eligibility
            </Description>
            <Derived>
                <Round>
                    <CollectionSum>
                        <Dependency module="formW2s" path="/primaryFilerW2s/*/totalDeferralsAndContributions"/>
                    </CollectionSum>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/primaryFilersDeferralsAndContributions">
            <Description>The total sum of deferrals and contributions for the Primary TP, used on Line 2a of Form 8880
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filers" path="/primaryFiler/isEligibleForSaversCredit"/>
                        </When>
                        <Then>
                            <Dependency path="/unfilteredPrimaryFilersDeferralsAndContributions"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/unfilteredSecondaryFilersDeferralsAndContributions">
            <Description>The total sum of deferrals and contributions for the secondary TP, not conditional on
                eligibility
            </Description>
            <Derived>
                <Round>
                    <CollectionSum>
                        <Dependency module="formW2s" path="/secondaryFilerW2s/*/totalDeferralsAndContributions"/>
                    </CollectionSum>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilersDeferralsAndContributions">
            <Description>The total sum of deferrals and contributions for the secondary TP, used on Line 2b of Form
                8880
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/secondaryFilerIsEligibleForSaversCredit"/>
                        </When>
                        <Then>
                            <Dependency path="/unfilteredSecondaryFilersDeferralsAndContributions"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerUnfilteredTotalContributions">
            <Description>Primary Filers total contributions not based on eligibility</Description>
            <Derived>
                <Add>
                    <Dependency path="/unfilteredPrimaryFilersDeferralsAndContributions"/>
                    <Dependency path="/unfilteredPrimaryFilerIraAndAbleContributions"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerUnfilteredTotalContributions">
            <Description>Secondary filers total contributions not based on eligibility</Description>
            <Derived>
                <Add>
                    <Dependency path="/unfilteredSecondaryFilersDeferralsAndContributions"/>
                    <Dependency path="/unfilteredSecondaryFilerIraAndAbleContributions"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerTotalContributions">
            <Description>Used for Form 8880 Line 3a, summation of line 1a and 2a</Description>
            <Export mef="true"/>
            <Derived>
                <Add>
                    <Dependency path="/primaryFilerIraAndAbleContributions"/>
                    <Dependency path="/primaryFilersDeferralsAndContributions"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerTotalContributions">
            <Description>Used for Form 8880 Line 3b, summation of line 1b and 2b</Description>
            <Export mef="true"/>
            <Derived>
                <Add>
                    <Dependency path="/secondaryFilerIraAndAbleContributions"/>
                    <Dependency path="/secondaryFilersDeferralsAndContributions"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerTotalContributionsLessDistributions">
            <Description>The total contributions by the primary filer minus the distributions, used on Form 8880 Line
                5a
            </Description>
            <Derived>
                <GreaterOf>
                    <Subtract>
                        <Minuend>
                            <Dependency path="/primaryFilerTotalContributions"/>
                        </Minuend>
                        <Subtrahends>
                            <Dependency path="/primaryFilerGrossDistributions"/>
                        </Subtrahends>
                    </Subtract>
                    <Dollar>0</Dollar>
                </GreaterOf>
            </Derived>
        </Fact>
        <Fact path="/submittedPrimaryFilerTotalContributionsLessDistributions">
            <Description>Copy of /primaryFilerTotalContributionsLessDistributions but modified to be used specifically
                for
                MeF/PDF to provide the incomplete value when the primary filer is not eligible or doesn't have eligible
                contributions
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <GreaterThan>
                                <Left>
                                    <Dependency path="/primaryFilerTotalContributions"/>
                                </Left>
                                <Right>
                                    <Dollar>0</Dollar>
                                </Right>
                            </GreaterThan>
                        </When>
                        <Then>
                            <Dependency path="/primaryFilerTotalContributionsLessDistributions"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerTotalContributionsLessDistributions">
            <Description>The total contributions by the secondary filer minus the distributions, used on Form 8880 Line
                5b
            </Description>
            <Derived>
                <GreaterOf>
                    <Subtract>
                        <Minuend>
                            <Dependency path="/secondaryFilerTotalContributions"/>
                        </Minuend>
                        <Subtrahends>
                            <Dependency path="/secondaryFilerGrossDistributions"/>
                        </Subtrahends>
                    </Subtract>
                    <Dollar>0</Dollar>
                </GreaterOf>
            </Derived>
        </Fact>
        <Fact path="/submittedSecondaryFilerTotalContributionsLessDistributions">
            <Description>Copy of /secondaryFilerTotalContributionsLessDistributions but modified to be used specifically
                for
                MeF/PDF to provide the incomplete value when spouse is not eligible or doesn't have eligible
                contributions
            </Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <GreaterThan>
                                <Left>
                                    <Dependency path="/secondaryFilerTotalContributions"/>
                                </Left>
                                <Right>
                                    <Dollar>0</Dollar>
                                </Right>
                            </GreaterThan>
                        </When>
                        <Then>
                            <Dependency path="/secondaryFilerTotalContributionsLessDistributions"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerSaversEligibleGrossDistributions">
            <Description>The primary filers distributions that are eligible to be included in the savers credit (before
                accounting for filing status additions).
            </Description>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <All>
                                    <IsComplete>
                                        <Dependency module="filers" path="/primaryFiler/isEligibleForSaversCredit"/>
                                    </IsComplete>
                                    <Dependency module="filers" path="/primaryFiler/isEligibleForSaversCredit"/>
                                    <!-- This is incase the 1099R collection wasn't initialized -->
                                    <IsComplete>
                                        <Dependency module="form1099Rs"
                                                    path="/primaryFiler1099RsReportedOnSaversCredit"/>
                                    </IsComplete>
                                </All>
                            </When>
                            <Then>
                                <CollectionSum>
                                    <Dependency module="form1099Rs"
                                                path="/primaryFiler1099RsReportedOnSaversCredit/*/grossDistribution"/>
                                </CollectionSum>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerGrossDistributions">
            <Description>Form 8880: line 4a the total of certain primary filer distributions according to the form
                instructions. If MFJ, both secondary and primary distributions are added and the same for both line 5a
                and b
                unless the primary filer is not eligible.
                Defaulted to 0 when not eligible
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                                <IsComplete>
                                    <Dependency module="filers" path="/primaryFiler/isEligibleForSaversCredit"/>
                                </IsComplete>
                                <Dependency module="filers" path="/primaryFiler/isEligibleForSaversCredit"/>
                            </All>
                        </When>
                        <Then>
                            <Add>
                                <Dependency path="/primaryFilerSaversEligibleGrossDistributions"/>
                                <Dependency path="/secondaryFilerSaversEligibleGrossDistributions"/>
                            </Add>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/primaryFilerSaversEligibleGrossDistributions"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerSaversEligibleGrossDistributions">
            <Description>The secondary filers distributions that are eligible to be included in the savers credit
                (before
                accounting for filing status additions).
            </Description>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <All>
                                    <IsComplete>
                                        <Dependency module="filers" path="/secondaryFiler/isEligibleForSaversCredit"/>
                                    </IsComplete>
                                    <Dependency module="filers" path="/secondaryFiler/isEligibleForSaversCredit"/>
                                    <!-- This is incase the 1099R collection wasn't initialized -->
                                    <IsComplete>
                                        <Dependency module="form1099Rs"
                                                    path="/secondaryFiler1099RsReportedOnSaversCredit"/>
                                    </IsComplete>
                                </All>
                            </When>
                            <Then>
                                <CollectionSum>
                                    <Dependency module="form1099Rs"
                                                path="/secondaryFiler1099RsReportedOnSaversCredit/*/grossDistribution"/>
                                </CollectionSum>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerGrossDistributions">
            <Description>Form 8880: line 4b the total of certain secondary filer distributions according to the form
                instructions. If MFJ, both secondary and primary distributions are added and the same for both line 5a
                and b
                unless the secondary filer is not eligible. Defaulted to 0 when not eligible.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                                <IsComplete>
                                    <Dependency module="filers" path="/secondaryFiler/isEligibleForSaversCredit"/>
                                </IsComplete>
                                <Dependency module="filers" path="/secondaryFiler/isEligibleForSaversCredit"/>
                            </All>
                        </When>
                        <Then>
                            <Add>
                                <Dependency path="/primaryFilerSaversEligibleGrossDistributions"/>
                                <Dependency path="/secondaryFilerSaversEligibleGrossDistributions"/>
                            </Add>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/secondaryFilerSaversEligibleGrossDistributions"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/saversMaxCreditAmountNotMFJ">
            <Description>Max credit possible if not filing MFJ (50% of the max contribution)</Description>
            <Derived>
                <Dollar>1000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/saversMaxCreditLimit">
            <Description>Max credit limit for line 6 on Form 8880</Description>
            <Derived>
                <Dollar>2000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerMaxCreditCalc">
            <Description>Lesser of saversMaxCreditLimit or Line 5a, used on Form 8880 Line 6a</Description>
            <Derived>
                <LesserOf>
                    <Dependency path="/saversMaxCreditLimit"/>
                    <Dependency path="/primaryFilerTotalContributionsLessDistributions"/>
                </LesserOf>
            </Derived>
        </Fact>
        <Fact path="/submittedPrimaryFilerMaxCreditCalc">
            <Description>Modification of /primaryFilerMaxCreditCalc, used for MeF/PDF to prevent value when the primary
                filer
                is not eligible or doesn't have eligible contributions
            </Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <GreaterThan>
                                <Left>
                                    <Dependency path="/primaryFilerTotalContributions"/>
                                </Left>
                                <Right>
                                    <Dollar>0</Dollar>
                                </Right>
                            </GreaterThan>
                        </When>
                        <Then>
                            <Dependency path="/primaryFilerMaxCreditCalc"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerMaxCreditCalc">
            <Description>Lesser of saversMaxCreditLimit or Line 5b, used on Form 8880 Line 6b</Description>
            <Derived>
                <LesserOf>
                    <Dependency path="/saversMaxCreditLimit"/>
                    <Dependency path="/secondaryFilerTotalContributionsLessDistributions"/>
                </LesserOf>
            </Derived>
        </Fact>
        <Fact path="/submittedSecondaryFilerMaxCreditCalc">
            <Description>Modification of /secondaryFilerMaxCreditCalc, used for MeF/PDF to prevent value when the spouse
                is
                not eligible or doesn't have eligible contributions
            </Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <GreaterThan>
                                <Left>
                                    <Dependency path="/secondaryFilerTotalContributions"/>
                                </Left>
                                <Right>
                                    <Dollar>0</Dollar>
                                </Right>
                            </GreaterThan>
                        </When>
                        <Then>
                            <Dependency path="/secondaryFilerMaxCreditCalc"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/combinedCreditLimit">
            <Description>used on Form 8880 Line 7</Description>
            <Export mef="true"/>
            <Derived>
                <Add>
                    <Dependency path="/primaryFilerMaxCreditCalc"/>
                    <Dependency path="/secondaryFilerMaxCreditCalc"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/ratioedCombinedCreditLimit">
            <Description>the multiplier times the combinedCreditLimit, used for Form 8880 Line 10</Description>
            <Export mef="true"/>
            <Derived>
                <Round>
                    <Multiply>
                        <Dependency path="/saversCreditMultiplierAsRational"/>
                        <Dependency path="/combinedCreditLimit"/>
                    </Multiply>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/meetsOneDollarCombinedCreditLimit">
            <Description>The combined credit limit is $1 and ratioed limit is $0</Description>
            <Derived>
                <All>
                    <Equal>
                        <Left>
                            <Dependency path="/combinedCreditLimit"/>
                        </Left>
                        <Right>
                            <Dollar>1</Dollar>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="/ratioedCombinedCreditLimit"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/limitationBasedOnTaxLiability">
            <Description>Limitation based on tax liability (Credit Limit Worksheet) Form 8880 Line 11</Description>
            <Export mef="true"/>
            <Derived>
                <GreaterOf>
                    <Subtract>
                        <Minuend>
                            <Dependency module="taxCalculations" path="/totalTentativeTax"/>
                        </Minuend>
                        <Subtrahends>
                            <Add>
                                <Dependency module="schedule3" path="/sched3Line1"/>
                                <Dependency module="cdcc" path="/cdccTotalCredit"/>
                                <Dependency module="schedule3" path="/sched3Line3"/>
                                <Dependency module="elderlyAndDisabled" path="/totalEdc"/>
                                <Dependency module="schedule3" path="/sched3Line6l"/>
                            </Add>
                        </Subtrahends>
                    </Subtract>
                    <Dollar>0</Dollar>
                </GreaterOf>
            </Derived>
        </Fact>
        <Fact path="/qualifiedSaverCreditAmount">
            <Description>The amount the TP qualifies for, Form 8880 Line 12 and propagates to Form 1040 Schedule 3, Line
                4
            </Description>
            <Export mef="true" downstreamFacts="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/qualifiedForSaverCredit"/>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/ratioedCombinedCreditLimit"/>
                                <Dependency path="/limitationBasedOnTaxLiability"/>
                            </LesserOf>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/isReceivingSaversCredit">
            <Description>Whether the amount of the credit is greater than $0</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/qualifiedSaverCreditAmount"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/qualifiedForSaverCreditWoTaxLiability">
            <Description>Eligible and qualified for savers credit</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <All>
                    <Dependency path="/eligibleForSaversCredit"/>
                    <GreaterThan>
                        <Left>
                            <Dependency path="/combinedCreditLimit"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/qualifiedForSaverCredit">
            <Description>Eligible and qualified for savers credit</Description>
            <Export mef="true" downstreamFacts="true"/>
            <Derived>
                <All>
                    <Dependency path="/qualifiedForSaverCreditWoTaxLiability"/>
                    <GreaterThan>
                        <Left>
                            <Dependency path="/limitationBasedOnTaxLiability"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/singleFilerQualifiedForSaversCredit">
            <Description>Is the primary taxpayer the only taxpayer qualified?</Description>

            <Derived>
                <All>
                    <Dependency path="/qualifiedForSaverCredit"/>
                    <Not>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/onlyPrimaryFilerQualifiedForSaversCredit">
            <Description>Is the primary taxpayer the only taxpayer qualified?</Description>

            <Derived>
                <All>
                    <Dependency path="/qualifiedForSaverCredit"/>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Equal>
                        <Left>
                            <!-- $0 if filer is not eligible or hasn't made contributions -->
                            <Dependency path="/secondaryFilerTotalContributionsLessDistributions"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/onlySecondaryFilerQualifiedForSaversCredit">
            <Description>Is the secondary taxpayer the only taxpayer qualified?</Description>

            <Derived>
                <All>
                    <Dependency path="/qualifiedForSaverCredit"/>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Equal>
                        <Left>
                            <!-- $0 if filer is not eligible or hasn't made contributions -->
                            <Dependency path="/primaryFilerTotalContributionsLessDistributions"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/bothFilersQualifiedForSaversCredit">
            <Description>Are both taxpayers qualified?</Description>

            <Derived>
                <All>
                    <Dependency path="/qualifiedForSaverCredit"/>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Not>
                        <Dependency path="/onlyPrimaryFilerQualifiedForSaversCredit"/>
                    </Not>
                    <Not>
                        <Dependency path="/onlySecondaryFilerQualifiedForSaversCredit"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/didPrimaryMakeEligibleContributions">
            <Description>Did the primary TP make eligible contributions</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/primaryFilerUnfilteredTotalContributions"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/didSecondaryMakeEligibleContributions">
            <Description>Did the secondary TP make eligible contributions</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/secondaryFilerUnfilteredTotalContributions"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/didSingleFilerMakeEligibleContributions">
            <Description>Did the primary taxpayer (of a non-MFJ return) make Saver's Credit eligible contributions?
            </Description>

            <Derived>
                <All>
                    <Dependency path="/didPrimaryMakeEligibleContributions"/>
                    <Not>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/didOnlyPrimaryMakeEligibleContributions">
            <Description>Was the primary taxpayer (of an MFJ return) the only filer to make Saver's Credit eligible
                contributions?
            </Description>

            <Derived>
                <All>
                    <Dependency path="/didPrimaryMakeEligibleContributions"/>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Not>
                        <Dependency path="/didSecondaryMakeEligibleContributions"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/didOnlySecondaryMakeEligibleContributions">
            <Description>Was the secondary taxpayer (of an MFJ return) the only filer to make Saver's Credit eligible
                contributions?
            </Description>

            <Derived>
                <All>
                    <Dependency path="/didSecondaryMakeEligibleContributions"/>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Not>
                        <Dependency path="/didPrimaryMakeEligibleContributions"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/didNeitherFilerMakeEligibleContributions">
            <Description>Did neither filer (of an MFJ return) make Saver's Credit eligible contributions?</Description>

            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Not>
                        <Dependency path="/didPrimaryMakeEligibleContributions"/>
                    </Not>
                    <Not>
                        <Dependency path="/didSecondaryMakeEligibleContributions"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/nameOfOnlyQualifier">
            <Description>Name of person when only one person qualifies for the credit, may be undefined</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="/primaryFilerTotalContributionsLessDistributions"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                                <Equal>
                                    <Left>
                                        <Dependency path="/secondaryFilerTotalContributionsLessDistributions"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </Equal>
                            </All>
                        </When>
                        <Then>
                            <Dependency module="filers" path="/primaryFiler/firstName"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="/secondaryFilerTotalContributionsLessDistributions"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                                <Equal>
                                    <Left>
                                        <Dependency path="/primaryFilerTotalContributionsLessDistributions"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </Equal>
                            </All>
                        </When>
                        <Then>
                            <Dependency module="filers" path="/secondaryFiler/firstName"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/hasDistributionsInLastThreeYears">
            <Description>Did primary or secondary have any distributions in the last 3 years</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/hasCurrentYearDistributions">
            <Description>Will the primary or secondary have any distributions prior to the extension deadline?
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/hasSelfReportedContributions">
            <Description>Did primary or secondary have any self-reported contributions</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/hasSelfReportedDistributions">
            <Description>Did primary or secondary have any self-reported distributions</Description>

            <Derived>
                <Any>
                    <Dependency path="/hasDistributionsInLastThreeYears"/>
                    <Dependency path="/hasCurrentYearDistributions"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/flowShowSaversEligibleScreen">
            <Description>Whether the TP had contributions / distributions and didn't have a zero credit value
            </Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="/hasSelfReportedDistributionsOrContributions"/>
                    </Not>
                    <Not>
                        <Dependency path="/meetsOneDollarCombinedCreditLimit"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hasSelfReportedDistributionsOrContributions">
            <Description>Did primary or secondary have any self-reported distributions or contributions</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <Dependency path="/hasSelfReportedDistributions"/>
                    <Dependency path="/hasSelfReportedContributions"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/isSingleFilerUnderAge">
            <Description>Is the primary taxpayer (of a non-MFJ return) under 18?</Description>

            <Derived>
                <All>
                    <Dependency module="filers" path="/primaryFiler/isUnder18"/>
                    <Not>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isOnlyPrimaryFilerUnderAge">
            <Description>Is the primary taxpayer (of an MFJ return) the only filer under 18?</Description>

            <Derived>
                <All>
                    <Dependency module="filers" path="/primaryFiler/isUnder18"/>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Not>
                        <Dependency module="filers" path="/secondaryFiler/isUnder18"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isOnlySecondaryFilerUnderAge">
            <Description>Is the secondary taxpayer (of an MFJ return) the only filer under 18?</Description>

            <Derived>
                <All>
                    <Dependency module="filers" path="/secondaryFiler/isUnder18"/>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Not>
                        <Dependency module="filers" path="/primaryFiler/isUnder18"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/areBothFilersUnderAge">
            <Description>Are both taxpayers (of an MFJ return) under 18?</Description>

            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Dependency module="filers" path="/primaryFiler/isUnder18"/>
                    <Dependency module="filers" path="/secondaryFiler/isUnder18"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/willSingleFilerBeClaimedAsDependent">
            <Description>Will the primary taxpayer (of a non-MFJ return) be claimed as a dependent on a different
                return?
            </Description>

            <Derived>
                <All>
                    <Dependency module="filers" path="/primaryFiler/willBeClaimed"/>
                    <Not>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/willOnlyPrimaryFilerBeClaimedAsDependent">
            <Description>Will the primary taxpayer (of an MFJ return) be claimed as a dependent on a different return?
            </Description>

            <Derived>
                <All>
                    <Dependency module="filers" path="/primaryFiler/willBeClaimed"/>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Not>
                        <Dependency module="filers" path="/secondaryFiler/willBeClaimed"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/willOnlySecondaryFilerBeClaimedAsDependent">
            <Description>Will the secondary taxpayer (of an MFJ return) be claimed as a dependent on a different
                return?
            </Description>

            <Derived>
                <All>
                    <Dependency module="filers" path="/secondaryFiler/willBeClaimed"/>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Not>
                        <Dependency module="filers" path="/primaryFiler/willBeClaimed"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/willBothFilersBeClaimedAsDependents">
            <Description>Will both filers be claimed as dependents on another tax return?</Description>

            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Dependency module="filers" path="/primaryFiler/willBeClaimed"/>
                    <Dependency module="filers" path="/secondaryFiler/willBeClaimed"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isSingleFilerFullTimeStudent">
            <Description>Is the primary filer (of a non-MFJ return) the only filer that was a full-time student?
            </Description>

            <Derived>
                <All>
                    <Dependency module="filers" path="/primaryFiler/isStudent"/>
                    <Not>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isOnlyPrimaryFilerFullTimeStudent">
            <Description>Is the primary filer (of an MFJ return) the only filer that was a full-time student?
            </Description>

            <Derived>
                <All>
                    <Dependency module="filers" path="/primaryFiler/isStudent"/>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Not>
                        <Dependency module="filers" path="/secondaryFiler/isStudent"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isOnlySecondaryFilerFullTimeStudent">
            <Description>Is the secondary filer (of an MFJ return) the only filer that was a full-time student?
            </Description>

            <Derived>
                <All>
                    <Dependency module="filers" path="/secondaryFiler/isStudent"/>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Not>
                        <Dependency module="filers" path="/primaryFiler/isStudent"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/areBothFilersFullTimeStudents">
            <Description>Are both filers full-time students?</Description>

            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Dependency module="filers" path="/primaryFiler/isStudent"/>
                    <Dependency module="filers" path="/secondaryFiler/isStudent"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isSingleFilerFailsDistributionsTest">
            <Description>Is the primary filer (of a non-MFJ return) the only filer that has distributions exceeding
                contributions?
            </Description>

            <Derived>
                <All>
                    <Equal>
                        <Left>
                            <Dependency path="/primaryFilerTotalContributionsLessDistributions"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </Equal>
                    <Not>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isOnlyPrimaryFilerFailsDistributionsTest">
            <Description>Is the primary filer (of an MFJ return) the only filer that has distributions exceeding
                contributions?
            </Description>

            <Derived>
                <All>
                    <Equal>
                        <Left>
                            <Dependency path="/primaryFilerTotalContributionsLessDistributions"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </Equal>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Not>
                        <Equal>
                            <Left>
                                <Dependency path="/secondaryFilerTotalContributionsLessDistributions"/>
                            </Left>
                            <Right>
                                <Dollar>0</Dollar>
                            </Right>
                        </Equal>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isOnlySecondaryFilerFailsDistributionsTest">
            <Description>Is the secondary filer (of an MFJ return) the only filer that that has distributions exceeding
                contributions?
            </Description>

            <Derived>
                <All>
                    <Equal>
                        <Left>
                            <Dependency path="/secondaryFilerTotalContributionsLessDistributions"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </Equal>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Not>
                        <Equal>
                            <Left>
                                <Dependency path="/primaryFilerTotalContributionsLessDistributions"/>
                            </Left>
                            <Right>
                                <Dollar>0</Dollar>
                            </Right>
                        </Equal>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/areBothFilersFailDistributionsTest">
            <Description>Are both filers have distributions exceeding contributions?</Description>

            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Equal>
                        <Left>
                            <Dependency path="/primaryFilerTotalContributionsLessDistributions"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="/secondaryFilerTotalContributionsLessDistributions"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/saversCreditKnockouts">
            <Name>TP knocked out for unsupported Saver's Credit situation</Name>
            <Description>Condition the Saver's Credit knockouts on the TP qualifiying for the credit.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="/qualifiedForSaverCredit"/>
                    <Any>
                        <Dependency path="/hasDistributionsInLastThreeYears"/>
                        <Dependency path="/hasCurrentYearDistributions"/>
                        <Dependency path="/hasSelfReportedContributions"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/qualifiedForCreditForElderlyAndDisabled">
            <Description>Whether the TP(s) are qualified for the credit for the elderly or the disabled (Schedule R)
            </Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <All>
                    <Dependency path="/hasTaxLiabilityForEdc"/>
                    <Dependency path="/maybeEligibleForCreditForElderlyAndDisabled"/>
                    <Dependency path="/isQualifiedForEdcBasedOnAgeOrDisability"/>
                    <Dependency path="/isQualifiedForEdcBasedOnAgiLimit"/>
                    <Dependency path="/isQualifiedForEdcBasedOnNonTaxablePayments"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/maybeEligibleForCreditForElderlyAndDisabled">
            <Description>Whether the TP(s) are potentially eligible for the credit for the elderly or the disabled
                (Schedule
                R)
            </Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <All>
                    <Dependency module="schedule3" path="/hasTaxLiabilityAfterCdcc"/>
                    <Dependency path="/maybeEligibleForCreditForElderlyAndDisabledWoTaxLiability"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/maybeEligibleForCreditForElderlyAndDisabledWoTaxLiability">
            <Description>Whether the TP(s) might be eligible for the credit for the elderly or the disabled (Schedule
                R),
                without considering whether they have tax liability against which the credit could be applied.
            </Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <All>
                    <Dependency path="/isEligibleForEdcBasedOnAgeOrDisability"/>
                    <Dependency path="/maybeEligibleForEdcBasedOnRelaxedAgiLimit"/>
                    <Dependency path="/isMaybeEligibleForEdcBasedOnNonTaxablePayments"/>
                    <Any>
                        <Not>
                            <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                        </Not>
                        <All>
                            <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                            <Dependency module="filers" path="/livedApartAllYear"/>
                        </All>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isEdcSectionComplete">
            <Description>Whether the EDC section is considered complete</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Any>
                    <!-- Not eligible or not qualified -->
                    <Not>
                        <Dependency path="/maybeEligibleForCreditForElderlyAndDisabled"/>
                    </Not>
                    <Not>
                        <Dependency path="/qualifiedForCreditForElderlyAndDisabled"/>
                    </Not>

                    <!-- Is qualified -->
                    <Any>
                        <!-- Qualified through elderly -->
                        <All>
                            <Not>
                                <Dependency path="/atLeastOneFilerQualifiedForEdcThroughDisability"/>
                            </Not>
                            <Dependency path="/qualifiedForCreditForElderlyAndDisabled"/>
                        </All>

                        <!-- qualified through disabled (and needs to answer associated questions) -->
                        <All>
                            <Dependency path="/qualifiedForCreditForElderlyAndDisabled"/>
                            <Dependency path="/atLeastOneFilerQualifiedForEdcThroughDisability"/>
                            <Dependency path="/filersCompletedEdcPhysicianStatementQuestions"/>
                            <Dependency path="/isInitialDisabilitySectionComplete"/>
                        </All>
                    </Any>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/edcMaxSingleHohQssAgiLimit">
            <Description>Max AGI Limit to be qualified for EDC (elderly or disabled credit) as single, HoH, QSS filing
                statuses
            </Description>
            <Derived>
                <Dollar>17500</Dollar>
            </Derived>
        </Fact>
        <Fact path="/edcMaxMfsAgiLimit">
            <Description>Max AGI Limit to be qualified for EDC as MFS filing status</Description>
            <Derived>
                <Dollar>12500</Dollar>
            </Derived>
        </Fact>
        <Fact path="/edcMaxMfjBothAgiLimit">
            <Description>Max AGI Limit to be qualified for EDC as MFJ filing status when both filers qualify
            </Description>
            <Derived>
                <Dollar>25000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/edcMaxMfjOnlyOneAgiLimit">
            <Description>Max AGI Limit to be qualified for EDC as MFJ filing status when only one filer qualifies
            </Description>
            <Derived>
                <Dollar>20000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/filers/*/arePaymentsTaxDisabilityIncome">
            <Description>Were any payments on W2 disability income from accident or health plan or pension
                plan paid by an
                employer
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/isRetOnPermOrTotalDisability">
            <Description>Is TP retired or permanent and total disability by the end of TY</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/employerHasMandatoryRetirementAge">
            <Description>Whether the employer has a mandatory retirement age</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/hasMetEmployerMandatoryRetirementAge">
            <Description>Whether the tp reached employer's mandatory retirement age by January 1</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/writableTotalTaxableDisabilityAmount">
            <Description>(Writable)The total amount of taxable disability income from accident or health plan or pension
                plan
                paid by an employer
            </Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/filers/*/totalTaxableDisabilityAmount">
            <Description>The total amount of taxable disability income from accident or health plan or pension plan paid
                by an
                employer.
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="../hasTaxableDisabilityPaymentsAndRetOnDisability"/>
                                <IsComplete>
                                    <Dependency path="../writableTotalTaxableDisabilityAmount"/>
                                </IsComplete>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writableTotalTaxableDisabilityAmount"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/employerHasMandatoryRetirementAgeAndRetired">
            <Description>Whether the employer has a mandatory retirement age</Description>
            <Derived>
                <All>
                    <Dependency path="../isRetOnPermOrTotalDisability"/>
                    <Dependency path="../employerHasMandatoryRetirementAge"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hasPhysicianStatementBothDisabledAndWillNotImprove">
            <Description>In a previous year, has the TP, received a physician's statement certifying both
                permanent/total
                disability AND no reasonable probability to ever improve
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/hasPhysicianStatementBefore1983">
            <Description>Did the TP file a physicians statement for 1983 or earlier regarding permanent/total
                disability
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/askAboutPhysicianStatementSelfCertify">
            <Description>Whether the TP should be asked about the self certification of their physician's statement
            </Description>
            <Derived>
                <Any>
                    <Dependency path="../hasPhysicianStatementBothDisabledAndWillNotImprove"/>
                    <All>
                        <Not>
                            <Dependency path="../hasPhysicianStatementBothDisabledAndWillNotImprove"/>
                        </Not>
                        <Dependency path="../hasPhysicianStatementBefore1983"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filers/*/physicianStatementNeeded">
            <Description>Whether the TP needs a physician's statement</Description>
            <Derived>
                <Any>
                    <All>
                        <Dependency path="../askAboutPhysicianStatementSelfCertify"/>
                        <Not>
                            <Dependency path="../hasSelfCertPhysStatmntOrVetDisbltyVerified"/>
                        </Not>
                    </All>
                    <All>
                        <Not>
                            <Dependency path="../hasPhysicianStatementBothDisabledAndWillNotImprove"/>
                        </Not>
                        <Not>
                            <Dependency path="../hasPhysicianStatementBefore1983"/>
                        </Not>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hasSelfCertPhysStatmntOrVetDisbltyVerified">
            <Description>Did the TP self-certify that due to their disability, they are not able to engage in gainful
                activity
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/physicianStatementNotNeeded">
            <Description>Whether the TP does not need another physician's statement</Description>
            <Derived>
                <All>
                    <Dependency path="../askAboutPhysicianStatementSelfCertify"/>
                    <Dependency path="../hasSelfCertPhysStatmntOrVetDisbltyVerified"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/determinedIfEdcPhysicianStatementIsNeededOrNot">
            <Description>Have we collected enough information to determine if a physician's statement is needed or not
            </Description>
            <Derived>
                <Any>
                    <Not>
                        <Dependency path="/qualifiedForCreditForElderlyAndDisabled"/>
                    </Not>
                    <All>
                        <Dependency path="../isMaybeQualifiedforEdcThroughDisability"/>
                        <Any>
                            <Dependency path="../physicianStatementNeeded"/>
                            <Dependency path="../physicianStatementNotNeeded"/>
                        </Any>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/allDisabledEdcQualifiedDontNeedPhysicianStatement">
            <Description>Whether all of the disabled qualified TPs don't need a physician's statement</Description>
            <Export mef="true"/>
            <Derived>
                <All>
                    <Dependency path="/filersCompletedEdcPhysicianStatementQuestions"/>
                    <Equal>
                        <Left>
                            <CollectionSize>
                                <Dependency path="/filersQualifiedForEdcThroughDisability"/>
                            </CollectionSize>
                        </Left>
                        <Right>
                            <CollectionSize>
                                <Filter path="/filersQualifiedForEdcThroughDisability">
                                    <Dependency path="physicianStatementNotNeeded"/>
                                </Filter>
                            </CollectionSize>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filersCompletedEdcPhysicianStatementQuestions">
            <Description>Whether filer(s) have completed the physician's statement section if needed</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <All>
                                <Dependency path="/primaryFiler/hasCompletedPhysicianStatementQuestions"/>
                                <Dependency path="/secondaryFiler/hasCompletedPhysicianStatementQuestions"/>
                            </All>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/primaryFiler/hasCompletedPhysicianStatementQuestions"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hasCompletedPhysicianStatementQuestions">
            <Description>Whether the TP has completed the physician's statement questions</Description>
            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="../determinedIfEdcPhysicianStatementIsNeededOrNot"/>
                    </IsComplete>
                    <Dependency path="../determinedIfEdcPhysicianStatementIsNeededOrNot"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hasDisabilityIncome">
            <Description>Whether the TP has disability income to report</Description>
            <Derived>
                <All>
                    <Dependency path="../maybeEligibleForDisabilityCredit"/>
                    <Dependency path="../isRetOnPermOrTotalDisability"/>
                    <Any>
                        <Not>
                            <Dependency path="../employerHasMandatoryRetirementAge"/>
                        </Not>
                        <All>
                            <Dependency path="../employerHasMandatoryRetirementAge"/>
                            <Not>
                                <Dependency path="../hasMetEmployerMandatoryRetirementAge"/>
                            </Not>
                        </All>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hasTaxableDisabilityPaymentsAndRetOnDisability">
            <Description>Did tp have any nontaxable payments to report and are retired on disability</Description>
            <Derived>
                <All>
                    <Dependency path="../hasDisabilityIncome"/>
                    <Dependency path="../arePaymentsTaxDisabilityIncome"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/isMaybeQualifiedforEdcThroughDisability">
            <Description>Whether the TP is qualified based on disability</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="filers" path="../isPrimaryFilerOrMfjAndEither"/>
                                <IsComplete>
                                    <Dependency path="../hasTaxableDisabilityPaymentsAndRetOnDisability"/>
                                </IsComplete>
                                <Dependency path="../hasTaxableDisabilityPaymentsAndRetOnDisability"/>
                            </All>
                        </When>
                        <Then>
                            <NotEqual>
                                <Left>
                                    <Dependency path="../totalTaxableDisabilityAmount"/>
                                </Left>
                                <Right>
                                    <Dollar>0</Dollar>
                                </Right>
                            </NotEqual>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/mfjAndOnlyOneQualfiedForEdc">
            <Description>If the TP is MFJ and only one qualifies for EDC</Description>
            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Dependency path="/isInitialDisabilitySectionComplete"/>
                    <Equal>
                        <Left>
                            <CollectionSize>
                                <Filter path="/filers">
                                    <Any>
                                        <Dependency path="isMaybeQualifiedforEdcThroughDisability"/>
                                        <Dependency module="filers" path="age65OrOlder"/>
                                    </Any>
                                </Filter>
                            </CollectionSize>
                        </Left>
                        <Right>
                            <Int>1</Int>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/edcAgiLimitBasedOnQualified">
            <Description>AGI limit to be eligible for EDC based on the number of TPs qualified, only applicable for
                MFJ
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/mfjAndOnlyOneQualfiedForEdc"/>
                        </When>
                        <Then>
                            <Dependency path="/edcMaxMfjOnlyOneAgiLimit"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="/isInitialDisabilitySectionComplete"/>
                        </When>
                        <Then>
                            <Dependency path="/edcRelaxedAgiLimit"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/isQualifiedForEdcBasedOnAgiLimit">
            <Description>Whether the TP(s) are qualified based on AGI limit</Description>
            <Derived>
                <LessThan>
                    <Left>
                        <Dependency module="taxCalculations" path="/agi"/>
                    </Left>
                    <Right>
                        <Dependency path="/edcAgiLimitBasedOnQualified"/>
                    </Right>
                </LessThan>
            </Derived>
        </Fact>
        <Fact path="/edcRelaxedAgiLimit">
            <Description>The less restrictive AGI limit based on filing status, while we don't know if both spouses
                qualify
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <Dependency path="/edcMaxMfjBothAgiLimit"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                        </When>
                        <Then>
                            <Dependency path="/edcMaxMfsAgiLimit"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/edcMaxSingleHohQssAgiLimit"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/edcMaxSingleHohQssNontaxableLimit">
            <Description>Max nontaxable social security or other nontaxable pensions, annuities, or disability
                income to be
                qualified for EDC as single, HoH, QSS filing statuses
            </Description>
            <Derived>
                <Dollar>5000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/edcMaxMfsNontaxableLimit">
            <Description>Max nontaxable social security or other nontaxable pensions, annuities, or disability
                income to be
                qualified for EDC as MFS filing status
            </Description>
            <Derived>
                <Dollar>3750</Dollar>
            </Derived>
        </Fact>
        <Fact path="/edcMaxMfjBothNontaxableLimit">
            <Description>Max nontaxable social security or other nontaxable pensions, annuities, or disability
                income to be
                qualified for EDC as MFJ filing status when both filers qualify
            </Description>
            <Derived>
                <Dollar>7500</Dollar>
            </Derived>
        </Fact>
        <Fact path="/edcMaxMfjOnlyOneNontaxableLimit">
            <Description>Max nontaxable social security or other nontaxable pensions, annuities, or disability
                income to be
                qualified for EDC as MFJ filing status when only one filer qualifies
            </Description>
            <!-- This is currently redudant as it has the same value as /maxSingleHohQssNontaxableLimit. It might make sense
      to combine them but not doing that in case they differ in the future -->
            <Derived>
                <Dollar>5000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/edcRelaxedNontaxableLimit">
            <Description>The less restrictive nontaxable limit based on filing status, while we don't know if both
                spouses
                qualify
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <Dependency path="/edcMaxMfjBothNontaxableLimit"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                        </When>
                        <Then>
                            <Dependency path="/edcMaxMfsNontaxableLimit"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/edcMaxSingleHohQssNontaxableLimit"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/edcNonTaxableLimitBasedOnQualified">
            <Description>The nontaxable limit based on the number of TPs qualified</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/mfjAndOnlyOneQualfiedForEdc"/>
                        </When>
                        <Then>
                            <Dependency path="/edcMaxMfjOnlyOneNontaxableLimit"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="/isInitialDisabilitySectionComplete"/>
                        </When>
                        <Then>
                            <Dependency path="/edcRelaxedNontaxableLimit"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/maybeEligibleForEdcBasedOnRelaxedAgiLimit">
            <Description>Whether the taxpayer might eligible for EDC based on their filing status and the relaxed AGI
                limit.
            </Description>
            <Derived>
                <LessThan>
                    <Left>
                        <Dependency module="taxCalculations" path="/agi"/>
                    </Left>
                    <Right>
                        <Dependency path="/edcRelaxedAgiLimit"/>
                    </Right>
                </LessThan>
            </Derived>
        </Fact>
        <Fact path="/isQualifiedForEdcBasedOnNonTaxablePayments">
            <Description>Whether the TP passes the non taxable payments limit based on the number of people qualified
            </Description>
            <Derived>
                <All>
                    <Dependency path="/hasEdcNetCreditAmount"/>
                    <LessThan>
                        <Left>
                            <Dependency path="/edcTotalNonTaxableAmount"/>
                        </Left>
                        <Right>
                            <Dependency path="/edcNonTaxableLimitBasedOnQualified"/>
                        </Right>
                    </LessThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isMaybeEligibleForEdcBasedOnNonTaxablePayments">
            <Description>Whether the taxpayer is initially eligible for EDC based on whether they exceed the EDC limit
                for
                nontaxable payments.
            </Description>
            <Derived>
                <LessThan>
                    <Left>
                        <Dependency path="/edcInitialNonTaxableAmountForPotentialEligibility"/>
                    </Left>
                    <Right>
                        <Dependency path="/edcRelaxedNontaxableLimit"/>
                    </Right>
                </LessThan>
            </Derived>
        </Fact>
        <Fact path="/atLeastOneFilerQualifiedForEdcThroughDisability">
            <Description>If at least one filer is qualified for EDC based on disability rather than age</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/filersQualifiedForEdcThroughDisability"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/isQualifiedForEdcBasedOnAgeOrDisability">
            <Description>Whether the taxpayer or their spouse is qualified for EDC based off their age or possible
                taxable
                disability income.
            </Description>
            <Derived>
                <Any>
                    <Dependency path="/isEligibleForEdcBasedOnAge"/>
                    <Dependency path="/atLeastOneFilerQualifiedForEdcThroughDisability"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/tpCanBeAskedAboutNonTaxablePayments">
            <Description>Whether the TP is eligible to be asked about their nontaxable payments</Description>
            <Derived>
                <Any>
                    <Dependency path="/isEligibleForEdcBasedOnAge"/>
                    <Dependency path="/primaryFiler/isMaybeQualifiedforEdcThroughDisability"/>
                    <Dependency path="/secondaryFiler/isMaybeQualifiedforEdcThroughDisability"/>
                </Any>
            </Derived>

        </Fact>
        <Fact path="/isEligibleForEdcBasedOnAge">
            <Derived>
                <Dependency module="filers" path="/atLeastOneTpIs65OrOlder"/>
            </Derived>
        </Fact>
        <Fact path="/maybeEligibleForEdcBasedOnDisability">
            <Description>Whether anyone on the tax return is eligible for the EDC credit based on their disability
                information.
            </Description>
            <Derived>
                <All>
                    <Dependency module="filers" path="/atLeastOneTpIsUnder65"/>
                    <Dependency path="/isMaybeEligibleForEdcBasedOnTaxableDisabilityIncome"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isEligibleForEdcBasedOnAgeOrDisability">
            <Description>Whether the taxpayer is eligible based off their age or possible taxable disability income.
            </Description>
            <Derived>
                <Any>
                    <Dependency path="/isEligibleForEdcBasedOnAge"/>
                    <Dependency path="/maybeEligibleForEdcBasedOnDisability"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/isMaybeEligibleForEdcBasedOnTaxableDisabilityIncome">
            <Description>Whether the taxpayer might initially be eligible for receiving EDC based on if they have
                received any
                income reported on a W-2
            </Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency module="formW2s" path="/wages"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/edcLine1">
            <Description>Elderly or Disabled Credit (Schedule R) Line 1</Description>
            <Export mef="true"/>
            <Derived>
                <All>
                    <Any>
                        <Dependency module="filingStatus" path="/isFilingStatusSingle"/>
                        <Dependency module="filingStatus" path="/isFilingStatusHOH"/>
                        <Dependency module="filingStatus" path="/isFilingStatusQSS"/>
                    </Any>
                    <Dependency module="filers" path="/primaryFiler/age65OrOlder"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/edcLine2">
            <Description>Elderly or Disabled Credit (Schedule R) Line 2</Description>
            <Export mef="true"/>
            <Derived>
                <All>
                    <Any>
                        <Dependency module="filingStatus" path="/isFilingStatusSingle"/>
                        <Dependency module="filingStatus" path="/isFilingStatusHOH"/>
                        <Dependency module="filingStatus" path="/isFilingStatusQSS"/>
                    </Any>
                    <Dependency path="/primaryFiler/isMaybeQualifiedforEdcThroughDisability"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/edcLine3">
            <Description>Elderly or Disabled Credit (Schedule R) Line 3</Description>
            <Export mef="true"/>
            <Derived>
                <Any>
                    <All>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        <Dependency module="filers" path="/primaryFiler/age65OrOlder"/>
                        <Dependency module="filers" path="/secondaryFiler/age65OrOlder"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/edcLine4">
            <Description>Elderly or Disabled Credit (Schedule R) Line 4</Description>
            <Export mef="true"/>
            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Not>
                        <Dependency module="filers" path="/primaryFiler/age65OrOlder"/>
                    </Not>
                    <Not>
                        <Dependency module="filers" path="/secondaryFiler/age65OrOlder"/>
                    </Not>
                    <Equal>
                        <Left>
                            <CollectionSize>
                                <Dependency path="/filersQualifiedForEdcThroughDisability"/>
                            </CollectionSize>
                        </Left>
                        <Right>
                            <Int>1</Int>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/edcLine5">
            <Description>Elderly or Disabled Credit (Schedule R) Line 5</Description>
            <Export mef="true"/>
            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Not>
                        <Dependency module="filers" path="/primaryFiler/age65OrOlder"/>
                    </Not>
                    <Not>
                        <Dependency module="filers" path="/secondaryFiler/age65OrOlder"/>
                    </Not>
                    <Equal>
                        <Left>
                            <CollectionSize>
                                <Dependency path="/filersQualifiedForEdcThroughDisability"/>
                            </CollectionSize>
                        </Left>
                        <Right>
                            <Int>2</Int>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/edcLine6">
            <Description>Elderly or Disabled Credit (Schedule R) Line 6</Description>
            <Export mef="true"/>
            <Derived>
                <Any>
                    <!-- Primary is 65 or older while secondary is under 65 and retired on perm and total disability -->
                    <All>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        <Dependency module="filers" path="/primaryFiler/age65OrOlder"/>
                        <Not>
                            <Dependency module="filers" path="/secondaryFiler/age65OrOlder"/>
                        </Not>
                        <Dependency path="/secondaryFiler/isMaybeQualifiedforEdcThroughDisability"/>
                    </All>
                    <!-- Secondary is 65 or older while primary is under 65 and retired on perm and total disability -->
                    <All>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        <Dependency module="filers" path="/secondaryFiler/age65OrOlder"/>
                        <Not>
                            <Dependency module="filers" path="/primaryFiler/age65OrOlder"/>
                        </Not>
                        <Dependency path="/primaryFiler/isMaybeQualifiedforEdcThroughDisability"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/edcLine7">
            <Description>Elderly or Disabled Credit (Schedule R) Line 7</Description>
            <Export mef="true"/>
            <Derived>
                <Any>
                    <!-- Primary is 65 or older while secondary is under 65 and NOT retired on perm and total disability -->
                    <All>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        <Dependency module="filers" path="/primaryFiler/age65OrOlder"/>
                        <Not>
                            <Dependency module="filers" path="/secondaryFiler/age65OrOlder"/>
                        </Not>
                        <Not>
                            <Dependency path="/secondaryFiler/isMaybeQualifiedforEdcThroughDisability"/>
                        </Not>
                    </All>
                    <!-- Secondary is 65 or older while primary is under 65 and NOT retired on perm and total disability -->
                    <All>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        <Dependency module="filers" path="/secondaryFiler/age65OrOlder"/>
                        <Not>
                            <Dependency module="filers" path="/primaryFiler/age65OrOlder"/>
                        </Not>
                        <Not>
                            <Dependency path="/primaryFiler/isMaybeQualifiedforEdcThroughDisability"/>
                        </Not>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/edcLine8">
            <Description>Elderly or Disabled Credit (Schedule R) Line 8</Description>
            <Export mef="true"/>
            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                    <Dependency module="filers" path="/primaryFiler/age65OrOlder"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/edcLine9">
            <Description>Elderly or Disabled Credit (Schedule R) Line 9</Description>
            <Export mef="true"/>
            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                    <Not>
                        <Dependency module="filers" path="/primaryFiler/age65OrOlder"/>
                    </Not>
                    <Dependency path="/primaryFiler/isMaybeQualifiedforEdcThroughDisability"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/edcFilingStatusAmt">
            <Description>Elderly or Disabled Credit (Schedule R) Line 10, which is the filing status amount
            </Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Any>
                                <Dependency path="/edcLine1"/>
                                <Dependency path="/edcLine2"/>
                                <Dependency path="/edcLine4"/>
                                <Dependency path="/edcLine7"/>
                            </Any>
                        </When>
                        <Then>
                            <Dependency path="/edcMaxMfjOnlyOneNontaxableLimit"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Any>
                                <Dependency path="/edcLine3"/>
                                <Dependency path="/edcLine5"/>
                                <Dependency path="/edcLine6"/>
                            </Any>
                        </When>
                        <Then>
                            <Dependency path="/edcMaxMfjBothNontaxableLimit"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Any>
                                <Dependency path="/edcLine8"/>
                                <Dependency path="/edcLine9"/>
                            </Any>
                        </When>
                        <Then>
                            <Dependency path="/edcMaxMfsNontaxableLimit"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/statusBasedDisabilityIncome">
            <Description>The modified taxable disability income for Schedule R, Line 11</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/edcLine6"/>
                        </When>
                        <Then>
                            <Switch>
                                <Case>
                                    <When>
                                        <Dependency path="/primaryFiler/isMaybeQualifiedforEdcThroughDisability"/>
                                    </When>
                                    <Then>
                                        <Add>
                                            <Dependency path="/primaryFiler/totalTaxableDisabilityAmount"/>
                                            <Dollar>5000</Dollar>
                                        </Add>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Dependency path="/secondaryFiler/isMaybeQualifiedforEdcThroughDisability"/>
                                    </When>
                                    <Then>
                                        <Add>
                                            <Dependency path="/secondaryFiler/totalTaxableDisabilityAmount"/>
                                            <Dollar>5000</Dollar>
                                        </Add>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Any>
                                <Dependency path="/edcLine2"/>
                                <Dependency path="/edcLine9"/>
                            </Any>
                        </When>
                        <Then>
                            <Dependency path="/primaryFiler/totalTaxableDisabilityAmount"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="/edcLine4"/>
                        </When>
                        <Then>
                            <Switch>
                                <Case>
                                    <When>
                                        <Dependency path="/primaryFiler/isMaybeQualifiedforEdcThroughDisability"/>
                                    </When>
                                    <Then>
                                        <Dependency path="/primaryFiler/totalTaxableDisabilityAmount"/>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Dependency path="/secondaryFiler/isMaybeQualifiedforEdcThroughDisability"/>
                                    </When>
                                    <Then>
                                        <Dependency path="/secondaryFiler/totalTaxableDisabilityAmount"/>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency path="/edcLine5"/>
                        </When>
                        <Then>
                            <Add>
                                <Dependency path="/primaryFiler/totalTaxableDisabilityAmount"/>
                                <Dependency path="/secondaryFiler/totalTaxableDisabilityAmount"/>
                            </Add>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/lesserOfFilingStatusAmountAndTaxableDisabilityIncome">
            <Description>The lesser of Line 10 and Line 11 on Schedule R, used for Line 12 of Sch. R</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/atLeastOneFilerQualifiedForEdcThroughDisability"/>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/edcFilingStatusAmt"/>
                                <Dependency path="/statusBasedDisabilityIncome"/>
                            </LesserOf>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/edcFilingStatusAmt"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/edcNonTaxableSocialSecurityAndRailroadBenefits">
            <Description>1040 Schedule R line 13a: Nontaxable social security and railroad benefits</Description>
            <Export mef="true"/>

            <Derived>
                <Dependency module="socialSecurity" path="/nonTaxableSocialSecurityBenefits"/>
            </Derived>
        </Fact>
        <Fact path="/writableEdcSelfReportedNonTaxablePaymentAmount">
            <Name>(Writable) Nontaxable payment amount</Name>
            <Description>(Writable) Nontaxable veterans’ pensions and any other pension, annuity, or disability benefit
                that
                is excluded from income under any other provision of law, used for Schedule R Line 13b
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/edcInitialNonTaxableAmountForPotentialEligibility">
            <Description>The nontaxable contribution, that is an initial value for Schedule R Line 13c</Description>
            <Derived>
                <Dependency module="socialSecurity" path="/nonTaxableSocialSecurityBenefits"/>
            </Derived>
        </Fact>
        <Fact path="/writableHasSelfReportedNonTaxablePayments">
            <Description>(writable) Did primary or secondary have any nontaxable payments that need to be reported
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/hasSelfReportedNonTaxablePayments">
            <Description>Did primary or secondary have any nontaxable payments that need to be reported (may be
                incomplete)
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/tpCanBeAskedAboutNonTaxablePayments"/>
                        </When>
                        <Then>
                            <Dependency path="/writableHasSelfReportedNonTaxablePayments"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/edcSelfReportedNonTaxablePaymentAmount">
            <Name>Nontaxable payment amount</Name>
            <Description>Additional self reported nontaxable payment not collected elsewhere, used as part of Schedule R
                Line
                13b
            </Description>
            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <All>
                                    <IsComplete>
                                        <Dependency path="/hasSelfReportedNonTaxablePayments"/>
                                    </IsComplete>
                                    <Dependency path="/hasSelfReportedNonTaxablePayments"/>
                                </All>
                            </When>
                            <Then>
                                <Dependency path="/writableEdcSelfReportedNonTaxablePaymentAmount"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/edcNonTaxableIncomeNotIncludingSocialSecurityAndRrb">
            <Description>Nontaxable veterans pensions and any other pension, annuity, or disability benefit that is
                excluded
                from income under any other provision of law, used for Schedule R Line 13b
            </Description>
            <Export mef="true"/>
            <Derived>
                <Add>
                    <Dependency path="/edcSelfReportedNonTaxablePaymentAmount"/>
                    <Dependency module="income" path="/nonTaxablePensionsAndAnnuities"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/edcTotalNonTaxableAmountCal">
            <Description>Helper fact for edcTotalNonTaxableAmount to avoid repeating the calc twice</Description>
            <Derived>
                <Add>
                    <Dependency path="/edcNonTaxableSocialSecurityAndRailroadBenefits"/>
                    <Dependency path="/edcNonTaxableIncomeNotIncludingSocialSecurityAndRrb"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/edcTotalNonTaxableAmount">
            <Description>The total nontaxable contributions, used for Schedule R Line 13c</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="/edcTotalNonTaxableAmountCal"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </When>
                            <Then>
                                <Dependency path="/edcTotalNonTaxableAmountCal"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/edcExemptionAmount">
            <Description>1040 Schedule R Line 15: The EDC exemption amount used to calculate the AGI modified for the
                EDC
            </Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Any>
                                <Dependency path="/edcLine8"/>
                                <Dependency path="/edcLine9"/>
                            </Any>
                        </When>
                        <Then>
                            <Dollar>5000</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Any>
                                <Dependency path="/edcLine1"/>
                                <Dependency path="/edcLine2"/>
                            </Any>
                        </When>
                        <Then>
                            <Dollar>7500</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Any>
                                <Dependency path="/edcLine3"/>
                                <Dependency path="/edcLine4"/>
                                <Dependency path="/edcLine5"/>
                                <Dependency path="/edcLine6"/>
                                <Dependency path="/edcLine7"/>
                            </Any>
                        </When>
                        <Then>
                            <Dollar>10000</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/edcMagiCalc">
            <Description>Helper fact for the edc modified AGI fact to avoid repeating the calc twice.</Description>
            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency module="taxCalculations" path="/agi"/>
                    </Minuend>
                    <Subtrahends>
                        <Dependency path="/edcExemptionAmount"/>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/edcMagi">
            <Description>1040 Schedule R line 16: The modified AGI for the EDC</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="/edcMagiCalc"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </When>
                            <Then>
                                <Dependency path="/edcMagiCalc"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/edcHalfMagi">
            <Description>1040 Schedule R line 17: Half of the EDC modified AGI</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Multiply>
                        <Dependency path="/edcMagi"/>
                        <Rational>1/2</Rational>
                    </Multiply>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/edcAdjustedCreditAmount">
            <Description>1040 Schedule R line 18: The adjusted credit amount</Description>
            <Export mef="true"/>

            <Derived>
                <Add>
                    <Dependency path="/edcTotalNonTaxableAmount"/>
                    <Dependency path="/edcHalfMagi"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/edcNetCreditAmountCalc">
            <Description>Helper fact used to calculate the net EDC amount</Description>
            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency path="/lesserOfFilingStatusAmountAndTaxableDisabilityIncome"/>
                    </Minuend>
                    <Subtrahends>
                        <Dependency path="/edcAdjustedCreditAmount"/>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/edcNetCreditAmount">
            <Description>1040 Schedule R line 19: The net credit amount. The taxpayer is disqualified from taking EDC if
                the
                amount is 0 or less.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/hasEdcNetCreditAmount"/>
                        </When>
                        <Then>
                            <Dependency path="/edcNetCreditAmountCalc"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/hasEdcNetCreditAmount">
            <Description>Whether the taxpayer has a valid (positive non-zero) EDC net credit amount.</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/edcNetCreditAmountCalc"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/netEdcAmount">
            <Description>1040 Schedule R line 20: calculated amount of the net EDC amount.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Multiply>
                        <Dependency path="/edcNetCreditAmount"/>
                        <Rational>15/100</Rational>
                    </Multiply>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/edcTaxLiabilityLimitCalc">
            <Description>Helper fact used calculate whether the TP has any taxes after previously calculated or claimed
                deductions are accounted for.
            </Description>
            <Derived>
                <Round>
                    <Subtract>
                        <Minuend>
                            <Dependency module="taxCalculations" path="/totalTentativeTax"/>
                        </Minuend>
                        <Subtrahends>
                            <Dependency module="schedule3" path="/sched3Line1"/> <!-- PLACEHOLDER -->
                            <Dependency module="cdcc" path="/cdccTotalCredit"/>
                            <Dependency module="schedule3" path="/sched3Line6l"/> <!-- PLACEHOLDER -->
                        </Subtrahends>
                    </Subtract>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/hasTaxLiabilityForEdc">
            <Description>Whether the taxpayer has any taxes that are owed. Note: EDC is a non-refundable credit so the
                TP must
                have a tax liability to claim it.
            </Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/edcTaxLiabilityLimitCalc"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/edcTaxLiabilityLimit">
            <Description>1040 Schedule R line 21: The limit for the EDC defined by the Credit Limit Worksheet. The total
                tax
                minus existing nonrefundable credits.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/hasTaxLiabilityForEdc"/>
                        </When>
                        <Then>
                            <Dependency path="/edcTaxLiabilityLimitCalc"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/totalEdc">
            <Description>1040 Schedule R line 22: The total amount for the credit for the elderly or the disabled.
            </Description>
            <Export mef="true" downstreamFacts="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/qualifiedForCreditForElderlyAndDisabled"/>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/netEdcAmount"/>
                                <Dependency path="/edcTaxLiabilityLimit"/>
                            </LesserOf>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/isReceivingEdc">
            <Description>Whether the TP is receiving a non-zero value for the Elderly or disabled credit</Description>
            <Export mef="true" downstreamFacts="true"/>
            <Derived>
                <All>
                    <Dependency path="/qualifiedForCreditForElderlyAndDisabled"/>
                    <GreaterThan>
                        <Left>
                            <Dependency path="/totalEdc"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isInitialDisabilitySectionComplete">
            <Description>Whether the intitial disability section has been completed for all eligible filers.
            </Description>
            <!-- Complete when the number of filers eligible through disability is equal to the sum of disqualified and
      qualified -->
            <Derived>
                <Equal>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/filersMaybeEligibleForDisability"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Add>
                            <CollectionSize>
                                <Filter path="/filersMaybeEligibleForDisability">
                                    <Dependency path="initialDisabilityIsComplete"/>
                                </Filter>
                            </CollectionSize>
                        </Add>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/filers/*/initialDisabilityIsComplete">
            <Description>Whether the initial disability section can be considered complete for the filer</Description>
            <Derived>
                <IsComplete>
                    <Dependency path="../hasTaxableDisabilityPaymentsAndRetOnDisability"/>
                </IsComplete>
            </Derived>
        </Fact>
        <Fact path="/filersQualifiedForEdcThroughDisability">
            <Description>The collection of filers who are qualified for the EDC via the disabled path. Note: they may
                still be
                disqualified from downstream questions / calculations
            </Description>
            <Derived>
                <Filter path="/filersMaybeEligibleForDisability">
                    <Dependency path="isMaybeQualifiedforEdcThroughDisability"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/filers/*/isDisqualifiedFromEdcThroughDisability">
            <Description>Whether the taxpayer has been disqualified from the disability path for EDC.</Description>
            <Derived>
                <Not>
                    <Dependency path="../isMaybeQualifiedforEdcThroughDisability"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/isDisqualifiedFromEdcBasedOnAgiLimit">
            <Description>Whether the TP was disqualified from EDC based on their AGI and filing status.</Description>
            <Derived>
                <Any>
                    <Not>
                        <Dependency path="/maybeEligibleForEdcBasedOnRelaxedAgiLimit"/>
                    </Not>
                    <Not>
                        <Dependency path="/isQualifiedForEdcBasedOnAgiLimit"/>
                    </Not>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/isDisqualifiedFromEdcBasedOnTaxLiability">
            <Description>Whether the TP cannot claim EDC because after already known deductions their tax liability
                would be
                0.
            </Description>
            <!-- TODO figure out if we need to order this prior to AGI or as-is-->
            <Derived>
                <All>
                    <Not>
                        <Dependency path="/isDisqualifiedFromEdcBasedOnAgiLimit"/>
                    </Not>
                    <IsComplete>
                        <Dependency path="/hasTaxLiabilityForEdc"/>
                    </IsComplete>
                    <Not>
                        <Dependency path="/hasTaxLiabilityForEdc"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isDisqualifiedFromEdcBasedOnNonTaxablePayments">
            <Description>Whether the TP was disqualified from EDC based on their nontaxable payments and filing status
                and not
                other disquals.
            </Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="/isDisqualifiedFromEdcBasedOnAgiLimit"/>
                    </Not>
                    <Not>
                        <Dependency path="/isDisqualifiedFromEdcBasedOnTaxLiability"/>
                    </Not>
                    <Any>
                        <Not>
                            <Dependency path="/isMaybeEligibleForEdcBasedOnNonTaxablePayments"/>
                        </Not>
                        <All>
                            <IsComplete>
                                <Dependency path="/isQualifiedForEdcBasedOnNonTaxablePayments"/>
                            </IsComplete>
                            <Not>
                                <Dependency path="/isQualifiedForEdcBasedOnNonTaxablePayments"/>
                            </Not>
                        </All>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/isDisqualifedFromEdcBasedOnAgeOrDisability">
            <Description>Whether the filer has been disqualified from EDC based on the age requirement and their answer
                to
                retired on total disability and not due to previous disquals.
            </Description>
            <Derived>
                <All>
                    <Dependency module="filers" path="../isPrimaryFilerOrMfjAndEither"/>
                    <Not>
                        <Dependency path="/isDisqualifiedFromEdcBasedOnAgiLimit"/>
                    </Not>
                    <Not>
                        <Dependency path="/isDisqualifiedFromEdcBasedOnTaxLiability"/>
                    </Not>
                    <Not>
                        <Dependency path="/isDisqualifiedFromEdcBasedOnNonTaxablePayments"/>
                    </Not>
                    <Not>
                        <Dependency module="filers" path="../age65OrOlder"/>
                    </Not>
                    <All>
                        <IsComplete>
                            <Dependency path="../isRetOnPermOrTotalDisability"/>
                        </IsComplete>
                        <Not>
                            <Dependency path="../isRetOnPermOrTotalDisability"/>
                        </Not>
                    </All>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/isDisqualifiedByMandatoryRetirementAge">
            <Description>Whether the filer was disqualified from the disabled path through meeting the mandatory
                retirement
                age.
            </Description>
            <Derived>
                <All>
                    <Dependency module="filers" path="../isPrimaryFilerOrMfjAndEither"/>
                    <Not>
                        <Dependency path="/isDisqualifiedFromEdcBasedOnAgiLimit"/>
                    </Not>
                    <Not>
                        <Dependency path="/isDisqualifiedFromEdcBasedOnTaxLiability"/>
                    </Not>
                    <Not>
                        <Dependency path="/isDisqualifiedFromEdcBasedOnNonTaxablePayments"/>
                    </Not>
                    <Not>
                        <Dependency path="../isDisqualifedFromEdcBasedOnAgeOrDisability"/>
                    </Not>
                    <Not>
                        <Dependency module="filers" path="../age65OrOlder"/>
                    </Not>
                    <Not>
                        <Dependency path="../hasDisabilityIncome"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/isDisqualifiedFromEdcBasedOnTaxableDisabilityIncome">
            <Description>Whether the filer has been disqualified from EDC based on their taxable disability income and
                not
                other disquals.
            </Description>
            <Derived>
                <All>
                    <Dependency path="../maybeEligibleForDisabilityCredit"/>
                    <Dependency path="../isRetOnPermOrTotalDisability"/>
                    <Not>
                        <Dependency path="../isMaybeQualifiedforEdcThroughDisability"/>
                    </Not>
                    <IsComplete>
                        <Dependency path="../hasDisabilityIncome"/>
                    </IsComplete>
                    <Any>
                        <Not>
                            <Dependency path="../hasDisabilityIncome"/>
                        </Not>
                        <All>
                            <IsComplete>
                                <Dependency path="../arePaymentsTaxDisabilityIncome"/>
                            </IsComplete>
                            <Not>
                                <Dependency path="../arePaymentsTaxDisabilityIncome"/>
                            </Not>
                        </All>
                        <Equal>
                            <Left>
                                <Dependency path="../totalTaxableDisabilityAmount"/>
                            </Left>
                            <Right>
                                <Dollar>0</Dollar>
                            </Right>
                        </Equal>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filersMaybeEligibleForDisability">
            <Description>The collection of filers who might be eligible for the Elderly or Disabled Credit via the
                disabled
                path.
            </Description>
            <Derived>
                <Filter path="/filers">
                    <Dependency path="maybeEligibleForDisabilityCredit"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/filers/*/maybeEligibleForDisabilityCredit">
            <Description>Whether the filer might be eligible for disability through the EDC and we need to ask them
                additional
                questions.
            </Description>
            <Derived>
                <All>
                    <Dependency path="/maybeEligibleForCreditForElderlyAndDisabled"/>
                    <Not>
                        <Dependency module="filers" path="../age65OrOlder"/>
                    </Not>
                    <Dependency module="filers" path="../isPrimaryFilerOrMfjAndEither"/>
                    <Any>
                        <!-- Primary filer has taxable income that could be disability income -->
                        <All>
                            <Dependency module="filers" path="../isPrimaryFiler"/>
                            <Dependency module="formW2s" path="/primaryFilerHasW2WagesGreaterThan0"/>
                        </All>
                        <!-- Same for Secondary filer ^ -->
                        <All>
                            <Dependency module="filers" path="../isSecondaryFiler"/>
                            <Dependency module="formW2s" path="/secondaryFilerHasW2WagesGreaterThan0"/>
                        </All>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerIsEligibleForEdcThroughDisability">
            <Description>Is the secondary filer eligible for EDC through disability, used for MeF to ensure filer is
                also MFJ
            </Description>
            <Export mef="true"/>
            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Dependency path="/secondaryFiler/isMaybeQualifiedforEdcThroughDisability"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/edcShouldShowCreditOutcomes">
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/tpCanBeAskedAboutNonTaxablePayments"/>
                        </When>
                        <Then>
                            <IsComplete>
                                <Dependency path="/hasSelfReportedNonTaxablePayments"/>
                            </IsComplete>
                        </Then>
                    </Case>
                    <When>
                        <True/>
                    </When>
                    <Then>
                        <True/>
                    </Then>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerW2And1099IntStateOptions">
            <Name>Income-state options</Name>
            <Description>Whether the filer earned income in a state from the allowed scopedStateOptions</Description>
            <Derived>
                <EnumOptions>
                    <String>anotherState</String>
                    <String>onlySame</String>
                    <String>noForms</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/spouseW2And1099IntStateOptions">
            <Name>Income-state options</Name>
            <Description>Whether the filer earned income in a state from the allowed scopedStateOptions</Description>
            <Derived>
                <EnumOptions>
                    <String>anotherState</String>
                    <String>onlySame</String>
                    <String>noForms</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/spouseScopedStateOptions">
            <Name>Options for whether the filers spouse lived in the same state with them</Name>
            <Description>Options to describe whether the filer's spouse lived in the same state as the
                filer all year
            </Description>
            <Derived>
                <EnumOptions>
                    <String>sameState</String>
                    <String>moreThanOne</String>
                    <String>noneOfTheAbove</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/addressIsInMA">
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/address/stateOrProvence"/>
                    </Left>
                    <Right>
                        <String>MA</String>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/addressIsInME">
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/address/stateOrProvence"/>
                    </Left>
                    <Right>
                        <String>ME</String>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/taxDay">
            <Description>The tax day for the primary filer, taking their contact address into account</Description>
            <Export downstreamFacts="true"/>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Switch>

                    <Case>
                        <When>
                            <Any>
                                <!-- Assume the later day until we know better -->
                                <Not>
                                    <IsComplete>
                                        <Dependency path="/address"/>
                                    </IsComplete>
                                </Not>
                                <!-- If we do know where you are, and you're in MA or ME, use the further day.
                     ME and MA have a later filing deadline due to state holidays
                -->
                                <All>
                                    <IsComplete>
                                        <Dependency path="/address"/>
                                    </IsComplete>
                                    <Any>
                                        <Dependency path="/addressIsInMA"/>
                                        <Dependency path="/addressIsInME"/>
                                    </Any>
                                </All>
                            </Any>
                        </When>
                        <Then>
                            <Dependency module="constants" path="/massachusettsAndMaineDeadline"/>
                        </Then>
                    </Case>

                    <!-- Otherwise, it's April 15th -->
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency module="constants" path="/defaultTaxDay"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers">
            <Name>Filers</Name>
            <Description>The filers of the tax return. If a joint return, there are two filers; otherwise,
                there is only one.
            </Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Collection/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/firstName">
            <Name>First name</Name>
            <Description>The first name of the filer. Must match the name as known to the Social Security
                Administration.
            </Description>
            <Export mef="true" stateSystems="true" downstreamFacts="true"/>

            <Writable>
                <String/>
                <Limit type="Match">
                    <String>[\sA-Za-z\-]+</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>20</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/filers/*/writableMiddleInitial">
            <Name>Middle initial</Name>
            <Description>The middle initial of the filer. Must match the name as known to the Social
                Security Administration.
                This is the writable optional fact. Can be left incomplete. Please use the derived fact in
                downstream
                calculations.
            </Description>

            <Writable>
                <String/>
                <Limit type="Match">
                    <String>[\sA-Za-z\-]+</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>1</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/filers/*/middleInitial">
            <Name>Middle Initial</Name>
            <Description>The middle initial of the filer. Must match the name as known to the Social
                Security Administration.
            </Description>
            <Export mef="true" stateSystems="true" downstreamFacts="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableMiddleInitial"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../writableMiddleInitial"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <String/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/firstNameAndInitial">
            <Name>First name and initial</Name>
            <Description>The first name and middle initial of the filer.</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../middleInitial"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Paste>
                                <Dependency path="../firstName"/>
                                <Dependency path="../middleInitial"/>
                            </Paste>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="../firstName"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/lastName">
            <Name>Last name</Name>
            <Description>The last name of the filer. Must match the name as known to the Social Security
                Administration.
            </Description>
            <Export downstreamFacts="true" mef="true" stateSystems="true"/>

            <Writable>
                <String/>
                <Limit type="Match">
                    <String>[\sA-Za-z\-]+</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>20</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/filers/*/fullName">
            <Name>Full name</Name>
            <Description>
                The first name, middle initial, and last name of the filer.
                Primarily used for the frontend.
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Paste>
                    <Dependency path="../firstNameAndInitial"/>
                    <Dependency path="../lastName"/>
                    <Dependency path="../suffixString"/>
                </Paste>
            </Derived>
        </Fact>
        <Fact path="/filers/*/mefFullName">
            <Description>
                The first name, middle initial, and last name of the filer.
                Abbreviated/truncated to MeF requirements.
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <TruncateNameForMeF>
                    <FirstName>
                        <Dependency path="../firstName"/>
                    </FirstName>
                    <MiddleInitial>
                        <Dependency path="../middleInitial"/>
                    </MiddleInitial>
                    <LastName>
                        <Dependency path="../lastName"/>
                    </LastName>
                    <Suffix>
                        <Dependency path="../suffixString"/>
                    </Suffix>
                </TruncateNameForMeF>
            </Derived>
        </Fact>
        <Fact path="/filers/*/writableSuffix">
            <Description>The suffix of the filer.</Description>

            <Writable>
                <Enum optionsPath="/suffixOptions"/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/suffixString">
            <Name>Suffix string</Name>
            <Description>The suffix of the filer as a string for concatenation.</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableSuffix"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <AsString>
                                <Dependency path="../writableSuffix"/>
                            </AsString>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <String/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/suffix">
            <Description>
                The suffix of the filer. Exported for mef
            </Description>
            <Export mef="true" stateSystems="true"/>

            <Derived>
                <Dependency path="../writableSuffix"/>
            </Derived>
        </Fact>
        <Fact path="/filers/*/tin">
            <Name>TIN</Name>
            <Description>The taxpayer identification number of the filer.</Description>
            <Export downstreamFacts="true" mef="true" stateSystems="true"/>

            <Writable>
                <TIN/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/dateOfBirth">
            <Name>Date of birth</Name>
            <Description>The date of birth of the filer.</Description>
            <Export downstreamFacts="true" mef="true" stateSystems="true"/>

            <Writable>
                <Day/>
                <Limit type="Max">
                    <Day>2024-01-01</Day>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/filers/*/dayBeforeDateOfBirth">
            <Description>The day before the filer's birthday</Description>
            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency path="../dateOfBirth"/>
                    </Minuend>
                    <Subtrahends>
                        <Days>1</Days>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/filers/*/ageCalculatedDayBeforeDOB">
            <Name>Age</Name>
            <Description>The age of the filer, calcualted using their birthday as the day before their
                date of birth.
            </Description>

            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency module="constants" path="/taxYear"/>
                    </Minuend>
                    <Subtrahends>
                        <Dependency path="../dayBeforeDateOfBirth/year"/>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerDateOfBirthXml">
            <Description>Used to set SelfSelectPINGrp.SpouseBirthDt in XML when applicable</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="standardDeduction"
                                            path="/isSpouseInfoApplicableForStandardDeductions"/>
                                <Not>
                                    <Dependency path="/inScopeDeceasedSpouse"/>
                                </Not>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/secondaryFiler/dateOfBirth"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/age">
            <Name>Age</Name>
            <Description>The age of the filer on the last day of the tax year.</Description>

            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency module="constants" path="/taxYear"/>
                    </Minuend>
                    <Subtrahends>
                        <Dependency path="../dateOfBirth/year"/>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/filers/*/eitc8862Age">
            <Name>Age</Name>
            <Description>The age of the filer with no qualifying children at then end of tax year who
                requires form 8862 for
                EITC; for PDF form 8862
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="eitc" path="/form8862RequiredAndHasNoQualifyingChildren"/>
                        </When>
                        <Then>
                            <Dependency path="../ageForSelfOnlyEitcLimits"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/isStudent">
            <Name>Filer is a student</Name>
            <Description>Whether the filer is a student.</Description>
            <Export downstreamFacts="true" stateSystems="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/isDisabled">
            <Name>Filer is Disabled</Name>
            <Description>Whether the filer is disabled.</Description>
            <Export mef="true" stateSystems="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/isStudentOrDisabled">
            <Description>Filer is either a student or disabled</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Any>
                    <Dependency path="../isStudent"/>
                    <Dependency path="../isDisabled"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filers/*/isStudentOnly">
            <Description>Filer is a student and is not disabled. Used for content conditions.</Description>

            <Derived>
                <All>
                    <Dependency path="../isStudent"/>
                    <Not>
                        <Dependency path="../isDisabled"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/isDisabledOnly">
            <Description>Filer is disabled and not is not a student. Used for content conditions.</Description>

            <Derived>
                <All>
                    <Dependency path="../isDisabled"/>
                    <Not>
                        <Dependency path="../isStudent"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/isStudentAndDisabled">
            <Description>Filer is a student and is disabled. Used for content conditions.</Description>

            <Derived>
                <All>
                    <Dependency path="../isStudent"/>
                    <Dependency path="../isDisabled"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isStudentOnly">
            <Description>Filer (or spouse if MFJ) is a student and neither is disabled</Description>

            <Derived>
                <All>
                    <Any>
                        <Dependency path="/primaryFiler/isStudent"/>
                        <Dependency path="/secondaryFiler/isStudent"/>
                    </Any>
                    <Not>
                        <Dependency path="/primaryFiler/isDisabled"/>
                    </Not>
                    <Any>
                        <Not>
                            <Dependency path="/secondaryFiler/isDisabled"/>
                        </Not>
                        <Not>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </Not>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isDisabledOnly">
            <Description>Filer (or spouse if MFJ) is disabled and neither is a student</Description>

            <Derived>
                <All>
                    <Any>
                        <Dependency path="/primaryFiler/isDisabled"/>
                        <Dependency path="/secondaryFiler/isDisabled"/>
                    </Any>
                    <Not>
                        <Dependency path="/primaryFiler/isStudent"/>
                    </Not>
                    <Any>
                        <Not>
                            <Dependency path="/secondaryFiler/isStudent"/>
                        </Not>
                        <Not>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </Not>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isStudentAndDisabled">
            <Description>Filer (or spouse if MFJ) is a student and filer (or spouse if MFJ) is disabled</Description>

            <Derived>
                <Any>
                    <All>
                        <Any>
                            <Dependency path="/primaryFiler/isDisabled"/>
                            <Dependency path="/secondaryFiler/isDisabled"/>
                        </Any>
                        <Any>
                            <Dependency path="/primaryFiler/isStudent"/>
                            <Dependency path="/secondaryFiler/isStudent"/>
                        </Any>
                    </All>
                    <All>
                        <Not>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </Not>
                        <Dependency path="/primaryFiler/isDisabled"/>
                        <Dependency path="/primaryFiler/isStudent"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filers/*/cdccMonthsDisabledOrInSchool">
            <Name>Months disabled or in school</Name>
            <Description>The number of months the filer was either disabled or in school in the current tax year
            </Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Int/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/youngerThan16">
            <Description>Whether the age of the filer is less than 16</Description>
            <Derived>
                <LessThan>
                    <Left>
                        <Dependency path="../age"/>
                    </Left>
                    <Right>
                        <Int>16</Int>
                    </Right>
                </LessThan>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutFilerAgeYoungerThan16">
            <Name>Younger than 16</Name>
            <Description>Whether either filer is younger than 16.</Description>

            <Derived>
                <Any>
                    <LessThan>
                        <Left>
                            <Dependency path="/primaryFiler/age"/>
                        </Left>
                        <Right>
                            <Int>16</Int>
                        </Right>
                    </LessThan>
                    <All>
                        <LessThan>
                            <Left>
                                <Dependency path="/secondaryFiler/age"/>
                            </Left>
                            <Right>
                                <Int>16</Int>
                            </Right>
                        </LessThan>
                        <!-- We don't currently give the TP a way to instead switch to MFS, because we don't
                       want to encourage them to take a worse filing status just to use this tool.
                       They'd be better off using a different filing method.
                    -->
                        <Dependency module="filingStatus" path="/treatAsMFJ"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filers/*/age65OrOlder">
            <Name>Age 65 or older</Name>
            <Description>

                Whether the filer is 65 or older. Pub 554 states "You are considered age 65 at the end of
                the year if
                your 65th birthday is
                on or before January 1 of the following year" so we include the January 1 exception here.

                Do NOT use this fact for EITC calculations -- That age 65 requirement does _not_ have the
                January 1 exception.
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <Dependency path="../ageCalculatedDayBeforeDOB"/>
                    </Left>
                    <Right>
                        <Int>65</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/filers/*/age55OrOlder">
            <Name>Age 55 or older</Name>
            <Description>Whether the filer is 55 or older at the end of their tax year.</Description>
            <!-- needs review if we support fiscal years that don't end on December 31 -->
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <Dependency path="../age"/>
                    </Left>
                    <Right>
                        <Int>55</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/atLeastOneTpIs65OrOlder">
            <Description>At least one TP is 65 or older</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <Any>
                                <Dependency path="/primaryFiler/age65OrOlder"/>
                                <Dependency path="/secondaryFiler/age65OrOlder"/>
                            </Any>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/primaryFiler/age65OrOlder"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/atLeastOneTpIsUnder65">
            <Description>At least one TP is under 65.</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <Any>
                                <Not>
                                    <Dependency path="/primaryFiler/age65OrOlder"/>
                                </Not>
                                <Not>
                                    <Dependency path="/secondaryFiler/age65OrOlder"/>
                                </Not>
                            </Any>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Not>
                                <Dependency path="/primaryFiler/age65OrOlder"/>
                            </Not>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/age25OrOlderForEitc">
            <Name>Age 25 or older</Name>
            <Description>
                Whether the filer is 25 or older for EITC.
                A person is considered 25 if they turned 25 during the tax
                year, or on January 1 of the next year.

                Per pub 596 for 2022 "You meet the age test if you were born after
                December 31, 1957, and before January 2,
                1998. If you are married filing a joint return, you meet the age test if
                either you or your spouse was born
                after December 31, 1957, and before January 2, 1998."

                This is explicitly
                different than the rule for turning 65 (the maximum age for EITC without QCs), which occurs
                on the person's
                birthday, not the day after. Because the tax code is silly.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <Dependency path="../ageForSelfOnlyEitcLimits"/>
                    </Left>
                    <Right>
                        <Int>25</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/filers/*/ageForSelfOnlyEitcLimits">
            <Description>
                The fact that should be listed as someone's age on Form 8862 for EITC. Uses convoluted logic
                because
                the age for the 25 year old minimum age uses the day before the person's birthday,
                and the age for the 65 year
                old maximum uses the day of the person's brithday.
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <!-- We are looking at a deceased secondary filer and they may have turned 25 during
                the year -->
                                <Dependency path="/isWidowedInTaxYear"/>
                                <Dependency path="../isSecondaryFiler"/>
                                <Equal>
                                    <Left>
                                        <Dependency path="../age"/>
                                    </Left>
                                    <Right>
                                        <Int>25</Int>
                                    </Right>
                                </Equal>
                            </All>
                        </When>
                        <Then>
                            <!-- We have to use the day before their birthday as their day -->
                            <Dependency path="/secondaryFilerAgeDayBeforeDeath"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <!-- We are looking at a deceased secondary filer and we don't have to worry about
                them being 25 -->
                                <Dependency path="/isWidowedInTaxYear"/>
                                <Dependency path="../isSecondaryFiler"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/secondaryFilerAgeDayOfDeath"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <!-- They aren't deceased, but may have turned 25 during the year so we look at their
              age the day before
              their birthday to handle that special rule -->
                            <Any>
                                <Equal>
                                    <Left>
                                        <Dependency path="../ageCalculatedDayBeforeDOB"/>
                                    </Left>
                                    <Right>
                                        <Int>25</Int>
                                    </Right>
                                </Equal>
                            </Any>
                        </When>
                        <Then>
                            <Dependency path="../ageCalculatedDayBeforeDOB"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <!-- Otherwise, we can just look at their age -->
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="../age"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/age64OrYoungerForEitc">
            <Name>Age 64 or younger</Name>
            <Description>
                Whether the filer is 64 or younger for EITC.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <LessThanOrEqual>
                    <Left>
                        <Dependency path="../ageForSelfOnlyEitcLimits"/>
                    </Left>
                    <Right>
                        <Int>64</Int>
                    </Right>
                </LessThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/filers/*/occupation">
            <Name>Occupation</Name>
            <Description>The occupation of the filer.</Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <String/>
                <Limit type="Match">
                    <String>[\sA-Za-z0-9\-]+</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>35</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/filers/*/mefOccupation">
            <Name>Occupation code</Name>
            <Description>The occupation code of the filer.</Description>
            <Export mef="true"/>

            <Derived>
                <Trim>
                    <StripChars>
                        <Input>
                            <Dependency path="../occupation"/>
                        </Input>
                        <Allow>
                            <Dependency module="mefTypes" path="/mefOccupationType"/>
                        </Allow>
                    </StripChars>
                </Trim>
            </Derived>
        </Fact>
        <Fact path="/filers/*/identityPin">
            <Name>Identity Pin</Name>
            <Description>The identity pin of the filer</Description>
            <Export mef="true"/>

            <Writable>
                <IPPIN/>
            </Writable>
        </Fact>
        <Fact path="/spouseIdentityPin">
            <Name>Spouse Identity Pin</Name>
            <Description>The identity pin of the spouse. Used in the Return Header XML.</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Not>
                                    <Dependency path="/inScopeDeceasedSpouse"/>
                                </Not>
                                <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                                <Dependency path="/spouseHasIpPin"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/secondaryFiler/identityPin"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerHasIpPin">
            <Export downstreamFacts="true" mef="true"/>
            <Derived>
                <All>
                    <Dependency path="/primaryFiler/hasIpPin"/>
                    <IsComplete>
                        <Dependency path="/primaryFiler/identityPin"/>
                    </IsComplete>
                </All>
            </Derived>
        </Fact>
        <Fact path="/spouseHasIpPin">
            <Export downstreamFacts="true"/>
            <Derived>
                <All>
                    <Dependency path="/secondaryFiler/hasIpPin"/>
                    <IsComplete>
                        <Dependency path="/secondaryFiler/identityPin"/>
                    </IsComplete>
                </All>
            </Derived>
        </Fact>
        <Fact path="/xmlShouldIncludeSpouseIPPIN">
            <Export mef="true"/>
            <Derived>
                <All>
                    <Dependency path="/spouseHasIpPin"/>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/xmlShouldIncludeSpouseNameControlTxt">
            <Export mef="true"/>
            <Derived>
                <All>
                    <Any>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                    </Any>
                    <IsComplete>
                        <Dependency path="/secondaryFiler/lastName"/>
                    </IsComplete>
                </All>
            </Derived>
        </Fact>
        <Fact path="/xmlShouldIncludeSpouseTIN">
            <Export mef="true"/>
            <Derived>
                <All>
                    <Dependency path="/secondaryFiler/hasTin"/>
                    <IsComplete>
                        <Dependency path="/secondaryFiler/tin"/>
                    </IsComplete>
                    <Any>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/isBlind">
            <Name>Filer is blind</Name>
            <Description>Whether the filer is considered blind for tax purposes.</Description>
            <Export downstreamFacts="true" mef="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/hasIpPin">
            <Name>Filer has IP Pin</Name>
            <Description>Whether the filer has been assigned an IP pin from the IRS</Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/flowIpPinReady">
            <Name>Filer has IP Pin</Name>
            <Description>Whether the filer is ready to input their IP pin in the flow</Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/flowSpouseIpPinReady">
            <Name>Filer has spouse's IP Pin</Name>
            <Description>Whether the filer is ready to input their spouse's IP pin in the flow. Currently
                separated to be able
                to conjugate the pronoun in the question, but we can eliminate this variable if we improve
                our translation
                customization.
            </Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/primaryFilerIsMissingIpPin">
            <Export downstreamFacts="true"/>
            <Derived>
                <All>
                    <Dependency module="filers" path="/primaryFiler/hasIpPin"/>
                    <Not>
                        <Dependency module="filers" path="/primaryFiler/flowIpPinReady"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerIsMissingIpPin">
            <Export downstreamFacts="true"/>
            <Derived>
                <All>
                    <Dependency module="filers" path="/secondaryFiler/hasIpPin"/>
                    <Not>
                        <Dependency module="filers" path="/secondaryFiler/flowSpouseIpPinReady"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/devWritableShowDepFilersDependentsAlert">
            <Description>This fact is written to by the InterceptingFactGraph when we should show users the claimable
                dependents alert in Family and Household.
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/showDepFilersDependentsAlert">
            <Description>Whether or not we should show a TaxAlert to filers alerting them of a change in their
                dependents
                claimable status. Because of them now being treated as dependents when they weren't previously.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="/devWritableShowDepFilersDependentsAlert"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="/devWritableShowDepFilersDependentsAlert"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/canBeClaimed">
            <Name>Filer can be claimed as a dependent</Name>
            <Description>Whether the filer can be claimed as a dependent by another taxpayer.</Description>
            <Export downstreamFacts="true" mef="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/canBeClaimedNoQc">
            <Name>Filer can be claimed as a dependent and has no qualifying children</Name>
            <Description>Whether the filer can be claimed as a dependent by another taxpayer and has no
                qualifying children;
                used for PDF form 8862
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="eitc" path="/form8862RequiredAndHasNoQualifyingChildren"/>
                        </When>
                        <Then>
                            <Dependency path="../canBeClaimed"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/canNotBeClaimedNoQc">
            <Name>Filer cannot be claimed as a dependent</Name>
            <Description>Whether the filer cannot be claimed as a dependent by another taxpayer and has no
                qualifying
                children;
                used for pdf form 8862
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="eitc" path="/form8862RequiredAndHasNoQualifyingChildren"/>
                        </When>
                        <Then>
                            <Not>
                                <Dependency path="../canBeClaimed"/>
                            </Not>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/potentialClaimerMustFile">
            <Name>Person who could claim filer as dependent must file</Name>
            <Description>Whether the person who could claim the filer as a dependent is required to file a
                tax return.
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/potentialClaimerDidFile">
            <Name>Person who could claim filer as dependent filed</Name>
            <Description>Whether the person who could claim the filer as a dependent filed a tax return.</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/primaryFilerPotentialClaimerFiledOnlyForRefund">
            <Name>Person who could claim the primary filer as dependent filed solely for refund</Name>
            <Description>Whether the person who could claim the primary filer as a dependent filed a tax
                return solely for
                refund of withholding or estimated tax paid.
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/willBeClaimed">
            <Name>Filer expects to be claimed as a dependent</Name>
            <Description>Whether the filer expects to be claimed as a dependent by another taxpayer. Note that this fact
                should not be used directly, as it can be overwridden if we later learn no one else is allowed to claim
                the
                taxpayer; use /primaryFilerIsClaimedAsDependent or /secondaryFilerIsClaimedAsDependent instead.
            </Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/primaryFilerIsClaimedAsDependent">
            <Name>Filer is claimed as a dependent</Name>
            <Description>Whether the filer is claimed as a dependent by another taxpayer.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="/primaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits"/>
                    <Dependency path="/primaryFiler/willBeClaimed"/>
                    <Not>
                        <Dependency path="/taxpayerCannotBeClaimed"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerIsClaimedAsDependent">
            <Name>Secondary filer is claimed as a dependent</Name>
            <Description>Whether the secondary filer is claimed as a dependent by another taxpayer. False if not MFJ.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/treatAsMFJ"/>
                    <Not>
                        <Dependency path="/MFJRequiredToFile"/>
                    </Not>
                    <Dependency path="/secondaryFiler/canBeClaimed"/>
                    <Dependency path="/secondaryFiler/willBeClaimed"/>
                    <Not>
                        <Dependency path="/taxpayerCannotBeClaimed"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/eitherFilerIsClaimedAsDependent">
            <Name>A filer on the return is claimed as a dependent</Name>
            <Description>Either the primary or secondary filer is claimed as a dependent by another taxpayer.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <Dependency path="/primaryFilerIsClaimedAsDependent"/>
                    <Dependency path="/secondaryFilerIsClaimedAsDependent"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/MFJDependentsFilingForCredits">
            <Description>
                Whether the MFJ filer who can be someone's dependent is claiming a refund only and forgoing
                tax
                benefits like
                dependents and certain credits
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/MFJNotRequiredToFileAndEitherFilerCanBeClaimed">
            <Description>
                Whether the MFJ filer is claiming a refund only and neither primary nor secondary can be claimed as a
                dependent
            </Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency path="/MFJRequiredToFile"/>
                    </Not>
                    <Dependency path="/eitherFilerCanBeClaimed"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/MFJClaimingRefundOnly">
            <Description>Whether the MFJ filer is claiming a refund only and forgoing tax benefits like
                dependents and certain
                credits
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Not>
                    <Dependency path="/MFJDependentsFilingForCredits"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits">
            <Name>Taxpayer could be a dependent</Name>
            <Description>Whether the primary TP could be a dependent. If they are not MFJ, then they in
                fact are a dependent.
                The only way for them not to be a dependent is if they file as MFJ and are required to file,
                or if they file as
                MFJ and opt to claim tax benefits.
            </Description>

            <Derived>
                <All>
                    <Dependency path="/primaryFiler/canBeClaimed"/>
                    <Any>
                        <Dependency path="/primaryFiler/potentialClaimerMustFile"/>
                        <All>
                            <Not>
                                <Dependency path="/primaryFiler/potentialClaimerMustFile"/>
                            </Not>
                            <Dependency path="/primaryFiler/potentialClaimerDidFile"/>
                            <Not>
                                <Dependency path="/primaryFilerPotentialClaimerFiledOnlyForRefund"/>
                            </Not>
                        </All>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerSocialSecurityNumberRestrictionsAreUnderstood">
            <Description>If the primary filer has restrictions on their social security number, we know
                them
            </Description>
            <Derived>
                <Any>
                    <!-- We didn't need to collect ssn work status so we're good -->
                    <Not>
                        <Dependency path="/primaryFiler/needsSSNWorkStatus"/>
                    </Not>
                    <All>
                        <!-- We collected it and we know everything we need to know about the validity -->
                        <Dependency path="/primaryFiler/needsSSNWorkStatus"/>
                        <IsComplete>
                            <Dependency path="/primaryFilerSsnEmploymentValidity"/>
                        </IsComplete>

                        <!-- We collected it but still needed to know if it was for a federally funded benefit
            only -->
                        <Any>
                            <Not>
                                <Dependency path="/primaryFiler/ssnNotValidForEmployment"/>
                            </Not>
                            <All>
                                <Dependency path="/primaryFiler/ssnNotValidForEmployment"/>
                                <IsComplete>
                                    <Dependency path="/primaryFiler/ssnOnlyForFederallyFundedBenefit"/>
                                </IsComplete>
                            </All>
                        </Any>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerSocialSecurityNumberRestrictionsAreComplete">
            <Description>If the secondary filer has restrictions on their social security number, we know
                they completed
                answering questions about them.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <!-- We didn't need to collect ssn work status so we're good -->
                    <Not>
                        <Dependency path="/secondaryFiler/needsSSNWorkStatus"/>
                    </Not>
                    <All>
                        <!-- We collected it and we know everything we need to know about the validity -->
                        <Dependency path="/secondaryFiler/needsSSNWorkStatus"/>
                        <IsComplete>
                            <Dependency path="/secondaryFilerSsnEmploymentValidity"/>
                        </IsComplete>

                        <!-- We collected it but still  -->
                        <Any>
                            <Not>
                                <Dependency path="/secondaryFiler/ssnNotValidForEmployment"/>
                            </Not>
                            <All>
                                <Dependency path="/secondaryFiler/ssnNotValidForEmployment"/>
                                <IsComplete>
                                    <Dependency path="/secondaryFiler/writableHasSSNOnlyForBenefits"/>
                                </IsComplete>
                            </All>
                        </Any>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/aboutYouIsComplete">
            <Description>The About You section is complete</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="/primaryFiler/fullName"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="/primaryFiler/dateOfBirth"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="/address"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="/phone"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="/primaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits"/>
                    </IsComplete>
                    <Any>
                        <Not>
                            <Dependency
                                    path="/primaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits"/>
                        </Not>
                        <IsComplete>
                            <Dependency path="/primaryFiler/willBeClaimed"/>
                        </IsComplete>
                    </Any>
                    <Dependency path="/primaryFilerSocialSecurityNumberRestrictionsAreUnderstood"/>
                    <IsComplete>
                        <Dependency path="/filerResidenceAndIncomeState"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="/allPrimaryFilerIncomeFormsInScopedState"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="/primaryFiler/isBlind"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="/primaryFilerIsCitizenOrRAAllYear"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="/primaryFiler/isDisabled"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="/primaryFiler/isStudent"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="/receivedAlaskaPfd"/>
                    </IsComplete>
                </All>
            </Derived>
        </Fact>
        <Fact path="/flowMFJSpouseFilingRequirementSubsection">
            <Name>Fact for controlling the flow of showing the MFJ Spouse Filing Requirement Subsection</Name>
            <Description>Either the secondary filer can be claimed or the secondary filer can not be
                claimed and the primary
                filer is claimed.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <Dependency path="/secondaryFiler/canBeClaimed"/>
                    <All>
                        <Not>
                            <Dependency path="/secondaryFiler/canBeClaimed"/>
                        </Not>
                        <Dependency path="/primaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/treatFilersAsDependents">
            <Description>

                The filer can be claimed as a dependent by someone who must file, or by someone who is
                filing for
                credits + deductions
                (not just for a refund). This means that they themselves cannot claim dependents, or use
                qualifying children to
                claim EITC. If they are filing MFJ, the filers have to choose to file for refund only to
                get into this status.

                This means that we treat the filers as dependents, and in this case:
                1. They will not be
                eligible to claim
                dependents, CTC, or ODC
                2. They will receive a reduced standard deduction.

            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="filingStatus" path="/treatAsMFJ"/>
                                <IsComplete>
                                    <Dependency path="/isMFJDependent"/>
                                </IsComplete>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/isMFJDependent"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <!-- If not MFJ, it's just the primary filer's claimer status -->
                            <True/>
                        </When>
                        <Then>
                            <Dependency
                                    path="/primaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/MFJRequiredToFile">
            <Name>MFJ Required to File</Name>
            <Description>Whether an MFJ couple is required to file</Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/eitherFilerCanBeClaimed">
            <Description>Whether either filer can be claimed</Description>

            <Derived>
                <Any>
                    <Dependency path="/primaryFiler/canBeClaimed"/>
                    <Dependency path="/secondaryFiler/canBeClaimed"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/isMFJDependent">
            <Name>isMFJDependent</Name>
            <Description>Whether the TP is categorized as an MFJ dependent</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/treatAsMFJ"/>
                    <Dependency path="/flowMFJSpouseFilingRequirementSubsection"/>
                    <Not>
                        <Dependency path="/MFJRequiredToFile"/>
                    </Not>
                    <Dependency path="/MFJClaimingRefundOnly"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/taxpayerCannotBeClaimed">
            <Name>Taxpayer cannot be claimed</Name>
            <Description>The taxpayer is filing a joint return for tax benefits and cannot be claimed by another
                taxpayer
            </Description>

            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/treatAsMFJ"/>
                    <Dependency path="/flowMFJSpouseFilingRequirementSubsection"/>
                    <Not>
                        <Dependency path="/MFJRequiredToFile"/>
                    </Not>
                    <Not>
                        <Dependency path="/MFJClaimingRefundOnly"/>
                    </Not>
                </All>
            </Derived>

            <Placeholder>
                <False/>
            </Placeholder>
        </Fact>
        <Fact path="/filers/*/isPrimaryFiler">
            <Name>Filer is primary</Name>
            <Description>The primary filer is listed first on the tax return.</Description>
            <Export downstreamFacts="true" stateSystems="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/isSecondaryFiler">
            <Name>Filer is secondary</Name>
            <Description>The secondary filer is listed second on the tax return.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <NotEqual>
                    <Left>
                        <Find path="/filers">
                            <Dependency path="isPrimaryFiler"/>
                        </Find>
                    </Left>
                    <Right>
                        <Dependency path=".."/>
                    </Right>
                </NotEqual>
            </Derived>
        </Fact>
        <Fact path="/pdfSecondaryFiler">
            <Name>Secondary filer for use in generating PDFs</Name>
            <Description>The spouse, if they should appear in PDFs as the secondary filer</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <Dependency path="/secondaryFiler"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerSsnEmploymentValidity">
            <Name>Employment validity for the primary filer</Name>
            <Description>Employment validity statements printed on filer's Social Security card.</Description>

            <Writable>
                <Enum optionsPath="/primaryFilerSsnEmploymentValidityOptions"/>
            </Writable>
        </Fact>
        <Fact path="/secondaryFilerSsnEmploymentValidity">
            <Name>Employment validity</Name>
            <Description>Employment validity statements printed on filer's Social Security card.</Description>

            <Writable>
                <Enum optionsPath="/ssnEmploymentValidityOptions"/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/ssnValidForEitc">
            <Derived>
                <Any>
                    <All>
                        <Dependency path="../isSecondaryFiler"/>
                        <Dependency path="../tin/isSSN"/>
                        <Any>
                            <!-- If we didn't need to ask work status, it's good -->
                            <Not>
                                <Dependency path="../needsSSNWorkStatus"/>
                            </Not>
                            <Equal>
                                <Left>
                                    <Dependency path="/secondaryFilerSsnEmploymentValidity"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/ssnEmploymentValidityOptions">validOnlyWithDhsAuthorization
                                    </Enum>
                                </Right>
                            </Equal>
                            <Equal>
                                <Left>
                                    <Dependency path="/secondaryFilerSsnEmploymentValidity"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/ssnEmploymentValidityOptions">neither</Enum>
                                </Right>
                            </Equal>
                            <All>
                                <!-- if their SSN is not valid for work, it can still provide EITC as long as it
                wasn't acquired only
                for
                     federal benefits-->
                                <Dependency path="../ssnNotValidForEmployment"/>
                                <Not>
                                    <Dependency path="../ssnOnlyForFederallyFundedBenefit"/>
                                </Not>
                            </All>
                        </Any>
                    </All>
                    <All>
                        <Dependency path="../isPrimaryFiler"/>
                        <Dependency path="../tin/isSSN"/>
                        <Any>
                            <Not>
                                <!-- If we didn't need to ask work status, it's good -->
                                <Dependency path="../needsSSNWorkStatus"/>
                            </Not>
                            <Equal>
                                <Left>
                                    <Dependency path="/primaryFilerSsnEmploymentValidity"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/primaryFilerSsnEmploymentValidityOptions">
                                        validOnlyWithDhsAuthorization
                                    </Enum>
                                </Right>
                            </Equal>
                            <Equal>
                                <Left>
                                    <Dependency path="/primaryFilerSsnEmploymentValidity"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/primaryFilerSsnEmploymentValidityOptions">neither</Enum>
                                </Right>
                            </Equal>
                            <All>
                                <!-- if their SSN is not valid for work, it can still provide EITC as long as it
                wasn't acquired only
                for federal benefits-->
                                <Dependency path="../ssnNotValidForEmployment"/>
                                <Not>
                                    <Dependency path="../ssnOnlyForFederallyFundedBenefit"/>
                                </Not>
                            </All>
                        </Any>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filers/*/ssnNotValidForEmployment">
            <Description>The SSN is marked "not valid" for employment</Description>
            <Export stateSystems="true"/>

            <Derived>
                <Any>
                    <All>
                        <Dependency path="../isSecondaryFiler"/>
                        <Dependency path="../tin/isSSN"/>
                        <Equal>
                            <Left>
                                <Dependency path="/secondaryFilerSsnEmploymentValidity"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/ssnEmploymentValidityOptions">notValid</Enum>
                            </Right>
                        </Equal>
                    </All>
                    <All>
                        <Dependency path="../isPrimaryFiler"/>
                        <Dependency path="../tin/isSSN"/>
                        <Equal>
                            <Left>
                                <Dependency path="/primaryFilerSsnEmploymentValidity"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/primaryFilerSsnEmploymentValidityOptions">notValid</Enum>
                            </Right>
                        </Equal>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filers/*/writableHasSSNOnlyForBenefits">
            <Description>Does the filer only have a SSN to apply for federal benefits</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/ssnOnlyForFederallyFundedBenefit">
            <Description>Does the filer only have a SSN to apply for federal benefits</Description>
            <Derived>
                <All>
                    <Dependency path="../tin/isSSN"/>
                    <IsComplete>
                        <Dependency path="../writableHasSSNOnlyForBenefits"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../ssnNotValidForEmployment"/>
                    </IsComplete>
                    <Dependency path="../ssnNotValidForEmployment"/>
                    <Dependency path="../writableHasSSNOnlyForBenefits"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/isUsCitizenFullYear">
            <Name>Citizenship</Name>
            <Description>Whether the filer was a U.S. Citizen for all of the tax year</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/needsSSNWorkStatus">
            <Name>Needs SSN Work Status</Name>
            <Description>A test for whether the flow should ask if the filer's SSN card has printed
                work-validitiy info
            </Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="../isUsCitizenFullYear"/>
                    </Not>
                    <Dependency path="../tin/isSSN"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/writableCitizenAtEndOfTaxYear">
            <Name>(Writable) Citizenship at end of tax year</Name>
            <Description>(Writable) Whether the filer was a U.S. Citizen at the end of the tax year after
                starting the year as
                a U.S. resident
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/citizenAtEndOfTaxYear">
            <Name>Citizenship at end of tax year</Name>
            <Description>Whether the filer was a U.S. Citizen at the end of the tax year after starting
                the year as a U.S.
                resident
            </Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency path="../isUsCitizenFullYear"/>
                    </Not>
                    <Dependency path="../writableCitizenAtEndOfTaxYear"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/writableIsNoncitizenResidentFullYear">
            <Name>(Writable) Non-citizen residency (full tax year)</Name>
            <Description>(Writable) Was the filer a resident for the whole tax year and not a citizen?</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/isNoncitizenResidentFullYear">
            <Name>Non-citizen residency (full tax year)</Name>
            <Description>Was the filer a resident for the whole tax year and not a citizen? Includes
                spouses who are
                non-residents but whom have elected to be treated as a resident for tax purposes per IRC §
                6013(g), Election to
                Treat Nonresident Individual as Resident of the United States
            </Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="../isUsCitizenFullYear"/>
                    </Not>
                    <Not>
                        <Dependency path="../citizenAtEndOfTaxYear"/>
                    </Not>
                    <Dependency path="../writableIsNoncitizenResidentFullYear"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/writableIsNational">
            <Name>(Writable) U.S. National</Name>
            <Description>(Writable) Whether the filer was a U.S. national</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/isNational">
            <Name>U.S. National</Name>
            <Description>Whether the filer was a U.S. national</Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency path="../isUsCitizenFullYear"/>
                    </Not>
                    <Not>
                        <Dependency path="../citizenAtEndOfTaxYear"/>
                    </Not>
                    <Dependency path="../isNoncitizenResidentFullYear"/>
                    <Dependency path="../writableIsNational"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/isCitizenOrNational">
            <Description>Was the filer a citizen all year, by the end of the year, or a national</Description>
            <Derived>
                <Any>
                    <Dependency path="../isUsCitizenFullYear"/>
                    <Dependency path="../isNoncitizenResidentFullYear"/>
                    <Dependency path="../isNational"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerResidencyKnockout">
            <Name>Primary filer because citizen and residency status</Name>
            <Description>Whether the primary filer was knocked out due to their citizen and residency
                status
            </Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency path="/primaryFiler/isUsCitizenFullYear"/>
                    </Not>
                    <Not>
                        <Dependency path="/primaryFiler/citizenAtEndOfTaxYear"/>
                    </Not>
                    <Not>
                        <Dependency path="/primaryFiler/isNoncitizenResidentFullYear"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/daysMainHomeInUS">
            <Name>Number of days lived in the United States</Name>
            <Description>The number of days the filer's main home was in the U.S. Used for pdf form 8862.
                Assumed to be 365
                because taxpayers assert that they live in the state where their income was sourced all year
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="eitc" path="/form8862RequiredAndHasNoQualifyingChildren"/>
                        </When>
                        <Then>
                            <String>365</String>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filerResidenceAndIncomeState">
            <Name>Income from supported state</Name>
            <Description>Which state(s) the filer earned income in from our in-scope states</Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Enum optionsPath="/scopedStateOptions"/>
            </Writable>
        </Fact>
        <Fact path="/primaryFilerW2And1099IntInScopedState">
            <Name>Primary filer's W-2 and 1099-INT forms are from an in-scope state</Name>
            <Description>Did all of the primary filer's W-2 and 1099-INT forms come from the same in-scope
                state?
            </Description>
            <Writable>
                <Enum optionsPath="/primaryFilerW2And1099IntStateOptions"/>
            </Writable>
        </Fact>
        <Fact path="/receivedAlaskaPfd">
            <Description>Did the primary filer have an Alaska Permanent Fund Dividend?</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/spouseReceivedAlaskaPfd">
            <Description>Did the secondary filer have an Alaska Permanent Fund Dividend?</Description>
            <Export downstreamFacts="true"/>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/spouseW2And1099IntInScopedState">
            <Name>Spouse's W-2 and 1099-INT forms are from an in-scope state</Name>
            <Description>Did all of the spouse's W-2 and 1099-INT forms come from the same in-scope state?</Description>
            <Writable>
                <Enum optionsPath="/spouseW2And1099IntStateOptions"/>
            </Writable>
            <Placeholder>
                <Dependency path="/spouseIncomeFormsInScopedState"/>
            </Placeholder>
        </Fact>
        <Fact path="/livesInCommunityPropertyState">
            <Description>The filer lives in a Community Property state, where the income of a married
                couple is considered
                shared property of both individuals. This does not include two states,
                Tennessee and South Dakota, which have
                elective Community Property laws.
            </Description>

            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">az</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">ca</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">id</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <!-- <Equal>
              <Left>
                <Enum optionsPath="/scopedStateOptions">la</Enum>
              </Left>
              <Right>
                <Dependency path="/filerResidenceAndIncomeState" />
              </Right>
            </Equal> -->
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">nm</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">nv</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">tx</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">wa</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">wi</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/allPrimaryFilerIncomeFormsInScopedState">
            <Name>All primary filer income forms are from an in-scope state</Name>
            <Description>Derives a state based on all primary filer income forms, prioritizing
                'anotherState'.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Any>
                                <Equal>
                                    <Left>
                                        <Dependency path="/primaryFilerW2And1099IntInScopedState"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/primaryFilerW2And1099IntStateOptions">anotherState</Enum>
                                    </Right>
                                </Equal>
                            </Any>
                        </When>
                        <Then>
                            <Enum optionsPath="/primaryFilerW2And1099IntStateOptions">anotherState</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/primaryFilerW2And1099IntInScopedState"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/allSpouseFormsInScopedState">
            <Name>All spouse income forms are from an in-scope state</Name>
            <Description>Derives a state based on all spouse income forms, prioritizing 'anotherState'.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="/spouseIncomeFormsInScopedState"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="/spouseIncomeFormsInScopedState"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Any>
                                <Equal>
                                    <Left>
                                        <Dependency path="/spouseW2And1099IntInScopedState"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/spouseW2And1099IntStateOptions">anotherState</Enum>
                                    </Right>
                                </Equal>
                            </Any>
                        </When>
                        <Then>
                            <Enum optionsPath="/primaryFilerW2And1099IntStateOptions">anotherState</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/spouseW2And1099IntInScopedState"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/spouseLivesOrHasW2InAnotherState">
            <Description>The filer has some W-2 forms from out of state</Description>
            <Derived>
                <Any>
                    <All>
                        <Dependency module="filingStatus" path="/treatAsMFJ"/>
                        <Equal>
                            <Left>
                                <Dependency path="/spouseLivesInTPState"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/spouseScopedStateOptions">moreThanOne</Enum>
                            </Right>
                        </Equal>
                    </All>
                    <All>
                        <Dependency module="filingStatus" path="/treatAsMFJ"/>
                        <Equal>
                            <Left>
                                <Dependency path="/spouseLivesInTPState"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/spouseScopedStateOptions">noneOfTheAbove</Enum>
                            </Right>
                        </Equal>
                    </All>
                    <All>
                        <Equal>
                            <Left>
                                <Dependency path="/spouseW2And1099IntInScopedState"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/spouseW2And1099IntStateOptions">anotherState</Enum>
                            </Right>
                        </Equal>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/livedInNy">
            <Name>The filer(s) lives in New York</Name>
            <Description>We support a special set of Box 14 codes for New York, so we need to condition
                the flow on whether
                the
                filer(s) lived there in the tax year
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Equal>
                    <Left>
                        <Enum optionsPath="/scopedStateOptions">ny</Enum>
                    </Left>
                    <Right>
                        <Dependency path="/filerResidenceAndIncomeState"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/livedInNj">
            <Name>The filer(s) lives in New Jersey</Name>
            <Description>We support a special set of Box 14 codes for New Jersey, so we need to condition
                the flow on whether
                the
                filer(s) lived there in the tax year
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Equal>
                    <Left>
                        <Enum optionsPath="/scopedStateOptions">nj</Enum>
                    </Left>
                    <Right>
                        <Dependency path="/filerResidenceAndIncomeState"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/livedInMd">
            <Name>The filer(s) lives in Maryland</Name>
            <Description>We support a special set of Box 14 codes for Maryland, so we need to condition
                the flow on whether
                the
                filer(s) lived there in the tax year
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Equal>
                    <Left>
                        <Enum optionsPath="/scopedStateOptions">md</Enum>
                    </Left>
                    <Right>
                        <Dependency path="/filerResidenceAndIncomeState"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/livedInNc">
            <Name>The filer(s) lives in North Carolina</Name>
            <Description>We show North Carolina-specific information when the filer(s) lives in North Carolina
            </Description>

            <Derived>
                <Equal>
                    <Left>
                        <Enum optionsPath="/scopedStateOptions">nc</Enum>
                    </Left>
                    <Right>
                        <Dependency path="/filerResidenceAndIncomeState"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/livedInMa">
            <Name>The filer(s) lives in Massachusetts</Name>
            <Description>Washington has a Working Families Tax Credit, so we need a condition to show
                Massachusetts-specific
                content.
            </Description>
            <Derived>
                <Equal>
                    <Left>
                        <Enum optionsPath="/scopedStateOptions">ma</Enum>
                    </Left>
                    <Right>
                        <Dependency path="/filerResidenceAndIncomeState"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/livedInWa">
            <Name>The filer(s) lives in Washington State</Name>
            <Description>Washington has a Working Families Tax Credit, so we need a condition to send the
                filer(s) to the
                website in order to check their eligibility.
            </Description>
            <Derived>
                <Equal>
                    <Left>
                        <Enum optionsPath="/scopedStateOptions">wa</Enum>
                    </Left>
                    <Right>
                        <Dependency path="/filerResidenceAndIncomeState"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/livedInCa">
            <Name>The filer(s) lives in California</Name>
            <Description>California does not support transferring data from Direct File, so we need a
                condition so that we can
                provide relavent content to the filer(s) living there.
            </Description>
            <Derived>
                <Equal>
                    <Left>
                        <Enum optionsPath="/scopedStateOptions">ca</Enum>
                    </Left>
                    <Right>
                        <Dependency path="/filerResidenceAndIncomeState"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/livedInAk">
            <Description>Lived in Alaska</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Equal>
                    <Left>
                        <Enum optionsPath="/scopedStateOptions">ak</Enum>
                    </Left>
                    <Right>
                        <Dependency path="/filerResidenceAndIncomeState"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/livedInHi">
            <Description>Lived in Hawaii</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Equal>
                    <Left>
                        <Enum optionsPath="/scopedStateOptions">hi</Enum>
                    </Left>
                    <Right>
                        <Dependency path="/filerResidenceAndIncomeState"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/stateFilingDeadline">
            <Description>Filing deadline based on the TP's state of residence</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/livedInMa"/>
                        </When>
                        <Then>
                            <Dependency module="constants" path="/massachusettsAndMaineDeadline"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency module="constants" path="/defaultTaxDay"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/mayBenefitFromFilingStateTaxes">
            <Name>Filer(s) may benefit from filing state taxes</Name>
            <Description>Used to show additional info on knockout screen that filer(s) may benefit from filing
                state taxes
            </Description>

            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">az</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">ca</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">ct</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">id</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">il</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">ks</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">me</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">md</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">ma</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">nj</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">nm</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">ny</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">nc</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">or</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">pa</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">wi</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filerResidenceOrIncomeStateOutOfScope">
            <Description>The primary filer earned income either in none of our in scope states or multiple</Description>
            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/scopedStateOptions">noneOfThese</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/scopedStateOptions">moreThanOne</Enum>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/isResidentOfStateWithMarketplace">
            <Name>Resident of specific states</Name>
            <Description>Whether the filer resides in CA, CO, CT, DC, GA, ID, KY, ME, MD, MA, MN, NV,
                NJ, NM, NY, PA, RI, VT
                and WA.
            </Description>

            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">ca</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">co</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">ct</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">dc</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">ga</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">id</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">ky</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">me</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">md</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">ma</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">mn</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">nv</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">nj</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">nm</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">ny</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">pa</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">ri</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">vi</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">vt</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Enum optionsPath="/scopedStateOptions">wa</Enum>
                        </Left>
                        <Right>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/stateMarketplaceName">
            <Name>State Marketplace Name</Name>
            <Description>Returns the marketplace name key for states with their own health insurance marketplace
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Not>
                                <Dependency path="/isResidentOfStateWithMarketplace"/>
                            </Not>
                        </When>
                        <Then>
                            <Enum optionsPath="/stateMarketplaceOptions">none</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Enum optionsPath="/scopedStateOptions">ca</Enum>
                                </Left>
                                <Right>
                                    <Dependency path="/filerResidenceAndIncomeState"/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/stateMarketplaceOptions">covered_california</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Enum optionsPath="/scopedStateOptions">co</Enum>
                                </Left>
                                <Right>
                                    <Dependency path="/filerResidenceAndIncomeState"/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/stateMarketplaceOptions">connect_health_colorado</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Enum optionsPath="/scopedStateOptions">ct</Enum>
                                </Left>
                                <Right>
                                    <Dependency path="/filerResidenceAndIncomeState"/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/stateMarketplaceOptions">access_health_ct</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Enum optionsPath="/scopedStateOptions">dc</Enum>
                                </Left>
                                <Right>
                                    <Dependency path="/filerResidenceAndIncomeState"/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/stateMarketplaceOptions">dc_health_link</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Enum optionsPath="/scopedStateOptions">ga</Enum>
                                </Left>
                                <Right>
                                    <Dependency path="/filerResidenceAndIncomeState"/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/stateMarketplaceOptions">georgia_access</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Enum optionsPath="/scopedStateOptions">id</Enum>
                                </Left>
                                <Right>
                                    <Dependency path="/filerResidenceAndIncomeState"/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/stateMarketplaceOptions">your_health_idaho</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Enum optionsPath="/scopedStateOptions">ky</Enum>
                                </Left>
                                <Right>
                                    <Dependency path="/filerResidenceAndIncomeState"/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/stateMarketplaceOptions">kynect</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Enum optionsPath="/scopedStateOptions">me</Enum>
                                </Left>
                                <Right>
                                    <Dependency path="/filerResidenceAndIncomeState"/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/stateMarketplaceOptions">cover_me</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Enum optionsPath="/scopedStateOptions">md</Enum>
                                </Left>
                                <Right>
                                    <Dependency path="/filerResidenceAndIncomeState"/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/stateMarketplaceOptions">maryland_health_connection</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Enum optionsPath="/scopedStateOptions">ma</Enum>
                                </Left>
                                <Right>
                                    <Dependency path="/filerResidenceAndIncomeState"/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/stateMarketplaceOptions">mass_health_connector</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Enum optionsPath="/scopedStateOptions">mn</Enum>
                                </Left>
                                <Right>
                                    <Dependency path="/filerResidenceAndIncomeState"/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/stateMarketplaceOptions">mnsure</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Enum optionsPath="/scopedStateOptions">nv</Enum>
                                </Left>
                                <Right>
                                    <Dependency path="/filerResidenceAndIncomeState"/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/stateMarketplaceOptions">nevada_health_link</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Enum optionsPath="/scopedStateOptions">nj</Enum>
                                </Left>
                                <Right>
                                    <Dependency path="/filerResidenceAndIncomeState"/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/stateMarketplaceOptions">get_covered_nj</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Enum optionsPath="/scopedStateOptions">nm</Enum>
                                </Left>
                                <Right>
                                    <Dependency path="/filerResidenceAndIncomeState"/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/stateMarketplaceOptions">bewell</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Enum optionsPath="/scopedStateOptions">ny</Enum>
                                </Left>
                                <Right>
                                    <Dependency path="/filerResidenceAndIncomeState"/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/stateMarketplaceOptions">ny_state_of_health</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Enum optionsPath="/scopedStateOptions">pa</Enum>
                                </Left>
                                <Right>
                                    <Dependency path="/filerResidenceAndIncomeState"/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/stateMarketplaceOptions">pennie</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Enum optionsPath="/scopedStateOptions">ri</Enum>
                                </Left>
                                <Right>
                                    <Dependency path="/filerResidenceAndIncomeState"/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/stateMarketplaceOptions">healthsource_ri</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Enum optionsPath="/scopedStateOptions">vi</Enum>
                                </Left>
                                <Right>
                                    <Dependency path="/filerResidenceAndIncomeState"/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/stateMarketplaceOptions">virginia_insurance_marketplace</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Enum optionsPath="/scopedStateOptions">vt</Enum>
                                </Left>
                                <Right>
                                    <Dependency path="/filerResidenceAndIncomeState"/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/stateMarketplaceOptions">vermont_health_connect</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Enum optionsPath="/scopedStateOptions">wa</Enum>
                                </Left>
                                <Right>
                                    <Dependency path="/filerResidenceAndIncomeState"/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Enum optionsPath="/stateMarketplaceOptions">washington_healthplanfinder</Enum>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/spouseResidenceAndIncomeStateOutOfScope">
            <Description>The spouse earned income either in none of our in scope states or multiple</Description>
            <Derived>
                <Any>
                    <All>
                        <Dependency module="filingStatus" path="/treatAsMFJ"/>
                        <Equal>
                            <Left>
                                <Dependency path="/spouseLivesInTPState"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/spouseScopedStateOptions">moreThanOne</Enum>
                            </Right>
                        </Equal>
                    </All>
                    <All>
                        <Dependency module="filingStatus" path="/treatAsMFJ"/>
                        <Equal>
                            <Left>
                                <Dependency path="/spouseLivesInTPState"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/spouseScopedStateOptions">noneOfTheAbove</Enum>
                            </Right>
                        </Equal>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filerResidenceOrIncomeOrW2StateOutOfScope">
            <Description>The primary filer earned income or W-2 forms either in none of our in scope states or
                multiple
            </Description>
            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/scopedStateOptions">noneOfThese</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/scopedStateOptions">moreThanOne</Enum>
                        </Right>
                    </Equal>

                    <Equal>
                        <Left>
                            <Dependency path="/allPrimaryFilerIncomeFormsInScopedState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/primaryFilerW2And1099IntStateOptions">anotherState</Enum>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/hasIncomeInScope">
            <Name>Flow: Filer Has Income In-Scope</Name>
            <Description>The filer has only earned income in ONE of our in-scope states</Description>
            <Derived>
                <Not>
                    <Any>
                        <Dependency path="/filerResidenceOrIncomeStateOutOfScope"/>
                        <Equal>
                            <Left>
                                <Dependency path="/allPrimaryFilerIncomeFormsInScopedState"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/primaryFilerW2And1099IntStateOptions">anotherState</Enum>
                            </Right>
                        </Equal>

                        <All>
                            <IsComplete>
                                <Dependency path="/receivedAlaskaPfd"/>
                            </IsComplete>
                            <Dependency path="/receivedAlaskaPfd"/>
                            <NotEqual>
                                <Left>
                                    <Dependency path="/filerResidenceAndIncomeState"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/scopedStateOptions">ak</Enum>
                                </Right>
                            </NotEqual>
                        </All>

                        <All>
                            <Dependency module="filingStatus" path="/treatAsMFJ"/>
                            <IsComplete>
                                <Dependency path="/spouseReceivedAlaskaPfd"/>
                            </IsComplete>
                            <Dependency path="/spouseReceivedAlaskaPfd"/>
                            <NotEqual>
                                <Left>
                                    <Dependency path="/filerResidenceAndIncomeState"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/scopedStateOptions">ak</Enum>
                                </Right>
                            </NotEqual>
                        </All>

                        <!-- If they are MFJ -->
                        <Dependency path="/spouseResidenceAndIncomeStateOutOfScope"/>
                        <All>
                            <Dependency module="filingStatus" path="/treatAsMFJ"/>
                            <Equal>
                                <Left>
                                    <Dependency path="/allSpouseFormsInScopedState"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/primaryFilerW2And1099IntStateOptions">anotherState</Enum>
                                </Right>
                            </Equal>
                        </All>
                    </Any>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/filingStateOrProvince">
            <Name>The state(s) in which the taxpayer should file state taxes</Name>
            <Description>The sole fact used to determine where the taxpayer should file state taxes</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/hasIncomeInScope"/>
                                </Left>
                                <Right>
                                    <True/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Dependency path="/filerResidenceAndIncomeState"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/primaryFiler">
            <Name>Primary filer</Name>
            <Description>The primary filer of the tax return.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Find path="/filers">
                    <Dependency path="isPrimaryFiler"/>
                </Find>
            </Derived>
        </Fact>
        <Fact path="/secondaryFiler">
            <Name>Secondary filer</Name>
            <Description>The secondary filer of the tax return, if there is one.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Find path="/filers">
                    <Dependency path="isSecondaryFiler"/>
                </Find>
            </Derived>
        </Fact>
        <Fact path="/primarySomeoneCanClaimForTaxBenefits">
            <Name>Primary filer can be claimed as a dependent</Name>
            <Description>Whether the 1040 should indicate someone can claim primary filer as a dependent.</Description>
            <Export mef="true" downstreamFacts="true"/>

            <Derived>
                <Any>
                    <All>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        <Dependency path="/isMFJDependent"/>
                        <Dependency path="/primaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits"/>
                    </All>
                    <Dependency
                            path="/notMfjAndPrimaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/notMfjAndPrimaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits">
            <Description>Not MFJ + /primaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits
            </Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <All>
                    <Not>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    </Not>
                    <Dependency path="/primaryFilerCouldBeDependentAndClaimerIsRequiredToFileOrFilingForCredits"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/secondarySomeoneCanClaimForTaxBenefits">
            <Name>Secondary filer can be claimed as a dependent</Name>
            <Description>Whether the 1040 should indicate someone can claim secondary filer as a
                dependent.
            </Description>
            <Export mef="true" downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Dependency path="/isMFJDependent"/>
                    <Dependency path="/secondaryFiler/canBeClaimed"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/hasTin">
            <Name>Filer has TIN</Name>
            <Description>The filer has provided their TIN</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <IsComplete>
                    <Dependency path="../tin"/>
                </IsComplete>
            </Derived>
        </Fact>
        <Fact path="/filersWithTins">
            <Name>Filers with TINs</Name>
            <Description>All filers who have provided TINs</Description>
            <Derived>
                <Filter path="/filers">
                    <Dependency path="hasTin"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/filers/*/isTinUnique">
            <Name>Filer Tin is unique</Name>
            <Description>Is this filer's TIN unique among filers with TINs?</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Equal>
                    <Left>
                        <Count>
                            <Equal>
                                <Left>
                                    <Dependency path="../tin"/>
                                </Left>
                                <Right>
                                    <Dependency path="/filersWithTins/*/tin"/>
                                </Right>
                            </Equal>
                        </Count>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/exemptSpouse">
            <Name>Exempt spouse</Name>
            <Description>The spouse of the primary filer if the spouse is exempt. Used for populating the
                1040's exempt
                spousal
                information.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/isSpouseExempt"/>
                        </When>
                        <Then>
                            <Dependency path="/secondaryFiler"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/isSpouseExempt">
            <Name>Is spouse exempt</Name>
            <Description>Whether the spouse of the primary filer is exempt from filing a separate tax
                return.
            </Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="/secondaryFiler/canBeClaimed"/>
                    </Not>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/minimumFilerDateOfBirth">
            <Name>Date of birth of oldest filer</Name>
            <Description>The date of birth of the oldest filer, for purposes of the age test for
                qualifying children.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="filingStatus" path="/treatAsMFJ"/>
                                <IsComplete>
                                    <Dependency path="/secondaryFiler/dateOfBirth"/>
                                </IsComplete>
                            </All>
                        </When>
                        <Then>
                            <Minimum>
                                <Dependency path="/filers/*/dateOfBirth"/>
                            </Minimum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/primaryFiler/dateOfBirth"/>
                        </Then>
                    </Case>
                </Switch>

            </Derived>
        </Fact>
        <Fact path="/spouseItemizes">
            <Name>Is the filer's spouse itemizing deductions?</Name>
            <Description>If your spouse itemizes deductions on their tax return when filing separately
                from you, it means you
                the filer cannot take the standard deduction on their own return.
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/spouseItemizesKnockout">
            <Name>Spouse itemizes knockout</Name>
            <Description>We should knock the user out because their spouse is filing and itemizing.
                Includes both facts to be
                defensive to edits.
            </Description>

            <Derived>
                <All>
                    <Dependency path="/spouseItemizes"/>
                    <Dependency path="/MFSSpouseFilingReturnDerived"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/64yearsBeforeTaxYear">
            <Name>64 Years before tax year</Name>
            <Description>64 years before the current tax year.</Description>

            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency module="constants" path="/taxYear"/>
                    </Minuend>
                    <Subtrahends>
                        <Int>64</Int>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerDateOfDeath">
            <Description>The date of death of the secondary filer.</Description>
            <Export downstreamFacts="true"/>
            <TaxYear>2024</TaxYear>

            <Writable>
                <Day/>
                <Limit type="Max">
                    <Day>2025-01-01</Day>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/spouseDateOfDeath">
            <Description>The date of death of the primary filer's spouse. Used to populate the form 1040
                SpouseDeathDt XML
                element.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="/inScopeDeceasedSpouse"/>
                                <IsComplete>
                                    <Dependency path="/secondaryFilerDateOfDeath"/>
                                </IsComplete>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/secondaryFilerDateOfDeath"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/inScopeDeceasedSpouse">
            <Description>Whether the primary filer has a deceased spouse currently supported by DF. Used
                to populate the
                form
                1040 SurvivingSpouseInd element.
            </Description>
            <Export mef="true"/>

            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <IsComplete>
                        <Dependency path="/isWidowedInTaxYear"/>
                    </IsComplete>
                    <Dependency path="/isWidowedInTaxYear"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerAgeDuringDeathYear">
            <Description>The age that the spouse may have turned during the year they died</Description>

            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency path="/secondaryFilerDateOfDeath/year"/>
                    </Minuend>
                    <Subtrahends>
                        <Dependency path="/secondaryFiler/dayBeforeDateOfBirth/year"/>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerAgeDayBeforeDeath">
            <Description>
                The age at death of the filer when counting the day before their birthday as their birthday.
                This
                birthday definition is used for at least the standard deduction and the 25-year minimum
                age for EITC. It is not
                used for the 65 year maximum age for EITC.
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/secondaryFilerDateOfDeath/month"/>
                                </Left>
                                <Right>
                                    <Dependency path="/secondaryFiler/dayBeforeDateOfBirth/month"/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Switch>
                                <!-- If they didn't reach the day before their birthday before dying, they did not
                age -->
                                <Case>
                                    <When>
                                        <LessThan>
                                            <Left>
                                                <Dependency path="/secondaryFilerDateOfDeath/day"/>
                                            </Left>
                                            <Right>
                                                <!-- The day before their birthday is when they are 65. -->
                                                <Dependency path="/secondaryFiler/dayBeforeDateOfBirth/day"/>
                                            </Right>
                                        </LessThan>
                                    </When>
                                    <Then>
                                        <Subtract>
                                            <Minuend>
                                                <Dependency path="/secondaryFilerAgeDuringDeathYear"/>
                                            </Minuend>
                                            <Subtrahends>
                                                <Int>1</Int>
                                            </Subtrahends>
                                        </Subtract>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <True/>
                                    </When>
                                    <Then>
                                        <Dependency path="/secondaryFilerAgeDuringDeathYear"/>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <GreaterThan>
                                <Left>
                                    <Dependency path="/secondaryFilerDateOfDeath/month"/>
                                </Left>
                                <Right>
                                    <Dependency path="/secondaryFiler/dayBeforeDateOfBirth/month"/>
                                </Right>
                            </GreaterThan>
                        </When>
                        <Then>
                            <Dependency path="/secondaryFilerAgeDuringDeathYear"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <LessThan>
                                <Left>
                                    <Dependency path="/secondaryFilerDateOfDeath/month"/>
                                </Left>
                                <Right>
                                    <Dependency path="/secondaryFiler/dayBeforeDateOfBirth/month"/>
                                </Right>
                            </LessThan>
                        </When>
                        <Then>
                            <Subtract>
                                <Minuend>
                                    <Dependency path="/secondaryFilerAgeDuringDeathYear"/>
                                </Minuend>
                                <Subtrahends>
                                    <Int>1</Int>
                                </Subtrahends>
                            </Subtract>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerAgeDayOfDeath">
            <Description>
                The age of the secondary filer on their date of death, counting
                their actual date of birth as their
                birthday. This is used for
                the 65-year maximum age on self-only EITC, but is not used
                for the 25-year minimum age,
                or for standard deduction.
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/secondaryFilerDateOfDeath/month"/>
                                </Left>
                                <Right>
                                    <Dependency path="/secondaryFiler/dateOfBirth/month"/>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Switch>
                                <Case>
                                    <When>
                                        <LessThan>
                                            <Left>
                                                <Dependency path="/secondaryFilerDateOfDeath/day"/>
                                            </Left>
                                            <Right>
                                                <!-- If they didn't reach their birthday, then they did not age. -->
                                                <Dependency path="/secondaryFiler/dateOfBirth/day"/>
                                            </Right>
                                        </LessThan>
                                    </When>
                                    <Then>
                                        <Subtract>
                                            <Minuend>
                                                <Dependency path="/secondaryFilerAgeDuringDeathYear"/>
                                            </Minuend>
                                            <Subtrahends>
                                                <Int>1</Int>
                                            </Subtrahends>
                                        </Subtract>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <True/>
                                    </When>
                                    <Then>
                                        <Dependency path="/secondaryFilerAgeDuringDeathYear"/>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <GreaterThan>
                                <Left>
                                    <Dependency path="/secondaryFilerDateOfDeath/month"/>
                                </Left>
                                <Right>
                                    <Dependency path="/secondaryFiler/dateOfBirth/month"/>
                                </Right>
                            </GreaterThan>
                        </When>
                        <Then>
                            <Dependency path="/secondaryFilerAgeDuringDeathYear"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <LessThan>
                                <Left>
                                    <Dependency path="/secondaryFilerDateOfDeath/month"/>
                                </Left>
                                <Right>
                                    <Dependency path="/secondaryFiler/dateOfBirth/month"/>
                                </Right>
                            </LessThan>
                        </When>
                        <Then>
                            <Subtract>
                                <Minuend>
                                    <Dependency path="/secondaryFilerAgeDuringDeathYear"/>
                                </Minuend>
                                <Subtrahends>
                                    <Int>1</Int>
                                </Subtrahends>
                            </Subtract>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/MFJDeceasedSpouseReachedAge65ForStandardD">
            <Name>Whether the deceased spouse turned age 65 in the tax year.</Name>
            <Description>
                The spouse died and turned 65 in the tax year. Calculated using their day of birth
                as the day before
                their birthday. Cannot be used for the EIC calculation.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <Dependency path="/secondaryFilerAgeDayBeforeDeath"/>
                    </Left>
                    <Right>
                        <Int>65</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/MFSSpouseFilingReturnDerived">
            <Name>**SUPERCEDES /MFSSpouseFilingReturn.** Whether or not the spouse is filing a return.</Name>
            <Description>If the spouse is filing a return or having a return filed for them. I'm
                intentionally leaving this as
                all marital statuses except widowed here though i could be convinced to add a case for
                married only. Tests in
                filers.test.ts reflect this choice. kate3/6/24
            </Description>

            <Derived>
                <Any>
                    <Switch>
                        <Case>
                            <When>
                                <All>
                                    <Dependency path="/isWidowed"/>
                                    <IsComplete>
                                        <Dependency path="/MFSDeceasedSpouseFilingReturn"/>
                                    </IsComplete>
                                </All>
                            </When>
                            <Then>
                                <Dependency path="/MFSDeceasedSpouseFilingReturn"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <All>
                                    <Not>
                                        <Dependency path="/isWidowed"/>
                                    </Not>
                                    <IsComplete>
                                        <Dependency path="/MFSLivingSpouseFilingReturn"/>
                                    </IsComplete>
                                </All>
                            </When>
                            <Then>
                                <Dependency path="/MFSLivingSpouseFilingReturn"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <!-- patch for old returns that use this fact -->
                                <IsComplete>
                                    <Dependency path="/MFSSpouseFilingReturn"/>
                                </IsComplete>
                            </When>
                            <Then>
                                <Dependency path="/MFSSpouseFilingReturn"/>
                            </Then>
                        </Case>
                    </Switch>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/MFSSpouseFilingReturn">
            <Name>**DEPRECATED: The correct fact to rely on is now /MFSSpouseFilingReturnDerived.** MFS
                spouse will file
                return
            </Name>
            <Description>If the spouse is filing a return or having a return filed for them.</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/MFSLivingSpouseFilingReturn">
            <Name>Living MFS spouse will file return</Name>
            <Description>Active voice: "my MFS spouse will file a return"</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/MFSDeceasedSpouseFilingReturn">
            <Name>Dead MFS spouse will have return filed for them</Name>
            <Description>Passive voice: "someone will file a return for my MFS spouse"</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/MFSSpouseHasNRTIN">
            <Name>Wether or not the spouse has a Tax Identification Number</Name>
            <Description>If the spouse has a Tax Identification Number</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/MFSSpouseHasGrossIncome">
            <Name>Whether or not the spouse has a gross income.</Name>
            <Description>If the spouse had any gross income in the tax year.</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/MFSSpouse65OrOlder">
            <Name>Whether or not the spouse is 65 or older.</Name>
            <Description>If the spouse had reached age 65 in the tax year.</Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/MFSNeedSpouseTaxId">
            <Name>Whether to get the taxID of the spouse.</Name>
            <Description>Check if the spouse has a NRTIN or is a US citizen.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <Dependency path="/MFSSpouseHasNRTIN"/>
                    <Dependency path="/secondaryFiler/isUsCitizenFullYear"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/MFSLivesInMdNcSpouseHasNoTin">
            <Name>Whether MFS TP lives in NC or MD and spouse has no TIN/SSN.</Name>
            <Description>Check if the MFS TP lives in NC or MD and spouse has no TIN/SSN.</Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency path="/MFSSpouseHasNRTIN"/>
                    </Not>
                    <Any>
                        <Equal>
                            <Left>
                                <Enum optionsPath="/scopedStateOptions">md</Enum>
                            </Left>
                            <Right>
                                <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                            </Right>
                        </Equal>
                        <Equal>
                            <Left>
                                <Enum optionsPath="/scopedStateOptions">nc</Enum>
                            </Left>
                            <Right>
                                <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                            </Right>
                        </Equal>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/MFSSpouseProvidesNoBenefits">
            <Name>The MFS spouse will provide no benefits for the standard deduction.</Name>
            <Description>End the questionaire if the spouse is filing a tax return or does have gross
                income or can be claimed
                as a dependent.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <Dependency path="/MFSSpouseFilingReturnDerived"/>
                    <All>
                        <Not>
                            <Dependency path="/MFSSpouseFilingReturnDerived"/>
                        </Not>
                        <Any>
                            <Dependency path="/MFSSpouseHasGrossIncome"/>
                            <All>
                                <Not>
                                    <Dependency path="/MFSSpouseHasGrossIncome"/>
                                </Not>
                                <Dependency path="/secondaryFiler/canBeClaimed"/>
                            </All>
                        </Any>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/MFSFilingThresholdAmount">
            <Name>Married Filing Separately Threshold Amount</Name>
            <Description>Filing threshold amount for filers who are married filing separately. (Equal to
                the amount of the
                personal exemption, but due to suspension of the personal exemption under TCJA, the
                exemption was reduced to $0.
                While the exemption is $0, IRS will use $5 as the threshold.)
            </Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Dollar>
                    5
                </Dollar>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerResidencyEligibleForMFJ">
            <Name>Filers's marriage is valid for MFJ</Name>
            <Description>The filer's spouse met some citizenship or residency requirement that allows
                them to file jointly.
                https://www.irs.gov/publications/p519
            </Description>
            <Export downstreamFacts="true"/>


            <Derived>
                <Any>
                    <Dependency path="/secondaryFiler/isUsCitizenFullYear"/>
                    <Dependency path="/secondaryFiler/citizenAtEndOfTaxYear"/>
                    <Dependency path="/secondaryFiler/isNoncitizenResidentFullYear"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/spouseIncomeFormsInScopedState">
            <Name>Filer's W-2 and 1099-G forms are from an in-scope state</Name>
            <Description>Did all of the filer's W-2 and 1099-G forms come from the same state?</Description>
            <Writable>
                <Enum optionsPath="/primaryFilerW2And1099IntStateOptions"/>
            </Writable>
        </Fact>
        <Fact path="/spouseLivesInTPState">
            <Name>Whether spouse lives in the tax payer's state</Name>
            <Description>Whether the filer's spouse lived in the same state as them all year, in mulitple
                states, or something
                else
            </Description>
            <Writable>
                <Enum optionsPath="/spouseScopedStateOptions"/>
            </Writable>
        </Fact>
        <Fact path="/livedTogetherApartFlowIsComplete">
            <Description>Spouse questions related to living together/apart have been completed</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <Dependency path="/livedTogetherAllYearWithSpouse"/>
                    <All>
                        <Not>
                            <Dependency path="/livedTogetherAllYearWithSpouse"/>
                        </Not>
                        <Dependency path="/livedApartAllYear"/>
                    </All>
                    <All>
                        <Not>
                            <Dependency path="/livedTogetherAllYearWithSpouse"/>
                        </Not>
                        <Dependency path="/livedTogetherMoreThanSixMonths"/>
                        <IsComplete>
                            <Dependency path="/writableSeparationAgreement"/>
                        </IsComplete>
                    </All>
                    <All>
                        <Not>
                            <Dependency path="/livedTogetherAllYearWithSpouse"/>
                        </Not>
                        <Dependency path="/livedTogetherSixMonthsOrLess"/>
                        <Dependency path="/writableLivedApartLastSixMonths"/>
                    </All>
                    <All>
                        <Not>
                            <Dependency path="/livedTogetherAllYearWithSpouse"/>
                        </Not>
                        <Dependency path="/livedTogetherSixMonthsOrLess"/>
                        <Not>
                            <Dependency path="/writableLivedApartLastSixMonths"/>
                        </Not>
                        <IsComplete>
                            <Dependency path="/writableSeparationAgreement"/>
                        </IsComplete>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/livedTogetherAllYearWithSpouse">
            <Name>Lived with the spouse during the entire tax year</Name>
            <Description>Whether the taxpayer lived together with their spouse the entire Tax Year</Description>
            <Export downstreamFacts="true"/>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/spouseLivedTogetherMonths">
            <Name>Months lived apart from spouse during tax year</Name>
            <Description>Months lived apart from their spouse in the Tax Year</Description>

            <Writable>
                <Enum optionsPath="/spouseLivedTogetherMonthsOptions"/>
            </Writable>
        </Fact>
        <Fact path="/spouseLivedTogetherMonthsOptions">
            <Name>Months Spouse Lived Apart Options</Name>
            <Description>Months a spouse lived apart options</Description>

            <Derived>
                <EnumOptions>
                    <String>livedApartAllYear</String>
                    <String>livedTogetherSixMonthsOrLess</String>
                    <String>livedTogetherMoreThanSixMonths</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/livedTogetherSixMonthsOrLess">
            <Description>Whether the taxpayer lived with their spouse for six months or less.</Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency path="/livedTogetherAllYearWithSpouse"/>
                    </Not>
                    <Equal>
                        <Left>
                            <Dependency path="/spouseLivedTogetherMonths"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/spouseLivedTogetherMonthsOptions">livedTogetherSixMonthsOrLess</Enum>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/livedTogetherMoreThanSixMonths">
            <Description>Whether the taxpayer lived with their spouse for more than six months but less than the full
                year.
            </Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency path="/livedTogetherAllYearWithSpouse"/>
                    </Not>
                    <Equal>
                        <Left>
                            <Dependency path="/spouseLivedTogetherMonths"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/spouseLivedTogetherMonthsOptions">livedTogetherMoreThanSixMonths</Enum>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/showSpouseLivingApartLastDaySepAgreement">
            <Description>Whether to show the separation agreement screen based on the taxpayer living with their spouse
                for
                more than six months but not the whole year.
            </Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency path="/livedTogetherAllYearWithSpouse"/>
                    </Not>
                    <Any>
                        <Dependency path="/livedTogetherMoreThanSixMonths"/>
                        <Not>
                            <Dependency path="/writableLivedApartLastSixMonths"/>
                        </Not>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/writableLivedApartLastSixMonths">
            <Description>Whether the taxpayer lived apart from their spouse for the last six months of the
                year.
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/livedApartLastSixMonths">
            <Description>Whether the taxpayer lived apart from their spouse for the last six months of the
                year. Takes into
                account implied answers based on previous information.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Switch>
                    <!-- They did not live apart the last six months if they lived together more than six months or all year -->
                    <Case>
                        <When>
                            <Any>
                                <Dependency path="/livedTogetherMoreThanSixMonths"/>
                                <Dependency path="/livedTogetherAllYearWithSpouse"/>
                            </Any>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                    <!-- They lived apart the last six months if they lived apart all year -->
                    <Case>
                        <When>
                            <Dependency path="/livedApartAllYear"/>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                    <!-- They lived apart if they explicitly answered that they lived apart the last six months -->
                    <Case>
                        <When>
                            <Dependency path="/livedTogetherSixMonthsOrLess"/>
                        </When>
                        <Then>
                            <Dependency path="/writableLivedApartLastSixMonths"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/livedApartAllYear">
            <Name>Lived apart from spouse the whole year</Name>
            <Description>Whether the taxpayer lived apart from their spouse for the whole year.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Not>
                        <Dependency path="/livedTogetherAllYearWithSpouse"/>
                    </Not>
                    <Equal>
                        <Left>
                            <Dependency path="/spouseLivedTogetherMonths"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/spouseLivedTogetherMonthsOptions">livedApartAllYear</Enum>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/writableSeparationAgreement">
            <Name>Spouse separation agreement last day</Name>
            <Description>Whether the taxpayer was living apart from their spouse and had a separation
                agreement on the last
                day
                of the year.
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/separationAgreement">
            <Name>Spouse separation agreement last day</Name>
            <Description>Whether the taxpayer was living apart from their spouse and had a separation
                agreement on the last
                day
                of the year.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/livedTogetherAllYearWithSpouse"/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/writableSeparationAgreement"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/canFileJointlyYearOfSpouseDeath">
            <Name>Qualified to file jointly in year of spouse death</Name>
            <Description>Whether the taxpayer was qualified to file jointly for the year in which their
                spouse died.
            </Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/maritalStatusOptions">
            <Name>Marital Status Options</Name>
            <Description>Options for a marital status</Description>
            <Derived>
                <EnumOptions>
                    <String>single</String>
                    <String>married</String>
                    <String>divorced</String>
                    <String>widowed</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/maritalStatus">
            <Name>Marital status</Name>
            <Description>The marital status the primary filer tells us.</Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Enum optionsPath="/maritalStatusOptions"/>
            </Writable>
        </Fact>
        <Fact path="/isMarried">
            <Name>The filer declared they are married</Name>
            <Description>The filer stated they are married</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/maritalStatus"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/maritalStatusOptions">married</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/isSingle">
            <Name>Single</Name>
            <Description>The filer stated they were never married.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/maritalStatus"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/maritalStatusOptions">single</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/isWidowed">
            <Name>Widowed</Name>
            <Description>The primary filer's marital status is widowed.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/maritalStatus"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/maritalStatusOptions">widowed</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/isWidowedInTaxYear">
            <Name>Is (really Was) Widowed in Tax Year</Name>
            <Description>Was the filer widowed in the current tax year?</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="/isWidowed"/>
                    <Equal>
                        <Left>
                            <Dependency path="/yearOfSpouseDeath"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/yearOfSpouseDeathOptions">taxYear</Enum>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/widowedBeforeTaxYearMinusTwo">
            <Name>Widowed before tax year minus two</Name>
            <Description>The TP was widowed before TY minus 2</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="/isWidowed"/>
                    <Equal>
                        <Left>
                            <Dependency path="/yearOfSpouseDeath"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/yearOfSpouseDeathOptions">beforeTaxYearMinusTwo</Enum>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/checkForRegisteredDomesticPartner">
            <Name>Check For Registered Domestic Partner</Name>
            <Description>Whether to show the filer the question to see if they had a registered domestic
                partner. Only show
                the
                question if they chose "never married", "widowed", "divorced or legally separated" and
                if they live in a
                Community Property state (this is overly broad, but avoids us needing to
                produce an exhaustive list of county and
                local registries).
            </Description>
            <Derived>
                <All>
                    <Dependency path="/livesInCommunityPropertyState"/>
                    <Any>
                        <Equal>
                            <Left>
                                <Dependency path="/maritalStatus"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/maritalStatusOptions">single</Enum>
                            </Right>
                        </Equal>
                        <Equal>
                            <Left>
                                <Dependency path="/maritalStatus"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/maritalStatusOptions">divorced</Enum>
                            </Right>
                        </Equal>
                        <Equal>
                            <Left>
                                <Dependency path="/maritalStatus"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/maritalStatusOptions">widowed</Enum>
                            </Right>
                        </Equal>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/inRegisteredDomesticPartnership">
            <Name>In Registered Domestic Partnership</Name>
            <Description>Whether the filer was in a registered domestic partnership in the tax year or
                not.
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/hasCompletedRegisteredDomesticPartnerIfApplicable">
            <Name>Has completed registered domestic partner if applicable</Name>
            <Description>Checks whether registered domestic partnership is applicable and if so ensures
                it's complete
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <Not>
                        <Dependency path="/checkForRegisteredDomesticPartner"/>
                    </Not>
                    <IsComplete>
                        <Dependency path="/inRegisteredDomesticPartnership"/>
                    </IsComplete>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutHasApplicableRegisteredDomesticPartnership">
            <Name>Flow knockout for registered domestic partnership</Name>
            <Description>Registered domestic partnership is applicable and user has one</Description>

            <Derived>
                <All>
                    <Dependency path="/checkForRegisteredDomesticPartner"/>
                    <Dependency path="/inRegisteredDomesticPartnership"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/knockoutSubjectToCommunityPropertyLaws">
            <Description>The filer is subject to community property laws if they are only eligible for
                MFS, or they chose MFS,
                or they chose HoH and said their marital status is married and they live in Arizona,
                California, Nevada, Texas,
                or Washinton.
            </Description>

            <Derived>
                <All>
                    <Dependency path="/livesInCommunityPropertyState"/>
                    <Any>
                        <All>
                            <Dependency module="filers" path="/isMarried"/>
                            <Not>
                                <Dependency module="filingStatus" path="/eligibleForMFJ"/>
                            </Not>
                            <Not>
                                <Dependency module="filingStatus" path="/eligibleForHoh"/>
                            </Not>
                        </All>
                        <Dependency module="filingStatus" path="/treatAsMFS"/>
                        <All>
                            <Dependency module="filingStatus" path="/treatAsHoh"/>
                            <Equal>
                                <Left>
                                    <Dependency path="/maritalStatus"/>
                                </Left>
                                <Right>
                                    <Enum optionsPath="/maritalStatusOptions">married</Enum>
                                </Right>
                            </Equal>
                        </All>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filersCouldntBeDependents">
            <Name>Filers couldn't be dependents</Name>
            <Description>Neither filer could be claimed as a dependent.</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/treatAsMFJ"/>
                        </When>
                        <Then>
                            <Not>
                                <Dependency path="/isMFJDependent"/>
                            </Not>
                        </Then>
                    </Case>
                    <!-- The TP is any other filing status, we care only about their dependency -->
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Not>
                                <Dependency path="/primaryFiler/canBeClaimed"/>
                            </Not>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/yearOfSpouseDeathOptions">
            <Name>Year of Spouse Death Options</Name>
            <Description>The year that a taxpayer's spouse died</Description>
            <Derived>
                <EnumOptions>
                    <String>taxYear</String>
                    <String>taxYearMinusOne</String>
                    <String>taxYearMinusTwo</String>
                    <String>beforeTaxYearMinusTwo</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/yearOfSpouseDeath">
            <Name>Year of spouse's death</Name>
            <Description>The relative year a widowed filer's spouse died.</Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Enum optionsPath="/yearOfSpouseDeathOptions"/>
            </Writable>
        </Fact>
        <Fact path="/flowKnockoutUnsupportedState">
            <Name>Either filer not in a supported state</Name>
            <Description>Used to control a flow knockout state</Description>

            <Derived>
                <Any>
                    <Not>
                        <Dependency path="/hasIncomeInScope"/>
                    </Not>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/address">
            <Name>Address</Name>
            <Description>The mailing address of the taxpayer(s).</Description>
            <Export downstreamFacts="true" mef="true"/>

            <Writable>
                <Address/>
            </Writable>
        </Fact>
        <Fact path="/streetAddressAs1Line">
            <Description>
                The combination of street address lines 1 and 2
            </Description>
            <Export mef="true"/>

            <Derived>
                <Paste>
                    <Dependency path="/address/streetAddress"/>
                    <Dependency path="/address/streetAddressLine2"/>
                </Paste>
            </Derived>
        </Fact>
        <Fact path="/mefAddressZip">
            <Name>Mailing address zip in MeF Format</Name>
            <Description>The mailing address zip of the taxpayer(s), with hyphens and spaces stripped for
                MeF compliance
            </Description>
            <Export mef="true"/>
            <Derived>
                <Trim>
                    <StripChars>
                        <Input>
                            <Dependency path="/address/postalCode"/>
                        </Input>
                        <Allow>
                            <Dependency module="mefTypes" path="/mefZipCodeType"/>
                        </Allow>
                    </StripChars>
                </Trim>
            </Derived>
        </Fact>
        <Fact path="/usStateName">
            <Name>US State Name</Name>
            <Description>The state inside the US if the address isn't foreign</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/address/foreignAddress"/>
                        </When>
                        <Then>
                            <String/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/address/stateOrProvence"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/foreignStateName">
            <Name>Foreign State Name</Name>
            <Description>The state/provence outside the US</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/address/foreignAddress"/>
                        </When>
                        <Then>
                            <Dependency path="/address/stateOrProvence"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <String/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/foreignCountryName">
            <Name>Foreign Country Name</Name>
            <Description>The country outside the US</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/address/foreignAddress"/>
                        </When>
                        <Then>
                            <Dependency path="/address/country"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <String/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/usPostalCode">
            <Name>US Postal Code</Name>
            <Description>The postal code if the address is in the US</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/address/foreignAddress"/>
                        </When>
                        <Then>
                            <String/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/address/postalCode"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/foreignPostalCode">
            <Name>Foreign Postal Code</Name>
            <Description>The postal code when the address is not in the US</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/address/foreignAddress"/>
                        </When>
                        <Then>
                            <Dependency path="/address/postalCode"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <String/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/phone">
            <Name>Phone</Name>
            <Description>The phone number of the taxpayer(s).</Description>
            <Export mef="true" downstreamFacts="true"/>

            <Writable>
                <PhoneNumber/>
            </Writable>
        </Fact>
        <Fact path="/email">
            <Name>Email address</Name>
            <Description>The email address of the taxpayer(s).</Description>

            <Writable>
                <EmailAddress/>
            </Writable>
        </Fact>
        <Fact path="/emailString">
            <Description>
                The string version of the email
            </Description>

            <Derived>
                <AsString>
                    <Dependency path="/email"/>
                </AsString>
            </Derived>
        </Fact>
        <Fact path="/mefEmail">
            <Description>
                The email address of the taxpayer(s) sent to MeF.
                If the address is over 75 characters, we do not send
                an email.
                This is allowed by MeF Business rules, and they will not accept emails
                over 75 characters in length
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <GreaterThan>
                                <Left>
                                    <Length>
                                        <Dependency path="/emailString"/>
                                    </Length>
                                </Left>
                                <Right>
                                    <Int>75</Int>
                                </Right>
                            </GreaterThan>
                        </When>
                        <Then>
                            <String/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/emailString"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>

        </Fact>
        <Fact path="/filerCouldQualifyForHoh">
            <Name>Whether, prior to asking about dependents, the TP might be eligible for HoH</Name>
            <Description>Whether, prior to asking about dependents, the TP might qualify as HoH. Used to
                decide whether to
                ask
                the questions about whether a person could be a dependent. A TP is eligible for be HoH
                as long as they are
                not
                eligible to file MFJ. If they are married, they need to have lived apart for the last
                six months or the
                spouse
                must have been a noncitizen who was not a resident for the fully TY.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <Not>
                        <!-- If they meet the noncitizen nonresident exception, they won't be eligible for MFJ,
            which will make them
            eligible for HoH -->
                        <Dependency module="filingStatus" path="/eligibleForMFJ"/>
                    </Not>
                    <All>
                        <Dependency module="filingStatus" path="/eligibleForMFJ"/>
                        <Dependency path="/livedApartLastSixMonths"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/widowedCouldQualifyForQSS">
            <Export downstreamFacts="true"/>
            <Derived>
                <All>
                    <Dependency path="/isWidowed"/>
                    <Any>
                        <Equal>
                            <Left>
                                <Dependency path="/yearOfSpouseDeath"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/yearOfSpouseDeathOptions">taxYearMinusOne</Enum>
                            </Right>
                        </Equal>
                        <Equal>
                            <Left>
                                <Dependency path="/yearOfSpouseDeath"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/yearOfSpouseDeathOptions">taxYearMinusTwo</Enum>
                            </Right>
                        </Equal>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filerCouldQualifyForQss">
            <Description>Based on filer information, the filer may qualify for QSS</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="/widowedCouldQualifyForQSS"/>
                    <Dependency path="/canFileJointlyYearOfSpouseDeath"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filersCouldQualifyForEitc">
            <Description>
                Based on filer + spouse information, the filer may qualify for EITC
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Not>
                        <!-- We ban an MFJ dependent here, as they have opted not to take credits. A single
            person who is a
            dependent may still be eligible for EITC with qualifying children, so they are not banned from
            EITC.  -->
                        <Dependency path="/isMFJDependent"/>
                    </Not>
                    <Dependency path="/filersUSCitizenOrRAAllYear"/>
                    <Dependency path="/filersHaveValidSSNsForEitc"/>
                    <Switch>
                        <Case>
                            <!-- If the TP is MFS, they must have lived apart or have a separation agreement. -->
                            <When>
                                <All>
                                    <IsComplete>
                                        <Dependency module="filingStatus" path="/treatAsMFS"/>
                                    </IsComplete>
                                    <Dependency module="filingStatus" path="/treatAsMFS"/>
                                </All>
                            </When>
                            <Then>
                                <Dependency path="/specialRuleForSeparatedSpouses"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <True/>
                            </Then>
                        </Case>
                    </Switch>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filersCouldQualifyForCdcc">
            <Description>
                Based on filer + spouse information only, the filer could qualify to receive CDCC Credit for any
                qualifying people.
                If MFJ, they could all
                qualify, but
                if MFS, they can't unless they are considered unmarried.
                At
                this point we cannot determine
                mfsConsideredUnmarried completely as we don't know information per qualifying
                person.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/treatAsMFS"/>
                        </When>
                        <Then>
                            <Dependency path="/mfsFilerCouldBeConsiderUnmarriedForCdcc"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/mfsFilerCouldBeConsiderUnmarriedForCdcc">
            <Description>
                Based on filer + spouse only - whether the MFS primary filer could be considered unmarried for
                purposes
                of claiming the credit on Form 2441. This does not include the per-qualifying-person requirements.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <!--
              """
              Generally, married persons must file a joint return to claim the credit. If your filing status is married filing
          separately and all of the following apply, you are considered unmarried for purposes of claiming the credit
          on Form 2441.
              * You lived apart from your spouse during the last 6 months of 2023.
              """

              Additional qualifying criteria is dependent on the qualifying persons
              -->
                    <IsComplete>
                        <Dependency module="filingStatus" path="/treatAsMFS"/>
                    </IsComplete>
                    <Dependency module="filingStatus" path="/treatAsMFS"/>
                    <Dependency path="/livedApartLastSixMonths"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filersHaveValidSSNsForEitc">
            <Description>Whether the TP(s) have a valid SSN for EITC</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/treatAsMFJ"/>
                        </When>
                        <Then>
                            <All>
                                <Dependency path="/primaryFiler/ssnValidForEitc"/>
                                <Dependency path="/secondaryFiler/ssnValidForEitc"/>
                            </All>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/primaryFiler/ssnValidForEitc"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filersUSCitizenOrRAAllYear">
            <Name>Filer(s) are US citizen or RA all year</Name>
            <Description>Whether the TP(s) are U.S. citizens or resident aliens all year</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/treatAsMFJ"/>
                        </When>
                        <Then>
                            <!-- TODO: When we support nonresident aliens we'll need to add the exception here for
              them -->
                            <All>
                                <Dependency path="/primaryFilerIsCitizenOrRAAllYear"/>
                                <Dependency path="/secondaryFilerIsCitizenOrRAAllYear"/>
                            </All>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/primaryFilerIsCitizenOrRAAllYear"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerIsCitizenOrRAAllYear">
            <Name>Primary filer is citizen or RA all year</Name>
            <Description>Whether the primary filer is a U.S. citizen or resident alien the entire year</Description>

            <Derived>
                <Any>
                    <Dependency path="/primaryFiler/isNoncitizenResidentFullYear"/>
                    <Dependency path="/primaryFiler/isUsCitizenFullYear"/>
                    <Dependency path="/primaryFiler/citizenAtEndOfTaxYear"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerIsCitizenOrRAAllYear">
            <Name>Secondary filer is citizen or RA all year</Name>
            <Description>Whether the secondary filer is a U.S. citizen or resident alien the entire year</Description>

            <Derived>
                <Any>
                    <Dependency path="/secondaryFiler/isNoncitizenResidentFullYear"/>
                    <Dependency path="/secondaryFiler/isUsCitizenFullYear"/>
                    <Dependency path="/secondaryFiler/citizenAtEndOfTaxYear"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/eitherFilerUSCitizenOrNational">
            <Name>Either filer is a US citizen or US national</Name>
            <Description>Whether at least one of the TPs is a U.S. citizen or U.S. national</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/treatAsMFJ"/>
                        </When>
                        <Then>
                            <Any>
                                <Dependency path="/primaryFilerIsCitizenOrNational"/>
                                <Dependency path="/secondaryFilerIsCitizenOrNational"/>
                            </Any>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/primaryFilerIsCitizenOrNational"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/allEligibleFilersAreUSCitizensOrNationals">
            <Description>Both filers (when applicable) are U.S. citizens or U.S. nationals</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/treatAsMFJ"/>
                        </When>
                        <Then>
                            <All>
                                <Dependency path="/primaryFilerIsCitizenOrNational"/>
                                <Dependency path="/secondaryFilerIsCitizenOrNational"/>
                            </All>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/primaryFilerIsCitizenOrNational"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerIsCitizenOrNational">
            <Name>Primary filer is a U.S. citizen or U.S. national</Name>
            <Description>Whether the primary filer is a U.S. citizen or U.S. national</Description>

            <Derived>
                <Any>
                    <Dependency path="/primaryFiler/isUsCitizenFullYear"/>
                    <Dependency path="/primaryFiler/citizenAtEndOfTaxYear"/>
                    <Dependency path="/primaryFiler/isNational"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerIsCitizenOrNational">
            <Name>Secondary filer is a U.S. citizen or U.S. national</Name>
            <Description>Whether the secondary filer is a U.S. citizen or U.S. national</Description>

            <Derived>
                <Any>
                    <Dependency path="/secondaryFiler/isUsCitizenFullYear"/>
                    <Dependency path="/secondaryFiler/citizenAtEndOfTaxYear"/>
                    <Dependency path="/secondaryFiler/isNational"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/specialRuleForSeparatedSpouses">
            <Name>Special rule for separated spouses</Name>
            <Description>Checks whether the spouse lived apart the last 6 months or are legally separated</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <Dependency path="/livedApartLastSixMonths"/>
                    <Dependency path="/separationAgreement"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filersCouldHaveDependentOrQualifyingPerson">
            <Description>The filer(s) are eligible to enter people. This means that they are still
                potentially eligible to
                claim deductions, credits, or HoH/QSS filing status.
            </Description>
            <Derived>
                <Any>
                    <Not>
                        <Dependency path="/treatFilersAsDependents"/>
                    </Not>
                    <All>
                        <Not>
                            <Dependency module="filingStatus" path="/treatAsMFJ"/>
                        </Not>
                        <!-- Even if the person could qualify for HoH, we don't show it to them if they've
            chosen to be MFJ -->
                        <Dependency path="/filerCouldQualifyForHoh"/>
                    </All>
                    <Dependency path="/filerCouldQualifyForQss"/>
                    <Dependency path="/filersCouldQualifyForEitc"/>
                    <Dependency path="/filersCouldQualifyForCdcc"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/isSecondaryFilerNra">
            <Name>Is the secondary filer a non-resident alien</Name>
            <Description>Whether the secondaryFiler is considered a non-resident alien.</Description>

            <Derived>
                <Not>
                    <Dependency path="/secondaryFilerIsCitizenOrRAAllYear"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/xmlNraLiteralCd">
            <Name>NRA literal code</Name>
            <Description>The code used to populate the IRS 1040 NRALiteralCd (nonresident alien) XML
                element when required
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                                <Dependency path="/isSecondaryFilerNra"/>
                            </All>
                        </When>
                        <Then>
                            <String>NRA</String>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/xmlSpouseName">
            <Name>The spouse's name</Name>
            <Description>The spouse's name used to populate the SpouseNm 1040 XML element.</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Not>
                                    <Dependency path="/isSecondaryFilerNra"/>
                                </Not>
                                <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/secondaryFiler/mefFullName"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/conditionalSpouseName">
            <Name>Conditional spouse name</Name>
            <Description>A spouse name that will be blank if the filer is not married. Helpful because we
                don't clear
                /secondaryFiler/fullName if the filer changes their marital status
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/isMarried"/>
                        </When>
                        <Then>
                            <Dependency path="/secondaryFiler/fullName"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <String/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/xmlOver65SRIndicator">
            <Name>1040SR Indicator</Name>
            <Description>Whether these filer(s) should be filing on a 1040SR</Description>
            <Export mef="true"/>

            <Derived>
                <Any>
                    <Dependency path="/primaryFiler/age65OrOlder"/>
                    <All>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        <Dependency path="/secondaryFiler/age65OrOlder"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/pdfNotOver65SRIndicator">
            <Name>Negate 1040SR Indicator</Name>
            <Description>Whether these filer(s) should be filing on a regular 1040</Description>

            <Derived>
                <Any>
                    <Not>
                        <IsComplete>
                            <Dependency path="/xmlOver65SRIndicator"/>
                        </IsComplete>
                    </Not>
                    <Not>
                        <Dependency path="/xmlOver65SRIndicator"/>
                    </Not>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerIsBlindIndicatorXml">
            <Export mef="true"/>
            <Derived>
                <All>
                    <Dependency module="standardDeduction" path="/isSpouseInfoApplicableForStandardDeductions"/>
                    <Dependency path="/secondaryFiler/isBlind"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/mfsButEligibleForCdcc">
            <Name>Primary filer is MFS and is considered unmarried for the purposes of claiming CDCC credit</Name>
            <Description>
                The TP is considered unmarried for the purposes of claiming CDCC credit. At this point we should be
                able to fully determine whether they are eligible for the credit. Used to set
                `EligibilityRequirementMetInd`
                in
                MeF.
                Form 2441, Line A
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                    <Dependency path="/livedApartLastSixMonths"/>
                    <GreaterThan>
                        <Left>
                            <Dependency module="familyAndHousehold" path="/cdccQualifyingNonFilersCount"/>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                    <Dependency module="cdcc" path="/cdccQualifyingDependentsPassResidencyTest"/>
                    <Dependency module="cdcc" path="/cdccQualifyingDependentsPassTpPaidMostOfHomeUpkeep"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/mfsNotEligibleForCdcc">
            <Name>Primary filer is MFS and is considered married</Name>
            <Description>If the filer meets some requirements, they are considered unmarried for the purposes of
                claiming CDCC
                credit. This filer did not meet those requirements and will be considered married. Used for determining
                Child
                and
                Dependent Care
                Credit.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                    <Not>
                        <Dependency path="/mfsButEligibleForCdcc"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/isUnder18">
            <Description>Whether the filer is under 18 for purposes of the Saver's Credit</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <LessThan>
                    <Left>
                        <Dependency path="../ageCalculatedDayBeforeDOB"/>
                    </Left>
                    <Right>
                        <Int>18</Int>
                    </Right>
                </LessThan>
            </Derived>
        </Fact>
        <Fact path="/filers/*/isEligibleForSaversCredit">
            <Description>Whether the filer is eligible for the saver's credit based on filer info</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="../isUnder18"/>
                    </Not>
                    <Any>
                        <All>
                            <Dependency path="../isPrimaryFiler"/>
                            <Not>
                                <Dependency path="/primaryFilerIsClaimedAsDependent"/>
                            </Not>
                        </All>
                        <All>
                            <Dependency path="../isSecondaryFiler"/>
                            <Not>
                                <Dependency path="/secondaryFilerIsClaimedAsDependent"/>
                            </Not>
                        </All>
                    </Any>
                    <Not>
                        <Dependency path="../isStudent"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/filers/*/isPrimaryFilerOrMfjAndEither">
            <Description>Whether the filer is the primary filer or MFJ and either primary or secondary.</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Any>
                    <All>
                        <Dependency path="../isSecondaryFiler"/>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    </All>
                    <Dependency path="../isPrimaryFiler"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filers/*/cdccQualifyingPerson">
            <Description>
                This filer qualifies the taxpayer for CDCC
            </Description>

            <!--
        """
        A qualifying person is any of the following.

        2. Your disabled spouse who:
            a) wasn't physically or mentally able to care for themselves
            b) lived with you for more than half the year.
        """

        Feedback from SMEs is that the same requirements apply to primary filers
      -->

            <Derived>
                <All>
                    <IsComplete>
                        <!-- This ensures that /cdccQualifyingFilers will never be incomplete -->
                        <Dependency path="../isDisabled"/>
                    </IsComplete>
                    <Dependency path="../isDisabled"/>
                    <Dependency module="filingStatus" path="/treatAsMFJ"/>
                    <Any>
                        <Dependency path="/livedTogetherAllYearWithSpouse"/>
                        <Equal>
                            <Left>
                                <Dependency path="/spouseLivedTogetherMonths"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/spouseLivedTogetherMonthsOptions">livedTogetherMoreThanSixMonths
                                </Enum>
                            </Right>
                        </Equal>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccQualifyingFilers">
            <Description>Filers who qualify the taxpayer for CDCC</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Filter path="/filers">
                    <Dependency path="cdccQualifyingPerson"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/cdccQualifyingFilersCount">
            <Description>
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <CollectionSize>
                    <Dependency path="/cdccQualifyingFilers"/>
                </CollectionSize>
            </Derived>
        </Fact>
        <Fact path="/filers/*/cdccExpensesCollected">
            <Description>
                We have collected expenses for CDCC if required. Used to test completion of the CDCC QP loop.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <Not>
                        <!-- Nothing to collect if they have no expenses overall -->
                        <Dependency module="cdcc" path="/cdccMaybeHasQualifyingExpenses"/>
                    </Not>
                    <!-- Nothing to collect if they said the qp didn't have qualified care expenses -->
                    <Not>
                        <Dependency path="../cdccHasDependentCareExpenses"/>
                    </Not>
                    <!-- Nothing to collect if they said the qp didn't have expenses paid to a qualified care provider -->
                    <All>
                        <Dependency path="../cdccHasDependentCareExpenses"/>
                        <Not>
                            <Dependency path="../cdccHadExpensesPaidToQualifyingProvider"/>
                        </Not>
                    </All>
                    <!-- Or if we were collecting, let's make sure it's a complete amount-->
                    <IsComplete>
                        <Dependency path="../cdccQualifyingExpenseAmount"/>
                    </IsComplete>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filers/*/cdccQualifyingExpenseAmount">
            <Name>Qualifying Expense Amount for CDCC</Name>
            <Description>
                Amount of qualifying expenses paid for this qualifying person.
                Only applies if the person is a CDCC QP
                and a filer
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../cdccHasQualifyingExpenses"/>
                        </When>
                        <Then>
                            <Round>
                                <Dependency path="../writableCdccQualifyingExpenseAmount"/>
                            </Round>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Not>
                                <Dependency path="../cdccHasQualifyingExpenses"/>
                            </Not>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/writableCdccQualifyingExpenseAmount">
            <Name>Qualifying Expense Amount for CDCC</Name>
            <Description>
                Amount of qualifying expenses paid for this qualifying person.
                Only applies if the person is a CDCC QP
                and a filer
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/cdccHasDependentCareExpenses">
            <Description>
                Whether the QP has qualifying dependent care expenses
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/cdccHadExpensesPaidToQualifyingProvider">
            <Description>
                Whether the QP's expenses were paid to a qualified provider
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/cdccHasQualifyingExpenses">
            <Description>
                Whether this filer who was a qp for cdcc had expenses that were qualifying and paid to a qualified
                provider
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="../cdccHasDependentCareExpenses"/>
                    <Dependency path="../cdccHadExpensesPaidToQualifyingProvider"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/has1095AInIRDAS">
            <Name>Filer has 1095-A in IRDAS</Name>
            <Description>
                Whether the filer has at least one Form 1095-A in IRDAS
            </Description>
            <Export downstreamFacts="false"/>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/flowFilersKnockout">
            <Description>The user has been knocked out for reasons(s) defined in this module</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Any>
                    <Dependency path="/flowKnockoutFilerAgeYoungerThan16"/>
                    <Dependency path="/spouseItemizesKnockout"/>
                    <Dependency path="/primaryFilerResidencyKnockout"/>
                    <Dependency path="/flowKnockoutUnsupportedState"/>
                    <Dependency path="/flowKnockoutHasApplicableRegisteredDomesticPartnership"/>
                    <Dependency path="/knockoutSubjectToCommunityPropertyLaws"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/allTinsUnique">
            <Name>All TINs Unique</Name>
            <Description>Across filers and dependents who have provided TINS, all TINs are unique</Description>

            <Derived>
                <All>
                    <Equal>
                        <Left>
                            <Count>
                                <Dependency module="familyAndHousehold"
                                            path="/familyAndHouseholdWithTins/*/isTinUnique"/>
                            </Count>
                        </Left>
                        <Right>
                            <Count>
                                <Dependency module="familyAndHousehold" path="/familyAndHouseholdWithTins/*/hasTin"/>
                            </Count>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Count>
                                <Dependency module="filers" path="/filersWithTins/*/isTinUnique"/>
                            </Count>
                        </Left>
                        <Right>
                            <Count>
                                <Dependency module="filers" path="/filersWithTins/*/hasTin"/>
                            </Count>
                        </Right>
                    </Equal>

                </All>
            </Derived>
        </Fact>
        <Fact path="/presidentalCampaignOptions">
            <Name>Presidential Election Campaign Fund</Name>
            <Description>Options for how (if at all) the filer wants to donate to the Presidential Election Campaign
                Fund
            </Description>
            <Derived>
                <EnumOptions>
                    <String>filer</String>
                    <EnumOption>
                        <Condition>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </Condition>
                        <Value>
                            <String>spouse</String>
                        </Value>
                    </EnumOption>
                    <EnumOption>
                        <Condition>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </Condition>
                        <Value>
                            <String>both</String>
                        </Value>
                    </EnumOption>
                    <String>neither</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/communicationFormatOptions">
            <Name>Formats for IRS communications</Name>
            <Description>Alternative formats for IRS communications</Description>
            <Derived>
                <EnumOptions>
                    <String>standardPrint</String>
                    <String>largePrint</String>
                    <String>braille</String>
                    <String>audio</String>
                    <String>txt</String>
                    <String>brf</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/languageOptions">
            <Name>Language Options</Name>
            <Description>The language the filer would like the IRS to communicate in</Description>
            <Derived>
                <EnumOptions>
                    <String>english</String>
                    <String>spanish</String>
                    <String>korean</String>
                    <String>vietnamese</String>
                    <String>russian</String>
                    <String>arabic</String>
                    <String>haitian</String>
                    <String>tagalog</String>
                    <String>portuguese</String>
                    <String>polish</String>
                    <String>farsi</String>
                    <String>french</String>
                    <String>japanese</String>
                    <String>gujarati</String>
                    <String>punjabi</String>
                    <String>khmer</String>
                    <String>urdu</String>
                    <String>bengali</String>
                    <String>italian</String>
                    <String>chineseTraditional</String>
                    <String>chineseSimplified</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/wantsThirdPartyDesignee">
            <Name>Filer wants a third-party designee</Name>
            <Description>Do you want to allow another person to discuss this return with the IRS? </Description>
            <Export mef="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/wantsThirdPartyDesigneeNo">
            <Name>Third Party Designee `No` checkbox</Name>
            <Description>Whether to mark the PDF 'No' checkbox for Third Party Designee</Description>
            <Derived>
                <Not>
                    <Dependency path="/wantsThirdPartyDesignee"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/thirdPartyDesigneeFullName">
            <Name>Designee Name</Name>
            <Description>The designee's full name</Description>

            <Writable>
                <String/>
                <Limit type="Match">
                    <String>[\sA-Za-z0-9\-]+</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>35</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/mefThirdPartyDesigneeFullName">
            <Description>The name of the designess, with only MEF-compliant characters.</Description>
            <Export mef="true"/>
            <Derived>
                <Trim>
                    <StripChars>
                        <Input>
                            <Dependency path="/thirdPartyDesigneeFullName"/>
                        </Input>
                        <Allow>
                            <Dependency module="mefTypes" path="/mefNameType"/>
                        </Allow>
                    </StripChars>
                </Trim>
            </Derived>
        </Fact>
        <Fact path="/thirdPartyDesigneePhone">
            <Name>Designee Phone</Name>
            <Description>The designee's phone number</Description>
            <Export mef="true"/>

            <Writable>
                <PhoneNumber/>
            </Writable>
        </Fact>
        <Fact path="/thirdPartyDesigneePin">
            <Name>Designee Pin</Name>
            <Description>The designee's PIN</Description>
            <Export mef="true"/>

            <Writable>
                <PIN/>
            </Writable>
        </Fact>
        <Fact path="/pdfThirdPartyDesigneeFullName">
            <Name>PDF Designee full name</Name>
            <Description>The designee's full name for PDF display</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/wantsThirdPartyDesignee"/>
                        </When>
                        <Then>
                            <Dependency path="/thirdPartyDesigneeFullName"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/pdfThirdPartyDesigneePhone">
            <Name>PDF Designee Phone</Name>
            <Description>The designee's phone for PDF display</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/wantsThirdPartyDesignee"/>
                        </When>
                        <Then>
                            <Dependency path="/thirdPartyDesigneePhone"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/pdfThirdPartyDesigneePin">
            <Name>PDF Designee Pin</Name>
            <Description>The designee's PIN for PDF display</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/wantsThirdPartyDesignee"/>
                        </When>
                        <Then>
                            <Dependency path="/thirdPartyDesigneePin"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/wantsCustomLanguage">
            <Name>Filer has a language preference</Name>
            <Description>Would you like to change the language you receive written communications from the IRS in?
            </Description>
            <Export mef="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/languagePreference">
            <Name>Language Preference</Name>
            <Description>The filer's language preference</Description>
            <Export mef="true"/>

            <Writable>
                <Enum optionsPath="/languageOptions"/>
            </Writable>
        </Fact>
        <Fact path="/wantsCommsFormat">
            <Name>Filer wants a custom communicaton format</Name>
            <Description>Would you like to change the format you receive written communications in?</Description>
            <Export mef="true"/>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/commsFormat">
            <Name>Communicatons format</Name>
            <Description>The format the filer would like to be communicated in</Description>
            <Export mef="true"/>
            <Writable>
                <Enum optionsPath="/communicationFormatOptions"/>
            </Writable>
        </Fact>
        <Fact path="/completedOtherPrefsSection">
            <Name>Completed other preferences section</Name>
            <Description>Has completed the other preferences section</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Any>
                        <All>
                            <Dependency path="/wantsThirdPartyDesignee"/>
                            <IsComplete>
                                <Dependency path="/thirdPartyDesigneeFullName"/>
                            </IsComplete>
                            <IsComplete>
                                <Dependency path="/thirdPartyDesigneePhone"/>
                            </IsComplete>
                            <IsComplete>
                                <Dependency path="/thirdPartyDesigneePin"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="/wantsThirdPartyDesignee"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="/wantsCustomLanguage"/>
                            <IsComplete>
                                <Dependency path="/languagePreference"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="/wantsCustomLanguage"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="/wantsCommsFormat"/>
                            <IsComplete>
                                <Dependency path="/commsFormat"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="/wantsCommsFormat"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Dependency path="/totalTaxIsHigherThanPresidentialCampaignDesignationAmount"/>
                            <IsComplete>
                                <Dependency path="/presidentalCampaignDesignation"/>
                            </IsComplete>
                        </All>
                        <Not>
                            <Dependency path="/totalTaxIsHigherThanPresidentialCampaignDesignationAmount"/>
                        </Not>
                    </Any>
                    <Any>
                        <All>
                            <Any>
                                <Not>
                                    <Dependency module="signing" path="/isLegacySigningPath"/>
                                </Not>
                                <Not>
                                    <IsComplete>
                                        <Dependency module="signing" path="/isLegacySigningPath"/>
                                    </IsComplete>
                                </Not>
                            </Any>
                            <IsComplete>
                                <Dependency module="signing" path="/selfSelectPin"/>
                            </IsComplete>
                        </All>
                        <Dependency module="signing" path="/isLegacySigningPath"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/presidentalCampaignDesignationAmount">
            <Name>Presidental Campaign Designation Amount</Name>
            <Description>How much money the Presidental Campaign Designation is</Description>

            <Derived>
                <Dollar>3</Dollar>
            </Derived>
        </Fact>
        <Fact path="/totalTaxIsHigherThanPresidentialCampaignDesignationAmount">
            <Name>Presidential Fund candidacy</Name>
            <Description>Whether the tax payer is asked to contribute to the presidential fund based on filing status
                and
                total tax
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <GreaterThanOrEqual>
                                <Left>
                                    <Dependency module="taxCalculations" path="/totalTax"/>
                                </Left>
                                <Right>
                                    <Add>
                                        <Dependency path="/presidentalCampaignDesignationAmount"/>
                                        <Dependency path="/presidentalCampaignDesignationAmount"/>
                                    </Add>
                                </Right>
                            </GreaterThanOrEqual>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <GreaterThanOrEqual>
                                <Left>
                                    <Dependency module="taxCalculations" path="/totalTax"/>
                                </Left>
                                <Right>
                                    <Dependency path="/presidentalCampaignDesignationAmount"/>
                                </Right>
                            </GreaterThanOrEqual>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/presidentalCampaignDesignation">
            <Name>Presidental Campaign Designation</Name>
            <Description>Does the filer or spouse (or both) want to give $3 to the Presidential Election Campaign Fund
            </Description>
            <Writable>
                <Enum optionsPath="/presidentalCampaignOptions"/>
            </Writable>
        </Fact>
        <Fact path="/filers/*/potusElection">
            <Name>Presidential campaign fund</Name>
            <Description>Whether the filer wishes $3 of their taxes to go to the Presidential Election Campaign Fund.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="filers" path="../isPrimaryFiler"/>
                                <IsComplete>
                                    <Dependency module="filers" path="../isPrimaryFiler"/>
                                </IsComplete>
                            </All>
                        </When>
                        <Then>
                            <Any>
                                <Equal>
                                    <Left>
                                        <Dependency path="/presidentalCampaignDesignation"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/presidentalCampaignOptions">filer</Enum>
                                    </Right>
                                </Equal>
                                <Equal>
                                    <Left>
                                        <Dependency path="/presidentalCampaignDesignation"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/presidentalCampaignOptions">both</Enum>
                                    </Right>
                                </Equal>
                            </Any>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <All>
                                <Dependency module="filers" path="../isSecondaryFiler"/>
                                <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                            </All>
                        </When>
                        <Then>
                            <Any>
                                <Equal>
                                    <Left>
                                        <Dependency path="/presidentalCampaignDesignation"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/presidentalCampaignOptions">spouse</Enum>
                                    </Right>
                                </Equal>
                                <Equal>
                                    <Left>
                                        <Dependency path="/presidentalCampaignDesignation"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/presidentalCampaignOptions">both</Enum>
                                    </Right>
                                </Equal>
                            </Any>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filers/*/potusElectionAmount">
            <Name>Presidential campaign fund Election Amount</Name>
            <Description>The dollar amount the filer has designated for the Presidential campaign fund</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../potusElection"/>
                        </When>
                        <Then>
                            <Dependency path="/presidentalCampaignDesignationAmount"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Not>
                                <Dependency path="../potusElection"/>
                            </Not>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/presidentialCampaignSelectedAmount">
            <Name>Presidential Campaign Selected Amount</Name>
            <Description>The derived dollar amount designated for the presidential campaign fund, based on the filer's
                tax
                amount and stated preferences
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Not>
                                <Dependency path="/totalTaxIsHigherThanPresidentialCampaignDesignationAmount"/>
                            </Not>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <CollectionSum>
                                <Dependency path="/filers/*/potusElectionAmount"/>
                            </CollectionSum>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/hasPresidentialCampaignAmount">
            <Name>Has Presidential Campaign Selected Amount</Name>
            <Description>Whether the filer has designated a dollar amount for the presidential campaign fund
            </Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/presidentialCampaignSelectedAmount"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/incomeSourcesSupported">
            <Name>Income sources supported</Name>
            <Description>Does Direct File support all of the income sources that you/you and your spouse have?
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/receivedDigitalAssets">
            <Name>Digital assets</Name>
            <Description>At any time during 2023, did you: (a) receive (as a reward, award, or payment for property or
                services) a digital asset (or a financial interest in a digital asset)?
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/disposedDigitalAssets">
            <Name>Digital assets</Name>
            <Description>At any time during 2023, did you sell, exchange, gift, or otherwise dispose of a digital asset
                (or a
                financial interest in a digital asset)?
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/notDigitalAssets">
            <Name>Not Digital Assets</Name>
            <Description>The TP did not receive receive or dispose of digital assets</Description>
            <Derived>
                <Not>
                    <Any>
                        <Dependency path="/receivedDigitalAssets"/>
                        <Dependency path="/disposedDigitalAssets"/>
                    </Any>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/hasForeignAccounts">
            <Name>Interest of signature authorization in a foreign financial account</Name>
            <Description>At any time during 2023, did you have a financial interest in or signature authority over a
                financial
                account located in a foreign country?
            </Description>
            <Export mef="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/doesNotHaveForeignAccounts">
            <Name>Does not have interest of signature authorization in a foreign financial account</Name>
            <Description>Logical Negation of has foreign accounts</Description>

            <Derived>
                <Not>
                    <Dependency path="/hasForeignAccounts"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/isForeignTrustsGrantor">
            <Name>Is the TP an owner, grantor, settler or trustor of a foreign trust?</Name>
            <Description>At any time during 2023, did you own a foreign trust?</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/isNotForeignTrustsGrantor">
            <Name>Is the TP NOT an owner, grantor, settler or trustor of a foreign trust?</Name>
            <Description>Logical Negation of has foreign trusts grantor</Description>

            <Derived>
                <Not>
                    <Dependency path="/isForeignTrustsGrantor"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/hasForeignTrustsTransactions">
            <Name>Did the TP have any transactions with a foreign trust?</Name>
            <Description>At any time during 2023, did you have a transaction with a foreign trust?</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/doesNotHaveForeignTrustsTransactions">
            <Name>Is the TP NOT an owner, grantor, settler or trustor of a foreign trust?</Name>
            <Description>Logical Negation of has foreign trusts grantor</Description>

            <Derived>
                <Not>
                    <Dependency path="/hasForeignTrustsTransactions"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/isForeignTrustsGrantorOrHasForeignTrustsTransactions">
            <Name>Is the TP an owner, grantor, settler or trustor of a foreign trust OR did the TP have any transactions
                with
                a foreign trust?
            </Name>
            <Description>Is the TP an owner, grantor, settler or trustor of a foreign trust OR did the TP have any
                transactions with a foreign trust?
            </Description>
            <Export mef="true"/>

            <Derived>
                <Any>
                    <Dependency path="/isForeignTrustsGrantor"/>
                    <Dependency path="/hasForeignTrustsTransactions"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/isNotForeignTrustsGrantorAndDoesNotHaveForeignTrustsTransactions">
            <Name>Is the TP NOT an owner, grantor, settler or trustor of a foreign trust AND did the TP NOT have any
                transactions with a foreign trust?
            </Name>
            <Description>Is the TP NOT an owner, grantor, settler or trustor of a foreign trust AND did the TP NOT have
                any
                transactions with a foreign trust?
            </Description>

            <Derived>
                <Not>
                    <Dependency path="/isForeignTrustsGrantorOrHasForeignTrustsTransactions"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/hasForeignAccountsOrTrusts">
            <Description>The TP has interest in foreign accounts or foreign trusts</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <Dependency path="/hasForeignAccounts"/>
                    <Dependency path="/isForeignTrustsGrantorOrHasForeignTrustsTransactions"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/doesNotHaveForeignAccountsOrTrusts">
            <Name>Not foreign accounts nor foreign trusts</Name>
            <Description>The TP does not have interest in foreign accounts nor does the TP have interest in foreign
                trusts
            </Description>

            <Derived>
                <Not>
                    <Dependency path="/hasForeignAccountsOrTrusts"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/madeIraContributions">
            <Name>Made IRA contributions</Name>
            <Description>Whether the TP made contributions to an Individual Retirement Arrangement.</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/incomeSourcesIsComplete">
            <Name>Income sources complete</Name>
            <Description>The income sources sub-subsection is complete.</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="/incomeSourcesSupported"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="/notDigitalAssets"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="/doesNotHaveForeignAccountsOrTrusts"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="/madeIraContributions"/>
                    </IsComplete>
                </All>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerUnreportedHouseholdWages">
            <Description>
                Primary Filer's Household employee wages not reported on Form(s) W-2

                OUT OF SCOPE
            </Description>

            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerUnreportedHouseholdWages">
            <Description>
                Primary Filer's household employee wages not reported on Form(s) W-2

                OUT OF SCOPE
            </Description>

            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/unreportedHouseholdWages">
            <Name>Unreported household wages</Name>
            <Description>
                Household employee wages not reported on Form(s) W-2

                Form 1040, 1b
            </Description>

            <Derived>
                <Add>
                    <Dependency path="/primaryFilerUnreportedHouseholdWages"/>
                    <Dependency path="/secondaryFilerUnreportedHouseholdWages"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerUnreportedTipIncome">
            <Description>
                Primary Filer's tip income not reported on line 1a

                OUT OF SCOPE
            </Description>

            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerUnreportedTipIncome">
            <Description>
                Secondary Filer's tip income not reported on line 1a

                OUT OF SCOPE
            </Description>

            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/unreportedTipIncome">
            <Name>Unreported tip income</Name>
            <Description>
                Tip income not reported on line 1a

                Form 1040, (line 1c)
            </Description>

            <Derived>
                <Add>
                    <Dependency path="/primaryFilerUnreportedTipIncome"/>
                    <Dependency path="/secondaryFilerUnreportedTipIncome"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerMedicareWaiverPayments">
            <Description>
                Primary filer's Medicaid waiver payments not reported on Form(s) W-2

                OUT OF SCOPE
            </Description>

            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerMedicareWaiverPayments">
            <Description>
                Secondary filer's Medicaid waiver payments not reported on Form(s) W-2

                OUT OF SCOPE
            </Description>

            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/medicareWaiverPayments">
            <Name>Medicare Waiver Payments</Name>
            <Description>
                Medicaid waiver payments not reported on Form(s) W-2

                Form 1040 (line 1d)
            </Description>

            <Derived>
                <Add>
                    <Dependency path="/primaryFilerMedicareWaiverPayments"/>
                    <Dependency path="/secondaryFilerMedicareWaiverPayments"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/taxableDependentCare">
            <Name>Taxable Dependent Care</Name>
            <Description>Taxable dependent care benefits from Form 2441 (line 1e)</Description>
            <Export mef="true"/>

            <Derived>
                <Dependency module="cdcc" path="/cdccTaxableBenefits"/>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerEmployerProvidedAdoptionBenefits">
            <Description>
                Primary filer's Employer-provided adoption benefits from Form 8839 (line 1f)
            </Description>

            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerEmployerProvidedAdoptionBenefits">
            <Description>
                Secondary filer's employer-provided adoption benefits from Form 8839 (line 1f)
            </Description>

            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/employerProvidedAdoptionBenefits">
            <Name>Employer Provided Adoption Benefits</Name>
            <Description>Employer-provided adoption benefits from Form 8839 (line 1f)</Description>

            <Derived>
                <Add>
                    <Dependency path="/primaryFilerEmployerProvidedAdoptionBenefits"/>
                    <Dependency path="/secondaryFilerEmployerProvidedAdoptionBenefits"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerWagesFrom8919">
            <Description>
                Primary filer's wages from Form 8919 (line 1g)
            </Description>

            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerWagesFrom8919">
            <Description>
                Secondary filer's wages from Form 8919 (line 1g)
            </Description>

            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/wagesFrom8919">
            <Name>Wages From 8919</Name>
            <Description>Wages from Form 8919 (line 1g)</Description>

            <Derived>
                <Add>
                    <Dependency path="/primaryFilerWagesFrom8919"/>
                    <Dependency path="/secondaryFilerWagesFrom8919"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerOtherEarnedIncome">
            <Name>Other earned income</Name>
            <Description>Other earned income (line 1h) OUT OF SCOPE.</Description>

            <Derived>
                <Add>
                    <!-- TODO We are not yet supporting strike or lockout benefits, excessive elective deferrals, or corrective distributions from a retirement plan. -->
                    <!-- <Dependency module="form1099Rs" path="/primaryFilerDisabilityPensionsBeforeMinRetirementAge" /> -->
                    <Dollar>0</Dollar>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerOtherEarnedIncome">
            <Name>Other earned income</Name>
            <Description>Other earned income (line 1h) OUT OF SCOPE.</Description>

            <Derived>
                <Add>
                    <!-- TODO We are not yet supporting strike or lockout benefits, excessive elective deferrals, or corrective distributions from a retirement plan. -->
                    <!-- <Dependency module="form1099Rs" path="/secondaryFilerDisabilityPensionsBeforeMinRetirementAge" /> -->
                    <Dollar>0</Dollar>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/otherEarnedIncome">
            <Name>Other earned income</Name>
            <Description>Other earned income (line 1h)</Description>

            <Derived>
                <Add>
                    <Dependency path="/primaryFilerOtherEarnedIncome"/>
                    <Dependency path="/secondaryFilerOtherEarnedIncome"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerEmployerIncomeSubtotalBase">
            <Description>
                The summed value of line 1a to 1d and 1f to 1h, using only the primary filer's income, but excluding
                any taxable CDCC benefits.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Add>
                    <Dependency module="formW2s" path="/primaryFilerWages"/>
                    <Dependency path="/primaryFilerUnreportedHouseholdWages"/>
                    <Dependency path="/primaryFilerUnreportedTipIncome"/>
                    <Dependency path="/primaryFilerMedicareWaiverPayments"/>
                    <Dependency path="/primaryFilerEmployerProvidedAdoptionBenefits"/>
                    <Dependency path="/primaryFilerWagesFrom8919"/>
                    <Dependency path="/primaryFilerOtherEarnedIncome"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerEmployerIncomeSubtotalBase">
            <Description>
                The summed value of line 1a to 1d and 1f to 1h, using only the secondary filer's income, but
                excluding any taxable CDCC benefits.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Add>
                    <Dependency module="formW2s" path="/secondaryFilerWages"/>
                    <Dependency path="/secondaryFilerUnreportedHouseholdWages"/>
                    <Dependency path="/secondaryFilerUnreportedTipIncome"/>
                    <Dependency path="/secondaryFilerMedicareWaiverPayments"/>
                    <Dependency path="/secondaryFilerEmployerProvidedAdoptionBenefits"/>
                    <Dependency path="/secondaryFilerWagesFrom8919"/>
                    <Dependency path="/secondaryFilerOtherEarnedIncome"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/employerIncomeSubtotal">
            <Name>employer income subtotal</Name>
            <Description>
                Is used as earned income for calculating the EITC and CDCC.

                Form 1040, Line 1z
            </Description>
            <Export downstreamFacts="true" mef="true"/>
            <Derived>
                <Round>
                    <Add>
                        <Dependency path="/primaryFilerEmployerIncomeSubtotalBase"/>
                        <Dependency path="/secondaryFilerEmployerIncomeSubtotalBase"/>
                        <Dependency path="/taxableDependentCare"/>
                    </Add>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/qualifiedDividends">
            <Name>Qualified Dividends</Name>
            <Description>Qualified dividend income to report on line 3a of Form 1040.

                OUT OF SCOPE
            </Description>

            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/ordinaryDividends">
            <Name>Ordinary dividends</Name>
            <Description>Ordinary dividend income to report on line 3b of Form 1040.
                OUT OF SCOPE
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/iraDistributions">
            <Name>IRA distributions</Name>
            <Description>IRA distributions to report on line 4a of Form 1040.
                OUT OF SCOPE
            </Description>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/taxableIraDistributions">
            <Name>Taxable IRA distributions</Name>
            <Description>Taxable IRA distributions to report on line 4b of Form 1040.
                OUT OF SCOPE
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/pensionsAndAnnuities">
            <Name>Pensions And Annuities</Name>
            <Description>Pensions and annuities to report on line 5a of Form 1040.</Description>
            <Export downstreamFacts="true" mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency module="form1099Rs" path="/form1099Rs"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Add>
                                <Dependency module="form1099Rs" path="/taxFreePensionRollovers"/>
                                <Dependency module="form1099Rs" path="/partlyTaxablePensions"/>
                            </Add>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/taxablePensionsAndAnnuities">
            <Name>Taxable Pensions And Annuities</Name>
            <Description>Taxable pensions and annuities to report on line 5b of Form 1040.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency module="form1099Rs" path="/form1099Rs"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Add>
                                <Dependency module="form1099Rs" path="/fullyTaxablePensions"/>
                                <Dependency module="form1099Rs" path="/taxableAmountsOfPartiallyTaxablePensions"/>
                            </Add>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/hasTaxablePensionsAndAnnuities">
            <Description>Taxable pensions and annuities are greater than 0</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/taxablePensionsAndAnnuities"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/taxablePensionsAndAnnuitiesDisplay">
            <Description>A display value for line 5b for the MeF XML and PDF</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <!-- taxablePensionsAndAnnuities (Dollar) > 0 THEN 5b is taxablePensionsAndAnnuities (Dollar) -->
                        <When>
                            <GreaterThan>
                                <Left>
                                    <Dependency path="/taxablePensionsAndAnnuities"/>
                                </Left>
                                <Right>
                                    <Dollar>0</Dollar>
                                </Right>
                            </GreaterThan>
                        </When>
                        <Then>
                            <Dependency path="/taxablePensionsAndAnnuities"/>
                        </Then>
                    </Case>
                    <Case>
                        <!-- isTaxFreePensionRollover (Boolean) == true for ANY 1099R AND taxablePensionsAndAnnuities (Dollar) == 0 THEN 5b is $0 -->
                        <When>
                            <GreaterThan>
                                <Left>
                                    <Count>
                                        <Dependency module="form1099Rs" path="/form1099Rs/*/isTaxFreePensionRollover"/>
                                    </Count>
                                </Left>
                                <Right>
                                    <Int>0</Int>
                                </Right>
                            </GreaterThan>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <!-- isFullyOrPartlyTaxablePension (Boolean) == false AND isTaxFreePensionRollover (Boolean) == false for ALL 1099R THEN 5b is blank -->
                    <!-- Default to incomplete (blank for outputs) -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/nonTaxablePensionsAndAnnuities">
            <Description>non taxable pension and annuities, used for calulating part of line 13b on Schedule R
            </Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency path="/pensionsAndAnnuities"/>
                    </Minuend>
                    <Subtrahends>
                        <Dependency path="/taxablePensionsAndAnnuities"/>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/taxablePensionsAndAnnuitiesLiteralCode">
            <Name>Taxable Pensions And Annuities literal code</Name>
            <Description>Indicates when there is a rollover.</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="form1099Rs" path="/has1099RWithDirectRollover"/>
                        </When>
                        <Then>
                            <String>ROLLOVER</String>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/capitalGainsScheduleDNotRequired">
            <Name>Capital Gains Schedule D Not Required</Name>
            <Description>1040 checkbox to be marked when *nonzero* gain/loss is exempt from Schedule D requirement.
                Capital
                gain/loss is always zero for our TY2023 scope. So, per W&amp;I counsel we should never mark this in TY
                2023.
                (Instructions on Form 1040 are poor; see instruction booklet p. 31)
            </Description>
            <Derived>
                <False/>
            </Derived>
        </Fact>
        <Fact path="/capitalGainsOrLosses">
            <Name>Capital Gains or Losses</Name>
            <Description>Total capital gains or losses for line 7 of the 1040

                OUT OF SCOPE
            </Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/hasOtherIncome">
            <Name>Has Other Income</Name>
            <Description>Does the taxpayer have other income?</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/otherIncome"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasAdjustmentsToIncome">
            <Name>Has Adjustments to Income</Name>
            <Description>Does the taxpayer have adjustments to income reported in Schedule 1 Part 2?</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency module="taxCalculations" path="/adjustmentsToIncome"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/requiresSchedule1">
            <Name>Requires Schedule 1</Name>
            <Description>Does the taxpayer need to file Schedule 1?</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Any>
                                <Dependency path="/hasOtherIncome"/>
                                <Dependency path="/hasAdjustmentsToIncome"/>
                                <Dependency module="unemployment" path="/receivedUnemploymentCompensation"/>
                            </Any>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/schedule1TotalOtherIncome">
            <Name>Total other income</Name>
            <Description>Total other income reported on line 9 of the 1040 Schedule 1.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Add>
                        <Dependency module="form1099Misc" path="/alaskaPfdIncome"/>
                    </Add>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/otherIncome">
            <Name>Other income from Schedule 1</Name>
            <Description>Other income from Schedule 1, line 10 reported on line 8 of the 1040</Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Round>
                    <Add>
                        <Dependency module="unemployment" path="/unemploymentCompensation"/>
                        <Dependency path="/schedule1TotalOtherIncome"/>
                    </Add>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/totalIncome">
            <Name>Total income</Name>
            <Description>Total income to report on line 9 of Form 1040.</Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Round>
                    <Add>
                        <Dependency path="/employerIncomeSubtotal"/>
                        <Dependency module="interest" path="/interestIncome"/>
                        <Dependency path="/ordinaryDividends"/>
                        <Dependency path="/taxableIraDistributions"/>
                        <Dependency path="/taxablePensionsAndAnnuities"/>
                        <Dependency module="socialSecurity" path="/taxableSocialSecurityBenefits"/>
                        <Dependency path="/capitalGainsOrLosses"/>
                        <Dependency path="/otherIncome"/>
                    </Add>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/flowHasReportedIncome">
            <Description>Whether the filer has reported any income (even if the reported income is zero)</Description>

            <Derived>
                <Any>
                    <Dependency module="formW2s" path="/hasW2s"/>
                    <Dependency module="unemployment" path="/receivedUnemploymentCompensation"/>
                    <Dependency module="interest" path="/hasInterestReports"/>
                    <Dependency module="form1099Misc" path="/has1099Misc"/>
                    <Dependency module="cdcc" path="/hasReportedDependentCareBenefits"/>
                    <Dependency module="form1099Rs" path="/has1099R"/>
                    <Dependency module="socialSecurity" path="/hasSocialSecurityBenefits"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/flowHasSeenTotalIncomeSummary">
            <Description>Whether the filer has seen the total income summary screen</Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Boolean/>
            </Writable>

            <Placeholder>
                <False/>
            </Placeholder>
        </Fact>
        <Fact path="/earnedIncomeWithAllCombatPay">
            <Name>Earned income including all combat pay</Name>
            <Description>Earned income plus all combat pay.

                This value is reported on line 18a of schedule 8812, used to
                calculate ACTC.
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Round>
                    <Add>
                        <Dependency path="/employerIncomeSubtotal"/>
                        <Dependency module="formW2s" path="/allCombatPay"/>
                    </Add>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/cdccPrimaryFilerCombatPayForCredits">
            <Name>Combat Pay Included in Primary Filer Earned Income for CDCC</Name>
            <Description>
                Amount of combat pay to include in a primary filer's earned income for Child and Dependent Care
                Credit
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Not>
                                <All>
                                    <Dependency module="formW2s" path="/primaryFilerHasCombatPay"/>
                                    <Dependency module="cdcc" path="/combatPayCouldImpactCdccCredits"/>
                                </All>
                            </Not>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency module="cdcc" path="/cdccCombatPayElection"/>
                                </IsComplete>
                                <Any>
                                    <Equal>
                                        <Left>
                                            <Dependency module="cdcc" path="/cdccCombatPayElection"/>
                                        </Left>
                                        <Right>
                                            <Enum optionsPath="/combatPayOptions">usePrimaryCombatPay</Enum>
                                        </Right>
                                    </Equal>
                                    <Equal>
                                        <Left>
                                            <Dependency module="cdcc" path="/cdccCombatPayElection"/>
                                        </Left>
                                        <Right>
                                            <Enum optionsPath="/combatPayOptions">useBothCombatPay</Enum>
                                        </Right>
                                    </Equal>
                                    <Equal>
                                        <Left>
                                            <Dependency module="cdcc" path="/cdccCombatPayElection"/>
                                        </Left>
                                        <Right>
                                            <Enum optionsPath="/combatPayOptions">usePrimaryNotSpouseCombatPay</Enum>
                                        </Right>
                                    </Equal>
                                </Any>
                            </All>
                        </When>
                        <Then>
                            <Dependency module="formW2s" path="/primaryFilerCombatPay"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <!-- They have made a choice, but that choice did not include including primary combat pay -->
                            <IsComplete>
                                <Dependency module="cdcc" path="/cdccCombatPayElection"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <!-- Intentionally leave this undefined if there is combat pay but no decision is made -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccSecondaryFilerCombatPayForCredits">
            <Name>Combat Pay Included in Secondary Filer Earned Income for CDCC</Name>
            <Description>
                Amount of combat pay to include in a secondary filer's earned income for Child and Dependent Care
                Credit
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Not>
                                <All>
                                    <Dependency module="formW2s" path="/MFJSpouseHasCombatPay"/>
                                    <Dependency module="cdcc" path="/combatPayCouldImpactCdccCredits"/>
                                </All>
                            </Not>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency module="cdcc" path="/cdccCombatPayElection"/>
                                </IsComplete>
                                <Any>
                                    <Equal>
                                        <Left>
                                            <Dependency module="cdcc" path="/cdccCombatPayElection"/>
                                        </Left>
                                        <Right>
                                            <Enum optionsPath="/combatPayOptions">useSpouseCombatPay</Enum>
                                        </Right>
                                    </Equal>
                                    <Equal>
                                        <Left>
                                            <Dependency module="cdcc" path="/cdccCombatPayElection"/>
                                        </Left>
                                        <Right>
                                            <Enum optionsPath="/combatPayOptions">useBothCombatPay</Enum>
                                        </Right>
                                    </Equal>
                                    <Equal>
                                        <Left>
                                            <Dependency module="cdcc" path="/cdccCombatPayElection"/>
                                        </Left>
                                        <Right>
                                            <Enum optionsPath="/combatPayOptions">useSpouseNotPrimaryCombatPay</Enum>
                                        </Right>
                                    </Equal>
                                </Any>
                            </All>
                        </When>
                        <Then>
                            <Dependency module="formW2s" path="/MFJSpouseCombatPay"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <!-- They have made a choice, but that choice did not include including primary combat pay -->
                            <IsComplete>
                                <Dependency module="cdcc" path="/cdccCombatPayElection"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <!-- Intentionally leave this undefined if there is combat pay but no decision is made -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccPrimaryFilerCombatPayForBenefits">
            <Name>Combat Pay Included in Primary Filer Earned Income for CDCC</Name>
            <Description>
                Amount of combat pay to include in a primary filer's earned income for Child and Dependent Care
                Credit
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Not>
                                <All>
                                    <Dependency module="formW2s" path="/primaryFilerHasCombatPay"/>
                                    <Dependency module="cdcc" path="/combatPayCouldImpactDependentCareBenefits"/>
                                </All>
                            </Not>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency module="cdcc" path="/cdccCombatPayElectionForBenefits"/>
                                </IsComplete>
                                <Any>
                                    <Equal>
                                        <Left>
                                            <Dependency module="cdcc" path="/cdccCombatPayElectionForBenefits"/>
                                        </Left>
                                        <Right>
                                            <Enum optionsPath="/combatPayOptions">usePrimaryCombatPay</Enum>
                                        </Right>
                                    </Equal>
                                    <Equal>
                                        <Left>
                                            <Dependency module="cdcc" path="/cdccCombatPayElectionForBenefits"/>
                                        </Left>
                                        <Right>
                                            <Enum optionsPath="/combatPayOptions">useBothCombatPay</Enum>
                                        </Right>
                                    </Equal>
                                    <Equal>
                                        <Left>
                                            <Dependency module="cdcc" path="/cdccCombatPayElectionForBenefits"/>
                                        </Left>
                                        <Right>
                                            <Enum optionsPath="/combatPayOptions">usePrimaryNotSpouseCombatPay</Enum>
                                        </Right>
                                    </Equal>
                                </Any>
                            </All>
                        </When>
                        <Then>
                            <Dependency module="formW2s" path="/primaryFilerCombatPay"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <!-- They have made a choice, but that choice did not include including primary combat pay -->
                            <IsComplete>
                                <Dependency module="cdcc" path="/cdccCombatPayElectionForBenefits"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <!-- Intentionally leave this undefined if there is combat pay but no decision is made -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccSecondaryFilerCombatPayForBenefits">
            <Name>Combat Pay Included in Secondary Filer Earned Income for CDCC</Name>
            <Description>
                Amount of combat pay to include in a secondary filer's earned income for Child and Dependent Care
                Credit
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Not>
                                <All>
                                    <Dependency module="formW2s" path="/MFJSpouseHasCombatPay"/>
                                    <Dependency module="cdcc" path="/combatPayCouldImpactDependentCareBenefits"/>
                                </All>
                            </Not>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency module="cdcc" path="/cdccCombatPayElectionForBenefits"/>
                                </IsComplete>
                                <Any>
                                    <Equal>
                                        <Left>
                                            <Dependency module="cdcc" path="/cdccCombatPayElectionForBenefits"/>
                                        </Left>
                                        <Right>
                                            <Enum optionsPath="/combatPayOptions">useSpouseCombatPay</Enum>
                                        </Right>
                                    </Equal>
                                    <Equal>
                                        <Left>
                                            <Dependency module="cdcc" path="/cdccCombatPayElectionForBenefits"/>
                                        </Left>
                                        <Right>
                                            <Enum optionsPath="/combatPayOptions">useBothCombatPay</Enum>
                                        </Right>
                                    </Equal>
                                    <Equal>
                                        <Left>
                                            <Dependency module="cdcc" path="/cdccCombatPayElectionForBenefits"/>
                                        </Left>
                                        <Right>
                                            <Enum optionsPath="/combatPayOptions">useSpouseNotPrimaryCombatPay</Enum>
                                        </Right>
                                    </Equal>
                                </Any>
                            </All>
                        </When>
                        <Then>
                            <Dependency module="formW2s" path="/MFJSpouseCombatPay"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <!-- They have made a choice, but that choice did not include including secondary combat pay -->
                            <IsComplete>
                                <Dependency module="cdcc" path="/cdccCombatPayElectionForBenefits"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
                <!-- Intentionally leave this undefined if there is combat pay but no decision is made -->
            </Derived>
        </Fact>
        <Fact path="/cdccPrimaryEarnedIncomeWithCombatPayForCredits">
            <Export downstreamFacts="true"/>

            <Derived>
                <Add>
                    <Dependency path="/primaryFilerEmployerIncomeSubtotalBase"/>
                    <Dependency path="/cdccPrimaryFilerCombatPayForCredits"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/cdccSecondaryEarnedIncomeWithCombatPayForCredits">
            <Export downstreamFacts="true"/>

            <Derived>
                <Add>
                    <Dependency path="/secondaryFilerEmployerIncomeSubtotalBase"/>
                    <Dependency path="/cdccSecondaryFilerCombatPayForCredits"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/cdccPrimaryTaxableBenefitsAllocationToMatchSecondary">
            <Derived>
                <LesserOf>
                    <Subtract>
                        <Minuend>
                            <Dependency path="/cdccSecondaryEarnedIncomeWithCombatPayForCredits"/>
                        </Minuend>
                        <Subtrahends>
                            <Dependency path="/cdccPrimaryEarnedIncomeWithCombatPayForCredits"/>
                        </Subtrahends>
                    </Subtract>
                </LesserOf>
            </Derived>
        </Fact>
        <Fact path="/cdccSecondaryTaxableBenefitsAllocationToMatchPrimary">
            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency path="/cdccPrimaryEarnedIncomeWithCombatPayForCredits"/>
                    </Minuend>
                    <Subtrahends>
                        <Dependency path="/cdccSecondaryEarnedIncomeWithCombatPayForCredits"/>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/cdccPrimaryFilerMaximumEarnedIncomeAdjustmentFromTaxableBenefits">
            <Export downstreamFacts="true"/>

            <Derived>
                <LesserOf>
                    <Dependency path="/taxableDependentCare"/>
                    <!-- They can only adjust their income by up to the benefits amount provided by their employer -->
                    <Dependency module="cdcc" path="/cdccPrimaryFilerDependentCareBenefitsAmount"/>
                </LesserOf>
            </Derived>
        </Fact>
        <Fact path="/cdccSecondaryFilerMaximumEarnedIncomeAdjustmentFromTaxableBenefits">
            <Export downstreamFacts="true"/>

            <Derived>
                <LesserOf>
                    <Dependency path="/taxableDependentCare"/>
                    <!-- They can only adjust their income by up to the benefits amount provided by their employer -->
                    <Dependency module="cdcc" path="/cdccSecondaryFilerDependentCareBenefitsAmount"/>
                </LesserOf>
            </Derived>
        </Fact>
        <Fact path="/cdccAllTaxableDependentCareBenefitsShouldBeAddedtoPrimaryEarnedIncome">
            <Derived>
                <All>
                    <Dependency module="cdcc" path="/hasReportedPrimaryFilerDependentCareBenefits"/>
                    <Any>
                        <!-- The earned income adjustments don't need to be split unless the secondary filer also has a nonzero dependent care benefits amount -->
                        <Not>
                            <All>
                                <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                                <Dependency module="cdcc" path="/hasReportedSecondaryFilerDependentCareBenefits"/>
                            </All>
                        </Not>
                        <!-- The primary earned income would still be the limit for credits, even with the maximum possible allocation -->
                        <GreaterThanOrEqual>
                            <Left>
                                <Dependency path="/cdccPrimaryTaxableBenefitsAllocationToMatchSecondary"/>
                            </Left>
                            <Right>
                                <Add>
                                    <Dependency path="/cdccPrimaryEarnedIncomeWithCombatPayForCredits"/>
                                    <Dependency
                                            path="/cdccPrimaryFilerMaximumEarnedIncomeAdjustmentFromTaxableBenefits"/>
                                </Add>
                            </Right>
                        </GreaterThanOrEqual>
                        <All>
                            <!-- Primary earned income is less than or equal to secondary earned income-->
                            <LessThanOrEqual>
                                <Left>
                                    <Dependency path="/cdccPrimaryEarnedIncomeWithCombatPayForCredits"/>
                                </Left>
                                <Right>
                                    <Dependency path="/cdccSecondaryEarnedIncomeWithCombatPayForCredits"/>
                                </Right>
                            </LessThanOrEqual>
                            <!-- Fully allocating the taxable dependent care benefits to the primary filer would ensure the maximim credit  -->
                            <GreaterThanOrEqual>
                                <Left>
                                    <LesserOf>
                                        <Dependency path="/cdccSecondaryEarnedIncomeWithCombatPayForCredits"/>
                                        <Add>
                                            <Dependency path="/cdccPrimaryEarnedIncomeWithCombatPayForCredits"/>
                                            <Dependency
                                                    path="/cdccPrimaryFilerMaximumEarnedIncomeAdjustmentFromTaxableBenefits"/>
                                        </Add>
                                    </LesserOf>
                                </Left>
                                <Right>
                                    <Dependency module="cdcc" path="/cdccSmallerOfTotalQualifyingExpensesAmount"/>
                                </Right>
                            </GreaterThanOrEqual>

                            <!-- SecondaryEarnedIncome must not be smaller than the composite primary earned income -->
                            <Not>
                                <LessThan>
                                    <Left>
                                        <Dependency path="/cdccSecondaryEarnedIncomeWithCombatPayForCredits"/>
                                    </Left>
                                    <Right>
                                        <Add>
                                            <Dependency path="/cdccPrimaryEarnedIncomeWithCombatPayForCredits"/>
                                            <Dependency
                                                    path="/cdccPrimaryFilerMaximumEarnedIncomeAdjustmentFromTaxableBenefits"/>
                                        </Add>
                                    </Right>
                                </LessThan>
                            </Not>
                        </All>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccAllTaxableDependentCareBenefitsShouldBeAddedtoSecondaryEarnedIncome">

            <Derived>
                <All>
                    <Dependency module="cdcc" path="/hasReportedSecondaryFilerDependentCareBenefits"/>
                    <Any>
                        <!-- The earned income adjustments don't need to be split unless the primary filer also has a nonzero dependent care benefits amount -->
                        <Not>
                            <Dependency module="cdcc" path="/hasReportedPrimaryFilerDependentCareBenefits"/>
                        </Not>
                        <!-- The secondary earned income would still be the limit for credits, even with the maximum possible allocation -->
                        <GreaterThanOrEqual>
                            <Left>
                                <Dependency path="/cdccSecondaryTaxableBenefitsAllocationToMatchPrimary"/>
                            </Left>
                            <Right>
                                <Add>
                                    <Dependency path="/cdccSecondaryEarnedIncomeWithCombatPayForCredits"/>
                                    <Dependency
                                            path="/cdccSecondaryFilerMaximumEarnedIncomeAdjustmentFromTaxableBenefits"/>
                                </Add>
                            </Right>
                        </GreaterThanOrEqual>
                        <All>
                            <!-- Secondary earned income is less than primary earned income-->
                            <LessThan>
                                <Left>
                                    <Dependency path="/cdccSecondaryEarnedIncomeWithCombatPayForCredits"/>
                                </Left>
                                <Right>
                                    <Dependency path="/cdccPrimaryEarnedIncomeWithCombatPayForCredits"/>
                                </Right>
                            </LessThan>
                            <!-- Fully allocating the taxable dependent care benefits to the secondary filer would ensure the maximim credit  -->
                            <GreaterThanOrEqual>
                                <Left>
                                    <LesserOf>
                                        <Dependency path="/cdccPrimaryEarnedIncomeWithCombatPayForCredits"/>
                                        <Add>
                                            <Dependency path="/cdccSecondaryEarnedIncomeWithCombatPayForCredits"/>
                                            <Dependency
                                                    path="/cdccSecondaryFilerMaximumEarnedIncomeAdjustmentFromTaxableBenefits"/>
                                        </Add>
                                    </LesserOf>
                                </Left>
                                <Right>
                                    <Dependency module="cdcc" path="/cdccSmallerOfTotalQualifyingExpensesAmount"/>
                                </Right>
                            </GreaterThanOrEqual>
                            <!-- SecondaryEarnedIncome must not be smaller than the composite primary earned income -->
                            <Not>
                                <LessThan>
                                    <Left>
                                        <Dependency path="/cdccPrimaryEarnedIncomeWithCombatPayForCredits"/>
                                    </Left>
                                    <Right>
                                        <Add>
                                            <Dependency path="/cdccSecondaryEarnedIncomeWithCombatPayForCredits"/>
                                            <Dependency
                                                    path="/cdccSecondaryFilerMaximumEarnedIncomeAdjustmentFromTaxableBenefits"/>
                                        </Add>
                                    </Right>
                                </LessThan>
                            </Not>
                        </All>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccPrimaryFilerTaxableBenefits">
            <Description>
                Taxable Dependent Care Benefits for the purposes of determining Primary Filer's Earned Income for
                CDCC
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/cdccAllTaxableDependentCareBenefitsShouldBeAddedtoPrimaryEarnedIncome"/>
                        </When>
                        <Then>
                            <!-- Hooray!  No weird math needed. -->
                            <Dependency path="/cdccPrimaryFilerMaximumEarnedIncomeAdjustmentFromTaxableBenefits"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <GreaterThan>
                                <Left>
                                    <Dependency path="/taxableDependentCare"/>
                                </Left>
                                <Right>
                                    <Dependency
                                            path="/cdccSecondaryFilerMaximumEarnedIncomeAdjustmentFromTaxableBenefits"/>
                                </Right>
                            </GreaterThan>
                        </When>
                        <Then>
                            <!-- This shouldn't impact calculations, but for consistency, we make sure any remaining benefits are allocated here -->
                            <LesserOf>
                                <Dependency path="/cdccPrimaryFilerMaximumEarnedIncomeAdjustmentFromTaxableBenefits"/>
                                <Subtract>
                                    <Minuend>
                                        <Dependency path="/taxableDependentCare"/>
                                    </Minuend>
                                    <Subtrahends>
                                        <Dependency
                                                path="/cdccSecondaryFilerMaximumEarnedIncomeAdjustmentFromTaxableBenefits"/>
                                    </Subtrahends>
                                </Subtract>
                            </LesserOf>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccSecondaryFilerTaxableBenefits">
            <Description>
                Taxable Dependent Care Benefits for the purposes of determining Secondary Filer's Earned Income for
                CDCC
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency
                                    path="/cdccAllTaxableDependentCareBenefitsShouldBeAddedtoSecondaryEarnedIncome"/>
                        </When>
                        <Then>
                            <!-- Hooray!  No weird math needed. -->
                            <Dependency path="/cdccSecondaryFilerMaximumEarnedIncomeAdjustmentFromTaxableBenefits"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <GreaterThan>
                                <Left>
                                    <Dependency path="/taxableDependentCare"/>
                                </Left>
                                <Right>
                                    <Dependency
                                            path="/cdccPrimaryFilerMaximumEarnedIncomeAdjustmentFromTaxableBenefits"/>
                                </Right>
                            </GreaterThan>
                        </When>
                        <Then>
                            <!-- This shouldn't impact calculations, but for consistency, we make sure any remaining benefits are allocated here -->
                            <LesserOf>
                                <Dependency path="/cdccSecondaryFilerMaximumEarnedIncomeAdjustmentFromTaxableBenefits"/>
                                <Subtract>
                                    <Minuend>
                                        <Dependency path="/taxableDependentCare"/>
                                    </Minuend>
                                    <Subtrahends>
                                        <Dependency
                                                path="/cdccPrimaryFilerMaximumEarnedIncomeAdjustmentFromTaxableBenefits"/>
                                    </Subtrahends>
                                </Subtract>
                            </LesserOf>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccEarnedIncomePrimaryFilerLine4">
            <Name>CDCC Earned Income elections for primary filer</Name>
            <Description>
                Earned income as defined for Child and Dependent Care Credit.
                Reported on Form 2441 line 4
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Round>
                    <Add>
                        <Dependency path="/cdccPrimaryEarnedIncomeWithCombatPayForCredits"/>
                        <Dependency path="/cdccPrimaryFilerTaxableBenefits"/>
                    </Add>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/cdccEarnedIncomeSecondaryFilerPartII">
            <Name>CDCC earned income for secondary filer</Name>
            <Description>
                Secondary Filer's Earned income as defined for Child and Dependent Care Credit.
            </Description>

            <Derived>
                <Round>
                    <Add>
                        <Dependency path="/cdccSecondaryEarnedIncomeWithCombatPayForCredits"/>
                        <Dependency path="/cdccSecondaryFilerTaxableBenefits"/>
                    </Add>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/cdccEarnedIncomeLine5">
            <Description>
                Secondary Filer's Earned income as defined for Child and Dependent Care Credit, if applicable.

                Form
                2441, line 5
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <Dependency path="/cdccEarnedIncomeSecondaryFilerPartII"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/cdccEarnedIncomePrimaryFilerLine4"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccEarnedIncomePrimaryFilerLine18">
            <Name>Primary filer earned income as defined for CDCC line 18</Name>
            <Description>
                Earned income as defined for Child and Dependent Care Credit pay minus taxable dependent care
                benefits.
                Form 2441, line 18
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Round>
                    <Add>
                        <Dependency path="/primaryFilerEmployerIncomeSubtotalBase"/>
                        <Dependency path="/cdccPrimaryFilerCombatPayForBenefits"/>
                        <!-- OUT OF SCOPE: earned income calculations when student/disabled -->
                        <!-- OUT OF SCOPE: earned income from Schedule SE (Form 1040) -->
                        <!-- OUT OF SCOPE: earned income from Schedule C (Form 1040) -->
                        <!--
            OUT OF SCOPE: earned income calculations when student/disabled
            <Dependency path="/primaryFilerIncomeForMonthsDisabledOrInSchool" />
          -->
                    </Add>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/cdccEarnedIncomeSecondaryFilerPartIII">
            <Name>Secondary filer earned income as defined for CDCC</Name>
            <Description>Earned income as defined for Child and Dependent Care Credit minus dependent care
                benefits.
                This value
                is reported on part III, line 19 of form 2441 if MFJ, used to
                calculate CDCC.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Round>
                    <Add>
                        <Dependency path="/secondaryFilerEmployerIncomeSubtotalBase"/>
                        <Dependency path="/cdccSecondaryFilerCombatPayForBenefits"/>
                        <!-- OUT OF SCOPE: earned income calculations when student/disabled -->
                        <!-- OUT OF SCOPE: earned income from Schedule SE (Form 1040) -->
                        <!-- OUT OF SCOPE: earned income from Schedule C (Form 1040) -->
                        <!--
            OUT OF SCOPE: earned income calculations when student/disabled
            <Dependency path="/secondaryFilerIncomeForMonthsDisabledOrInSchool" />
          -->
                    </Add>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/cdccEarnedIncomeLine19">
            <Description>Earned income for form 2441, part III, line 19 depending on filing status
                If MFJ, use the spouse
                earned income + combat pay if elected
                If single or HOH or mfs unmarried, use the primary filer earned income +
                combat pay if elected
                If mfs married, use the written in spouse earned income
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Any>
                                <Dependency module="filingStatus" path="/isFilingStatusSingle"/>
                                <Dependency module="filingStatus" path="/isFilingStatusHOH"/>
                                <Dependency module="filers" path="/mfsButEligibleForCdcc"/>
                            </Any>
                        </When>
                        <Then>
                            <Dependency path="/cdccEarnedIncomePrimaryFilerLine18"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filers" path="/mfsNotEligibleForCdcc"/>
                        </When>
                        <Then>
                            <Dependency path="/mfsSpouseEarnedIncome"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/cdccEarnedIncomeSecondaryFilerPartIII"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/writableMfsSpouseEarnedIncome">
            <Description>MFS spouse's earned income as reported by the TP for the sake of determining whether they can
                exclude
                any dependent care benefits
            </Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0.00</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/mfsSpouseEarnedIncome">
            <Description>MFS spouse's earned income as reported by the TP for the sake of determining whether they can
                exclude
                any dependent care benefits
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="cdcc" path="/hasMfjSpouseEarnedIncome"/>
                        </When>
                        <Then>
                            <Round>
                                <Dependency path="/writableMfsSpouseEarnedIncome"/>
                            </Round>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccDisabledOrInSchoolIncomePerMonthWithMultipleQps">
            <Description>Amount per month considered income for a taxpayer who was disabled or a student. Used for the
                purpose
                of determining earned income for CDCC
            </Description>

            <Derived>
                <Dollar>500</Dollar>
            </Derived>
        </Fact>
        <Fact path="/cdccDisabledOrInSchoolIncomePerMonthWithOneQp">
            <Description>Amount per month considered income for a taxpayer who was disabled or a student. Used for the
                purpose
                of determining earned income for CDCC
            </Description>

            <Derived>
                <Dollar>250</Dollar>
            </Derived>
        </Fact>
        <Fact path="/monthlyIncomeIfDisabledOrInSchool">
            <Description>The rate to use per month as income for a taxpayer or spouse who was disabled or a student.
                This is
                dependent on if they have one or more than one qualifying person for CDCC.
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <GreaterThan>
                                <Left>
                                    <Dependency module="cdcc" path="/cdccCountOfQualifyingPersons"/>
                                </Left>
                                <Right>
                                    <Int>1</Int>
                                </Right>
                            </GreaterThan>
                        </When>
                        <Then>
                            <Dependency path="/cdccDisabledOrInSchoolIncomePerMonthWithMultipleQps"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency module="cdcc" path="/cdccCountOfQualifyingPersons"/>
                                </Left>
                                <Right>
                                    <Int>1</Int>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Dependency path="/cdccDisabledOrInSchoolIncomePerMonthWithOneQp"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerIncomeForMonthsDisabledOrInSchool">
            <Description>Total income assigned to primary filer for months they were disabled or in school. Used for
                CDCC
            </Description>

            <Derived>
                <Multiply>
                    <Dependency module="filers" path="/primaryFiler/cdccMonthsDisabledOrInSchool"/>
                    <Dependency path="/monthlyIncomeIfDisabledOrInSchool"/>
                </Multiply>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerIncomeForMonthsDisabledOrInSchool">
            <Description>Total income assigned to secondary filer for months they were disabled or in school. Used for
                CDCC
            </Description>

            <Derived>
                <Multiply>
                    <Dependency module="filers" path="/secondaryFiler/cdccMonthsDisabledOrInSchool"/>
                    <Dependency path="/monthlyIncomeIfDisabledOrInSchool"/>
                </Multiply>
            </Derived>
        </Fact>
        <Fact path="/cdccMaximumCreditRequiresUnsupportedCalculation">
            <Export downstreamFacts="true"/>

            <Derived>
                <Not>
                    <Any>
                        <Dependency path="/cdccAllTaxableDependentCareBenefitsShouldBeAddedtoPrimaryEarnedIncome"/>
                        <Dependency path="/cdccAllTaxableDependentCareBenefitsShouldBeAddedtoSecondaryEarnedIncome"/>
                    </Any>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/flowIncomeKnockout">
            <Description>The user has been knocked out for reasons(s) defined in this module</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Any>
                    <Not>
                        <Dependency path="/incomeSourcesSupported"/>
                    </Not>
                    <Not>
                        <Dependency path="/notDigitalAssets"/>
                    </Not>
                    <Dependency path="/hasForeignAccountsOrTrusts"/>
                    <Dependency path="/madeIraContributions"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/shouldSubmitForm2441">
            <Description>Whether Form 2441 should be submitted</Description>
            <Export mef="true"/>

            <Derived>
                <Any>
                    <Dependency path="/isReceivingCdccCredit"/>
                    <Dependency path="/hasReportedDependentCareBenefits"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/isReceivingCdccCredit">
            <Description>
                The TP is receiving CDCC so must submit Form 2441
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/cdccTotalCredit"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/cdccQualified">
            <Description>
                The TP is eligible for the CDCC credit, and paid expenses for at least one
                qualifying person.
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <All>
                    <Dependency path="/cdccHasQualifyingExpenses"/>
                    <Dependency path="/isReceivingCdccCredit"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccOrEitcQualified">
            <Description>
                The TP is eligible for the EITC, or the CDCC credit and paid expenses for at least one
                qualifying
                person. Used for gating showing additional information (tin/pin).
            </Description>

            <Derived>
                <Any>
                    <Dependency path="/cdccQualified"/>
                    <Dependency module="eitc" path="/eitcQualified"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/maybeEligibleForDependentCareBenefits">
            <Description>
                Whether the filer has qualifying persons and qualifying expenses
            </Description>

            <Derived>
                <All>
                    <Dependency path="/cdccHasQualifyingPersons"/>
                    <Dependency path="/cdccHasQualifyingExpensesForBenefit"/>
                    <Dependency path="/hasReportedDependentCareBenefits"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccHasExcludedBenefits">
            <Description>Whether the TP has excluded benefits amount greater than 0</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/cdccExcludedBenefitsAmount"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/cdccQualifiedForBenefit">
            <Description>
                The TP qualified for the CDCC benefit and should enter care providers
            </Description>

            <Derived>
                <All>
                    <Dependency path="/maybeEligibleForDependentCareBenefits"/>
                    <Dependency path="/cdccHasExcludedBenefits"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/shouldIncludeCareProviders">
            <Description>Whether care providers (f2441 Part I) should be included in the xml or pdf. Care providers
                would not
                be shown if
                the TP did not qualify for the benefit or the credit, but the TP still had to fill out the form 2441
                because they
                received dependent care benefits
            </Description>
            <Export mef="true"/>

            <Derived>
                <Any>
                    <Dependency path="/cdccQualifiedForBenefit"/>
                    <Dependency path="/cdccQualified"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/maybeEligibleForCdccBase">
            <Description>
                Whether the filer could potentially have qualifying earned income that can be used to qualify for the
                CDCC
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Not>
                                <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                            </Not>
                        </When>
                        <Then>
                            <Any>
                                <Dependency module="formW2s" path="/primaryFilerHasCombatPay"/>
                                <GreaterThan>
                                    <Left>
                                        <Dependency module="income" path="/primaryFilerEmployerIncomeSubtotalBase"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </Any>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <All>
                                <Any>
                                    <Dependency module="formW2s" path="/primaryFilerHasCombatPay"/>
                                    <Dependency module="filers" path="/primaryFiler/isStudentOrDisabled"/>
                                    <GreaterThan>
                                        <Left>
                                            <Dependency module="income" path="/primaryFilerEmployerIncomeSubtotalBase"/>
                                        </Left>
                                        <Right>
                                            <Dollar>0</Dollar>
                                        </Right>
                                    </GreaterThan>
                                </Any>
                                <Any>
                                    <Dependency module="formW2s" path="/MFJSpouseHasCombatPay"/>
                                    <Dependency module="filers" path="/secondaryFiler/isStudentOrDisabled"/>
                                    <GreaterThan>
                                        <Left>
                                            <Dependency module="income"
                                                        path="/secondaryFilerEmployerIncomeSubtotalBase"/>
                                        </Left>
                                        <Right>
                                            <Dollar>0</Dollar>
                                        </Right>
                                    </GreaterThan>
                                </Any>
                            </All>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/maybeEligibleForCdcc">
            <Description>
                Whether there are dependents who are eligible for the Child and Dependent Care Credits.
                Based on filer
                + spouse information + income + child tests
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency module="schedule3" path="/hasTaxLiabilityBeforeNrCredits"/>
                    <Dependency path="/maybeEligibleForCdccWoTaxLiability"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/maybeEligibleForCdccWoTaxLiability">
            <Description>
                Whether the taxpayer might be eligible for CDCC, without considering whether they have tax liability
                against which the credit could be applied.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="/maybeEligibleForCdccBase"/>
                    <Dependency path="/cdccHasQualifyingPersons"/>
                    <Not>
                        <Dependency path="/cdccPotentialCdccIsZeroOrLessDueToExclusionBenefits"/>
                    </Not>
                    <Any>
                        <Dependency module="filers" path="/mfsButEligibleForCdcc"/>
                        <Not>
                            <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                        </Not>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/flowShowCdccQualifyingPersonsLoop">
            <Description>
                Whether to show the qualifying persons loop. Used after combat pay election is determined
            </Description>
            <Derived>
                <All>
                    <Dependency path="/cdccMaybeHasQualifyingExpenses"/>
                    <Any>
                        <!-- Is not MFJ and has earned income -->
                        <All>
                            <Not>
                                <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                            </Not>
                            <GreaterThan>
                                <Left>
                                    <Add>
                                        <Dependency module="income"
                                                    path="/cdccPrimaryEarnedIncomeWithCombatPayForCredits"/>
                                        <Dependency module="income"
                                                    path="/cdccPrimaryFilerMaximumEarnedIncomeAdjustmentFromTaxableBenefits"/>
                                    </Add>
                                </Left>
                                <Right>
                                    <Dollar>0</Dollar>
                                </Right>
                            </GreaterThan>
                        </All>
                        <!-- Is MFJ and both filers have earned income -->
                        <All>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                            <GreaterThan>
                                <Left>
                                    <LesserOf>
                                        <Add>
                                            <Dependency module="income"
                                                        path="/cdccPrimaryEarnedIncomeWithCombatPayForCredits"/>
                                            <Dependency module="income"
                                                        path="/cdccPrimaryFilerMaximumEarnedIncomeAdjustmentFromTaxableBenefits"/>
                                        </Add>
                                        <Add>
                                            <Dependency module="income"
                                                        path="/cdccSecondaryEarnedIncomeWithCombatPayForCredits"/>
                                            <Dependency module="income"
                                                        path="/cdccSecondaryFilerMaximumEarnedIncomeAdjustmentFromTaxableBenefits"/>
                                        </Add>
                                    </LesserOf>
                                </Left>
                                <Right>
                                    <Dollar>
                                        0
                                    </Dollar>
                                </Right>
                            </GreaterThan>
                        </All>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutHouseholdEmployee">
            <Name>Flow Knockout due to Household Employee</Name>
            <Description>Whether the filer should be knocked out because they have a household employee</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/cdccHasQualifyingNonFilers">
            <Name>Filer has Qualifying Persons for CDCC</Name>
            <Description>Whether the filer has at least one Qualifying Family and Household Member for the Child and
                Dependent
                Care Credit
            </Description>

            <Derived>
                <All>
                    <IsComplete>
                        <!-- If there are no dependents, the collection is considered incomplete during testing -->
                        <Dependency module="familyAndHousehold" path="/cdccQualifyingNonFilersCount"/>
                    </IsComplete>
                    <GreaterThan>
                        <Left>
                            <Dependency module="familyAndHousehold" path="/cdccQualifyingNonFilersCount"/>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccHasQualifyingFilers">
            <Name>One or more filers is a Qualifying Person for CDCC</Name>
            <Description>One or more filers is a Qualifying Person for CDCC</Description>

            <Derived>
                <All>
                    <IsComplete>
                        <Dependency module="filers" path="/cdccQualifyingFilers"/>
                    </IsComplete>
                    <GreaterThan>
                        <Left>
                            <Dependency module="filers" path="/cdccQualifyingFilersCount"/>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccMoreThanOneQualifyingPerson">
            <Name>More than one person--either a qualifying person or filer--is eligible for the CDCC</Name>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/cdccCountOfQualifyingPersons"/>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/cdccHasQualifyingPersons">
            <Name>Filer has Qualifying Persons for CDCC</Name>
            <Description>Whether the filer has at least one Qualifying Person (either a non-filer or filer) for the
                Child and
                Dependent Care Credit
            </Description>
            <Export mef="true"/>

            <Derived>
                <Any>
                    <Dependency path="/cdccHasQualifyingNonFilers"/>
                    <Dependency path="/cdccHasQualifyingFilers"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/dependentCareBenefitsIsComplete">
            <Description>Determines that the dependent care benefits subcategory is complete</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="/cdccTaxableBenefits"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="/flowKnockoutHouseholdEmployee"/>
                    </IsComplete>
                    <Any>
                        <Not>
                            <Dependency path="/showSpecialEarnedIncomeKnockoutFlowInBenefits"/>
                        </Not>
                        <Dependency path="/disabledOrStudentFlowIsComplete"/>
                    </Any>
                    <Any>
                        <Not>
                            <Dependency path="/cdccQualifiedForBenefit"/>
                        </Not>
                        <Dependency path="/cdccCareProvidersIsComplete"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/disabledOrStudentFlowIsComplete">
            <Description>Whether the disabled student knockout flow is complete</Description>
            <Derived>
                <All>
                    <Any>
                        <Not>
                            <Dependency module="filers" path="/primaryFiler/isStudentOrDisabled"/>
                        </Not>
                        <IsComplete>
                            <Dependency path="/primaryFilerMadeLessThanDisabledOrStudentMonthlyIncome"/>
                        </IsComplete>
                    </Any>
                    <Any>
                        <Not>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </Not>
                        <Not>
                            <Dependency module="filers" path="/secondaryFiler/isStudentOrDisabled"/>
                        </Not>
                        <IsComplete>
                            <Dependency path="/secondaryFilerMadeLessThanDisabledOrStudentMonthlyIncome"/>
                        </IsComplete>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProvidersIsDone">
            <Description>The TP is done adding care providers</Description>

            <Writable>
                <Boolean/>
            </Writable>
            <Placeholder>
                <False/>
            </Placeholder>
        </Fact>
        <Fact path="/countOfCompleteCareProviders">
            <Name>The number of complete care providers</Name>
            <Description>The number of complete care providers added by the filer. Maybe less than total care
                providers
            </Description>
            <Derived>
                <CollectionSize>
                    <Filter path="/cdccCareProviders">
                        <Dependency path="isComplete"/>
                    </Filter>
                </CollectionSize>
            </Derived>
        </Fact>
        <Fact path="/hasExactlyOneCompleteCareProvider">
            <Name>Filer has exactly one care provider</Name>
            <Description>Whether the filer has exactly one care provider</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/countOfCompleteCareProviders"/>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/hasMoreThan25CareProviders">
            <Name>Filer has More than 25 Care Providers</Name>
            <Description>Whether the filer has more care providers than the MEF can handle.</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/countOfCompleteCareProviders"/>
                    </Left>
                    <Right>
                        <Int>25</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasMoreThan25QualifyingPeople">
            <Name>Filer has More than 25 Care Providers</Name>
            <Description>Whether the filer has more care providers than the MEF can handle.</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/cdccCountOfQualifyingPersons"/>
                    </Left>
                    <Right>
                        <Int>25</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasAtLeastOneCareProvider">
            <Name>Filer has at least one completed care provider</Name>
            <Description>Whether the filer has one or more completed care providers</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/countOfCompleteCareProviders"/>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasIncompleteCareProviders">
            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Filter path="/cdccCareProviders">
                                <Not>
                                    <Dependency path="isComplete"/>
                                </Not>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProvidersIsComplete">
            <Derived>
                <Any>
                    <All>
                        <Dependency path="/cdccCareProvidersIsDone"/>
                        <Dependency path="/hasAtLeastOneCareProvider"/>
                        <Not>
                            <Dependency path="/hasIncompleteCareProviders"/>
                        </Not>
                    </All>
                    <Not>
                        <Dependency path="/shouldIncludeCareProviders"/>
                    </Not>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/cdccSectionIsComplete">
            <Description>TP did not qualify for CDCC or was done entering care providers</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <!-- /maybeEligibleForCdcc is false
           def: /maybeEligibleForCdcc checks whether filer is eligible and filer has qps
           -->
                    <All>
                        <Not>
                            <Dependency path="/maybeEligibleForCdcc"/>
                        </Not>
                        <IsComplete>
                            <Dependency path="/maybeEligibleForCdcc"/>
                        </IsComplete>
                    </All>
                    <!-- /maybeEligibleForCdcc is true AND /cdccPotentialCdccIsZeroOrLessDueToExclusionBenefits is 0
           def: /cdccPotentialCdccIsZeroOrLessDueToExclusionBenefits checks that they have no remaining credit after
           benefits were excluded
           -->
                    <All>
                        <Dependency path="/maybeEligibleForCdcc"/>
                        <IsComplete>
                            <Dependency path="/maybeEligibleForCdcc"/>
                        </IsComplete>
                        <Dependency path="/cdccPotentialCdccIsZeroOrLessDueToExclusionBenefits"/>
                    </All>
                    <!-- /maybeEligibleForCdcc is true AND there were no expenses -->
                    <All>
                        <Dependency path="/maybeEligibleForCdcc"/>
                        <IsComplete>
                            <Dependency path="/maybeEligibleForCdcc"/>
                        </IsComplete>
                        <Not>
                            <Dependency path="/cdccMaybeHasQualifyingExpenses"/>
                        </Not>
                        <IsComplete>
                            <Dependency path="/cdccMaybeHasQualifyingExpenses"/>
                        </IsComplete>
                    </All>
                    <!-- /cdccQualified is false and complete
           def: /cdccQualified checks whether the filer is eligible, has qps and has qualified expenses)
           -->
                    <All>
                        <Not>
                            <Dependency path="/cdccQualified"/>
                        </Not>
                        <IsComplete>
                            <Dependency path="/cdccQualified"/>
                        </IsComplete>
                    </All>

                    <!-- /cdccQualified is true AND /cdccCareProvidersIsComplete is true -->
                    <All>
                        <Dependency path="/cdccQualified"/>
                        <IsComplete>
                            <Dependency path="/cdccQualified"/>
                        </IsComplete>
                        <Dependency path="/cdccCareProvidersIsComplete"/>
                        <!--      There are no non-dependent qualifying people pins/tins to collect      -->
                        <Dependency module="familyAndHousehold" path="/cdccNonDepQpTinsNoneToCollect"/>

                        <!-- Special earned income knockout is complete if shown to user -->
                        <Any>
                            <Not>
                                <Dependency path="/showSpecialEarnedIncomeKnockoutFlowInCredits"/>
                            </Not>
                            <All>
                                <Dependency path="/showSpecialEarnedIncomeKnockoutFlowInCredits"/>
                                <Dependency path="/disabledOrStudentFlowIsComplete"/>
                            </All>
                        </Any>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/writableCdccHasQualifyingExpenses">
            <Name>Filer has Qualifying Expenses CDCC</Name>
            <Description>Whether the filer has any qualifying expenses for the Child and Dependent Care
                Credit. This is for the
                credit section, which means that they cannot include excluded benefits.
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/cdccPrimaryFilerBaseWagesAreLessThanMaxExclusion">
            <Derived>
                <LessThan>
                    <Left>
                        <Dependency module="income" path="/primaryFilerEmployerIncomeSubtotalBase"/>
                    </Left>
                    <Right>
                        <Dependency path="/cdccMaximumExclusion"/>
                    </Right>
                </LessThan>
            </Derived>
        </Fact>
        <Fact path="/cdccSecondaryFilerBaseWagesAreLessThanMaxExclusion">
            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <LessThan>
                        <Left>
                            <Dependency module="income" path="/secondaryFilerEmployerIncomeSubtotalBase"/>
                        </Left>
                        <Right>
                            <Dependency path="/cdccMaximumExclusion"/>
                        </Right>
                    </LessThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccHasQualifyingExpenses">
            <Description>
                Whether the filer is eligible for CDCC and we have collected qualifying expenses greater than 0.
            </Description>

            <Derived>
                <All>
                    <Dependency path="/flowShowCdccQualifyingPersonsLoop"/>
                    <Dependency path="/maybeEligibleForCdcc"/>
                    <Dependency path="/cdccMaybeHasQualifyingExpenses"/>
                    <GreaterThan>
                        <Left>
                            <Dependency path="/cdccUncappedQualifyingExpenses"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccMaybeHasQualifyingExpenses">
            <Description>
                Whether the filer is eligible for CDCC and says they have qualifying expenses, before we actually
                ask
                per qualifying person.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="/maybeEligibleForCdcc"/>
                    <Dependency path="/writableCdccHasQualifyingExpenses"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/combatPayCouldImpactCdccCredits">
            <Description>Whether the filer should be asked about their combat pay election for CDCC</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency module="formW2s" path="/someFilerHasCombatPay"/>
                    <Dependency path="/maybeEligibleForCdcc"/>
                    <Dependency path="/cdccMaybeHasQualifyingExpenses"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccCombatPayElection">
            <Name>Combat pay election for CDCC</Name>
            <Description>
                Whether the taxpayer elects to include their nontaxable combat pay for Child and Dependent
                Care
                Credit.

                They may choose to elect their own combat pay, their spouse's combat pay separately, or both
                of their
                combat pay should they each have combat pay.
            </Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Enum optionsPath="/combatPayOptions"/>
            </Writable>
        </Fact>
        <Fact path="/combatPayCouldImpactDependentCareBenefits">
            <Description>Whether the filer should be asked about their combat pay election for CDCC in Benefits
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency module="formW2s" path="/someFilerHasCombatPay"/>
                    <Dependency path="/hasReportedDependentCareBenefits"/>
                    <Dependency path="/cdccHasQualifyingPersons"/>
                    <Any>
                        <Dependency path="/cdccPrimaryFilerBaseWagesAreLessThanMaxExclusion"/>
                        <Dependency path="/cdccSecondaryFilerBaseWagesAreLessThanMaxExclusion"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccCombatPayElectionForBenefits">
            <Name>Combat pay election for CDCC</Name>
            <Description>
                Whether the taxpayer elects to include their nontaxable combat pay for Child and Dependent
                Care
                Credit.

                They may choose to elect their own combat pay, their spouse's combat pay separately, or both
                of their
                combat pay should they each have combat pay.
            </Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Enum optionsPath="/combatPayOptions"/>
            </Writable>
        </Fact>
        <Fact path="/cdccCombatPayRecommendation">
            <Name>Recommended combat pay election choice for CDCC</Name>
            <Description>The Recommended combat pay election choice which would maximize the user's CDCC benefits
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="formW2s" path="/bothFilersHasCombatPay"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/combatPayOptions">useBothCombatPay</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="formW2s" path="/onlyPrimaryFilerHasCombatPay"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/combatPayOptions">usePrimaryCombatPay</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="formW2s" path="/onlyMFJSpouseHasCombatPay"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/combatPayOptions">useSpouseCombatPay</Enum>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccCreditLimit">
            <Name>Tax Liability Credit Limit</Name>
            <Description>
                The maximum possible credit the filer can receive for CDCC, calculated using the Credit
                Limit
                Worksheet

                NOTE: While this is currently equivalent to `/totalTentativeTax`, this is being kept as a
                separate fact
                for clarity and because this value will change if/when the other forms/lines are supported
                Form 2441, line 10
            </Description>
            <Export mef="true"/>

            <!--
        Calculated using the "Credit Limit Worksheet"

        """
        Credit Limit Worksheet
        Complete this worksheet to figure the amount to enter on line 10.
        1.	Enter the amount from Form 1040, 1040-SR, or 1040-NR, line 18	1.	_____
        2.	Enter the amount from Schedule 3 (Form 1040), line 1 (foreign tax credit) and line 6l (Form
      8978, line 14)	2.	_____
        3.	Subtract line 2 from line 1. Also enter this amount on Form 2441, line 10. But if zero or less,
      stop; you can’t take
      the credit
        """

        Line 18 maps to `/totalTentativeTax`

        Neither "Foreign tax credit" nor "Form 8798, Partner's Additional Reporting Year Tax" are currently
      supported
        and are not included in these calculations
      -->

            <Derived>
                <Dependency module="taxCalculations" path="/totalTentativeTax"/>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders">
            <Name>Care Providers</Name>
            <Description>
                Care providers for the services for which the filer paid qualifying expenses

                Form 2441, Line 1
            </Description>

            <Writable>
                <Collection/>
            </Writable>
        </Fact>
        <Fact path="/cdccCareProviders/*/isComplete">
            <Description>
                A collection item is complete
            </Description>

            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="../displayName"/>
                    </IsComplete>
                    <Any>
                        <IsComplete>
                            <Dependency path="../address"/>
                        </IsComplete>
                        <IsComplete>
                            <Dependency path="../formW2"/>
                        </IsComplete>
                    </Any>
                    <Any>
                        <IsComplete>
                            <Dependency path="../ein"/>
                        </IsComplete>
                        <IsComplete>
                            <Dependency path="../tin"/>
                        </IsComplete>
                        <IsComplete>
                            <Dependency path="../dueDiligence"/>
                        </IsComplete>
                        <Dependency path="../isTaxExempt"/>
                        <All>
                            <Dependency path="../isEmployerFurnished"/>
                            <IsComplete>
                                <Dependency path="../hasW2Employer"/>
                            </IsComplete>
                            <Dependency path="../hasW2Employer"/>
                        </All>
                    </Any>
                    <IsComplete>
                        <Dependency path="../amountPaidForCare"/>
                    </IsComplete>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccShouldIncludeMoreThanThreeCareProviders">
            <Name>More than three care providers</Name>
            <Description>
                Whether there are more than three care providers, and care providers should be included.
                Used in pdf
                Form 2441 - Part 1 Header checkbox, xml field,
                and to determine whether to include an additional care providers
                statement
            </Description>
            <Export mef="true"/>

            <Derived>
                <All>
                    <Dependency path="/shouldIncludeCareProviders"/>
                    <GreaterThan>
                        <Left>
                            <CollectionSize>
                                <Dependency path="/cdccCareProviders"/>
                            </CollectionSize>
                        </Left>
                        <Right>
                            <Int>3</Int>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/pdfNone">
            <Description>String value 'none'</Description>

            <Derived>
                <String>none</String>
            </Derived>
        </Fact>
        <Fact path="/hasNoCareProviders">
            <Description>Whether the filer had no care providers</Description>

            <Derived>
                <Equal>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/cdccCareProviders"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/writableIsOrganization">
            <Name>Provider is Organization</Name>
            <Description>Whether the care provider is an organization or business (as opposed to an
                individual)
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/cdccCareProviders/*/isOrganization">
            <Name>Provider is Organization</Name>
            <Description>Whether the care provider is an organization or business (as opposed to an
                individual)
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Any>
                                <Not>
                                    <Dependency path="/hasReportedDependentCareBenefits"/>
                                </Not>
                                <Not>
                                    <Dependency path="../isEmployerFurnished"/>
                                </Not>
                            </Any>
                        </When>
                        <Then>
                            <Dependency path="../writableIsOrganization"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/collectProviderDetails">
            <Description>Based on not having the information from a W2, show the name question</Description>
            <Export mef="true"/>

            <Derived>
                <Any>
                    <Not>
                        <Dependency path="../isEmployerFurnished"/>
                    </Not>
                    <All>
                        <Dependency path="../isEmployerFurnished"/>
                        <Not>
                            <Dependency path="../hasW2Employer"/>
                        </Not>
                        <Dependency path="/hasCdccCarryoverAmountFromPriorTaxYear"/>
                    </All>
                    <Not>
                        <Dependency path="/hasReportedDependentCareBenefits"/>
                    </Not>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/writableOrganizationName">
            <Name>Organization Name</Name>
            <Description>The name of the organization providing the service.</Description>

            <Writable>
                <String/>
                <Limit type="Match">
                    <!-- N.B. This is not the same regex as business name line 2! Slashes are not allowed on
          line 1 -->
                    <String>(([A-Za-z0-9#\-\(\)]|&amp;|')\s?)*([A-Za-z0-9#\-\(\)]|&amp;|')</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>75</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/cdccCareProviders/*/organizationName">
            <Name>Organization Name</Name>
            <Description>The name of the organization providing the service.</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="../isOrganization"/>
                                <Dependency path="../collectProviderDetails"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writableOrganizationName"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="../isOrganization"/>
                                <Dependency path="../isEmployerFurnished"/>
                                <Not>
                                    <Dependency path="../collectProviderDetails"/>
                                </Not>
                            </All>
                        </When>
                        <Then>
                            <Dependency module="formW2s" path="../employerWhoFurnishedCare/employerName"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/writableFirstName">
            <Name>First name</Name>
            <Description>The first name of the provider. Must match the name as known to the Social
                Security Administration.
            </Description>

            <Writable>
                <String/>
                <Limit type="Match">
                    <String>[\sA-Za-z\-]+</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>20</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/cdccCareProviders/*/firstName">
            <Name>First name</Name>
            <Description>The first name of the provider. Must match the name as known to the Social
                Security Administration.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../collectProviderDetails"/>
                        </When>
                        <Then>
                            <Dependency path="../writableFirstName"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/writableLastName">
            <Name>Last name</Name>
            <Description>The last name of the provider. Must match the name as known to the Social
                Security Administration.
            </Description>

            <Writable>
                <String/>
                <Limit type="Match">
                    <String>[\sA-Za-z\-]+</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>20</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/cdccCareProviders/*/lastName">
            <Name>Last name</Name>
            <Description>The last name of the provider. Must match the name as known to the Social
                Security Administration.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../collectProviderDetails"/>
                        </When>
                        <Then>
                            <Dependency path="../writableLastName"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/fullName">
            <Name>Full name</Name>
            <Description>
                The first name and last name of the care provider.
            </Description>

            <Derived>
                <Paste>
                    <Dependency path="../firstName"/>
                    <Dependency path="../lastName"/>
                </Paste>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/displayName">
            <Description>
                The name of the provider, whether it was an organization or an individual
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../isOrganization"/>
                        </When>
                        <Then>
                            <Dependency path="../organizationName"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Not>
                                    <Dependency path="../isOrganization"/>
                                </Not>
                                <Dependency path="../collectProviderDetails"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../fullName"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/writableAddress">
            <Name>Address</Name>
            <Description>The care provider's address</Description>

            <Writable>
                <Address/>
            </Writable>
        </Fact>
        <Fact path="/cdccCareProviders/*/address">
            <Name>Address</Name>
            <Description>The care provider's address</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../collectProviderDetails"/>
                        </When>
                        <Then>
                            <Dependency path="../writableAddress"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/mefAddressZip">
            <Description>The care provider's address zip formatted for mef</Description>
            <Export mef="true"/>

            <Derived>
                <Trim>
                    <StripChars>
                        <Input>
                            <Dependency path="../address/postalCode"/>
                        </Input>
                        <Allow>
                            <Dependency module="mefTypes" path="/mefZipCodeType"/>
                        </Allow>
                    </StripChars>
                </Trim>
            </Derived>

        </Fact>
        <Fact path="/cdccCareProviders/*/pdfAddress">
            <Name>Address</Name>
            <Description>The care provider's address used in the f2441 pdf</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Not>
                                <Dependency path="../collectProviderDetails"/>
                            </Not>
                        </When>
                        <Then>
                            <Dependency path="../pdfSeeW2Address"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Paste>
                                <Dependency path="../address/streetAddress"/>
                                <Dependency path="../address/city"/>
                                <Dependency path="../address/stateOrProvence"/>
                                <Dependency path="../address/postalCode"/>
                            </Paste>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/isEmployerFurnished">
            <Description>Whether employer furnished care and therefore should see w2 for care provider's
                address
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/cdccCareProviders/*/isEmployerFurnishedWithW2">
            <Description>
                True if the care provider is employer furnished, and the filer has a W2 with them this year
                False
                if
                the care provider is (or isn't) employer furnished and/or the filer did not have a W2 with this employer
                this
                year.
            </Description>
            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="../isEmployerFurnished"/>
                    </IsComplete>
                    <Dependency path="../isEmployerFurnished"/>
                    <Dependency path="../hasW2Employer"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/writableEmployerWhoFurnishedCare">
            <Description>W2 of employer who furnished care provider</Description>

            <Writable>
                <CollectionItem collection="/formW2s"/>
            </Writable>
        </Fact>
        <Fact path="/cdccCareProviders/*/employerWhoFurnishedCare">
            <Description>W2 of employer who furnished care provider</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="../isEmployerFurnished"/>
                                <Dependency path="../hasW2Employer"/>
                                <Dependency module="formW2s" path="/filersHaveExactlyOneW2"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency module="formW2s" path="/oneAndOnlyW2"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="../isEmployerFurnished"/>
                                <Dependency path="../hasW2Employer"/>
                                <Not>
                                    <Dependency module="formW2s" path="/filersHaveExactlyOneW2"/>
                                </Not>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writableEmployerWhoFurnishedCare"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/hasW2Employer">
            <Description>This care provider was furnished by an employer for whom we have a form W2 listed</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/cdccCareProviders/*/flowEmployerMustBeAdded">
            <Description>This care provider was furnished by an employer, but we don't have their w2 and there was no
                carryover so we must ask them to add them to jobs
            </Description>
            <Derived>
                <All>
                    <Dependency path="../isEmployerFurnished"/>
                    <Not>
                        <Dependency path="../hasW2Employer"/>
                    </Not>
                    <Not>
                        <Dependency path="/hasReportedCarryOverAmountFromPriorTaxYear"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/showCdccNondependentQpTinPin">
            <Description>
                Whether we should show the TIN and ID Pin screens in Credits CDCC due to nondependent qualifying
                people.
            </Description>

            <Derived>
                <All>
                    <Dependency path="/cdccQualified"/>
                    <GreaterThan>
                        <Left>
                            <CollectionSize>
                                <Dependency module="familyAndHousehold"
                                            path="/cdccNonDependentQualifyingPeopleAssignedTins"/>
                            </CollectionSize>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/formW2">
            <Description>W2 of employer who furnished care provider</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="formW2s" path="/filersHaveExactlyOneW2"/>
                                <IsComplete>
                                    <Dependency path="../hasW2Employer"/>
                                </IsComplete>
                                <Dependency path="../hasW2Employer"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency module="formW2s" path="/oneAndOnlyW2"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Not>
                                <Dependency module="formW2s" path="/filersHaveExactlyOneW2"/>
                            </Not>
                        </When>
                        <Then>
                            <Dependency path="../employerWhoFurnishedCare"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/pdfSeeW2Address">
            <Description>Used for the care provider's address if the employer furnished care. Determines
                if 'See W-2' should be
                shown for address line 1(b).
            </Description>

            <Derived>
                <String>See W-2</String>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/mefSeeW2Address">
            <Description>Used for the care provider's address if employer furnished care and TP had W2 for that
                employer.
                Provides mef
                code.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Not>
                                <Dependency path="../collectProviderDetails"/>
                            </Not>
                        </When>
                        <Then>
                            <String>SEEW2</String>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/writableTin">
            <Name>TIN</Name>
            <Description>The care provider's TIN</Description>

            <Writable>
                <TIN/>
            </Writable>
        </Fact>
        <Fact path="/cdccCareProviders/*/tin">
            <Name>TIN</Name>
            <Description>The care provider's TIN</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="../hasTinOrEin"/>
                                <Not>
                                    <Dependency path="../isOrganization"/>
                                </Not>
                                <Dependency path="../collectProviderDetails"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writableTin"/>
                        </Then>
                    </Case>
                </Switch>

            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/writableEin">
            <Name>EIN</Name>
            <Description>The care provider's EIN</Description>

            <Writable>
                <EIN/>
            </Writable>
        </Fact>
        <Fact path="/cdccCareProviders/*/ein">
            <Name>TIN</Name>
            <Description>The care provider's EIN</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="../hasTinOrEin"/>
                                <Dependency path="../isOrganization"/>
                                <Dependency path="../collectProviderDetails"/>
                                <Not>
                                    <Dependency path="../isTaxExempt"/>
                                </Not>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="../writableEin"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/hasTinOrEin">
            <Description>Whether the care provider has either a TIN or EIN</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/cdccCareProviders/*/pdfTinEinColumn">
            <Name>TIN</Name>
            <Description>The care provider's EIN if a (non tax-exempt) organization, TIN if an individual, 'Tax-Exempt'
                if
                tax-exempt, and 'See
                Attached Statement' if they have a due diligence statement
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../needsDueDiligenceStatement"/>
                        </When>
                        <Then>
                            <String>See Attached Statement</String>
                        </Then>
                    </Case>
                    <!--    The below case covers when the provider is employer furnished and has a W2      -->
                    <Case>
                        <When>
                            <Not>
                                <Dependency path="../collectProviderDetails"/>
                            </Not>
                        </When>
                        <Then>
                            <String/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="../isOrganization"/>
                                <Dependency path="../isTaxExempt"/>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/pdfTaxExempt"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="../isOrganization"/>
                                <Not>
                                    <Dependency path="../isTaxExempt"/>
                                </Not>
                            </All>
                        </When>
                        <Then>
                            <AsString>
                                <Dependency path="../ein"/>
                            </AsString>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <AsString>
                                <Dependency path="../tin"/>
                            </AsString>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/writableIsTaxExempt">
            <Name>Tax Exempt</Name>
            <Description>Whether the care provider is tax exempt</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/cdccCareProviders/*/isTaxExempt">
            <Description>Whether the care provider is tax exempt</Description>

            <Derived>
                <All>
                    <Dependency path="../collectProviderDetails"/>
                    <Dependency path="../isOrganization"/>
                    <Dependency path="../writableIsTaxExempt"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/pdfTaxExempt">
            <Name>Tax Exempt</Name>
            <Description>String to use in ein/tin field in pdf when care provider is tax exempt</Description>

            <Derived>
                <String>Tax-Exempt</String>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/flowNotTaxExemptOrganization">
            <Name>Tax Exempt</Name>
            <Description>If true, the care provider is not tax exempt organization and is not tax exempt
                and we ask for
                TIN/EIN. Also used to determine what to print in the pdf form 2441, line 1(c)
            </Description>

            <Derived>
                <Any>
                    <Not>
                        <Dependency path="../isOrganization"/>
                    </Not>
                    <All>
                        <Dependency path="../isOrganization"/>
                        <Not>
                            <Dependency path="../isTaxExempt"/>
                        </Not>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/mefIsTaxExempt">
            <Name>Tax Exempt</Name>
            <Description>Whether the care provider is tax exempt</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../isTaxExempt"/>
                        </When>
                        <Then>
                            <String>TAXEXEMPT</String>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/isHouseholdEmployee">
            <Name>Is a Household Employee</Name>
            <Description>Whether care provider is a household employee.</Description>
            <Export mef="true"/>

            <Derived>
                <!-- if not knocked out, should default to false while hh employee is out of scope -->
                <Dependency path="/flowKnockoutHouseholdEmployee"/>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/isHouseholdEmployeeNo">
            <Name>Is Not a Household Employee</Name>
            <Description>Whether care provider is not a household employee. Used for the f2441 PDF 'No'
                checkbox
            </Description>

            <Derived>
                <Not>
                    <Dependency path="../isHouseholdEmployee"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/pdfIsHouseholdEmployee">
            <Name>PDF -- Is Not a Household Employee</Name>
            <Description>Whether care provider is a household employee. Formatted as "Yes" or "No", used in the Care
                Providers Statement for f2441 when there are 3+ care providers.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../isHouseholdEmployee"/>
                        </When>
                        <Then>
                            <String>Yes</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <String>No</String>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccDueDiligenceOptions">
            <Name>CDCC Care Provider Due Diligence Options</Name>
            <Description>Due Diligence explanation for why TIN was not provided</Description>

            <Derived>
                <EnumOptions>
                    <String>providerMovedAndFilerUnableToFindThem</String>
                    <String>providerRefusedToProvideTIN</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/writableDueDiligence">
            <Name>Due Diligence explanation for missing TIN</Name>
            <Description>Due Diligence explanation for why the filer did not provider the provider's TIN</Description>

            <Writable>
                <MultiEnum optionsPath="/cdccDueDiligenceOptions"/>
            </Writable>
        </Fact>
        <Fact path="/cdccCareProviders/*/dueDiligence">
            <Name>Due Diligence explanation for missing TIN</Name>
            <Description>Due Diligence explanation for why the filer did not provider the provider's TIN</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../needsDueDiligenceStatement"/>
                        </When>
                        <Then>
                            <Dependency path="../writableDueDiligence"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/needsDueDiligenceStatement">
            <Derived>
                <All>
                    <Dependency path="../flowNotTaxExemptOrganization"/>
                    <Not>
                        <Dependency path="../hasTinOrEin"/>
                    </Not>
                    <Dependency path="../collectProviderDetails"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProviders/*/writableAmountPaidForCare">
            <Name>Amount paid</Name>
            <Description>The amount paid for care</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/cdccCareProviders/*/amountPaidForCare">
            <Name>Amount paid</Name>
            <Description>The amount paid for care. Set to 0 if the care was employer provided and they have a w2.
            </Description>
            <Export mef="true"/>


            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../collectProviderDetails"/>
                        </When>
                        <Then>
                            <Round>
                                <Dependency path="../writableAmountPaidForCare"/>
                            </Round>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccCareProvidersWithDueDiligenceReasons">
            <Description>
                Care Providers for which the filer was unable to find a TIN
            </Description>

            <Derived>
                <Filter path="/cdccCareProviders">
                    <Dependency path="needsDueDiligenceStatement"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/pdfNeedDueDiligenceStatement">
            <Description>
                Whether the filer needs an additional due diligence statement
            </Description>

            <Derived>
                <All>
                    <Dependency path="/shouldSubmitForm2441"/>
                    <Dependency path="/shouldIncludeCareProviders"/>
                    <GreaterThan>
                        <Left>
                            <CollectionSize>
                                <Dependency path="/cdccCareProvidersWithDueDiligenceReasons"/>
                            </CollectionSize>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccCountOfQualifyingPersons">
            <Name>Count of Qualifying Persons</Name>
            <Description>The count of all qualifying persons (filer and non-filer)</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Add>
                    <Dependency module="familyAndHousehold" path="/cdccQualifyingNonFilersCount"/>
                    <Dependency module="filers" path="/cdccQualifyingFilersCount"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/hasCdccImmediateChildQpUnder13">
            <Description>TP has a qualifying person who is a qualifying child (biological, adopted, stepchild, or foster
                child)
            </Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Filter module="familyAndHousehold" path="/cdccQualifyingPeople">
                                <All>
                                    <Dependency module="dependentsRelationship"
                                                path="relationshipCategoryIsImmediateChild"/>
                                    <Any>
                                        <LessThan>
                                            <Left>
                                                <Dependency module="familyAndHousehold" path="age"/>
                                            </Left>
                                            <Right>
                                                <Int>13</Int>
                                            </Right>
                                        </LessThan>
                                        <Dependency module="familyAndHousehold" path="cdccTurnedThirteenAfterJanFirst"/>
                                    </Any>
                                </All>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasQpWhoTurned13AndWasNotUnableToCareForSelf">
            <Description>The TP has a cdcc qualifying person who turned 13 in the tax year and was not unable to care
                for
                themselves. Used to gate content for expense to exclude
            </Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Filter module="familyAndHousehold" path="/cdccNonFilerQpsWhoTurned13InTaxYear">
                                <Not>
                                    <Dependency module="familyAndHousehold" path="unableToCareForSelf"/>
                                </Not>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasMoreThanOneQpWhoTurned13AndWasNotUnableToCareForSelf">
            <Description>The TP has a cdcc qualifying person who turned 13 in the tax year and was not unable to care
                for
                themselves. Used to gate content for expense to exclude
            </Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Filter module="familyAndHousehold" path="/cdccNonFilerQpsWhoTurned13InTaxYear">
                                <Not>
                                    <Dependency module="familyAndHousehold" path="unableToCareForSelf"/>
                                </Not>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasQualifyingPersonsWithExpenseRestrictions">
            <Description>Whether there are qualifying persons who have restrictions on what expenses can be included.
                Used for
                conditional content.
            </Description>

            <Derived>
                <Any>
                    <!-- QPs who turned 13 in the tax year (Jan 2-Dec 31) and were not unable to care for self -->
                    <GreaterThan>
                        <Left>
                            <CollectionSize>
                                <Dependency module="familyAndHousehold"
                                            path="/cdccNonFilerQpsWhoTurned13InTaxYearAbleToCareForSelf"/>
                            </CollectionSize>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                    <!-- QPs unable to care for self who are not Qcs under age 13  -->
                    <GreaterThan>
                        <Left>
                            <CollectionSize>
                                <Dependency module="familyAndHousehold"
                                            path="/cdccNonFilerQpsWhoWereUnableToCareForSelfAndNotQcUnderAge13"/>
                            </CollectionSize>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                    <!--  There are qualifying filers (who by definition would be unable to care for self) -->
                    <GreaterThan>
                        <Left>
                            <Dependency module="filers" path="/cdccQualifyingFilersCount"/>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                    <GreaterThan>
                        <Left>
                            <CollectionSize>
                                <Dependency module="familyAndHousehold"
                                            path="/cdccNonFilerQcsWhoTurned13InTaxYearUnableToCareForSelf"/>
                            </CollectionSize>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/cdccHasMoreThanThreeQualifyingPersons">
            <Name>More than three Qualifying Persons</Name>
            <Description>
                Whether there are more than three qualifying persons listed
                Form 2441 - Part 1 Header
            </Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/cdccCountOfQualifyingPersons"/>
                    </Left>
                    <Right>
                        <Int>3</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/cdccHasExactlyOneQualifyingPerson">
            <Name>One qualifying person</Name>
            <Description>
                Whether there is exactly one qualifying person listed
                Form 2441 - Part 1 Header
            </Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/cdccCountOfQualifyingPersons"/>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/specialMonthlyIncomeForStudentOrDisabled">
            <Description>
                Monthly special income amount when student or disabled, based on the number of qualifying
                people
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/cdccCountOfQualifyingPersons"/>
                                </Left>
                                <Right>
                                    <Int>1</Int>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Dependency path="/monthlyIncomeForStudentOrDisabledWithOneQualifyingPerson"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <GreaterThan>
                                <Left>
                                    <Dependency path="/cdccCountOfQualifyingPersons"/>
                                </Left>
                                <Right>
                                    <Int>1</Int>
                                </Right>
                            </GreaterThan>
                        </When>
                        <Then>
                            <Dependency path="/monthlyIncomeForStudentOrDisabledWithMoreThanOneQualifyingPerson"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccQualifyingDependentsPassResidencyTest">
            <Name>CDCC Dependent Passes Residency test</Name>
            <Description>At least one CDCC qualifying dependent passes the residency test</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Filter path="/cdccQualifyingPeople">
                                <Dependency module="familyAndHousehold" path="residencyTest"/>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/cdccQualifyingDependentsPassTpPaidMostOfHomeUpkeep">
            <Name>TP Paid Most of Upkeep of Home of CDCC Dependent</Name>
            <Description>Whether the taxpayer paid for more than half the cost of keeping up the home for
                at least one CDCC
                qualifying dependent
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Filter path="/cdccQualifyingPeople">
                                <!-- TODO: ensure that we'd always ask this when MFS/qualifying for CDCC -->
                                <Dependency module="familyAndHousehold" path="tpPaidMostOfHomeUpkeep"/>
                            </Filter>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/cdccQualifyingNonFilersWithExpenses">
            <Name>Qualifying Non-Filers with Qualifying Expenses</Name>
            <Description>Collection of qualifying non-filers with qualifying expenses</Description>
            <Derived>
                <Filter path="/cdccQualifyingPeople">
                    <Dependency module="familyAndHousehold" path="cdccHasQualifyingExpenses"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/cdccQualifyingFilersWithExpenses">
            <Name>Qualifying Filers with Qualifying Expenses</Name>
            <Description>Collection of qualifying filers with qualifying expenses</Description>
            <Derived>
                <Filter path="/cdccQualifyingFilers">
                    <Dependency module="filers" path="cdccHasQualifyingExpenses"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/cdccUncappedQualifyingExpenses">
            <Name>Uncapped Qualifying Expenses</Name>
            <Description>
                The uncapped sum of all qualifying expenses. This is for the credit calculation.

                Form 2441, Line 30
            </Description>

            <Derived>
                <Add>
                    <CollectionSum>
                        <Dependency module="familyAndHousehold"
                                    path="/cdccQualifyingPeople/*/cdccQualifyingExpenseAmount"/>
                    </CollectionSum>
                    <CollectionSum>
                        <Dependency module="filers" path="/cdccQualifyingFilers/*/cdccQualifyingExpenseAmount"/>
                    </CollectionSum>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/form2441Line30Expenses">
            <Name>Form 2441 Line 30 Expenses</Name>
            <Description>Sum of qualifying expenses if filling part III. Otherwise undefined</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/isFillingForm2441PartIII"/>
                        </When>
                        <Then>
                            <Dependency path="/cdccUncappedQualifyingExpenses"/>
                        </Then>
                    </Case>
                    <!-- otherwise: undefined -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccQualifyingExpenseCap">
            <Name>The maximum claimable qualifying expenses</Name>
            <Description>
                The maximum claimable qualifying expenses. Also called the Allowed Cared For Amount.

                Form 2441, Line
                27
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <GreaterThan>
                                <Left>
                                    <Dependency path="/cdccCountOfQualifyingPersons"/>
                                </Left>
                                <Right>
                                    <Int>1</Int>
                                </Right>
                            </GreaterThan>
                        </When>
                        <Then>
                            <Dependency path="/cdccMaxClaimableExpenseWithTwoQP"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/cdccCountOfQualifyingPersons"/>
                                </Left>
                                <Right>
                                    <Int>1</Int>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Dependency path="/cdccMaxClaimableExpenseWithOneQP"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/cdccCountOfQualifyingPersons"/>
                                </Left>
                                <Right>
                                    <Int>0</Int>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form2441Line27ExpenseCap">
            <Name>Form 2441 Line 27</Name>
            <Description>The maximum claimable qualifying expenses if filling in part III. Undefined
                otherwise. Line 27
            </Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/isFillingForm2441PartIII"/>
                        </When>
                        <Then>
                            <Dependency path="/cdccQualifyingExpenseCap"/>
                        </Then>
                    </Case>
                    <!-- otherwise: undefined -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccQualifyingExpenses">
            <Name>Qualifying Expenses</Name>
            <Description>
                The capped sum of all qualifying expenses
                Form 2441, Line 3
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/isFillingForm2441PartIII"/>
                        </When>
                        <Then>
                            <Dependency path="/cdccSmallerOfTotalQualifyingExpensesAmount"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/cdccUncappedQualifyingExpenses"/>
                                <Dependency path="/cdccQualifyingExpenseCap"/>
                            </LesserOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/lowerOfCdccEarnedIncomeMfj">
            <Description>Lowest of Earned income of MFJ filers</Description>
            <Derived>
                <LesserOf>
                    <Dependency module="income" path="/cdccEarnedIncomePrimaryFilerLine4"/>
                    <Dependency module="income" path="/cdccEarnedIncomeLine5"/>
                </LesserOf>
            </Derived>
        </Fact>
        <Fact path="/lowerOfCdccEarnedIncome">
            <Description>Lower of earned income (regardless of filing status)</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <Dependency path="/lowerOfCdccEarnedIncomeMfj"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency module="income" path="/cdccEarnedIncomePrimaryFilerLine4"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/hasEarnedIncomeForCdcc">
            <Description>Whether earned income as applicable for CDCC is greater than zero</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/lowerOfCdccEarnedIncome"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/cdccLowerOfEarnedIncomeAndExpenses">
            <Description>
                The lower of the earned income values and expenses

                Form 2441, Line 6
            </Description>
            <Export mef="true"/>

            <Derived>
                <LesserOf>
                    <Dependency path="/cdccQualifyingExpenses"/>
                    <Dependency path="/lowerOfCdccEarnedIncome"/>
                </LesserOf>
            </Derived>
        </Fact>
        <Fact path="/cdccCareExpensesFallOffThreshold">
            <Name>Care Expenses Fall Off Threshold</Name>
            <Description>The threshold at which the care expenses decimal amount begins reducing</Description>

            <Derived>
                <Dollar>15000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/cdccCareExpensesPlateauThreshold">
            <Name>Care Expenses Fall Off Threshold</Name>
            <Description>The threshold at which the care expenses decimal amount stops reducing</Description>

            <Derived>
                <Dollar>43000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/xmlCdccCareExpensesDecimalAmount">
            <Description>The CDCC Care expenses decimal amount, cast to a string for MeF</Description>
            <Export mef="true"/>

            <Derived>
                <AsString>
                    <Dependency path="/cdccCareExpensesDecimalAmount"/>
                </AsString>
            </Derived>
        </Fact>
        <Fact path="/cdccCareExpensesDecimalAmount">
            <Name>Care Expenses Decimal Amount</Name>
            <Description>
                Care Expenses Decimal Amount
                Form 2441, Line 8
            </Description>
            <Derived>
                <!--
        Note: This fact is returned as a <Dollar> because we don't have a distinct <Decimal> type currently
        and it is important
        that precision of these decimal values be preserved
      -->
                <Switch>
                    <Case>
                        <When>
                            <LessThanOrEqual>
                                <Left>
                                    <Dependency module="taxCalculations" path="/agi"/>
                                </Left>
                                <Right>
                                    <Dollar>0</Dollar>
                                </Right>
                            </LessThanOrEqual>
                        </When>
                        <Then>
                            <!-- TODO: What is the correct way to handle this edge case?  Is this case necessary? -->
                            <Dollar>0.00</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <!-- The decimal amount never goes lower than .20 -->
                            <GreaterThan>
                                <Left>
                                    <Dependency module="taxCalculations" path="/agi"/>
                                </Left>
                                <Right>
                                    <Dependency path="/cdccCareExpensesPlateauThreshold"/>
                                </Right>
                            </GreaterThan>
                        </When>
                        <Then>
                            <Dollar>0.20</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <!-- The decimal amount never goes lower than .35 -->
                            <LessThanOrEqual>
                                <Left>
                                    <Dependency module="taxCalculations" path="/agi"/>
                                </Left>
                                <Right>
                                    <Dependency path="/cdccCareExpensesFallOffThreshold"/>
                                </Right>
                            </LessThanOrEqual>
                        </When>
                        <Then>
                            <Dollar>
                                0.35
                            </Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <!--
            This formula is emulating the effects of this table from the form 2441 instructions:

            """
            IF your 2022 adjusted gross income was:	 	THEN the decimal amount is:
            Over:	 	But not over:
            $ 0	    —	$15,000	 	0.35
            15,000	—	17,000	 	0.34
            17,000	—	19,000	 	0.33
            19,000	—	21,000	 	0.32
            21,000	—	23,000	 	0.31
            23,000	—	25,000	 	0.30
            25,000	—	27,000	 	0.29
            27,000	—	29,000	 	0.28
            29,000	—	31,000	 	0.27
            31,000	—	33,000	 	0.26
            33,000	—	35,000	 	0.25
            35,000	—	37,000	 	0.24
            37,000	—	39,000	 	0.23
            39,000	—	41,000	 	0.22
            41,000	—	43,000	 	0.21
            43,000	—	No limit	0.20
            """

            The decimal amount reduces by .01 for every 2K over 15,000.01.
            -->
                            <Subtract>
                                <Minuend>
                                    <!-- The case statement above handles 15K and down, so we start from the second
                  row -->
                                    <Dollar>0.34</Dollar>
                                </Minuend>
                                <Subtrahends>
                                    <Divide>
                                        <Dividend>
                                            <StepwiseMultiply>
                                                <Multiplicand>
                                                    <Subtract>
                                                        <Minuend>
                                                            <Dependency module="taxCalculations" path="/agi"/>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <!--
                                The increment steps up at one cent over each 2K threshold,
                                so we need to take away an extra penny to compensate
                              -->
                                                            <Add>
                                                                <Dependency path="/cdccCareExpensesFallOffThreshold"/>
                                                                <Dollar>0.01</Dollar>
                                                            </Add>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiplicand>
                                                <Rate>
                                                    <Rational>1/2000
                                                    </Rational>                          <!-- .01 for every whole $2,000 of income -->
                                                </Rate>
                                            </StepwiseMultiply>
                                        </Dividend>
                                        <Divisors>
                                            <!-- Stepwise multiple doesn't support decimal rates, so we have to convert
                      from percent to
                      decimal -->
                                            <Int>100</Int>
                                        </Divisors>
                                    </Divide>
                                </Subtrahends>
                            </Subtract>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccTentativeExpenseAmount">
            <Name>Tentative Expense Amount</Name>
            <Description>
                Form 2441, Line 9a
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Multiply>
                        <Dependency path="/cdccLowerOfEarnedIncomeAndExpenses"/>
                        <Dependency path="/cdccCareExpensesDecimalAmount"/>
                    </Multiply>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/cdccCreditForPriorYearExpenses">
            <Name>Credit For Prior Year Expenses</Name>
            <Description>
                Credit for any expenses incurred in the prior tax year. Not currently supported, so this is
                set as
                zero.

                Form 2441, Line 9b
            </Description>
            <Export mef="true"/>

            <Derived>
                <Dollar>0</Dollar>
            </Derived>
        </Fact>
        <Fact path="/cdccHasCreditForPriorYearExpenses">
            <Name>Has Credit for Prior Year Expenses</Name>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/cdccClaimedCreditForPriorYearExpenses">
            <Name>Claimed CDCC for Prior Tax Year</Name>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/cdccClaimedMaxCreditForPriorTaxYear">
            <Name>Claimed Maximum Credit for Prior Tax Year</Name>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/cdccHasPriorYearCreditAndClaimedCredit">
            <Name>Has Prior Year Credit and Claimed Prior YearCredit</Name>
            <Derived>
                <All>
                    <Dependency path="/cdccHasCreditForPriorYearExpenses"/>
                    <Dependency path="/cdccClaimedCreditForPriorYearExpenses"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/knockoutCdccWorksheetA">
            <Name>Has Prior Year Expenses and Did Not Claim Credit or Max Expenses</Name>
            <Derived>
                <All>
                    <Dependency path="/cdccHasCreditForPriorYearExpenses"/>
                    <Any>
                        <Not>
                            <Dependency path="/cdccClaimedCreditForPriorYearExpenses"/>
                        </Not>
                        <Not>
                            <Dependency path="/cdccClaimedMaxCreditForPriorTaxYear"/>
                        </Not>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccTotalEligibleCDCCAmount">
            <Name>Total Eligible CDCC Amount</Name>
            <Description>
                Total Eligible CDCC Amount
                Form 2441, Line 9c
            </Description>
            <Export mef="true"/>

            <Derived>
                <Add>
                    <Dependency path="/cdccTentativeExpenseAmount"/>
                    <Dependency path="/cdccCreditForPriorYearExpenses"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/cdccTotalCredit">
            <Name>Credit for Child and Dependent Care Amount</Name>
            <Description>
                The final amount of credit received for child and dependent care.

                Form 2441, Line 11
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Not>
                                    <Dependency path="/cdccPotentialCdccIsZeroOrLessDueToExclusionBenefits"/>
                                </Not>
                                <Dependency path="/cdccHasQualifyingExpenses"/>
                            </All>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/cdccTotalEligibleCDCCAmount"/>
                                <Dependency path="/cdccCreditLimit"/>
                            </LesserOf>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccPrimaryFilerDependentCareBenefitsAmount">
            <Export downstreamFacts="true"/>

            <Derived>
                <Round>
                    <CollectionSum>
                        <Dependency module="formW2s" path="/primaryFilerW2s/*/dependentCareBenefits"/>
                    </CollectionSum>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/cdccSecondaryFilerDependentCareBenefitsAmount">
            <Export downstreamFacts="true"/>

            <Derived>
                <Round>
                    <CollectionSum>
                        <Dependency module="formW2s" path="/secondaryFilerW2s/*/dependentCareBenefits"/>
                    </CollectionSum>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/cdccDependentCareBenefitsAmount">
            <Name>Dependent Care Benefits Amount</Name>
            <Description>
                Dependent Care Benefits received from employment, for both filers, without carryovers or forfeits
                Form 2441, Line 12
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <Add>
                                <Dependency path="/cdccPrimaryFilerDependentCareBenefitsAmount"/>
                                <Dependency path="/cdccSecondaryFilerDependentCareBenefitsAmount"/>
                            </Add>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/cdccPrimaryFilerDependentCareBenefitsAmount"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccHasDepCareBenefitsBox10">
            <Name>Has Dependent Care Benefits</Name>
            <Description>
                Whether the primary or secondary filer entered benefits in box 10 of formW2s
            </Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/cdccDependentCareBenefitsAmount"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasCdccCarryoverAmountFromPriorTaxYear">
            <Name>Has Carry Forward Amount From Prior Tax Year</Name>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/writableCdccCarryoverAmountFromPriorTaxYear">
            <Name>Writable Carryover Amount from Prior Tax Year</Name>
            <Description>
                The amount carried over from the prior tax year and used during the grace period of the
                current year.
                This is the writable optional fact. Can be left incomplete.
                Please use the derived fact in downstream
                calculations.
                Form 2441, Line 13
            </Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0.01</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/cdccCarryoverAmountFromPriorTaxYear">
            <Name>Carryover Amount From Prior Tax Year</Name>
            <Description>
                The amount carried over from the prior tax year and used during the grace period of the
                current year.

                Form 2441, Line 13
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/hasCdccCarryoverAmountFromPriorTaxYear"/>
                        </When>
                        <Then>
                            <Round>
                                <Dependency path="/writableCdccCarryoverAmountFromPriorTaxYear"/>
                            </Round>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/writableHasCdccForfeitedCredits">
            <Name>Writable Has Carry Forward Amount For Next Tax Year</Name>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/hasCdccForfeitedCredits">
            <Name>Has Carry Forward Amount For Next Tax Year. This is only true if the filers reported benefits in box
                10.
            </Name>

            <Derived>
                <All>
                    <Dependency path="/writableHasCdccForfeitedCredits"/>
                    <Dependency path="/cdccHasDepCareBenefitsBox10"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/writableCdccTotalQualifiedDependentCareExpenses">
            <Name>Total Qualified Dependent Care Expenses</Name>
            <Description>Total qualified dependent care expenses incurred, including those that were
                covered by employer.
                This
                is not the same as Line 2 of the form, which excludes the employer covered expenses. This is also the
                writable
                version.
                The value that goes in the form needs to be 0 if there are no qualifying expenses.

            </Description>

            <Writable>
                <Dollar/>
            </Writable>

        </Fact>
        <Fact path="/cdccTotalQualifiedDependentCareExpenses">
            <Name>Total Qualified Dependent Care Expenses</Name>
            <Description>Total qualified dependent care expenses incurred, including those that were
                covered by employer. This
                is for the exclusion.
                This
                is not the same as Line 2 of the form, which excludes the employer covered expenses

                Form 2441, Line 16
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Not>
                                <Dependency path="/cdccHasQualifyingPersons"/>
                            </Not>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Round>
                                <Dependency path="/writableCdccTotalQualifiedDependentCareExpenses"/>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>

        </Fact>
        <Fact path="/cdccHasQualifyingExpensesForBenefit">
            <Name>Whether TP has Qualified Dependent Care Expenses, including benefit</Name>
            <Description>Whether TP has qualified dependent care expenses incurred, including those that were
                covered by
                employer.
                This is not the same as what's reported onLine 2 of the form, which excludes the employer covered
                expenses
            </Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/cdccTotalQualifiedDependentCareExpenses"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>

        </Fact>
        <Fact path="/form2441Line16Expenses">
            <Name>Form 2441 Line 16</Name>
            <Description>The total qualified dependent care expenses if filling in part III. Undefined
                otherwise.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/isFillingForm2441PartIII"/>
                        </When>
                        <Then>
                            <Dependency path="/cdccTotalQualifiedDependentCareExpenses"/>
                        </Then>
                    </Case>
                    <!-- otherwise: undefined -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/writableCdccForfeitedCredits">
            <Name>Writable Forfeited Amount of CDCC</Name>
            <Description>
                Amount of CDCC forfeited or carried over to the next tax year This is the writable optional fact.
                Please use the derived fact in downstream calculations.
                Form 2441, Line 14
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/cdccForfeitedCredits">
            <Name>Forfeited Amount of CDCC</Name>
            <Description>
                The amount carried over from the prior tax year and used during the grace period of the
                current year.

                Form 2441, Line 13
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/hasCdccForfeitedCredits"/>
                        </When>
                        <Then>
                            <Round>
                                <Dependency path="/writableCdccForfeitedCredits"/>
                            </Round>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccAdjustedDependentCareBenefitsAmount">
            <Name>Adjusted Dependent Care Benefits amount</Name>
            <Description>
                Sum of all dependent care benefits, credits carried over from the previous year, credits
                forfeited,
                and credits carried over to the next tax year.

                Form 2441, Line 15
            </Description>
            <Export mef="true"/>

            <Derived>
                <Subtract>
                    <Minuend>
                        <Add>
                            <Dependency path="/cdccDependentCareBenefitsAmount"/>
                            <Dependency path="/cdccCarryoverAmountFromPriorTaxYear"/>
                        </Add>
                    </Minuend>
                    <Subtrahends>
                        <Dependency path="/cdccForfeitedCredits"/>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/hasReportedPrimaryFilerDependentCareBenefits">
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSum>
                            <Dependency module="formW2s" path="/primaryFilerW2s/*/dependentCareBenefits"/>
                        </CollectionSum>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasReportedSecondaryFilerDependentCareBenefits">
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSum>
                            <Dependency module="formW2s" path="/secondaryFilerW2s/*/dependentCareBenefits"/>
                        </CollectionSum>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasReportedCarryOverAmountFromPriorTaxYear">
            <Name>Reported Dependent Care Benefits</Name>
            <Description>
                Reported dependent care benefits in box 10 or said they carried over benefits from TY-1
            </Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Add>
                            <Dependency path="/cdccCarryoverAmountFromPriorTaxYear"/>
                        </Add>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasReportedDependentCareBenefits">
            <Name>Reported Dependent Care Benefits</Name>
            <Description>
                Reported dependent care benefits in box 10 or said they carried over benefits from TY-1
            </Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Any>
                    <Dependency path="/hasReportedPrimaryFilerDependentCareBenefits"/>
                    <Dependency path="/hasReportedSecondaryFilerDependentCareBenefits"/>
                    <Dependency path="/hasReportedCarryOverAmountFromPriorTaxYear"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/cdccShouldAskAboutPrimaryFilerEmployerExclusionPlan">
            <Description/>

            <Derived>
                <Any>
                    <Dependency path="/hasReportedPrimaryFilerDependentCareBenefits"/>
                    <Dependency path="/hasReportedCarryOverAmountFromPriorTaxYear"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/isFillingForm2441PartIII">
            <Name>Is Filling Part III</Name>
            <Description>If dependent care benefits were received, tp must fill in part III</Description>
            <Export mef="true"/>
            <Derived>
                <Dependency path="/hasReportedDependentCareBenefits"/>
            </Derived>
        </Fact>
        <Fact path="/isClaimingCdccAndFillingForm2441PartIII">
            <Name>Is claiming CDCC and Filling Part III</Name>
            <Description>If dependent care benefits were received and filer is claiming CDCC, tp must fill in lines
                27-31
            </Description>
            <Export mef="true"/>
            <Derived>
                <All>
                    <Dependency path="/isFillingForm2441PartIII"/>
                    <Dependency path="/cdccQualified"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccLesserOfAdjustBenefitsAndQualifiedExpenses">
            <Name>Lesser of Adjusted Benefits and Qualified Expenses</Name>
            <Description>

                The lesser of the Adjusted Care Benefits Amount and Qualified Expenses.

                Form 2441,
                Line 17
            </Description>
            <Export mef="true"/>

            <Derived>
                <LesserOf>
                    <Dependency path="/cdccAdjustedDependentCareBenefitsAmount"/>
                    <Dependency path="/cdccTotalQualifiedDependentCareExpenses"/>
                </LesserOf>
            </Derived>
        </Fact>
        <Fact path="/form2441Line18Income">
            <Name>Form 2441 Line 18</Name>
            <Description>Earned income of primary filer if filling in part III. Otherwise undefined.</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/isFillingForm2441PartIII"/>
                        </When>
                        <Then>
                            <Dependency path="/cdccEarnedIncomePrimaryFilerLine18" module="income"/>
                        </Then>
                    </Case>
                    <!-- otherwise: undefined -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/form2441Line19Income">
            <Name>Form 2441 Line 19</Name>
            <Description>Earned income on Line 19 if filling in part III. Otherwise undefined.</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/isFillingForm2441PartIII"/>
                        </When>
                        <Then>
                            <Dependency path="/cdccEarnedIncomeLine19" module="income"/>
                        </Then>
                    </Case>
                    <!-- otherwise: undefined -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccTentativeExclusionAmount">
            <Name>Tentative Exclusion Amount</Name>
            <Description>
                Tentative Exclusion Amount for CDCC

                Form 2441, Line 20
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <GreaterThan>
                                <Left>
                                    <Dependency path="/cdccLesserOfAdjustBenefitsAndQualifiedExpenses"/>
                                </Left>
                                <Right>
                                    <Dollar>0</Dollar>
                                </Right>
                            </GreaterThan>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/cdccLesserOfAdjustBenefitsAndQualifiedExpenses"/>
                                <Dependency path="/form2441Line18Income"/>
                                <Dependency path="/form2441Line19Income"/>
                            </LesserOf>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccMaximumExclusionForMFS">
            <Description>Maximum Allowed CDCC Exclusion for MFS</Description>

            <Derived>
                <Dollar>2500</Dollar>
            </Derived>
        </Fact>
        <Fact path="/cdccMaximumExclusionForNonMFS">
            <Description>Maximum Allowed CDCC Exclusion for MFS</Description>

            <Derived>
                <Dollar>5000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/cdccMaximumExclusion">
            <Name>Maximum Allowed Exclusion</Name>
            <Description>Maximum amount filer can exclude from taxation for CDCC purposes</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                                <Not>
                                    <Dependency module="filers" path="/mfsButEligibleForCdcc"/>
                                </Not>
                            </All>
                        </When>
                        <Then>
                            <Dependency path="/cdccMaximumExclusionForMFS"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/cdccMaximumExclusionForNonMFS"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/writablePrimaryFilerDependentCarePlanMaximum">
            <Name>Primary Filer's Dependent Care Plan Maximum</Name>
            <Description>The maximum amount the primary filer's employer's dependent care exclusion
                benefits plan allows
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/cdccPrimaryFilerDependentCarePlanMaximum">
            <Name>Primary Filer's Dependent Care Plan Maximum</Name>
            <Description>
                The maximum amount the primary filer's employer's dependent care exclusion benefits plan
                allows.

                This
                value is treated as zero if the primary filer has no reported exclusion benefits.
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/cdccShouldAskAboutPrimaryFilerEmployerExclusionPlan"/>
                        </When>
                        <Then>
                            <Round>
                                <Dependency path="/writablePrimaryFilerDependentCarePlanMaximum"/>
                            </Round>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccPrimaryFilerDependentCarePlanMaximumExceedsLimit">
            <Name>Primary Filers' Dependent Care Plan Maxiumum Exceeds Federal Limit</Name>
            <Description>
                Whether the value provided as the maximum exclusion amount allowed under the employer's
                dependent
                care
                plan exceeds the federal maximum.
            </Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/cdccPrimaryFilerDependentCarePlanMaximum"/>
                    </Left>
                    <Right>
                        <Dependency path="/cdccMaximumExclusion"/>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/writableSecondaryFilerDependentCarePlanMaximum">
            <Name>Secondary Filer's Dependent Care Plan Maximum</Name>
            <Description>The maximum amount the secondary filer's employer's dependent care exclusion
                benefits plan allows
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/cdccSecondaryFilerDependentCarePlanMaximum">
            <Name>Secondary Filer's Dependent Care Plan Maximum</Name>
            <Description>
                The maximum amount the secondary filer's employer's dependent care exclusion benefits plan
                allows

                This
                value is treated as zero if the secondary filer has no reported exclusion benefits.
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/hasReportedSecondaryFilerDependentCareBenefits"/>
                        </When>
                        <Then>
                            <Round>
                                <Dependency path="/writableSecondaryFilerDependentCarePlanMaximum"/>
                            </Round>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccSecondaryFilerDependentCarePlanMaximumExceedsLimit">
            <Name>Primary Filers' Dependent Care Plan Maxiumum Exceeds Federal Limit</Name>
            <Description>
                Whether the value provided as the maximum exclusion amount allowed under the employer's
                dependent
                care
                plan exceeds the federal maximum.
            </Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/cdccSecondaryFilerDependentCarePlanMaximum"/>
                    </Left>
                    <Right>
                        <Dependency path="/cdccMaximumExclusion"/>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/cdccSpecifiedExclusionAmount">
            <Name>Specified Exclusion Amount</Name>
            <Description>
                Specified Exclusion Amount

                Form 2441, Line 21
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Not>
                                <Dependency path="/cdccShouldBeAskedAboutMaxExclusion"/>
                            </Not>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="filers" path="/isMarried"/>
                                <Not>
                                    <Dependency module="filers" path="/mfsButEligibleForCdcc"/>
                                </Not>
                            </All>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/cdccMaximumExclusion"/>
                                <Add>
                                    <Dependency path="/cdccPrimaryFilerDependentCarePlanMaximum"/>
                                    <Dependency path="/cdccSecondaryFilerDependentCarePlanMaximum"/>
                                </Add>
                            </LesserOf>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/cdccMaximumExclusion"/>
                                <Dependency path="/cdccPrimaryFilerDependentCarePlanMaximum"/>
                            </LesserOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/hasMfjSpouseEarnedIncome">
            <Description>Taxpayer has the MFS Spouse's earned income</Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/cdccSomeOfExclusionIsFromSoleProprietorShipOrPartnership">
            <Name>Some of exclusion amount is from sole propietorship or parternship</Name>
            <Description>
                Whether some of exclusion amount is from sole proprietorship or partnership.

                Form 2441, fact for
                checkboxes on Line 22
            </Description>

            <Derived>
                <!-- TODO: Replace this with a writable after self-employment income is supported -->
                <False/>
            </Derived>
        </Fact>
        <Fact path="/cdccCheckboxSoleProprietorshipYes">
            <Name>Checkbox Yes for sole proprietorship exclusion</Name>
            <Description>
                Check yes on Some of exclusion amount is from sole proprietorship or parternship.

                Form 2441,
                for Line
                22
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/isFillingForm2441PartIII"/>
                        </When>
                        <Then>
                            <Dependency path="/cdccSomeOfExclusionIsFromSoleProprietorShipOrPartnership"/>
                        </Then>
                    </Case>
                    <!-- otherwise: undefined -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccCheckboxSoleProprietorshipNo">
            <Name>Checkbox No for sole proprietorship exclusion</Name>
            <Description>
                Check no on Some of exclusion amount is from sole proprietorship or parternship.

                Form 2441,
                for Line 22
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/isFillingForm2441PartIII"/>
                        </When>
                        <Then>
                            <Not>
                                <Dependency path="/cdccSomeOfExclusionIsFromSoleProprietorShipOrPartnership"/>
                            </Not>
                        </Then>
                    </Case>
                    <!-- otherwise: undefined -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccSoleProprietorshipOrPartnershipExclusionAmount">
            <Name>Sole Proprietorship or Partnership Exclusion Amount</Name>
            <Description>
                Exclusion amount coming from Sole Proprietorship or Partnership

                Form 2441, Line 22
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/cdccSomeOfExclusionIsFromSoleProprietorShipOrPartnership"/>
                        </When>
                        <Then>
                            <!--TODO:
              Replace this with sum of the relevant exclusion amounts once available -->
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccExclusionAmountNotFromSoleProprietorshipOrPartnership">
            <Name>ExclusionamountnotfromSoleProprietorshiporPartnership</Name>
            <Description>
                Exclusion amount not from Sole Proprietorship or Partnership

                Form 2441, Line 23
            </Description>
            <Export mef="true"/>

            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency path="/cdccAdjustedDependentCareBenefitsAmount"/>
                    </Minuend>
                    <Subtrahends>
                        <Dependency path="/cdccSoleProprietorshipOrPartnershipExclusionAmount"/>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/cdccDeductibleBenefitsAmount">
            <Name>DeductibleBenefitsAmount</Name>
            <Description>
                DeductibleBenefitsAmount

                Form 2441, Line 24
            </Description>
            <Export mef="true"/>

            <Derived>
                <LesserOf>
                    <Dependency path="/cdccSoleProprietorshipOrPartnershipExclusionAmount"/>
                    <Dependency path="/cdccSpecifiedExclusionAmount"/>
                    <Dependency path="/cdccMaximumExclusion"/>
                </LesserOf>
            </Derived>
        </Fact>
        <Fact path="/cdccExcludedBenefitsAmount">
            <Name>Excluded Benefits amount</Name>
            <Description>
                Excluded Benfits Amount
                As we are not supporting sole proprietorship, this is always the smaller of
                line 20, and line 21


                Form 2441, Line 25
            </Description>
            <Export mef="true"/>

            <Derived>
                <LesserOf>
                    <Dependency path="/cdccSpecifiedExclusionAmount"/>
                    <Dependency path="/cdccTentativeExclusionAmount"/>
                </LesserOf>
            </Derived>
        </Fact>
        <Fact path="/cdccTaxableBenefits">
            <Name>Taxable Benefits Amount</Name>
            <Description>
                The amount of benefits that are subject to tax.

                Form 2441, Line 26
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="cdcc" path="/hasReportedDependentCareBenefits"/>
                        </When>
                        <Then>
                            <GreaterOf>
                                <Dollar>0</Dollar>
                                <Subtract>
                                    <Minuend>
                                        <Dependency path="/cdccExclusionAmountNotFromSoleProprietorshipOrPartnership"/>
                                    </Minuend>
                                    <Subtrahends>
                                        <Dependency path="/cdccExcludedBenefitsAmount"/>
                                    </Subtrahends>
                                </Subtract>
                            </GreaterOf>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccSumOfDeductibleAndExcludedBenefitsAmount">
            <Name>Sum of Deductible and Excluded Benefits Amount</Name>
            <Description>
                Sum of Deductible and Excluded Benefits Amount

                Form 2441, Line 28
            </Description>
            <Export mef="true"/>

            <Derived>
                <Add>
                    <Dependency path="/cdccDeductibleBenefitsAmount"/>
                    <Dependency path="/cdccExcludedBenefitsAmount"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/hasCdccNonZeroSumOfDeductibleAndExcludedBenefitsAmount">
            <Description>Line 28 (Sum of deductible and excluded benefits amount) is more than zero</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/cdccSumOfDeductibleAndExcludedBenefitsAmount"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/cdccNetAllowableAmount">
            <Name>Net Allowable Amount</Name>
            <Description>
                Net Allowable Amount - If zero or less, you can't take the credit, unless you paid 2022
                expenses in
                2023.
                Form 2441, Line 29
            </Description>
            <Export mef="true"/>

            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency path="/form2441Line27ExpenseCap"/>
                    </Minuend>
                    <Subtrahends>
                        <Dependency path="/cdccSumOfDeductibleAndExcludedBenefitsAmount"/>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/cdccPotentialCdccIsZeroOrLessDueToExclusionBenefits">
            <Name>Potential CDCC is Zero or Less</Name>
            <Description>The potential CDCC amount is zero, because of dependent care benefits</Description>
            <!-- If tp paid TY-1 expenses in TY, they are knocked out currently.  -->

            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="/cdccNetAllowableAmount"/>
                    </IsComplete>
                    <LessThanOrEqual>
                        <Left>
                            <Dependency path="/cdccNetAllowableAmount"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </LessThanOrEqual>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccSmallerOfTotalQualifyingExpensesAmount">
            <Name>Smaller Of Total Qualifying Expenses Amount</Name>
            <Description>
                Smaller Of Total Qualifying Expenses Amount

                Form 2441, Line 31
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <LesserOf>
                    <Dependency path="/cdccNetAllowableAmount"/>
                    <Dependency path="/cdccUncappedQualifyingExpenses"/>
                </LesserOf>
            </Derived>
        </Fact>
        <Fact path="/cdccMaxClaimableExpenseWithOneQP">
            <Name>Maximum Claimable Expense With One Qualifying Person</Name>
            <Derived>
                <Dollar>3000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/cdccMaxClaimableExpenseWithTwoQP">
            <Name>Maximum Claimable Expense With Two or More Qualifying Persons</Name>
            <Derived>
                <Dollar>6000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/cdccMaxAllowedCreditWithOneQP">
            <Name>Maximum Allowed Credit With One Qualifying Person</Name>
            <Derived>
                <Dollar>1050</Dollar>
            </Derived>
        </Fact>
        <Fact path="/cdccMaxAllowedCreditWithTwoQP">
            <Name>Maximum Allowed Credit With Two or More Qualifying Persons</Name>
            <Derived>
                <Dollar>2100</Dollar>
            </Derived>
        </Fact>
        <Fact path="/cdccMinAllowedPercentageTY2024">
            <Name>Minimum Allowed Percentage for Tax Year 2024</Name>
            <Derived>
                <Int>20</Int>
            </Derived>
        </Fact>
        <Fact path="/cdccMaxAllowedPercentageTY2024">
            <Name>Maximum Allowed Percentage for Tax Year 2024</Name>
            <Derived>
                <Int>35</Int>
            </Derived>
        </Fact>
        <Fact path="/flowQualifiedExpenses">
            <Description>
                Qualified expenses reported by the tp that excludes employer benefits OR the total qualified
                expense
                for all qps
                when the tp did not have any benefits. Used to gate where the special income rule knockout
                flow shows
                (Dependent Care Benefit or Credit section)
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/hasReportedDependentCareBenefits"/>
                        </When>
                        <Then>
                            <Dependency path="/cdccTotalQualifiedDependentCareExpenses"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/cdccUncappedQualifyingExpenses"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/cdccLowerOfEarnedIncomeForBenefits">
            <Name>Lower of earned income for benefits</Name>
            <Description>Lower of earned income for benefits, handles all filing statuses, includes combat pay if
                elected
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency module="income" path="/cdccEarnedIncomePrimaryFilerLine18"/>
                                <Dependency module="income" path="/cdccEarnedIncomeSecondaryFilerPartIII"/>
                            </LesserOf>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency module="income" path="/cdccEarnedIncomePrimaryFilerLine18"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/specialEarnedIncomeFlowRequirementsSansIncomeAndFilingStatus">
            <Description>Determines whether to show screens to gather info to determine knockout if TP or
                spouse are a student
                or disabled. Used in credit and benefits section
            </Description>

            <Derived>
                <All>
                    <Any>
                        <Dependency module="filers" path="/primaryFiler/isStudentOrDisabled"/>
                        <Dependency module="filers" path="/secondaryFiler/isStudentOrDisabled"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/showSpecialEarnedIncomeKnockoutFlowInBenefits">
            <Description>Whether to show the special income knockout flow in the dependent care benefits
                subsection
            </Description>
            <Derived>
                <All>
                    <Dependency path="/specialEarnedIncomeFlowRequirementsSansIncomeAndFilingStatus"/>
                    <Any>
                        <All>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                            <GreaterThan>
                                <Left>
                                    <Dependency path="/cdccMaximumExclusionForNonMFS"/>
                                </Left>
                                <Right>
                                    <Dependency path="/cdccLowerOfEarnedIncomeForBenefits"/>
                                </Right>
                            </GreaterThan>
                        </All>
                        <All>
                            <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                            <Not>
                                <Dependency module="filers" path="/mfsButEligibleForCdcc"/>
                            </Not>
                            <GreaterThan>
                                <Left>
                                    <Dependency path="/cdccMaximumExclusionForMFS"/>
                                </Left>
                                <Right>
                                    <Dependency module="income" path="/cdccEarnedIncomePrimaryFilerLine18"/>
                                </Right>
                            </GreaterThan>
                        </All>
                    </Any>
                    <Dependency path="/hasReportedDependentCareBenefits"/>
                    <GreaterThan>
                        <Left>
                            <Dependency path="/flowQualifiedExpenses"/>
                        </Left>
                        <Right>
                            <Dependency path="/cdccLowerOfEarnedIncomeForBenefits"/>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/showSpecialEarnedIncomeKnockoutFlowInCredits">
            <Description>Whether to show the special income knockout flow in the credits subsection</Description>
            <Derived>
                <All>
                    <Dependency path="/specialEarnedIncomeFlowRequirementsSansIncomeAndFilingStatus"/>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <GreaterThan>
                        <Left>
                            <Dependency path="/cdccQualifyingExpenseCap"/>
                        </Left>
                        <Right>
                            <Dependency path="/lowerOfCdccEarnedIncomeMfj"/>
                        </Right>
                    </GreaterThan>
                    <Not>
                        <Dependency path="/showSpecialEarnedIncomeKnockoutFlowInBenefits"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/monthlyIncomeForStudentOrDisabledWithOneQualifyingPerson">
            <Description>Amount per month designated as income for a tp who was a student or disabled with
                one CDCC qualifying
                person
            </Description>

            <Derived>
                <Dollar>250</Dollar>
            </Derived>
        </Fact>
        <Fact path="/monthlyIncomeForStudentOrDisabledWithMoreThanOneQualifyingPerson">
            <Description>Amount per month as a student or disabled designated as income for a tp who was a
                student or disabled
                with more than one CDCC qualifying person
            </Description>

            <Derived>
                <Dollar>500</Dollar>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerMadeLessThanDisabledOrStudentMonthlyIncome">
            <Description>Whether the TP made less than the allocated income amount in any months they were
                a student or unable
                to care for themself
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/secondaryFilerMadeLessThanDisabledOrStudentMonthlyIncome">
            <Description>Whether the spouse made less than the allocated income amount in any months they
                were a student or
                unable to care for themself
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/showEarnedIncomeRuleTp2">
            <Description>Whether to show the earned income rule question to the spouse</Description>

            <Derived>
                <All>
                    <Any>
                        <Dependency path="/showSpecialEarnedIncomeKnockoutFlowInBenefits"/>
                        <Dependency path="/showSpecialEarnedIncomeKnockoutFlowInCredits"/>
                    </Any>
                    <Any>
                        <All>
                            <Dependency module="filers" path="/primaryFiler/isStudentOrDisabled"/>
                            <IsComplete>
                                <Dependency path="/primaryFilerMadeLessThanDisabledOrStudentMonthlyIncome"/>
                            </IsComplete>
                            <Not>
                                <Dependency path="/primaryFilerMadeLessThanDisabledOrStudentMonthlyIncome"/>
                            </Not>
                        </All>
                        <Not>
                            <Dependency module="filers" path="/primaryFiler/isStudentOrDisabled"/>
                        </Not>
                    </Any>
                    <Dependency module="filers" path="/secondaryFiler/isStudentOrDisabled"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/knockoutStudentOrDisabled">
            <Description>Whether to knock out a tp who (or whose spouse) was a student or disabled based
                on earned income rule
            </Description>
            <Derived>
                <All>
                    <Any>
                        <Dependency path="/showSpecialEarnedIncomeKnockoutFlowInBenefits"/>
                        <Dependency path="/showSpecialEarnedIncomeKnockoutFlowInCredits"/>
                    </Any>
                    <Any>
                        <Dependency path="/primaryFilerMadeLessThanDisabledOrStudentMonthlyIncome"/>
                        <Dependency path="/secondaryFilerMadeLessThanDisabledOrStudentMonthlyIncome"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/neitherTpEarnedLessThanSpecialEarnedIncomeMax">
            <Description>When a filer or spouse is a student or disabled and neither earned less than
                $250($500) in a
                corresponding month
            </Description>

            <Derived>
                <All>
                    <Any>
                        <Dependency path="/showSpecialEarnedIncomeKnockoutFlowInBenefits"/>
                        <Dependency path="/showSpecialEarnedIncomeKnockoutFlowInCredits"/>
                    </Any>
                    <Not>
                        <All>
                            <Dependency path="/primaryFilerMadeLessThanDisabledOrStudentMonthlyIncome"/>
                            <IsComplete>
                                <Dependency path="/primaryFilerMadeLessThanDisabledOrStudentMonthlyIncome"/>
                            </IsComplete>
                        </All>
                    </Not>
                    <Not>
                        <All>
                            <Dependency path="/secondaryFilerMadeLessThanDisabledOrStudentMonthlyIncome"/>
                            <IsComplete>
                                <Dependency path="/secondaryFilerMadeLessThanDisabledOrStudentMonthlyIncome"/>
                            </IsComplete>
                        </All>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/eitherFilerHasLessEarnedIncomeThanExpenses">
            <Derived>
                <Any>
                    <LessThan>
                        <Left>
                            <Dependency module="income" path="/cdccPrimaryEarnedIncomeWithCombatPayForCredits"/>
                        </Left>
                        <Right>
                            <Dependency path="/cdccSmallerOfTotalQualifyingExpensesAmount"/>
                        </Right>
                    </LessThan>
                    <LessThan>
                        <Left>
                            <Dependency module="income" path="/cdccSecondaryEarnedIncomeWithCombatPayForCredits"/>
                        </Left>
                        <Right>
                            <Dependency path="/cdccSmallerOfTotalQualifyingExpensesAmount"/>
                        </Right>
                    </LessThan>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutBenefitsDistribution">
            <Description>
                Knockout for when taxable dependent care benefits need to be distributed between filers to get the
                max possible credit
            </Description>
            <Derived>
                <All>
                    <!-- There are two filers between which the taxable benefits may potentially be split -->
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Any>
                        <Dependency path="/hasReportedCarryOverAmountFromPriorTaxYear"/>
                        <All>
                            <Dependency path="/hasReportedPrimaryFilerDependentCareBenefits"/>
                            <Dependency path="/hasReportedSecondaryFilerDependentCareBenefits"/>
                        </All>
                    </Any>
                    <!-- There are benefits to be split -->
                    <GreaterThan>
                        <Left>
                            <Dependency path="/cdccTaxableBenefits"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                    <!-- The maximum credit cannot be obtained without this calculation -->
                    <Dependency path="/eitherFilerHasLessEarnedIncomeThanExpenses"/>
                    <Dependency module="income" path="/cdccMaximumCreditRequiresUnsupportedCalculation"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccShouldIncludeQualifyingPersonsStatement">
            <Derived>
                <All>
                    <Dependency path="/cdccHasMoreThanThreeQualifyingPersons"/>
                    <Dependency path="/shouldSubmitForm2441"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hasTaxableDependentCareBenefits">
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/cdccTaxableBenefits"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/cdccShouldBeAskedAboutMaxExclusion">
            <Description>
                Whether or not the filer should be asked about their maximum employer exclusion if they have reported
                dependent care
                benefits, and have qualifying people in the first place.
            </Description>

            <Derived>
                <All>
                    <Dependency path="/hasReportedDependentCareBenefits"/>
                    <Dependency path="/cdccHasQualifyingPersons"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccWorksheetANotRequired">
            <Description>
                Whether or not the filer should see the 'worksheet-a-not-required' screen in the flow.
            </Description>

            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="/knockoutCdccWorksheetA"/>
                    </IsComplete>
                    <Not>
                        <Dependency path="/knockoutCdccWorksheetA"/>
                    </Not>
                    <Dependency path="/cdccClaimedCreditForPriorYearExpenses"/>
                    <Dependency path="/cdccClaimedMaxCreditForPriorTaxYear"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cdccQpExpensesRemain">
            <Derived>
                <GreaterThan>
                    <Left>
                        <Add>
                            <CollectionSize>
                                <Filter module="familyAndHousehold" path="/cdccQualifyingPeople">
                                    <Not>
                                        <IsComplete>
                                            <Dependency module="familyAndHousehold" path="cdccExpensesCollected"/>
                                        </IsComplete>
                                    </Not>
                                </Filter>
                            </CollectionSize>
                            <CollectionSize>
                                <Filter module="filers" path="/cdccQualifyingFilers">
                                    <Not>
                                        <IsComplete>
                                            <Dependency module="filers" path="cdccExpensesCollected"/>
                                        </IsComplete>
                                    </Not>
                                </Filter>
                            </CollectionSize>
                        </Add>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/flowCdccKnockout">
            <Description>The user has been knocked out for reasons(s) defined in this module</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Any>
                    <Dependency path="/knockoutStudentOrDisabled"/>
                    <Dependency path="/flowKnockoutBenefitsDistribution"/>
                    <Dependency path="/knockoutCdccWorksheetA"/>
                    <Dependency path="/flowKnockoutHouseholdEmployee"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/w2NonstandardCorrectedOptions">
            <Name>Form W2 Nonstandard and/or Corrected Options</Name>
            <Description>Options for the filer to say whether a W2 is nonstandard, corrected, both, or
                neither
            </Description>
            <Derived>
                <EnumOptions>
                    <String>nonstandard</String>
                    <String>corrected</String>
                    <String>both</String>
                    <String>neither</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/w2Box12CodeOptions">
            <Name>Form W-2 Box 12 codes options</Name>
            <Description>Options for form type</Description>
            <Derived>
                <EnumOptions>
                    <String>uncollectedOasdiTaxOnTips</String>
                    <String>uncollectedMedicareTaxOnTips</String>
                    <String>taxableLifeInsuranceOver50k</String>
                    <String>401kDeferrals</String>
                    <String>403bDeferrals</String>
                    <String>sarsepDeferrals</String>
                    <String>457bDeferrals</String>
                    <String>501c18Deferrals</String>
                    <String>nontaxableSickPay</String>
                    <String>goldenParachuteExciseTax</String>
                    <String>expenseReimbursements</String>
                    <String>uncollectedOasdiTaxOnLifeInsuranceOver50k</String>
                    <String>uncollectedMedicareTaxOnLifeInsuranceOver50k</String>
                    <String>armedForcesMovingExpenses</String>
                    <String>writableCombatPay</String>
                    <String>archerMsaContributions</String>
                    <String>simpleContributions</String>
                    <String>adoptionBenefits</String>
                    <String>nsoIncome</String>
                    <String>employerHsaContributions</String>
                    <String>409aDeferrals</String>
                    <String>nqdcDeferrals</String>
                    <String>roth401kContributions</String>
                    <String>roth403bContributions</String>
                    <String>healthCoverageCost</String>
                    <String>roth457bContributions</String>
                    <String>qsehraBenefits</String>
                    <String>83iIncome</String>
                    <String>83iDeferrals</String>
                    <String>nonTaxableMedicaidWaiverPayments</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/box14NYCodeOptions">
            <Name>Box 14 New York Code Options</Name>
            <Description>The codes New York requires for box 14</Description>
            <Derived>
                <EnumOptions>
                    <String>hasOtherBox14Code</String>
                    <String>414_H</String>
                    <String>414_H_CU</String>
                    <String>414H</String>
                    <String>414HCU</String>
                    <String>414HSUB</String>
                    <String>ADDITIONAL_MEDICARE_TAX</String>
                    <String>ERS</String>
                    <String>ERSNYSRE</String>
                    <String>ERSRETCO</String>
                    <String>IRC125S</String>
                    <String>MEDICARE_TAX</String>
                    <String>NYRET</String>
                    <String>NYSERS</String>
                    <String>NYSRETCO</String>
                    <String>PUBRET</String>
                    <String>RET</String>
                    <String>RETDEF</String>
                    <String>RETMT</String>
                    <String>RETSH</String>
                    <String>RETSM</String>
                    <String>RETSUM</String>
                    <String>RRTA_COMPENSATION</String>
                    <String>TIER_1_TAX</String>
                    <String>TIER_2_TAX</String>
                    <String>TIER3RET</String>
                    <String>TIER4</String>
                    <String>TIER4RET</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/box14MDCodeOptions">
            <Name>Box 14 Maryland Code Options</Name>
            <Description>The codes Maryland requires for box 14</Description>
            <Derived>
                <EnumOptions>
                    <String>hasOtherBox14Code</String>
                    <String>ADDITIONAL_MEDICARE_TAX</String>
                    <String>MEDICARE_TAX</String>
                    <String>RRTA_COMPENSATION</String>
                    <String>TIER_1_TAX</String>
                    <String>TIER_2_TAX</String>
                    <String>BOX14_MD_STPICKUP</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/BOX14_MD_STPICKUP">
            <Name>Box 14 code BOX14_MD_STPICKUP</Name>
            <Description>Box 14 code BOX14_MD_STPICKUP, used by Maryland</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/BOX14_MD_STPICKUPNeeded">
            <Name>Box 14 code BOX14_MD_STPICKUP needed</Name>
            <Description>Box 14 code BOX14_MD_STPICKUP, used by Maryland</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../BOX14_MD_STPICKUP"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/BOX14_MD_STPICKUPRounded">
            <Name>Box 14 code BOX14_MD_STPICKUP</Name>
            <Description>Box 14 code BOX14_MD_STPICKUP, used by Maryland</Description>
            <Export mef="true"/>


            <Derived>
                <Round>
                    <Dependency path="../BOX14_MD_STPICKUP"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/box14NJCodeOptions">
            <Name>Box 14 New Jersey Code Options</Name>
            <Description>The codes New Jersey requires for box 14</Description>
            <Derived>
                <EnumOptions>
                    <String>hasOtherBox14Code</String>
                    <String>ADDITIONAL_MEDICARE_TAX</String>
                    <String>BOX14_NJ_FLI</String>
                    <String>MEDICARE_TAX</String>
                    <String>RRTA_COMPENSATION</String>
                    <String>TIER_1_TAX</String>
                    <String>TIER_2_TAX</String>
                    <String>BOX14_NJ_UIHCWD</String>
                    <String>BOX14_NJ_UIWFSWF</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/BOX14_NJ_FLI">
            <Name>Box 14 code BOX14_NJ_FLI</Name>
            <Description>Box 14 code BOX14_NJ_FLI, used by New Jersey</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/BOX14_NJ_FLINeeded">
            <Name>Box 14 code BOX14_NJ_FLI needed</Name>
            <Description>Box 14 code BOX14_NJ_FLI, used by New Jersey</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../BOX14_NJ_FLI"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/BOX14_NJ_FLIRounded">
            <Name>Box 14 code BOX14_NJ_FLI</Name>
            <Description>Box 14 code BOX14_NJ_FLI, used by New Jersey</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../BOX14_NJ_FLI"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/BOX14_NJ_UIHCWD">
            <Name>Box 14 code BOX14_NJ_UIHCWD</Name>
            <Description>Box 14 code BOX14_NJ_UIHCWD, used by New Jersey</Description>
            <Export stateSystems="true"/>


            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/BOX14_NJ_UIHCWDNeeded">
            <Name>Box 14 code BOX14_NJ_UIHCWD needed</Name>
            <Description>Box 14 code BOX14_NJ_UIHCWD, used by New Jersey</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../BOX14_NJ_UIHCWD"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/BOX14_NJ_UIHCWDRounded">
            <Name>Box 14 code BOX14_NJ_UIHCWD</Name>
            <Description>Box 14 code BOX14_NJ_UIHCWD, used by New Jersey</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../BOX14_NJ_UIHCWD"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/BOX14_NJ_UIWFSWF">
            <Name>Box 14 code BOX14_NJ_UIWFSWF</Name>
            <Description>Box 14 code BOX14_NJ_UIWFSWF, used by New Jersey</Description>
            <Export stateSystems="true"/>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/BOX14_NJ_UIWFSWFNeeded">
            <Name>Box 14 code BOX14_NJ_UIWFSWF needed</Name>
            <Description>Box 14 code BOX14_NJ_UIWFSWF, used by New Jersey</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../BOX14_NJ_UIWFSWF"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/BOX14_NJ_UIWFSWFRounded">
            <Name>Box 14 code BOX14_NJ_UIWFSWF</Name>
            <Description>Box 14 code BOX14_NJ_UIWFSWF, used by New Jersey</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../BOX14_NJ_UIWFSWF"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/w2MinAmount">
            <Name>W2 Minimum Amount</Name>
            <Description>The minimum amount of pay before an employer needs to issue a W2</Description>
            <Derived>
                <Dollar>600</Dollar>
            </Derived>
        </Fact>
        <Fact path="/maxMFSMedicareWages">
            <Name>Maximum Medicare Wages for an MFS Filer</Name>
            <Description>The maximum medicare wages (W-2 Box 5) a MFS filer might have without possibly
                needing to pay
                Additional Medicare Tax
            </Description>
            <Derived>
                <Dollar>125000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/maxMFJMedicareWages">
            <Name>Maximum Medicare Wages for an MRJ Filer</Name>
            <Description>The maximum medicare wages (W-2 Box 5) a MFS filer might have without possibly
                needing to pay
                Additional Medicare Tax
            </Description>
            <Derived>
                <Dollar>250000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/maxNonMFSorMFJMedicareWages">
            <Name>Maximum Medicare Wages for non-MFS Filer</Name>
            <Description>The maximum medicare wages (W-2 Box 5) filers with a status other than MFS might
                have without
                possibly
                needing to pay Additional Medicare Tax
            </Description>
            <Derived>
                <Dollar>200000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/maxIndividualMedicareWages">
            <Name>Maximum Medicare Wages for non-MFS Filer</Name>
            <Description>The maximum medicare wages (W-2 Box 5) any individual on a return could have
                before needing to pay
                Additonal Medicare Tax
            </Description>
            <Derived>
                <Dollar>200000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/maxOasdiWagesOnMultipleW2sForOnePerson">
            <Name>Maximum Social Security Wages On Multiple W2s for one person</Name>
            <Description>The limit of Social Security Wages that one filer can have across multiple W2s
                before they might be
                entitely to a refund on social security payments.
                https://www.ssa.gov/oact/cola/cbb.html
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>168600</Dollar>
            </Derived>
        </Fact>
        <Fact path="/formW2s">
            <Name>Form W-2s</Name>
            <Description>Form W-2: Wage and Tax Statement, used to report wage income and withholding.</Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Collection/>
            </Writable>
        </Fact>
        <Fact path="/formW2sIsDone">
            <Name>formW2s is Done</Name>
            <Description>The user has clicked "Done" for their formW2s</Description>
            <Export downstreamFacts="true"/>
            <Writable>
                <Boolean/>
            </Writable>
            <Placeholder>
                <False/>
            </Placeholder>
        </Fact>
        <Fact path="/primaryFilerHasIncompleteFormW2s">
            <Name>At least one of Primary Filer's Form W2s are incomplete</Name>
            <Description>Whether at least one of Primary Filer's Form W2s are incomplete</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <All>
                                <Dependency path="/formW2s/*/belongsToPrimaryFiler"/>
                                <Not>
                                    <Dependency path="/formW2s/*/isComplete"/>
                                </Not>
                            </All>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerHasIncompleteFormW2s">
            <Name>At least one of Secondary Filer's Form W2s are incomplete</Name>
            <Description>Whether at least one of Secondary Filer's Form W2s are incomplete</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <All>
                                <Dependency path="/formW2s/*/belongsToSecondaryFiler"/>
                                <Not>
                                    <Dependency path="/formW2s/*/isComplete"/>
                                </Not>
                            </All>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasW2s">
            <Name>Has W-2s</Name>
            <Description>Whether the TP has any W2s listed</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/formW2s"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/xmlHasW2s">
            <Name>Has W-2s</Name>
            <Description>Whether the TP has any W2s listed. This fact will either be true or empty.</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="formW2s" path="/hasW2s"/>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutAllocatedTips">
            <Name>Knockout Due to W2 Income</Name>
            <Description>At least one W2 has a set of facts that cause a knockout</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/formW2s/*/causesAllocatedTipsKO"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutStatutoryEmployee">
            <Name>Knockout Due to Being Statutory Employee</Name>
            <Description>The TP requires statutory employee forms that we don't support</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/formW2s/*/statutoryEmployee"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutThirdPartySickPay">
            <Name>Knockout Due to Third Party Sick Pay</Name>
            <Description>The TP requires third party sick pay forms that we don't support</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/formW2s/*/thirdPartySickPay"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/flowStateToolNeedsBox14">
            <Name>The filer(s) lives in a state that requests Box 14 data</Name>
            <Description>Whether we ask about the contents of box 14 because the integrated state
                tool needs it.
            </Description>

            <Derived>
                <Any>
                    <Dependency module="filers" path="/livedInMd"/>
                    <Dependency module="filers" path="/livedInNj"/>
                    <Dependency module="filers" path="/livedInNy"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/hasRRTACodesInBox14">
            <Name>Has RRTA codes in Box 14</Name>

            <Derived>
                <All>
                    <GreaterThan>
                        <Left>
                            <Count>
                                <All>
                                    <Dependency path="../hasRRTACodes"/>
                                    <Dependency path="../hasBox14Codes"/>
                                </All>
                            </Count>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutHasRRTACodesInBox14NotInNY">
            <Name>Knockout Due to having RRTA codes in Box 14</Name>
            <Description>Knockout Due to having RRTA codes in Box 14</Description>
            <Derived>
                <All>
                    <GreaterThan>
                        <Left>
                            <CollectionSize>
                                <Filter path="/formW2s">
                                    <Dependency path="hasRRTACodesInBox14"/>
                                </Filter>
                            </CollectionSize>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                    <Not>
                        <Dependency module="filers" path="/livedInNy"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/medicareWagesAdditionalTaxThreshhold">
            <Name>Medicare Wages Additonal Tax Threshhold</Name>
            <Description>The filing-status based threshold at which a filer might need to pay aditional
                medicare taxes and
                thereby requires form 8959
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                        </When>
                        <Then>
                            <Dependency path="/maxMFSMedicareWages"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <Dependency path="/maxMFJMedicareWages"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/maxNonMFSorMFJMedicareWages"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/knockoutMedicareWages">
            <Name>Knockout if Medicare Wages Great Than Max for filing status</Name>
            <Description>Knockout the filer if their total medicare wages are above the limit for their
                filing status that
                might necessitate form 8959
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <Dependency path="/anyFilerExceedsEligibleForMedicareWagesCredit"/>
                    <GreaterThan>
                        <Left>
                            <Dependency path="/formW2totalMedicareWages"/>
                        </Left>
                        <Right>
                            <Dependency path="/medicareWagesAdditionalTaxThreshhold"/>
                        </Right>
                    </GreaterThan>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerExceedsMaxOasdiWages">
            <Name>Primary Filer Exceeds Max Social Security Wages</Name>
            <Description>Does the primary filer have Great Than 1 W-2 and social security wages over the
                limit that might
                entitle them to a socail security refund?
            </Description>
            <Derived>
                <All>
                    <!-- Does the primary filer have multiple W2s -->
                    <GreaterThan>
                        <Left>
                            <Dependency path="/primaryFilerW2sCount"/>
                        </Left>
                        <Right>
                            <Int>1</Int>
                        </Right>
                    </GreaterThan>

                    <!--  AND do they exceed the income limit? -->
                    <GreaterThan>
                        <Left>
                            <Dependency path="/primaryFilerTotalOasdiWagesForKnockout"/>
                        </Left>
                        <Right>
                            <Dependency path="/maxOasdiWagesOnMultipleW2sForOnePerson"/>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerExceedsMaxOasdiWages">
            <Name>Secondary Filer Exceeds Max Social Security Wages</Name>
            <Description>Does the primary filer have Greater Than 1 W-2 and social security wages over the
                limit that might
                entitle them to a socail security refund?
            </Description>
            <Derived>
                <All>
                    <!-- Does the primary filer have multiple W2s -->
                    <GreaterThan>
                        <Left>
                            <Dependency path="/secondaryFilerW2sCount"/>
                        </Left>
                        <Right>
                            <Int>1</Int>
                        </Right>
                    </GreaterThan>

                    <!--  AND do they exceed the income limit? -->
                    <GreaterThan>
                        <Left>
                            <Dependency path="/secondaryFilerTotalOasdiWagesForKnockout"/>
                        </Left>
                        <Right>
                            <Dependency path="/maxOasdiWagesOnMultipleW2sForOnePerson"/>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/anyFilerExceedsMaxOasdiWages">
            <Name>Any Filer Exceeds Social Security Wages</Name>
            <Description>Does either filer have Greater Than 1 W-2 and social security wages over the
                limit that might entitle
                them to a social security refund?
            </Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Any>
                    <Dependency path="/primaryFilerExceedsMaxOasdiWages"/>
                    <Dependency path="/secondaryFilerExceedsMaxOasdiWages"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/flowKnockoutNonQualifiedPlans">
            <Description>At least one W2 has non-qualified plan values</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/formW2s/*/causesNonQualifiedPlansKO"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/hasSeenLastAvailableScreen">
            <Name>Has Seen last available screen</Name>
            <Description>Whether the user has seen the last available scren for this W2.</Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/isComplete">
            <Name>Is Complete</Name>
            <Description>Whether the W2 is complete</Description>

            <Derived>
                <All>
                    <!-- Sometimes our final screens are optional, so we check that you've seen them rather
            than checking that you've filled them out-->
                    <Dependency path="../hasSeenLastAvailableScreen"/>
                    <IsComplete>
                        <Dependency path="../ein"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../employerName"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../employerAddress"/>
                    </IsComplete>
                    <!-- We explicitly check that you have filled out wages and withholding, since they have
            downstream effects and can't be placeholders -->
                    <IsComplete>
                        <Dependency path="../wages"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../federalWithholding"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../isCorrected"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../isNonstandard"/>
                    </IsComplete>
                    <!-- We need a TIN set -->
                    <IsComplete>
                        <Dependency path="../usedTin"/>
                    </IsComplete>

                    <!-- Is the address set -->
                    <Any>
                        <Dependency path="../addressMatchesReturn"/>
                        <All>
                            <Not>
                                <Dependency path="../addressMatchesReturn"/>
                            </Not>
                            <IsComplete>
                                <Dependency path="../addressOverride"/>
                            </IsComplete>
                        </All>
                    </Any>

                    <!-- We've clarified gov vs. nongov 457(b) if an amount was provided -->
                    <Any>
                        <Not>
                            <IsComplete>
                                <Dependency path="../457bDeferralsNeeded"/>
                            </IsComplete>
                        </Not>
                        <Not>
                            <Dependency path="../457bDeferralsNeeded"/>
                        </Not>
                        <IsComplete>
                            <Dependency path="../457bIsGovernmentalPlan"/>
                        </IsComplete>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hasW2ValidationErrors">
            <Description>
                Any W-2 has a validation error that should block submission until fixed
            </Description>

            <BlockSubmissionOnTrue/>

            <Derived>
                <Any>
                    <GreaterThan>
                        <Left>
                            <Count>
                                <Any>
                                    <Dependency path="/formW2s/*/box17GreaterThanBox16"/>
                                    <Dependency path="/formW2s/*/hasStateWagesWithoutStateCode"/>
                                    <Dependency path="/formW2s/*/box19GreaterThanBox18"/>
                                </Any>
                            </Count>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/oneAndOnlyW2">
            <Description>The w2 when there's only one</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/filersHaveExactlyOneW2"/>
                        </When>
                        <Then>
                            <IndexOf>
                                <Collection>
                                    <Dependency module="formW2s" path="/formW2s"/>
                                </Collection>
                                <Index>
                                    <Int>0</Int>
                                </Index>
                            </IndexOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/filersHaveExactlyOneW2">
            <Description>The taxpayer (and spouse) has only one W2. Used for logic in Care provider
                screens.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Equal>
                    <Left>
                        <CollectionSize>
                            <Dependency path="/formW2s"/>
                        </CollectionSize>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/filer">
            <Name>Employee</Name>
            <Description>The taxpayer who received the W-2.</Description>

            <Writable>
                <CollectionItem collection="/filers"/>
            </Writable>
            <Placeholder>
                <Dependency module="filers" path="/primaryFiler"/>
            </Placeholder>
        </Fact>
        <Fact path="/formW2s/*/tin">
            <Name>Employee's overwritten TIN</Name>
            <Description>This is written to when the user has a non-SSN TIN which are not allowed on a W2.
                Previously we were
                always using this value instead of ../usedTin
            </Description>

            <Writable>
                <TIN allowAllZeros="true"/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/usedTin">
            <Name>TIN associated with the form W2</Name>
            <Description>The actual TIN that is used and associated with the W2</Description>
            <Export mef="true" stateSystems="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../flowFilerTinIsSsn"/>
                        </When>
                        <Then>
                            <Dependency module="filers" path="../filer/tin"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="../tin"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/flowFilerTinIsSsn">
            <Name>Flow variable for choosing TIN-related screens</Name>
            <Description>Whether the TIN of this W2's filer is an SSN.</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Not>
                                <Dependency module="filingStatus" path="/treatAsMFJ"/>
                            </Not>
                        </When>
                        <Then>
                            <Dependency module="filers" path="/primaryFiler/tin/isSSN"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency module="filers" path="../filer/tin/isSSN"/>
                        </Then>
                    </Case>

                </Switch>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/ein">
            <Name>Employer identification number</Name>
            <Description>Box b of Form W-2, employer identification number (EIN).</Description>
            <Export mef="true"/>

            <Writable>
                <EIN/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/employerName">
            <Name>Employer's name</Name>
            <Description>The employer's name as appears in box c of Form W-2.</Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <String/>
                <Limit type="Match">
                    <!-- N.B. This is not the same regex as employer name line 2! Slashes are not allowed on
          line 1 -->
                    <String>(([A-Za-z0-9#\-\(\)]|&amp;|')\s?)*([A-Za-z0-9#\-\(\)]|&amp;|')</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>75</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/mefEmployerNameLine1">
            <Name>MeF Employer Name</Name>
            <Description>Employer Name transformed for MeF. This may be removed next year, but right now
                exists to transform
                any data that existed from before we applied limits to ../employerName
            </Description>
            <Export mef="true"/>

            <Derived>
                <Trim>
                    <StripChars>
                        <Input>
                            <Dependency path="../employerName"/>
                        </Input>
                        <Allow>
                            <Dependency module="mefTypes" path="/mefBusinessNameLine1Type"/>
                        </Allow>
                    </StripChars>
                </Trim>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/writableEmployerNameLine2">
            <Name>Employer's name line 2</Name>
            <Description>The employer's name as appears in line 2 box c of Form W-2. This is the writable
                optional fact. Can
                be
                left incomplete.Please use the derived fact in downstream calculations
            </Description>
            <Export mef="true"/>

            <Writable>
                <String/>
                <Limit type="MaxLength">
                    <Int>75</Int>
                </Limit>
                <Limit type="Match">
                    <!-- N.B. This is not the same regex as employer name line 1! Slashes are allowed on line
          2 -->
                    <String>(([A-Za-z0-9#/%\-\(\)]|&amp;|')\s?)*([A-Za-z0-9#/%\-\(\)]|&amp;|')</String>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/employerAddress">
            <Name>Employer's address</Name>
            <Description>The employer's address as appears in box c of Form W-2.</Description>
            <Export mef="true"/>

            <Writable>
                <Address/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/mefEmployerAddressZip">
            <Name>Employer's address zip in MeF Format</Name>
            <Description>The employer's address zip, with hyphens and spaces stripped for MeF compliance</Description>
            <Export mef="true"/>
            <Derived>
                <Trim>
                    <StripChars>
                        <Input>
                            <Dependency path="../employerAddress/postalCode"/>
                        </Input>
                        <Allow>
                            <Dependency module="mefTypes" path="/mefZipCodeType"/>
                        </Allow>
                    </StripChars>
                </Trim>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/suffix">
            <Name>Employee's suffix</Name>
            <Description>The employee's suffix as appears in box e of Form W-2.

                TODO: Enable placeholders to be written a
                normal derived facts
            </Description>

            <Writable>
                <String/>
            </Writable>

        </Fact>
        <Fact path="/formW2s/*/addressMatchesReturn">
            <Name>Address on W-2 is same as tax return</Name>
            <Description>Whether Box f of Form W-2 contains the same address as the tax return.</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/addressOverride">
            <Name>Employee's address, if it doesn't match the one on the return</Name>
            <Description>Box f of Form W-2, employee's address and ZIP code override field, likely to be
                incomplete
            </Description>
            <Writable>
                <Address/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/address">
            <Name>Employee's address</Name>
            <Description>Box f of Form W-2, employee's address and ZIP code override field</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../addressMatchesReturn"/>
                        </When>
                        <Then>
                            <Dependency module="filers" path="/address"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Not>
                                <Dependency path="../addressMatchesReturn"/>
                            </Not>
                        </When>
                        <Then>
                            <Dependency path="../addressOverride"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/mefAddressZip">
            <Name>Employee's address zip in MeF Format</Name>
            <Description>The employee's address ZIP code, with hyphens and spaces stripped for MeF
                compliance
            </Description>
            <Export mef="true"/>
            <Derived>
                <Trim>
                    <StripChars>
                        <Input>
                            <Dependency path="../address/postalCode"/>
                        </Input>
                        <Allow>
                            <Dependency module="mefTypes" path="/mefZipCodeType"/>
                        </Allow>
                    </StripChars>
                </Trim>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/writableWages">
            <Name>Wages</Name>
            <Description>Box 1 of Form W-2, wages, tips, and other compensation. This is the writable
                optional fact. Can be
                left incomplete. Please use the derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/wages">
            <Name>Wages</Name>
            <Description>Box 1 of Form W-2, wages, tips, and other compensation.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <IsComplete>
                                    <Dependency path="../writableWages"/>
                                </IsComplete>
                            </When>
                            <Then>
                                <Dependency path="../writableWages"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/writableFederalWithholding">
            <Name>Federal income tax withheld</Name>
            <Description>Box 2 of Form W-2, Federal income tax withheld.

                This is the writable optional fact. Can be left
                incomplete. Please use the derived fact in downstream calculations.
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/federalWithholding">
            <Name>Federal income tax withheld</Name>
            <Description>Box 2 of Form W-2, Federal income tax withheld.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <IsComplete>
                                    <Dependency path="../writableFederalWithholding"/>
                                </IsComplete>
                            </When>
                            <Then>
                                <Dependency path="../writableFederalWithholding"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/writableOasdiWages">
            <Name>Social Security Wages</Name>
            <Description>Box 3 of Form W-2, social security wages.

                This is the writable optional fact. Can be left incomplete.
                Please use the derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/oasdiWages">
            <Name>Social security wages</Name>
            <Description>Box 3 of Form W-2, social security wages. Includes non-taxable income, and
                excludes income that
                exceeds the wage cap.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <IsComplete>
                                    <Dependency path="../writableOasdiWages"/>
                                </IsComplete>
                            </When>
                            <Then>
                                <Dependency path="../writableOasdiWages"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/oasdiWagesForKnockoutCalculation">
            <Description>We knockout filers who have multiple W-2s that sum to
                maxOasdiWagesOnMultipleW2sForOnePerson. To
                prevent filers who have multiple W-2s that don't all have social security wages, we only
                look at the first
                maxOasdiWagesOnMultipleW2sForOnePerson per W-2. So, this fact returns the either oasdiWages
                or
                maxOasdiWagesOnMultipleW2sForOnePerson, whichever is lower
            </Description>
            <Derived>
                <LesserOf>
                    <Dependency path="../oasdiWages"/>
                    <Dependency path="/maxOasdiWagesOnMultipleW2sForOnePerson"/>
                </LesserOf>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/writableOasdiWithholding">
            <Name>Social Security Tax Withheld</Name>
            <Description>Box 4 of Form W-2, social security tax withheld. This is the writable optional
                fact. Can be left
                incomplete. Please use the derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/oasdiWithholding">
            <Name>Social security tax withheld</Name>
            <Description>Box 4 of Form W-2, social security tax withheld.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <IsComplete>
                                    <Dependency path="../writableOasdiWithholding"/>
                                </IsComplete>
                            </When>
                            <Then>
                                <Dependency path="../writableOasdiWithholding"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/writableMedicareWages">
            <Name>Medicare Wages</Name>
            <Description>Box 5 of Form W-2, Medicare wages and tips. This is the writable optional fact.
                Can be left
                incomplete. Please use the derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/medicareWages">
            <Name>Medicare wages</Name>
            <Description>Box 5 of Form W-2, Medicare wages and tips. Includes non-taxable income.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <IsComplete>
                                    <Dependency path="../writableMedicareWages"/>
                                </IsComplete>
                            </When>
                            <Then>
                                <Dependency path="../writableMedicareWages"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2totalMedicareWages">
            <Name>Total Medicare Wages</Name>
            <Description>The sum of all medicare wages across Form W-2s</Description>
            <Derived>
                <CollectionSum>
                    <Dependency path="/formW2s/*/medicareWages"/>
                </CollectionSum>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerMedicareWages">
            <Description>Medicare Wages for the primary filer</Description>
            <Derived>
                <CollectionSum>
                    <Dependency path="/primaryFilerW2s/*/medicareWages"/>
                </CollectionSum>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerMedicareWages">
            <Description>Medicare wages for the secondary filer</Description>
            <Derived>
                <CollectionSum>
                    <Dependency path="/secondaryFilerW2s/*/medicareWages"/>
                </CollectionSum>
            </Derived>
        </Fact>
        <Fact path="/anyFilerExceedsEligibleForMedicareWagesCredit">
            <Description>Is any filer on the return over the limit that would qualify them for a credit
                for their medicare
                payments. Note this would only trigger if the filers are MFJ, since for non-MFJ filers, the
                limit would trigger
                anyway
            </Description>
            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <Any>
                        <GreaterThan>
                            <Left>
                                <Dependency path="/primaryFilerMedicareWages"/>
                            </Left>
                            <Right>
                                <Dependency path="/maxIndividualMedicareWages"/>
                            </Right>
                        </GreaterThan>
                        <GreaterThan>
                            <Left>
                                <Dependency path="/secondaryFilerMedicareWages"/>
                            </Left>
                            <Right>
                                <Dependency path="/maxIndividualMedicareWages"/>
                            </Right>
                        </GreaterThan>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/anyFilerRequiredToPayExtraMedicareTax">
            <Description>
                Is any filer over the medicare tax threshhold such that they'd qualify for a refund of some
                of the
                medicare tax they paid.
            </Description>
            <Derived>
                <All>
                    <Dependency path="/knockoutMedicareWages"/>
                    <Any>
                        <Not>
                            <IsComplete>
                                <Dependency path="/anyFilerExceedsEligibleForMedicareWagesCredit"/>
                            </IsComplete>
                        </Not>
                        <Not>
                            <Dependency path="/anyFilerExceedsEligibleForMedicareWagesCredit"/>
                        </Not>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/maxMedicareWagesForAnyFilerOnReturn">
            <Description>The highest medicare wages a single person on the return recieved</Description>
            <Derived>
                <GreaterOf>
                    <Dependency path="/primaryFilerMedicareWages"/>
                    <Dependency path="/secondaryFilerMedicareWages"/>
                </GreaterOf>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/writableMedicareWithholding">
            <Name>Medicare Tax Withheld</Name>
            <Description>Box 6 of Form W-2, Medicare tax withheld. This is the writable optional fact. Can
                be left incomplete.
                Please use the derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/medicareWithholding">
            <Name>Medicare tax withheld</Name>
            <Description>Box 6 of Form W-2, Medicare tax withheld.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <IsComplete>
                                    <Dependency path="../writableMedicareWithholding"/>
                                </IsComplete>
                            </When>
                            <Then>
                                <Dependency path="../writableMedicareWithholding"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/writableOasdiTips">
            <Name>Social Security Tips</Name>
            <Description>Box 7 of Form W-2, social security tips. This is the writable optional fact. Can
                be left incomplete.
                Please use the derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/oasdiTips">
            <Name>Social security tips</Name>
            <Description>Box 7 of Form W-2, social security tips.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <IsComplete>
                                    <Dependency path="../writableOasdiTips"/>
                                </IsComplete>
                            </When>
                            <Then>
                                <Dependency path="../writableOasdiTips"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/writableAllocatedTips">
            <Name>Allocated Tips</Name>
            <Description>Box 8 of Form W-2, allocated tips.
                This is the writable optional fact. Can be left incomplete. Please
                use the derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/allocatedTips">
            <Name>Allocated tips</Name>
            <Description>Box 8 of Form W-2, allocated tips. You may have an amount here if you receive
                tips at your job, but
                the amount of tips you reported falls below a certain percentage of food and drink sales
                (typically 8%).
                Allocated tips will need to be included as unreported tip income, unless you have adequate
                records to show that
                you received less than the allocated amount.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <IsComplete>
                                    <Dependency path="../writableAllocatedTips"/>
                                </IsComplete>
                            </When>
                            <Then>
                                <Dependency path="../writableAllocatedTips"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/causesAllocatedTipsKO">
            <Name>W2 Scope Knockout</Name>
            <Description>Information on this W2 knocks the filer out of scope</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../allocatedTips"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2WithAllocatedTips">
            <Name>The "first" W2 with allocated tips</Name>
            <Derived>
                <IndexOf>
                    <Collection>
                        <Filter path="/formW2s">
                            <Dependency path="causesAllocatedTipsKO"/>
                        </Filter>
                    </Collection>
                    <Index>
                        <Int>0</Int>
                    </Index>
                </IndexOf>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/causesDependentCareBenefitsKO">
            <Name>W2 Scope Knockout</Name>
            <Description>Information on this W2 knocks the filer out of scope</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../dependentCareBenefits"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/causesNonQualifiedPlansKO">
            <Description>W2 Scope Knockout for Box 11 (nonqualified plans)</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../nonQualifiedPlans"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/writableDependentCareBenefits">
            <Name>Writable Dependent Care Benefits</Name>
            <Description>Box 10 of Form W-2, dependent care benefits.

                This is the writable optional fact. Can be left
                incomplete. Please use the derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/dependentCareBenefits">
            <Name>Dependent care benefits</Name>
            <Description>Box 10 of Form W-2, dependent care benefits. Amounts over $5,000 are included in
                box 1. Requires Form
                2441, Child and Dependent Care Expenses to determine the taxable amount.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableDependentCareBenefits"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../writableDependentCareBenefits"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerDependentCareBenefits">
            <Name>All primary filer dependent care benefits</Name>
            <Description>
                The sum of Box 10 of all primary filers form W-2s, dependent care benefits. Used for form
                2441, Child
                and Dependent Care Expenses to determine the taxable amount.
            </Description>

            <Derived>
                <Round>
                    <CollectionSum>
                        <Dependency path="/primaryFilerW2s/*/dependentCareBenefits"/>
                    </CollectionSum>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerDependentCareBenefits">
            <Name>All secondary filer dependent care benefits</Name>
            <Description>
                The sum of Box 10 of all secondary filers form W-2s, dependent care benefits. Used for form
                2441,
                Child and Dependent Care Expenses to determine the taxable amount.
            </Description>

            <Derived>
                <Round>
                    <CollectionSum>
                        <Dependency path="/secondaryFilerW2s/*/dependentCareBenefits"/>
                    </CollectionSum>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/writableNonQualifiedPlans">
            <Name>Non-qualified Plans</Name>
            <Description>Box 11 of Form W-2, non-qualified plans.

                This is the writable optional fact. Can be left incomplete.
                Please use the derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/nonQualifiedPlans">
            <Name>Non-qualified plans</Name>
            <Description>Box 11 of Form W-2, non-qualified plans. These are retirement plans not covered
                by the Employee
                Retirement Income Security Act (ERISA). This compensation is excluded from box 1, but it is
                included in FICA
                wages.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <IsComplete>
                                    <Dependency path="../writableNonQualifiedPlans"/>
                                </IsComplete>
                            </When>
                            <Then>
                                <Dependency path="../writableNonQualifiedPlans"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/normalizedRounded401kDeferrals">
            <Description>Rounded 401k deferrals values if they exist or 0, used so that we can easily sum</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../401kDeferrals"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../401kDeferralsRounded"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/normalizedRounded403bDeferrals">
            <Description>Rounded 403b deferrals values if they exist or 0, used so that we can easily sum</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../403bDeferrals"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../403bDeferralsRounded"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/normalizedRoundedSarsepDeferrals">
            <Description>Rounded SARSEP deferrals values if they exist or 0, used so that we can easily
                sum
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../sarsepDeferrals"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../sarsepDeferralsRounded"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/normalizedRounded457bDeferrals">
            <Description>Rounded 457b deferrals values if they exist or 0, used so that we can easily sum</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../457bDeferrals"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../457bDeferralsRounded"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/normalizedRounded501c18Deferrals">
            <Description>Rounded 501(c)(18)(D) deferrals values if they exist or 0, used so that we can
                easily sum
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../501c18Deferrals"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../501c18DeferralsRounded"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/normalizedRoundedSimpleContributions">
            <Description>Rounded SIMPLE contribution values if they exist or 0, used so that we can easily
                sum
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../simpleContributions"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../simpleContributionsRounded"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/normalizedRoundedRoth401kContributions">
            <Description>Rounded Roth 401k contribution values if they exist or 0, used so that we can
                easily sum
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../roth401kContributions"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../roth401kContributionsRounded"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/normalizedRoundedRoth403bContributions">
            <Description>Rounded Roth 403b contribution values if they exist or 0, used so that we can
                easily sum
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../roth403bContributions"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../roth403bContributionsRounded"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/normalizedRoundedRoth457bContributions">
            <Description>Rounded Roth 457b contribution values if they exist or 0, used so that we can
                easily sum
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../roth457bContributions"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="../roth457bContributionsRounded"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/totalDeferralsAndContributions">
            <Description>Summation of all deferrals and contributions, used as part of the calculation for
                Form 8880 Line 2
            </Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Add>
                    <Dependency path="../normalizedRounded401kDeferrals"/>
                    <Dependency path="../normalizedRounded403bDeferrals"/>
                    <Dependency path="../normalizedRoundedSarsepDeferrals"/>
                    <!-- Only include Code G if it is a governmental 457(b) plan-->
                    <Switch>
                        <Case>
                            <When>
                                <All>
                                    <IsComplete>
                                        <Dependency path="../457bIsGovernmentalPlan"/>
                                    </IsComplete>
                                    <Dependency path="../457bIsGovernmentalPlan"/>
                                </All>
                            </When>
                            <Then>
                                <Dependency path="../normalizedRounded457bDeferrals"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                    <Dependency path="../normalizedRounded501c18Deferrals"/>
                    <Dependency path="../normalizedRoundedSimpleContributions"/>
                    <Dependency path="../normalizedRoundedRoth401kContributions"/>
                    <Dependency path="../normalizedRoundedRoth403bContributions"/>
                    <Dependency path="../normalizedRoundedRoth457bContributions"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/457bIsGovernmentalPlan">
            <Name>457(b) is governmental plan</Name>
            <Description>The 457(b) plan to which the filer contributed is a governmental 457(b).</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/hasInputBox12Codes">
            <Name>Filer has input Box 12 Codes for this W2</Name>
            <Description>Whether filer has input any box 12 codes for this W2</Description>

            <Derived>
                <Any>
                    <IsComplete>
                        <Dependency path="../uncollectedOasdiTaxOnTips"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../uncollectedMedicareTaxOnTips"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../taxableLifeInsuranceOver50k"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../401kDeferrals"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../403bDeferrals"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../sarsepDeferrals"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../457bDeferrals"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../501c18Deferrals"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../nontaxableSickPay"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../goldenParachuteExciseTax"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../expenseReimbursements"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../uncollectedOasdiTaxOnLifeInsuranceOver50k"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../uncollectedMedicareTaxOnLifeInsuranceOver50k"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../armedForcesMovingExpenses"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../writableCombatPay"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../archerMsaContributions"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../simpleContributions"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../adoptionBenefits"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../nsoIncome"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../employerHsaContributions"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../409aDeferrals"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../nqdcDeferrals"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../roth401kContributions"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../roth403bContributions"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../healthCoverageCost"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../roth457bContributions"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../qsehraBenefits"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../83iIncome"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../83iDeferrals"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../nonTaxableMedicaidWaiverPayments"/>
                    </IsComplete>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/writableHasBox12Codes">
            <Name>W2 has Box 12 Codes</Name>
            <Description>Whether this W2 has any codes or amounts in box 12</Description>

            <Writable>
                <Boolean/>
            </Writable>

            <Placeholder>
                <!-- We only want to set a placeholder if the user has already seen the last screen -->
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../hasSeenLastAvailableScreen"/>
                        </When>
                        <Then>
                            <Dependency path="../hasInputBox12Codes"/>
                        </Then>
                    </Case>
                </Switch>
            </Placeholder>
        </Fact>
        <Fact path="/formW2s/*/hasBox12Codes">
            <Name>W2 has Box 12 Codes</Name>
            <Description>Whether this W2 has any codes or amounts in box 12</Description>

            <Derived>
                <Any>
                    <Dependency path="../hasInputBox12Codes"/>
                    <Dependency path="../writableHasBox12Codes"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/writableBox12Code">
            <Name>Flow variable for Box 12 codes.</Name>
            <Description>The Box 12 code currently selected in the UI.</Description>

            <Writable>
                <Enum optionsPath="/w2Box12CodeOptions"/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/uncollectedOasdiTaxOnTips">
            <Name>Uncollected social security or RRTA tax on tips</Name>
            <Description>Box 12, code A.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/uncollectedOasdiTaxOnTipsNeeded">
            <Name>Uncollected social security or RRTA tax on tips needed</Name>
            <Description>Box 12, code A.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../uncollectedOasdiTaxOnTips"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/uncollectedOasdiTaxOnTipsRounded">
            <Name>Uncollected social security or RRTA tax on tips</Name>
            <Description>Box 12, code A.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../uncollectedOasdiTaxOnTips"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/uncollectedMedicareTaxOnTips">
            <Name>Uncollected Medicare tax on tips (but not Additional Medicare Tax)</Name>
            <Description>Box 12, code B.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/uncollectedMedicareTaxOnTipsNeeded">
            <Name>Uncollected Medicare tax on tips (but not Additional neededMedicare Tax)</Name>
            <Description>Box 12, code B.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../uncollectedMedicareTaxOnTips"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/uncollectedMedicareTaxOnTipsRounded">
            <Name>Uncollected Medicare tax on tips (but not Additional Medicare Tax)</Name>
            <Description>Box 12, code B.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../uncollectedMedicareTaxOnTips"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/taxableLifeInsuranceOver50k">
            <Name>Taxable cost of group-term life insurance over $50,000</Name>
            <Description>Box 12, code C.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/taxableLifeInsuranceOver50kNeeded">
            <Name>Taxable cost of group-term life insurance over $50 needed,000</Name>
            <Description>Box 12, code C.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../taxableLifeInsuranceOver50k"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/taxableLifeInsuranceOver50kRounded">
            <Name>Taxable cost of group-term life insurance over $50,000</Name>
            <Description>Box 12, code C.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../taxableLifeInsuranceOver50k"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/401kDeferrals">
            <Name>Elective deferrals under a section 401(k) cash or deferred arrangement plan (including a
                SIMPLE
                401(k)arrangement)
            </Name>
            <Description>Box 12, code D.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/401kDeferralsNeeded">
            <Name>Elective deferrals under a section needed401(k) cash or deferred arrangement plan
                (including a SIMPLE
                401(k)arrangement)
            </Name>
            <Description>Box 12, code D.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../401kDeferrals"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/401kDeferralsRounded">
            <Name>Elective deferrals under a section 401(k) cash or deferred arrangement plan (including a
                SIMPLE 401(k)
                arrangement)
            </Name>
            <Description>Box 12, code D.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../401kDeferrals"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/403bDeferrals">
            <Name>Elective deferrals under a section 403(b) salary Q reduction agreement</Name>
            <Description>Box 12, code E.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/403bDeferralsNeeded">
            <Name>Elective deferrals under a section needed401(k) cash or deferred arrangement plan
                (including a SIMPLE
                401(k)arrangement)
            </Name>
            <Description>Box 12, code D.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../403bDeferrals"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/403bDeferralsRounded">
            <Name>Elective deferrals under a section 403(b) salary Q reduction agreement</Name>
            <Description>Box 12, code E.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../403bDeferrals"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/sarsepDeferrals">
            <Name>Elective deferrals under a section 408(k)(6) salary reduction SEP</Name>
            <Description>Box 12, code F.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/sarsepDeferralsNeeded">
            <Name>Elective deferrals under a section 408 needed(k)(6) salary reduction SEP</Name>
            <Description>Box 12, code F.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../sarsepDeferrals"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/sarsepDeferralsRounded">
            <Name>Elective deferrals under a section 408(k)(6) salary reduction SEP</Name>
            <Description>Box 12, code F.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../sarsepDeferrals"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/457bDeferrals">
            <Name>Elective deferrals and employer contributions (including nonelective deferrals) to a
                section 457(b) deferred
                compensation plan
            </Name>
            <Description>Box 12, code G.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/457bDeferralsNeeded">
            <Name>Elective deferrals and employer contributions (including nonelective deferrals) to a
                section 457(b) deferred
                compensation plan
            </Name>
            <Description>Box 12, code G.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../457bDeferrals"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/457bDeferralsRounded">
            <Name>Elective deferrals and employer contributions (including nonelective deferrals) to a
                section 457(b) deferred
                compensation plan
            </Name>
            <Description>Box 12, code G.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../457bDeferrals"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/501c18Deferrals">
            <Name>Elective deferrals to a section 501(c)(18)(D) tax-exempt organization plan</Name>
            <Description>Box 12, code H. (Only 6% of employers who use this code actually contributed to a
                501(c)(18) plan.)
            </Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/501c18DeferralsNeeded">
            <Name>Elective deferrals to a section 501(c needed)(18)(D) tax-exempt organization plan</Name>
            <Description>Box 12, code H. (Only 6% of employers who use this code actually contributed to a
                501(c)(18) plan.)
            </Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../501c18Deferrals"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/501c18DeferralsRounded">
            <Name>Elective deferrals to a section 501(c)(18)(D) tax-exempt organization plan</Name>
            <Description>Box 12, code H. (Only 6% of employers who use this code actually contributed to a
                501(c)(18) plan.)
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../501c18Deferrals"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/nontaxableSickPay">
            <Name>Nontaxable sick pay</Name>
            <Description>Box 12, code J.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/nontaxableSickPayNeeded">
            <Name>Nontaxable sick pay</Name>
            <Description>Box 12, code J.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../nontaxableSickPay"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/nontaxableSickPayRounded">
            <Name>Nontaxable sick pay</Name>
            <Description>Box 12, code J.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../nontaxableSickPay"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/goldenParachuteExciseTax">
            <Name>20% excise tax on excess golden parachute payments</Name>
            <Description>Box 12, code K.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/goldenParachuteExciseTaxNeeded">
            <Name>20% excise tax on excess golden parachute payments needed</Name>
            <Description>Box 12, code K.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../goldenParachuteExciseTax"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/goldenParachuteExciseTaxRounded">
            <Name>20% excise tax on excess golden parachute payments</Name>
            <Description>Box 12, code K.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../goldenParachuteExciseTax"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/expenseReimbursements">
            <Name>Substantiated employee business expense reimbursements</Name>
            <Description>Box 12, code L.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/expenseReimbursementsNeeded">
            <Name>Substantiated employee business expense reimbursements needed</Name>
            <Description>Box 12, code L.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../expenseReimbursements"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/expenseReimbursementsRounded">
            <Name>Substantiated employee business expense reimbursements</Name>
            <Description>Box 12, code L.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../expenseReimbursements"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/uncollectedOasdiTaxOnLifeInsuranceOver50k">
            <Name>Uncollected social security or RRTA tax on taxable cost of group-term life insurance
                over $50,000 (former
                employees only)
            </Name>
            <Description>Box 12, code M.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/uncollectedOasdiTaxOnLifeInsuranceOver50kNeeded">
            <Name>Uncollected social security or RRTA tax on taxable cost of group needed-term life
                insurance over $50,000
                (former employees only)
            </Name>
            <Description>Box 12, code M.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../uncollectedOasdiTaxOnLifeInsuranceOver50k"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/uncollectedOasdiTaxOnLifeInsuranceOver50kRounded">
            <Name>Uncollected social security or RRTA tax on taxable cost of group-term life insurance
                over $50,000 (former
                employees only)
            </Name>
            <Description>Box 12, code M.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../uncollectedOasdiTaxOnLifeInsuranceOver50k"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/uncollectedMedicareTaxOnLifeInsuranceOver50k">
            <Name>Uncollected Medicare tax on taxable cost of group-term life insurance over $50,000 (but
                not Additional
                Medicare Tax) (former employees only)
            </Name>
            <Description>Box 12, code N.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/uncollectedMedicareTaxOnLifeInsuranceOver50kNeeded">
            <Name>Uncollected Medicare tax on taxable cost of group-term life insurance over $50,000 (but
                not Additional
                Medicare Tax) (former employees only)
            </Name>
            <Description>Box 12, code N.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../uncollectedMedicareTaxOnLifeInsuranceOver50k"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/uncollectedMedicareTaxOnLifeInsuranceOver50kRounded">
            <Name>Uncollected Medicare tax on taxable cost of group-term life insurance over $50,000 (but
                not Additional
                Medicare Tax) (former employees only)
            </Name>
            <Description>Box 12, code N.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../uncollectedMedicareTaxOnLifeInsuranceOver50k"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/armedForcesMovingExpenses">
            <Name>Excludable moving expense reimbursements paid directly to members of the Armed Forces</Name>
            <Description>Box 12, code P.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/armedForcesMovingExpensesNeeded">
            <Name>Excludable moving expense reimbursements paid directly needed to members of the Armed
                Forces
            </Name>
            <Description>Box 12, code P.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../armedForcesMovingExpenses"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/armedForcesMovingExpensesRounded">
            <Name>Excludable moving expense reimbursements paid directly to members of the Armed Forces</Name>
            <Description>Box 12, code P.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../armedForcesMovingExpenses"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/knockoutBox12Code">
            <Name>Knockout Box 12 Code</Name>
            <Description>Which of the box 12 codes that can knock a filer out have a positive value. Used
                to give the filer
                information which code knocked them out (and stays incomplete if the filer doesn't have a
                code that knocks them
                out)
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../uncollectedMedicareTaxOnLifeInsuranceOver50k"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../uncollectedMedicareTaxOnLifeInsuranceOver50k"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <Enum optionsPath="/w2Box12CodeOptions">uncollectedMedicareTaxOnLifeInsuranceOver50k</Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../nqdcDeferrals"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../nqdcDeferrals"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <Enum optionsPath="/w2Box12CodeOptions">nqdcDeferrals</Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../adoptionBenefits"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../adoptionBenefits"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <Enum optionsPath="/w2Box12CodeOptions">adoptionBenefits</Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../expenseReimbursements"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../expenseReimbursements"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <Enum optionsPath="/w2Box12CodeOptions">expenseReimbursements</Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../archerMsaContributions"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../archerMsaContributions"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <Enum optionsPath="/w2Box12CodeOptions">archerMsaContributions</Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../sarsepDeferrals"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../sarsepDeferrals"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <Enum optionsPath="/w2Box12CodeOptions">sarsepDeferrals</Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../goldenParachuteExciseTax"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../goldenParachuteExciseTax"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <Enum optionsPath="/w2Box12CodeOptions">goldenParachuteExciseTax</Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../uncollectedOasdiTaxOnTips"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../uncollectedOasdiTaxOnTips"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <Enum optionsPath="/w2Box12CodeOptions">uncollectedOasdiTaxOnTips</Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../uncollectedOasdiTaxOnLifeInsuranceOver50k"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../uncollectedOasdiTaxOnLifeInsuranceOver50k"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <Enum optionsPath="/w2Box12CodeOptions">uncollectedOasdiTaxOnLifeInsuranceOver50k</Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../uncollectedMedicareTaxOnTips"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../uncollectedMedicareTaxOnTips"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <Enum optionsPath="/w2Box12CodeOptions">uncollectedMedicareTaxOnTips</Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../armedForcesMovingExpenses"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../armedForcesMovingExpenses"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <Enum optionsPath="/w2Box12CodeOptions">armedForcesMovingExpenses</Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../nontaxableSickPay"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../nontaxableSickPay"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <Enum optionsPath="/w2Box12CodeOptions">nontaxableSickPay</Enum>
                        </Then>
                    </Case>

                    <Case>
                        <!-- NOTE: if you remove this KO be sure to add the XML mapping to IRSW2 in the code generator support it (the 2025 schema does support II yet) -->
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../nonTaxableMedicaidWaiverPayments"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../nonTaxableMedicaidWaiverPayments"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <Enum optionsPath="/w2Box12CodeOptions">nonTaxableMedicaidWaiverPayments</Enum>
                        </Then>
                    </Case>

                </Switch>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/hasBox12KnockoutCode">
            <Name>Box 12 Knockout</Name>
            <Description>Do any of the codes for box 12 that can knock a tax payer out have a positive
                value
            </Description>
            <Derived>
                <IsComplete>
                    <Dependency path="../knockoutBox12Code"/>
                </IsComplete>
            </Derived>
        </Fact>
        <Fact path="/formW2sWithBox12KnockoutCodes">
            <Description>A collection of W2s that have a Box 12 code we knockout</Description>
            <Derived>
                <Filter path="/formW2s">
                    <Dependency path="hasBox12KnockoutCode"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/formW2WithBox12Knockout">
            <Description>The "first" W2 that has a Box 12 code that knocks you out</Description>
            <Derived>
                <IndexOf>
                    <Collection>
                        <Dependency path="/formW2sWithBox12KnockoutCodes"/>
                    </Collection>
                    <Index>
                        <Int>0</Int>
                    </Index>
                </IndexOf>
            </Derived>
        </Fact>
        <Fact path="/knockoutForBox12Value">
            <Name>Has a Box 12 Value We Knockout</Name>
            <Description>Has the filer entered a W2 with any of the Box 12 codes we knockout</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/formW2s/*/hasBox12KnockoutCode"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/hasBox12HsaWCode">
            <Name>Filer has input code W HSA contribution in Box 12 for this W2</Name>
            <Description>Whether filer has code W HSA contribution in Box 12 for this W2</Description>
            <Derived>
                <IsComplete>
                    <Dependency path="../employerHsaContributions"/>
                </IsComplete>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/hasBox12HsaContributionsAndDependent">
            <Name>W2 belongs to filer which can be claimed as dependent and has HSA contributions in Box
                12
            </Name>
            <Description>The W2 belongs to filer which can be claimed ad dependent and code W is entered
                in Box 12
            </Description>
            <Derived>
                <All>
                    <Dependency module="filers" path="../filer/canBeClaimed"/>
                    <Dependency path="../hasBox12HsaWCode"/>
                    <GreaterThan>
                        <Left>
                            <Dependency path="../employerHsaContributionsRounded"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/knockoutForBox12Dependency">
            <Name>Knockout when Box 12 has contributions for code W but TP is dependent</Name>
            <Description>Filer has entered W2 contributions for HSA in Box 12 and has dependency status</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/formW2s/*/hasBox12HsaContributionsAndDependent"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/hasInputBox14Codes">
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filers" path="/livedInNy"/>
                        </When>
                        <Then>
                            <Any>
                                <IsComplete>
                                    <Dependency path="../hasOtherBox14Code"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../414_H"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../414_H_CU"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../414H"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../414HCU"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../414HSUB"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../ADDITIONAL_MEDICARE_TAX"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../ERS"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../ERSNYSRE"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../ERSRETCO"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../IRC125S"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../MEDICARE_TAX"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../NYRET"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../NYSERS"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../NYSRETCO"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../PUBRET"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../RET"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../RETDEF"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../RETMT"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../RETSH"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../RETSM"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../RETSUM"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../RRTA_COMPENSATION"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../TIER_1_TAX"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../TIER_2_TAX"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../TIER3RET"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../TIER4"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../TIER4RET"/>
                                </IsComplete>
                            </Any>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filers" path="/livedInMd"/>
                        </When>
                        <Then>
                            <Any>
                                <IsComplete>
                                    <Dependency path="../hasOtherBox14Code"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../ADDITIONAL_MEDICARE_TAX"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../MEDICARE_TAX"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../RRTA_COMPENSATION"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../TIER_1_TAX"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../TIER_2_TAX"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../BOX14_MD_STPICKUP"/>
                                </IsComplete>
                            </Any>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filers" path="/livedInNj"/>
                        </When>
                        <Then>
                            <Any>
                                <IsComplete>
                                    <Dependency path="../hasOtherBox14Code"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../ADDITIONAL_MEDICARE_TAX"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../BOX14_NJ_FLI"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../MEDICARE_TAX"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../RRTA_COMPENSATION"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../TIER_1_TAX"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../TIER_2_TAX"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../BOX14_NJ_UIHCWD"/>
                                </IsComplete>
                                <IsComplete>
                                    <Dependency path="../BOX14_NJ_UIWFSWF"/>
                                </IsComplete>
                            </Any>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/writableHasBox14Codes">
            <Name>W2 has Box 14 Codes</Name>
            <Description>Whether this W2 has any codes or amounts in box 14</Description>

            <Writable>
                <Boolean/>
            </Writable>

            <Placeholder>
                <!-- We only want to set a placeholder if the user has already seen the last screen -->
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="../hasSeenLastAvailableScreen"/>
                        </When>
                        <Then>
                            <Dependency path="../hasInputBox14Codes"/>
                        </Then>
                    </Case>
                </Switch>
            </Placeholder>
        </Fact>
        <Fact path="/formW2s/*/hasBox14Codes">
            <Name>Filer has input Box 14 Codes for this W2</Name>
            <Description>Whether filer has input any box 14 codes for this W2</Description>

            <Derived>
                <Any>
                    <Dependency path="../hasInputBox14Codes"/>
                    <Dependency path="../writableHasBox14Codes"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/mdResidentHasOtherBox14Codes">
            <Name>MD resident has other Box 14 codes</Name>
            <Description>Whether a Maryland resident has indicated they have a Box 14 code
                on their W-2 that is not one of the
                existing options; used to determine whether
                to ask about union dues.
            </Description>

            <Derived>
                <All>
                    <Dependency module="filers" path="/livedInMd"/>
                    <Dependency path="../writableHasBox14Codes"/>
                    <IsComplete>
                        <Dependency path="../hasOtherBox14Code"/>
                    </IsComplete>
                    <Dependency path="../hasOtherBox14Code"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/paidUnionDues">
            <Name>Paid union dues</Name>
            <Description>Whether Box 14 has codes related to dues paid for union membership;
                currently only asked of MD
                residents
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/writableUnionDuesAmount">
            <Name>Amount of union dues paid</Name>
            <Description>The amount from Box 14 of codes related to dues paid for union membership;
                currently only asked of MD
                residents
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/unionDuesAmount">
            <Name>Amount of union dues paid</Name>
            <Description>The amount from Box 14 of codes related to dues paid for union membership;
                currently only asked of MD
                residents. This fact will be incomplete if the taxpayer changes
                prior answers, such as if they say they didn't
                pay union dues or they didn't live in MD.
            </Description>
            <Export stateSystems="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="../mdResidentHasOtherBox14Codes"/>
                                <Dependency path="../paidUnionDues"/>
                            </All>
                        </When>
                        <Then>
                            <Round>
                                <Dependency path="../writableUnionDuesAmount"/>
                            </Round>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/writableBox14Code">
            <Name>Box 14 Code</Name>
            <Description>An enum used to power a fact select for Box 14, used by NY filers</Description>
            <Writable>
                <Enum optionsPath="/box14NYCodeOptions"/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/writableBox14CodeMd">
            <Name>Box 14 Code</Name>
            <Description>An enum used to power a fact select for Box 14, used by MD filers</Description>
            <Writable>
                <Enum optionsPath="/box14MDCodeOptions"/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/writableBox14CodeNj">
            <Name>Box 14 Code</Name>
            <Description>An enum used to power a fact select for Box 14, used by NJ filers</Description>
            <Writable>
                <Enum optionsPath="/box14NJCodeOptions"/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/knockoutBox14NYRRTACode">
            <Name>Knockout Box 14 NY RRTA Code</Name>
            <Description>Which of the box 14 codes that can knock a filer for NY RRTA out have a positive
                value. Used to give
                the filer information which code knocked them out (and stays incomplete if the filer doesn't
                have a code that
                knocks them out)
            </Description>
            <Derived>
                <Switch>

                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../ADDITIONAL_MEDICARE_TAX"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../ADDITIONAL_MEDICARE_TAX"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <Enum optionsPath="/box14NYCodeOptions">ADDITIONAL_MEDICARE_TAX</Enum>
                        </Then>
                    </Case>


                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../MEDICARE_TAX"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../MEDICARE_TAX"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <Enum optionsPath="/box14NYCodeOptions">MEDICARE_TAX</Enum>
                        </Then>
                    </Case>


                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../RRTA_COMPENSATION"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../RRTA_COMPENSATION"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <Enum optionsPath="/box14NYCodeOptions">RRTA_COMPENSATION</Enum>
                        </Then>
                    </Case>


                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../TIER_1_TAX"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../TIER_1_TAX"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <Enum optionsPath="/box14NYCodeOptions">TIER_1_TAX</Enum>
                        </Then>
                    </Case>


                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../TIER_2_TAX"/>
                                </IsComplete>
                                <GreaterThan>
                                    <Left>
                                        <Dependency path="../TIER_2_TAX"/>
                                    </Left>
                                    <Right>
                                        <Dollar>0</Dollar>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <Enum optionsPath="/box14NYCodeOptions">TIER_2_TAX</Enum>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/hasBox14NYRRTAKnockoutCode">
            <Name>Box 14 NY RRTA Knockout</Name>
            <Description>Do any of the codes for box 14 NY RRTA that can knock a tax payer out have a
                positive value
            </Description>
            <Derived>
                <All>
                    <!-- Handle an edit where the user says they don't have box 14 codes-->
                    <Dependency path="../hasBox14Codes"/>
                    <IsComplete>
                        <Dependency path="../knockoutBox14NYRRTACode"/>
                    </IsComplete>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hasABox14NYRRTAValueWeKnockout">
            <Name>Has a Box 14 NY RRTA Value We Knockout</Name>
            <Description>Has the filer entered a W2 with any of the Box 14 codes we knockout</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/formW2s/*/hasBox14NYRRTAKnockoutCode"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2sWithBox14NYRRTAKnockoutCode">
            <Description>A collection of W2s that have a Box 14 code related to yonkers that we knock out</Description>
            <Derived>
                <Filter path="/formW2s">
                    <Dependency path="hasBox14NYRRTAKnockoutCode"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/formW2WithBox14NYRRTAKnockout">
            <Description>The "first" W2 that has a Box 14 Yonkers Knockout Code</Description>
            <Derived>
                <IndexOf>
                    <Collection>
                        <Dependency path="/formW2sWithBox14NYRRTAKnockoutCode"/>
                    </Collection>
                    <Index>
                        <Int>0</Int>
                    </Index>
                </IndexOf>
            </Derived>

        </Fact>
        <Fact path="/formW2s/*/hasOtherBox14Code">
            <Name>Whether the form W2 has an unsupported box 14 code</Name>
            <Description>Whether the form W2 has an unsupported box 14 code</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/414_H">
            <Name>Box 14 code 414_H</Name>
            <Description>Box 14 code 414_H, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/414_HNeeded">
            <Name>Box 14 code 414_H needed</Name>
            <Description>Box 14 code 414_H, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../414_H"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/414_HRounded">
            <Name>Box 14 code 414_H</Name>
            <Description>Box 14 code 414_H, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../414_H"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/414_H_CU">
            <Name>Box 14 code 414_H_CU</Name>
            <Description>Box 14 code 414_H_CU, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/414_H_CUNeeded">
            <Name>Box 14 code 414_H_CU needed</Name>
            <Description>Box 14 code 414_H_CU, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../414_H_CU"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/414_H_CURounded">
            <Name>Box 14 code 414_H_CU</Name>
            <Description>Box 14 code 414_H_CU, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../414_H_CU"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/414H">
            <Name>Box 14 code 414H</Name>
            <Description>Box 14 code 414H, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/414HNeeded">
            <Name>Box 14 code 414H needed</Name>
            <Description>Box 14 code 414H, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../414H"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/414HRounded">
            <Name>Box 14 code 414H</Name>
            <Description>Box 14 code 414H, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../414H"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/414HCU">
            <Name>Box 14 code 414HCU</Name>
            <Description>Box 14 code 414HCU, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/414HCUNeeded">
            <Name>Box 14 code 414HCU needed</Name>
            <Description>Box 14 code 414HCU, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../414HCU"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/414HCURounded">
            <Name>Box 14 code 414HCU</Name>
            <Description>Box 14 code 414HCU, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../414HCU"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/414HSUB">
            <Name>Box 14 code 414HSUB</Name>
            <Description>Box 14 code 414HSUB, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/414HSUBNeeded">
            <Name>Box 14 code 414HSUB needed</Name>
            <Description>Box 14 code 414HSUB, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../414HSUB"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/414HSUBRounded">
            <Name>Box 14 code 414HSUB</Name>
            <Description>Box 14 code 414HSUB, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../414HSUB"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/ADDITIONAL_MEDICARE_TAX">
            <Name>Box 14 code ADDITIONAL_MEDICARE_TAX</Name>
            <Description>Box 14 code ADDITIONAL_MEDICARE_TAX, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/ADDITIONAL_MEDICARE_TAXNeeded">
            <Name>Box 14 code ADDITIONAL_MEDICARE_TAX needed</Name>
            <Description>Box 14 code ADDITIONAL_MEDICARE_TAX, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../ADDITIONAL_MEDICARE_TAX"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/ADDITIONAL_MEDICARE_TAXRounded">
            <Name>Box 14 code ADDITIONAL_MEDICARE_TAX</Name>
            <Description>Box 14 code ADDITIONAL_MEDICARE_TAX, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../ADDITIONAL_MEDICARE_TAX"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/ERS">
            <Name>Box 14 code ERS</Name>
            <Description>Box 14 code ERS, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/ERSNeeded">
            <Name>Box 14 code ERS needed</Name>
            <Description>Box 14 code ERS, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../ERS"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/ERSRounded">
            <Name>Box 14 code ERS</Name>
            <Description>Box 14 code ERS, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../ERS"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/ERSNYSRE">
            <Name>Box 14 code ERSNYSRE</Name>
            <Description>Box 14 code ERSNYSRE, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/ERSNYSRENeeded">
            <Name>Box 14 code ERSNYSRE needed</Name>
            <Description>Box 14 code ERSNYSRE, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../ERSNYSRE"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/ERSNYSRERounded">
            <Name>Box 14 code ERSNYSRE</Name>
            <Description>Box 14 code ERSNYSRE, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../ERSNYSRE"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/ERSRETCO">
            <Name>Box 14 code ERSRETCO</Name>
            <Description>Box 14 code ERSRETCO, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/ERSRETCONeeded">
            <Name>Box 14 code ERSRETCO needed</Name>
            <Description>Box 14 code ERSRETCO, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../ERSRETCO"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/ERSRETCORounded">
            <Name>Box 14 code ERSRETCO</Name>
            <Description>Box 14 code ERSRETCO, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../ERSRETCO"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/IRC125S">
            <Name>Box 14 code IRC125S</Name>
            <Description>Box 14 code IRC125S, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/IRC125SNeeded">
            <Name>Box 14 code IRC125S needed</Name>
            <Description>Box 14 code IRC125S, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../IRC125S"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/IRC125SRounded">
            <Name>Box 14 code IRC125S</Name>
            <Description>Box 14 code IRC125S, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../IRC125S"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/MEDICARE_TAX">
            <Name>Box 14 code MEDICARE_TAX</Name>
            <Description>Box 14 code MEDICARE_TAX, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/MEDICARE_TAXNeeded">
            <Name>Box 14 code MEDICARE_TAX needed</Name>
            <Description>Box 14 code MEDICARE_TAX, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../MEDICARE_TAX"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/MEDICARE_TAXRounded">
            <Name>Box 14 code MEDICARE_TAX</Name>
            <Description>Box 14 code MEDICARE_TAX, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../MEDICARE_TAX"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/NYRET">
            <Name>Box 14 code NYRET</Name>
            <Description>Box 14 code NYRET, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/NYRETNeeded">
            <Name>Box 14 code NYRET needed</Name>
            <Description>Box 14 code NYRET, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../NYRET"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/NYRETRounded">
            <Name>Box 14 code NYRET</Name>
            <Description>Box 14 code NYRET, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../NYRET"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/NYSERS">
            <Name>Box 14 code NYSERS</Name>
            <Description>Box 14 code NYSERS, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/NYSERSNeeded">
            <Name>Box 14 code NYSERS needed</Name>
            <Description>Box 14 code NYSERS, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../NYSERS"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/NYSERSRounded">
            <Name>Box 14 code NYSERS</Name>
            <Description>Box 14 code NYSERS, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../NYSERS"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/NYSRETCO">
            <Name>Box 14 code NYSRETCO</Name>
            <Description>Box 14 code NYSRETCO, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/NYSRETCONeeded">
            <Name>Box 14 code NYSRETCO needed</Name>
            <Description>Box 14 code NYSRETCO, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../NYSRETCO"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/NYSRETCORounded">
            <Name>Box 14 code NYSRETCO</Name>
            <Description>Box 14 code NYSRETCO, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../NYSRETCO"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/PUBRET">
            <Name>Box 14 code PUBRET</Name>
            <Description>Box 14 code PUBRET, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/PUBRETNeeded">
            <Name>Box 14 code PUBRET needed</Name>
            <Description>Box 14 code PUBRET, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../PUBRET"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/PUBRETRounded">
            <Name>Box 14 code PUBRET</Name>
            <Description>Box 14 code PUBRET, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../PUBRET"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/RET">
            <Name>Box 14 code RET</Name>
            <Description>Box 14 code RET, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/RETNeeded">
            <Name>Box 14 code RET needed</Name>
            <Description>Box 14 code RET, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../RET"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/RETRounded">
            <Name>Box 14 code RET</Name>
            <Description>Box 14 code RET, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../RET"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/RETDEF">
            <Name>Box 14 code RETDEF</Name>
            <Description>Box 14 code RETDEF, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/RETDEFNeeded">
            <Name>Box 14 code RETDEF needed</Name>
            <Description>Box 14 code RETDEF, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../RETDEF"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/RETDEFRounded">
            <Name>Box 14 code RETDEF</Name>
            <Description>Box 14 code RETDEF, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../RETDEF"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/RETMT">
            <Name>Box 14 code RETMT</Name>
            <Description>Box 14 code RETMT, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/RETMTNeeded">
            <Name>Box 14 code RETMT needed</Name>
            <Description>Box 14 code RETMT, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../RETMT"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/RETMTRounded">
            <Name>Box 14 code RETMT</Name>
            <Description>Box 14 code RETMT, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../RETMT"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/RETSH">
            <Name>Box 14 code RETSH</Name>
            <Description>Box 14 code RETSH, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/RETSHNeeded">
            <Name>Box 14 code RETSH needed</Name>
            <Description>Box 14 code RETSH, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../RETSH"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/RETSHRounded">
            <Name>Box 14 code RETSH</Name>
            <Description>Box 14 code RETSH, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../RETSH"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/RETSM">
            <Name>Box 14 code RETSM</Name>
            <Description>Box 14 code RETSM, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/RETSMNeeded">
            <Name>Box 14 code RETSM needed</Name>
            <Description>Box 14 code RETSM, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../RETSM"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/RETSMRounded">
            <Name>Box 14 code RETSM</Name>
            <Description>Box 14 code RETSM, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../RETSM"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/RETSUM">
            <Name>Box 14 code RETSUM</Name>
            <Description>Box 14 code RETSUM, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/RETSUMNeeded">
            <Name>Box 14 code RETSUM needed</Name>
            <Description>Box 14 code RETSUM, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../RETSUM"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/RETSUMRounded">
            <Name>Box 14 code RETSUM</Name>
            <Description>Box 14 code RETSUM, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../RETSUM"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/RRTA_COMPENSATION">
            <Name>Box 14 code RRTA_COMPENSATION</Name>
            <Description>Box 14 code RRTA_COMPENSATION, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/RRTA_COMPENSATIONNeeded">
            <Name>Box 14 code RRTA_COMPENSATION needed</Name>
            <Description>Box 14 code RRTA_COMPENSATION, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../RRTA_COMPENSATION"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/RRTA_COMPENSATIONRounded">
            <Name>Box 14 code RRTA_COMPENSATION</Name>
            <Description>Box 14 code RRTA_COMPENSATION, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../RRTA_COMPENSATION"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/TIER_1_TAX">
            <Name>Box 14 code TIER_1_TAX</Name>
            <Description>Box 14 code TIER_1_TAX, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/TIER_1_TAXNeeded">
            <Name>Box 14 code TIER_1_TAX needed</Name>
            <Description>Box 14 code TIER_1_TAX, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../TIER_1_TAX"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/TIER_1_TAXRounded">
            <Name>Box 14 code TIER_1_TAX</Name>
            <Description>Box 14 code TIER_1_TAX, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../TIER_1_TAX"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/TIER_2_TAX">
            <Name>Box 14 code TIER_2_TAX</Name>
            <Description>Box 14 code TIER_2_TAX, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/TIER_2_TAXNeeded">
            <Name>Box 14 code TIER_2_TAX needed</Name>
            <Description>Box 14 code TIER_2_TAX, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../TIER_2_TAX"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/TIER_2_TAXRounded">
            <Name>Box 14 code TIER_2_TAX</Name>
            <Description>Box 14 code TIER_2_TAX, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../TIER_2_TAX"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/TIER3RET">
            <Name>Box 14 code TIER3RET</Name>
            <Description>Box 14 code TIER3RET, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/TIER3RETNeeded">
            <Name>Box 14 code TIER3RET needed</Name>
            <Description>Box 14 code TIER3RET, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../TIER3RET"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/TIER3RETRounded">
            <Name>Box 14 code TIER3RET</Name>
            <Description>Box 14 code TIER3RET, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../TIER3RET"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/TIER4">
            <Name>Box 14 code TIER4</Name>
            <Description>Box 14 code TIER4, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/TIER4Needed">
            <Name>Box 14 code TIER4 needed</Name>
            <Description>Box 14 code TIER4, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../TIER4"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/TIER4Rounded">
            <Name>Box 14 code TIER4</Name>
            <Description>Box 14 code TIER4, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../TIER4"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/TIER4RET">
            <Name>Box 14 code TIER4RET</Name>
            <Description>Box 14 code TIER4RET, used by New York State or City</Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/TIER4RETNeeded">
            <Name>Box 14 code TIER4RET needed</Name>
            <Description>Box 14 code TIER4RET, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../TIER4RET"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/TIER4RETRounded">
            <Name>Box 14 code TIER4RET</Name>
            <Description>Box 14 code TIER4RET, used by New York State or City</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../TIER4RET"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/writableCombatPay">
            <Name>(Writable) Nontaxable combat pay</Name>
            <Description>The user transcribes this value as seen on box 12, code Q of a W-2. Represents
                combat pay. If left
                empty, the W-2 XML that we send to MeF will not have a corresponding EmployersUseCd element.
                Derived
                calculations
                will treat an empty field as 0. Note 1/18/2024: this use to be used directly
                before the zero export
                change.
            </Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/combatPayNeeded">
            <Name>(Writable) Nontaxable combat pay needed</Name>
            <Description>Combat pay needed</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../writableCombatPay"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/combatPay">
            <Name>Nontaxable combat pay</Name>
            <Description>Box 12, code Q. Takes what the user said, but if they have not entered combat
                pay, assumes zero.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <IsComplete>
                                    <Dependency path="../writableCombatPay"/>
                                </IsComplete>
                            </When>
                            <Then>
                                <Dependency path="../writableCombatPay"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/archerMsaContributions">
            <Name>Employer contributions to an Archer MSA</Name>
            <Description>Box 12, code R.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/archerMsaContributionsNeeded">
            <Name>Employer contributions to an Archer MSA</Name>
            <Description>Box 12, code R.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../archerMsaContributions"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/archerMsaContributionsRounded">
            <Name>Employer contributions to an Archer MSA</Name>
            <Description>Box 12, code R.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../archerMsaContributions"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/simpleContributions">
            <Name>Employee salary reduction contributions under a section 408(p) SIMPLE plan</Name>
            <Description>Box 12, code S.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/simpleContributionsNeeded">
            <Name>Employee salary reduction contributions under a section 408(p) SIMPLE plan</Name>
            <Description>Box 12, code S.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../simpleContributions"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/simpleContributionsRounded">
            <Name>Employee salary reduction contributions under a section 408(p) SIMPLE plan</Name>
            <Description>Box 12, code S.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../simpleContributions"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/adoptionBenefits">
            <Name>Adoption benefits</Name>
            <Description>Box 12, code T.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/adoptionBenefitsNeeded">
            <Name>Adoption benefits</Name>
            <Description>Box 12, code T.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../adoptionBenefits"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/adoptionBenefitsRounded">
            <Name>Adoption benefits</Name>
            <Description>Box 12, code T.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../adoptionBenefits"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/nsoIncome">
            <Name>Income from exercise of nonstatutory stock option(s)</Name>
            <Description>Box 12, code V.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/nsoIncomeNeeded">
            <Name>Income from exercise of nonstatutory stock option(s)</Name>
            <Description>Box 12, code V.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../nsoIncome"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/nsoIncomeRounded">
            <Name>Income from exercise of nonstatutory stock option(s)</Name>
            <Description>Box 12, code V.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../nsoIncome"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/employerHsaContributions">
            <Name>Employer contributions (including employee contributions through a cafeteria plan) to an
                employee's health
                savings account (HSA)
            </Name>
            <Description>Box 12, code W.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/employerHsaContributionsNeeded">
            <Name>Employer contributions (including employee contributions through a cafeteria plan) to an
                employee's health
                savings account (HSA)
            </Name>
            <Description>Box 12, code W.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../employerHsaContributionsRounded"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/employerHsaContributionsRounded">
            <Name>Employer contributions (including employee contributions through a cafeteria plan) to an
                employee's health
                savings account (HSA)
            </Name>
            <Description>Box 12, code W.</Description>
            <Export mef="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../employerHsaContributions"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Round>
                                <Dependency path="../employerHsaContributions"/>
                            </Round>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/409aDeferrals">
            <Name>Deferrals under a section 409A nonqualified deferred compensation plan</Name>
            <Description>Box 12, code Y.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/409aDeferralsNeeded">
            <Name>Deferrals under a section 409A nonqualified deferred compensation plan</Name>
            <Description>Box 12, code Y.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../409aDeferrals"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/409aDeferralsRounded">
            <Name>Deferrals under a section 409A nonqualified deferred compensation plan</Name>
            <Description>Box 12, code Y.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../409aDeferrals"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/nqdcDeferrals">
            <Name>Income under a nonqualified deferred compensation plan that fails to satisfy section
                409A
            </Name>
            <Description>Box 12, code Z.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/nqdcDeferralsNeeded">
            <Name>Income under a nonqualified deferred compensation plan that fails to satisfy section
                409A
            </Name>
            <Description>Box 12, code Z.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../nqdcDeferrals"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/nqdcDeferralsRounded">
            <Name>Income under a nonqualified deferred compensation plan that fails to satisfy section
                409A
            </Name>
            <Description>Box 12, code Z.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../nqdcDeferrals"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/roth401kContributions">
            <Name>Designated Roth contributions under a section 401(k) plan</Name>
            <Description>Box 12, code AA.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/roth401kContributionsNeeded">
            <Name>Designated Roth contributions under a section 401(k) plan</Name>
            <Description>Box 12, code AA.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../roth401kContributions"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/roth401kContributionsRounded">
            <Name>Designated Roth contributions under a section 401(k) plan</Name>
            <Description>Box 12, code AA.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../roth401kContributions"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/roth403bContributions">
            <Name>Designated Roth contributions under a section 403(b) plan</Name>
            <Description>Box 12, code BB.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/roth403bContributionsNeeded">
            <Name>Designated Roth contributions under a section 403(b) plan</Name>
            <Description>Box 12, code BB.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../roth403bContributions"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/roth403bContributionsRounded">
            <Name>Designated Roth contributions under a section 403(b) plan</Name>
            <Description>Box 12, code BB.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../roth403bContributions"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/healthCoverageCost">
            <Name>Cost of employer-sponsored health coverage</Name>
            <Description>Box 12, code DD.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/healthCoverageCostNeeded">
            <Name>Cost of employer-sponsored health coverage</Name>
            <Description>Box 12, code DD.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../healthCoverageCost"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/healthCoverageCostRounded">
            <Name>Cost of employer-sponsored health coverage</Name>
            <Description>Box 12, code DD.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../healthCoverageCost"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/roth457bContributions">
            <Name>Designated Roth contributions under a governmental section 457(b) plan</Name>
            <Description>Box 12, code EE.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/roth457bContributionsNeeded">
            <Name>Designated Roth contributions under a governmental section 457(b) plan</Name>
            <Description>Box 12, code EE.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../roth457bContributions"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/roth457bContributionsRounded">
            <Name>Designated Roth contributions under a governmental section 457(b) plan</Name>
            <Description>Box 12, code EE.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../roth457bContributions"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/qsehraBenefits">
            <Name>Permitted benefits under a qualified small employer health reimbursement arrangement</Name>
            <Description>Box 12, code FF.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/hasQsehra">
            <Description>Whether any of the W2s have QSEHRA benefits</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <IsComplete>
                    <Find path="/formW2s">
                        <Dependency path="qsehraBenefitsNeeded"/>
                    </Find>
                </IsComplete>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/qsehraBenefitsNeeded">
            <Name>Permitted benefits under a qualified small employer health reimbursement arrangement</Name>
            <Description>Box 12, code FF.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../qsehraBenefits"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/qsehraBenefitsRounded">
            <Name>Permitted benefits under a qualified small employer health reimbursement arrangement</Name>
            <Description>Box 12, code FF.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../qsehraBenefits"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/83iIncome">
            <Name>Income from qualified equity grants under section 83(i)</Name>
            <Description>Box 12, code GG.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/83iIncomeNeeded">
            <Name>Income from qualified equity grants under section 83(i)</Name>
            <Description>Box 12, code GG.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../83iIncome"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/83iIncomeRounded">
            <Name>Income from qualified equity grants under section 83(i)</Name>
            <Description>Box 12, code GG.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../83iIncome"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/83iDeferrals">
            <Name>Aggregate deferrals under section 83(i) elections as of the close of the calendar year</Name>
            <Description>Box 12, code HH.</Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/83iDeferralsNeeded">
            <Name>Aggregate deferrals under section 83(i) elections as of the close of the calendar year</Name>
            <Description>Box 12, code HH.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../83iDeferrals"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/83iDeferralsRounded">
            <Name>Aggregate deferrals under section 83(i) elections as of the close of the calendar year</Name>
            <Description>Box 12, code HH.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency path="../83iDeferrals"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/nonTaxableMedicaidWaiverPayments">
            <Description>Nontaxable Medicaid waiver payments reported on Form(s) W-2. If you received
                nontaxable Medicaid
                waiver payments, those amounts should now be reported to you on Form(s) W-2 in box 12, Code
                II.
            </Description>

            <Writable>
                <Dollar/>
                <Limit type="Min">
                    <Dollar>0</Dollar>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/nonTaxableMedicaidWaiverPaymentsNeeded">
            <Description>Nontaxable Medicaid waiver payments reported on Form(s) W-2. If you received
                nontaxable Medicaid
                waiver payments, those amounts should now be reported to you on Form(s) W-2 in box 12, Code
                II.
            </Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="../nonTaxableMedicaidWaiverPayments"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/nonTaxableMedicaidWaiverPaymentsRounded">
            <Description>Nontaxable Medicaid waiver payments reported on Form(s) W-2. If you received
                nontaxable Medicaid
                waiver payments, those amounts should now be reported to you on Form(s) W-2 in box 12, Code
                II.
            </Description>

            <Derived>
                <Round>
                    <Dependency path="../nonTaxableMedicaidWaiverPayments"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/statutoryEmployee">
            <Name>Statutory employee</Name>
            <Description>Whether statutory employee is checked in box 13.</Description>
            <Export mef="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/retirementPlan">
            <Name>Retirement plan</Name>
            <Description>Whether retirement plan is checked in box 13.</Description>
            <Export mef="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/thirdPartySickPay">
            <Name>Third-party sick pay</Name>
            <Description>Whether third-party sick pay is checked in box 13.</Description>
            <Export mef="true"/>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/writableState">
            <Name>State</Name>
            <Description>Part of form W-2 box 15: The state of residence.</Description>

            <Writable>
                <Enum optionsPath="/incomeFormStateOptions"/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/state">
            <Name>State</Name>
            <Description>Alias for writableState to avoid breaking the backend with our convention for
                optional fields.
            </Description>

            <Derived>
                <Dependency path="../writableState"/>
            </Derived>

        </Fact>
        <Fact path="/flowKnockoutBox15IncomeFromDifferentState">
            <Name>Flow Knockout Income from Unsupported State</Name>
            <Description>Used to control a knockout for if the filer recieved income from an unsupported
                state.
            </Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/formW2s/*/hasKnockoutBox15IncomeFromDifferentState"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/hasKnockoutBox15IncomeFromDifferentState">
            <Name>Has Knockout recieved Income from a Different State</Name>
            <Description>Checks to see if their income is from a different state.</Description>

            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="../writableState"/>
                    </IsComplete>
                    <Equal>
                        <Left>
                            <Dependency path="../writableState"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/incomeFormStateOptions">differentState</Enum>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/pdfStateCode">
            <Name>State Code (pdf)</Name>
            <Description>The state code used to populate the IRS W2 PDF field corresponding to form W-2
                box 15.
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Equal>
                                    <Left>
                                        <Dependency path="../writableState"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/incomeFormStateOptions">sameState</Enum>
                                    </Right>
                                </Equal>
                                <NotEqual>
                                    <Left>
                                        <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/scopedStateOptions">moreThanOne</Enum>
                                    </Right>
                                </NotEqual>
                                <NotEqual>
                                    <Left>
                                        <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/scopedStateOptions">noneOfThese</Enum>
                                    </Right>
                                </NotEqual>
                            </All>
                        </When>
                        <Then>
                            <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/xmlStateCd">
            <Name>State Code (xml)</Name>
            <Description>The state code used to populate the IRS W2 XML element corresponding to form W-2
                box 15. This fact is
                used to handle mapping the values used by the DF client into what the MeF system and DF
                submit application
                expect.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../writableState"/>
                                </IsComplete>
                                <Equal>
                                    <Left>
                                        <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/scopedStateOptions">moreThanOne</Enum>
                                    </Right>
                                </Equal>
                            </All>
                        </When>
                        <Then>
                            <String>MULTIPLE</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <All>
                                <IsComplete>
                                    <Dependency path="../writableState"/>
                                </IsComplete>
                                <Equal>
                                    <Left>
                                        <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                                    </Left>
                                    <Right>
                                        <Enum optionsPath="/scopedStateOptions">noneOfThese</Enum>
                                    </Right>
                                </Equal>
                            </All>
                        </When>
                        <Then>
                            <String>NONE</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableState"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <ToUpper>
                                <AsString>
                                    <Dependency module="filers" path="/filerResidenceAndIncomeState"/>
                                </AsString>
                            </ToUpper>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/writableStateEmployerId">
            <Name>Employer's state ID number</Name>
            <Description>Part of form W-2 box 15: The employer's state ID number. This is the writable
                optional fact. Can be
                left incomplete, and will likely be left incomplete by states that do not collect personal
                income tax.
            </Description>

            <Writable>
                <String/>
                <Limit type="Match">
                    <String>([!-~£§ÁÉÍÑÓ×ÚÜáéíñóúü]\s?)*[!-~£§ÁÉÍÑÓ×ÚÜáéíñóúü]</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>16</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/stateEmployerId">
            <Name>Employer's state ID number</Name>
            <Description>Part of form W-2 box 15: The employer's state ID number. Alias for
                writableStateEmployerId.
            </Description>
            <Export mef="true"/>


            <Derived>
                <StripChars>
                    <Input>
                        <Dependency path="../writableStateEmployerId"/>
                    </Input>
                    <Allow>
                        <Dependency module="mefTypes" path="/mefStateEmployerIdType"/>
                    </Allow>
                </StripChars>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/hasStateWagesWithoutStateCode">
            <Description>Whether the form lists state wages but is missing the associated state code. Corresponds with a
                validation alert since the TP should always have a state code when they have state information
            </Description>
            <Derived>
                <All>
                    <GreaterThan>
                        <Left>
                            <Dependency path="../stateWages"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                    <Not>
                        <IsComplete>
                            <Dependency path="../writableState"/>
                        </IsComplete>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/writableStateWages">
            <Name>State wages, tips, etc.</Name>
            <Description>Form W-2 box 16: Wages, tips, and other compensation allocated to the state. This
                is the writable
                optional fact. Can be left incomplete. Please use the derived fact in downstream
                calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/stateWages">
            <Name>State wages, tips, etc.</Name>
            <Description>Form W-2 box 16: Wages, tips, and other compensation allocated to the state.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <IsComplete>
                                    <Dependency path="../writableStateWages"/>
                                </IsComplete>
                            </When>
                            <Then>
                                <Dependency path="../writableStateWages"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/missingStateIncome">
            <Name>Whether the W-2 is missing state income (box 16)</Name>
            <Description>Form W-2 box 16: Wages, tips, and other compensation allocated to the state.</Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency path="/hasNoStateIncomeTax" module="constants"/>
                    </Not>
                    <Equal>
                        <Left>
                            <Dependency path="../stateWages"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/writableStateWithholding">
            <Name>State income tax</Name>
            <Description>Form W-2 box 17: State income tax withheld.

                This is the writable optional fact. Can be left
                incomplete. Please use the derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/stateWithholding">
            <Name>State income tax</Name>
            <Description>Form W-2 box 17: State income tax withheld.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <IsComplete>
                                    <Dependency path="../writableStateWithholding"/>
                                </IsComplete>
                            </When>
                            <Then>
                                <Dependency path="../writableStateWithholding"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/writableLocalWages">
            <Name>Local wages, tips, etc.</Name>
            <Description>Form W-2 box 18: Wages, tips, and other compensation allocated to the locality.
                This is the writable
                optional fact. Can be left incomplete. Please use the derived fact in downstream
                calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/localWages">
            <Name>Local wages, tips, etc.</Name>
            <Description>Form W-2 box 18: Wages, tips, and other compensation allocated to the locality.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <IsComplete>
                                    <Dependency path="../writableLocalWages"/>
                                </IsComplete>
                            </When>
                            <Then>
                                <Dependency path="../writableLocalWages"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/writableLocalWithholding">
            <Name>Local income tax</Name>
            <Description>Form W-2 box 19: Local income tax withheld.

                This is the writable optional fact. Can be left
                incomplete. Please use the derived fact in downstream calculations.
            </Description>
            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/localWithholding">
            <Name>Local income tax</Name>
            <Description>Form W-2 box 19: Local income tax withheld.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <IsComplete>
                                    <Dependency path="../writableLocalWithholding"/>
                                </IsComplete>
                            </When>
                            <Then>
                                <Dependency path="../writableLocalWithholding"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/writableLocality">
            <Name>Locality name</Name>
            <Description>Form W-2 box 20: Locality name.

                This is the writable optional fact. Can be left incomplete. Please use
                the derived fact in downstream calculations.
            </Description>
            <Writable>
                <String/>
                <Limit type="Match">
                    <String>([!-~£§ÁÉÍÑÓ×ÚÜáéíñóúü]\s?)*[!-~£§ÁÉÍÑÓ×ÚÜáéíñóúü]</String>
                </Limit>
                <Limit type="MaxLength">
                    <Int>20</Int>
                </Limit>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/locality">
            <Name>Locality name</Name>
            <Description>Form W-2 box 20: Locality name.</Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="../writableLocality"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Trim>
                                <StripChars>
                                    <Input>
                                        <Dependency path="../writableLocality"/>
                                    </Input>
                                    <Allow>
                                        <Dependency module="mefTypes" path="/mefLocalityNmType"/>
                                    </Allow>
                                </StripChars>
                            </Trim>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <String/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/box20HasYonkers">
            <Name>Box 20 Yonkers boolean</Name>
            <Description>Does this W2 have Yonkers box 20 codes?</Description>

            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Trim>
                                <ToUpper>
                                    <Dependency path="../locality"/>
                                </ToUpper>
                            </Trim>
                        </Left>
                        <Right>
                            <String>YONKERS</String>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Trim>
                                <ToUpper>
                                    <Dependency path="../locality"/>
                                </ToUpper>
                            </Trim>
                        </Left>
                        <Right>
                            <String>YK</String>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Trim>
                                <ToUpper>
                                    <Dependency path="../locality"/>
                                </ToUpper>
                            </Trim>
                        </Left>
                        <Right>
                            <String>YON</String>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Trim>
                                <ToUpper>
                                    <Dependency path="../locality"/>
                                </ToUpper>
                            </Trim>
                        </Left>
                        <Right>
                            <String>YNK</String>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Trim>
                                <ToUpper>
                                    <Dependency path="../locality"/>
                                </ToUpper>
                            </Trim>
                        </Left>
                        <Right>
                            <String>CITYOFYK</String>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Trim>
                                <ToUpper>
                                    <Dependency path="../locality"/>
                                </ToUpper>
                            </Trim>
                        </Left>
                        <Right>
                            <String>CTYOFYKR</String>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Trim>
                                <ToUpper>
                                    <Dependency path="../locality"/>
                                </ToUpper>
                            </Trim>
                        </Left>
                        <Right>
                            <String>CITYOF YK</String>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Trim>
                                <ToUpper>
                                    <Dependency path="../locality"/>
                                </ToUpper>
                            </Trim>
                        </Left>
                        <Right>
                            <String>CITY OFYK</String>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Trim>
                                <ToUpper>
                                    <Dependency path="../locality"/>
                                </ToUpper>
                            </Trim>
                        </Left>
                        <Right>
                            <String>CTY OF YK</String>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/paidYonkersTaxes">
            <Name>Paid taxes in Yonkers</Name>
            <Description>Does the W2 show Yonkers taxes?</Description>
            <Derived>
                <All>
                    <Dependency module="filers" path="/livedInNy"/>
                    <GreaterThan>
                        <Left>
                            <Count>
                                <Dependency path="/formW2s/*/box20HasYonkers"/>
                            </Count>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/partYearYonkersResident">
            <Name>Lived outside of Yonkers during TY</Name>
            <Description>Whether the taxpayer lived outside of Yonkers during the tax year, and is a
                part-year Yonkers
                resident.
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/knockoutYonkersPartYear">
            <Name>Knockout for part-year Yonkers residents</Name>
            <Description>The taxpayer paid taxes in Yonkers and said that they are a part-year
                resident of Yonkers
            </Description>
            <Derived>
                <All>
                    <GreaterThan>
                        <Left>
                            <Count>
                                <Dependency path="/formW2s/*/paidYonkersTaxes"/>
                            </Count>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                    <Dependency path="/partYearYonkersResident"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/standardOrNonStandardCd">
            <Name>MeF variable: nonstandard W2</Name>
            <Description>MeF Variable: the code for whether it is a standard or nonstandard Line 368 of
                the IRSW2 Schema
            </Description>
            <Export mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency path="../isNonstandard"/>
                            </All>
                        </When>
                        <Then>
                            <String>N</String>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <String>S</String>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/nonstandardOrCorrectedChoice">
            <Name>Nonstandard or corrected choice</Name>
            <Description>Whether the form W2 is nonstandard, corrected, both, or neither</Description>
            <Writable>
                <Enum optionsPath="/w2NonstandardCorrectedOptions"/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/isCorrected">
            <Name>W2 is corrected</Name>
            <Description>This is not a standard W2, it is marked as corrected</Description>
            <Export mef="true"/>

            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Dependency path="../nonstandardOrCorrectedChoice"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/w2NonstandardCorrectedOptions">corrected</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../nonstandardOrCorrectedChoice"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/w2NonstandardCorrectedOptions">both</Enum>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/isNonstandard">
            <Name>W2 is nonstandard</Name>
            <Description>This is not a standard W2, it is marked as nonstandard</Description>
            <Derived>
                <Any>
                    <Equal>
                        <Left>
                            <Dependency path="../nonstandardOrCorrectedChoice"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/w2NonstandardCorrectedOptions">nonstandard</Enum>
                        </Right>
                    </Equal>
                    <Equal>
                        <Left>
                            <Dependency path="../nonstandardOrCorrectedChoice"/>
                        </Left>
                        <Right>
                            <Enum optionsPath="/w2NonstandardCorrectedOptions">both</Enum>
                        </Right>
                    </Equal>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/belongsToPrimaryFiler">
            <Name>W2 belongs to primary filer</Name>
            <Description>The W2 belongs to the primary filer</Description>
            <Derived>
                <Equal>
                    <Left>
                        <Dependency module="filers" path="../filer"/>
                    </Left>
                    <Right>
                        <Dependency module="filers" path="/primaryFiler"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/belongsToSecondaryFiler">
            <Name>W2 belongs to secondary filer</Name>
            <Description>The W2 belongs to the secondary filer</Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency module="filers" path="../filer"/>
                    </Left>
                    <Right>
                        <Dependency module="filers" path="/secondaryFiler"/>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/secondaryFilerUsedWithoutMFJ">
            <Name>Secondary filer has W2s when primary filer is not filing jointly</Name>
            <Description>Whether secondary filer has W2s when primary filer is not filing jointly</Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    </Not>
                    <Dependency path="../belongsToSecondaryFiler"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/formW2s/secondaryFilerUsedWithoutMFJ">
            <Name>Secondary filer has W2s when primary filer is not filing jointly</Name>
            <Description>Whether secondary filer has W2s when primary filer is not filing jointly</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency path="/formW2s/*/secondaryFilerUsedWithoutMFJ"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/hasRRTACodes">
            <Name>Has Railroad Retirement Tax Act (RRTA)  Codes</Name>
            <Description>Do any Railroad Retirement Tax Act (RRTA)  codes show up in box 14 on this W2?</Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/formW2s/*/box17GreaterThanBox16">
            <Description>
                W-2 has a Box 17 (State income tax) value that is greater than the Box 16 (State wages,
                tips, etc)
                value.

                Used to power a W-2 validation: State income tax cannot exceed state income amount.

                Uses the writeable
                facts for these boxes and explicitly checks for completion,
                as the derived box values default to 0.
                Filling out a
                value for box 17 but not box 16 would then erroneously trigger this validation,
                for example, if using the derived
                facts for these boxes.

                We only want to show this validation if the taxpayer entered a value for both
                boxes.
            </Description>

            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="../writableStateWages"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../writableStateWithholding"/>
                    </IsComplete>
                    <GreaterThan>
                        <Left>
                            <Dependency path="../writableStateWithholding"/>
                        </Left>
                        <Right>
                            <Dependency path="../writableStateWages"/>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/formW2s/*/box19GreaterThanBox18">
            <Description>
                True if W2 has a value for Box 19 (Local income tax) and Box 18 (Local wages, tips, etc),
                and the
                value of Box 19 is greater than Box 18.

                Derived box values default to 0, so this fact explicitly checks for
                completion; it's false
                if either box is incomplete.

                Used to power a W-2 validation: Local income tax cannot exceed
                local income amount.
            </Description>

            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="../writableLocalWages"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="../writableLocalWithholding"/>
                    </IsComplete>
                    <GreaterThan>
                        <Left>
                            <Dependency path="../writableLocalWithholding"/>
                        </Left>
                        <Right>
                            <Dependency path="../writableLocalWages"/>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/formW2Withholding">
            <Name>Form W-2 withholding</Name>
            <Description>Federal income tax withheld from wages, as reported on line 25a of Form 1040.</Description>
            <Export downstreamFacts="true" mef="true"/>
            <Derived>
                <Round>
                    <CollectionSum>
                        <Dependency path="/formW2s/*/federalWithholding"/>
                    </CollectionSum>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/wages">
            <Name>Wages, salaries, tips, etc.</Name>
            <Description>Wage income to report on line 1a of Form 1040.</Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Round>
                    <CollectionSum>
                        <Dependency path="/formW2s/*/wages"/>
                    </CollectionSum>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerWages">
            <Name>Primary Filer wages, salaries, tips, etc.</Name>
            <Description>Wage income to use in calculating earned income for CDCC</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <CollectionSum>
                    <Dependency path="/primaryFilerW2s/*/wages"/>
                </CollectionSum>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerHasW2WagesGreaterThan0">
            <Name>Primary filer has W2 Wages greater than 0</Name>
            <Description>Whether primary filer has wages greater than 0</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/primaryFilerWages"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerTotalHsaContributionsFromW2s">
            <Description>Primary filers total HSA contributions reported on their W-2s</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <CollectionSum>
                    <Round>
                        <Dependency path="/primaryFilerW2s/*/employerHsaContributionsRounded"/>
                    </Round>
                </CollectionSum>
            </Derived>
        </Fact>
        <Fact path="/hasPrimaryFilerHsaContributionsFromW2s">
            <Description>Whether the primary filer has HSA contributions reported on their W-2s</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/primaryFilerTotalHsaContributionsFromW2s"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerWages">
            <Name>Secondary filer wages, salaries, tips, etc.</Name>
            <Description>Wage income to use in calculating earned income for CDCC</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <CollectionSum>
                    <Dependency path="/secondaryFilerW2s/*/wages"/>
                </CollectionSum>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerHasW2WagesGreaterThan0">
            <Name>Secondary filer has W2 wages greater than 0</Name>
            <Description>Whether secondary filer has wages greater than 0</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/secondaryFilerWages"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerTotalHsaContributionsFromW2s">
            <Description>Primary filers total HSA contributions reported on their W-2s</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <CollectionSum>
                    <Dependency path="/secondaryFilerW2s/*/employerHsaContributionsRounded"/>
                </CollectionSum>
            </Derived>
        </Fact>
        <Fact path="/hasSecondaryFilerHsaContributionsFromW2s">
            <Description>Whether the secondary filer has HSA contributions reported on their W-2s</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/secondaryFilerTotalHsaContributionsFromW2s"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/totalHsaContributionsOnW2s">
            <Description>The total amount of HSA contributions reported on the TPs W2s</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <Add>
                                <Dependency path="/primaryFilerTotalHsaContributionsFromW2s"/>
                                <Dependency path="/secondaryFilerTotalHsaContributionsFromW2s"/>
                            </Add>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/primaryFilerTotalHsaContributionsFromW2s"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/hasHsaContributionsOnW2">
            <Description>Whether we already know the TP has HSA contributions reported on their W2</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency module="formW2s" path="/totalHsaContributionsOnW2s"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityTaxesWithheld">
            <Name>Social Security taxes withheld</Name>
            <Description>The amount of social security and medicare tax withheld, as defined by §24(d)(2).</Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Round>
                    <Add>
                        <CollectionSum>
                            <Dependency path="/formW2s/*/oasdiWithholding"/>
                        </CollectionSum>
                        <CollectionSum>
                            <Dependency path="/formW2s/*/medicareWithholding"/>
                        </CollectionSum>
                    </Add>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerW2s">
            <Name>Primary Filer W2s</Name>
            <Description>The W2s that belong to the primary filer</Description>
            <Derived>
                <Filter path="/formW2s">
                    <Dependency path="belongsToPrimaryFiler"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerW2sCount">
            <Name>Primary Filter W2s Count</Name>
            <Description>How many W2s does the primary filer have?</Description>
            <Derived>
                <CollectionSize>
                    <Dependency path="/primaryFilerW2s"/>
                </CollectionSize>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerTotalOasdiWagesForKnockout">
            <Name>Primary Filer Total Social Security Wages</Name>
            <Description>Sum of Social Security Wages across Primary Filer W2s</Description>
            <Derived>
                <CollectionSum>
                    <Dependency path="/primaryFilerW2s/*/oasdiWagesForKnockoutCalculation"/>
                </CollectionSum>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerW2s">
            <Name>Secondary Filer W2s</Name>
            <Description>The W2s that belong to the secondary filer</Description>
            <Derived>
                <Filter path="/formW2s">
                    <Dependency path="belongsToSecondaryFiler"/>
                </Filter>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerW2sCount">
            <Name>Secondary Filter W2s Count</Name>
            <Description>How many W2s does the secondary filer have?</Description>
            <Derived>
                <CollectionSize>
                    <Dependency path="/secondaryFilerW2s"/>
                </CollectionSize>
            </Derived>
        </Fact>
        <Fact path="/secondaryFilerTotalOasdiWagesForKnockout">
            <Name>Secondary Filer Total Social Security Wages</Name>
            <Description>Sum of Social Security Wages across Secondary Filer W2s</Description>
            <Derived>
                <CollectionSum>
                    <Dependency path="/secondaryFilerW2s/*/oasdiWagesForKnockoutCalculation"/>
                </CollectionSum>
            </Derived>
        </Fact>
        <Fact path="/someFilerHasCombatPay">
            <Name>Some filer has combat pay</Name>
            <Description>Either the primary filer or their MFJ spouse has combat pay on at least one of
                their W2s.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Any>
                    <Dependency path="/MFJSpouseHasCombatPay"/>
                    <Dependency path="/primaryFilerHasCombatPay"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/onlyOneFilerHasCombatPay">
            <Name>Only one filer has combat pay</Name>
            <Description>Either the primary filer or their MFJ spouse (if MFJ) has combat pay on one of
                their W2s.
            </Description>

            <Derived>
                <Any>
                    <All>
                        <Not>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </Not>
                        <Dependency path="/primaryFilerHasCombatPay"/>
                    </All>
                    <Any>
                        <All>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                            <Dependency path="/MFJSpouseHasCombatPay"/>
                            <Not>
                                <Dependency path="/primaryFilerHasCombatPay"/>
                            </Not>
                        </All>
                        <All>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                            <Not>
                                <Dependency path="/MFJSpouseHasCombatPay"/>
                            </Not>
                            <Dependency path="/primaryFilerHasCombatPay"/>
                        </All>
                    </Any>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/MFJSpouseHasCombatPay">
            <Name>MFJ Spouse has combat pay</Name>
            <Description>Whether a TP has an MFJ spouse and that MFJ spouse has combat pay on at least one
                of their W2s
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/MFJSpouseCombatPay"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/MFJSpouseCombatPay">
            <Name>MFJ Spouse Combat Pay</Name>
            <Description>The amount of combat pay an MFJ spouse has on all of their W2s combined. Returns
                zero if filing
                status
                is not MFJ
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <CollectionSum>
                                <Dependency path="/secondaryFilerW2s/*/combatPay"/>
                            </CollectionSum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/onlyMFJSpouseHasCombatPay">
            <Name>Only MFJ Spouse has combat pay</Name>
            <Description>Whether or not ONLY the MFJ Spouse has combat pay on at least one of their W2s
                and the primary does
                not
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="/MFJSpouseHasCombatPay"/>
                    <Not>
                        <Dependency path="/primaryFilerHasCombatPay"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerHasCombatPay">
            <Name>TP has combat pay</Name>
            <Description>Whether a TP has combat pay on at least one of their W2s</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/primaryFilerCombatPay"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/primaryFilerCombatPay">
            <Name>TP combat pay</Name>
            <Description>The amount of combat pay for the primary filer reported on their W2s.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <CollectionSum>
                    <Dependency path="/primaryFilerW2s/*/combatPay"/>
                </CollectionSum>
            </Derived>
        </Fact>
        <Fact path="/onlyPrimaryFilerHasCombatPay">
            <Name>Only primary filer has combat pay</Name>
            <Description>Whether or not ONLY the primary TP has combat pay on at least one of their W2s
                and the secondary
                filer
                does not have combat pay
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="/primaryFilerHasCombatPay"/>
                    <Not>
                        <Dependency path="/MFJSpouseHasCombatPay"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/bothFilersHasCombatPay">
            <Name>Do both filers have combat pay?</Name>
            <Description>Whether the primary filer and their MFJ spouse has combat pay on at least one of
                their W2s.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="/MFJSpouseHasCombatPay"/>
                    <Dependency path="/primaryFilerHasCombatPay"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/bothFilersCombatPay">
            <Name>Both filers combat pay</Name>
            <Description>The combined amount of combat pay from both primary filter and MFJ spouse.</Description>

            <Derived>
                <Add>
                    <Dependency path="/primaryFilerCombatPay"/>
                    <Dependency path="/MFJSpouseCombatPay"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/combatPayAmount">
            <Name>Combat Pay if Elected</Name>
            <Description>The combat pay for line 1i, taking into account whether the user wants to declare
                it or not.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <All>
                                    <Dependency path="/onlyPrimaryFilerHasCombatPay"/>
                                    <Equal>
                                        <Left>
                                            <Dependency module="eitc" path="/combatPayElection"/>
                                        </Left>
                                        <Right>
                                            <Enum optionsPath="/combatPayOptions">usePrimaryCombatPay</Enum>
                                        </Right>
                                    </Equal>
                                </All>
                            </When>
                            <Then>
                                <Dependency path="/primaryFilerCombatPay"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <All>
                                    <Dependency path="/onlyMFJSpouseHasCombatPay"/>
                                    <Equal>
                                        <Left>
                                            <Dependency module="eitc" path="/combatPayElection"/>
                                        </Left>
                                        <Right>
                                            <Enum optionsPath="/combatPayOptions">useSpouseCombatPay</Enum>
                                        </Right>
                                    </Equal>
                                </All>
                            </When>
                            <Then>
                                <Dependency path="/MFJSpouseCombatPay"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <All>
                                    <Dependency path="/bothFilersHasCombatPay"/>
                                    <Equal>
                                        <Left>
                                            <Dependency module="eitc" path="/combatPayElection"/>
                                        </Left>
                                        <Right>
                                            <Enum optionsPath="/combatPayOptions">useBothCombatPay</Enum>
                                        </Right>
                                    </Equal>
                                </All>
                            </When>
                            <Then>
                                <Add>
                                    <Dependency path="/MFJSpouseCombatPay"/>
                                    <Dependency path="/primaryFilerCombatPay"/>
                                </Add>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <All>
                                    <Dependency path="/bothFilersHasCombatPay"/>
                                    <Equal>
                                        <Left>
                                            <Dependency module="eitc" path="/combatPayElection"/>
                                        </Left>
                                        <Right>
                                            <Enum optionsPath="/combatPayOptions">usePrimaryNotSpouseCombatPay</Enum>
                                        </Right>
                                    </Equal>
                                </All>
                            </When>
                            <Then>
                                <Dependency path="/primaryFilerCombatPay"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <All>
                                    <Dependency path="/bothFilersHasCombatPay"/>
                                    <Equal>
                                        <Left>
                                            <Dependency module="eitc" path="/combatPayElection"/>
                                        </Left>
                                        <Right>
                                            <Enum optionsPath="/combatPayOptions">useSpouseNotPrimaryCombatPay</Enum>
                                        </Right>
                                    </Equal>
                                </All>
                            </When>
                            <Then>
                                <Dependency path="/MFJSpouseCombatPay"/>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <!-- There has not been a combat pay election, or the user chose "noCombatPay" -->
                                <True/>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/allCombatPay">
            <Name>Nontaxable combat pay</Name>
            <Description>Nontaxable combat pay. Note: don't go including this on line 1i of the 1040; that
                box should only be
                filled in if the taxpayer elects to include combat pay as earned income for purposes of
                calculating the Earned
                Income Tax Credit or Child and Dependent Care Credit.

                This value is reported on line 18b of schedule 8812, used
                to calculate ACTC.

                Additionally, be
                careful to appropriately separate spouse and taxpayer combat pay if MFJ. The
                TP can elect to
                include neither,
                either, or both of their combat pay on line 1i.
            </Description>
            <Export downstreamFacts="true" mef="true"/>
            <Derived>
                <Round>
                    <CollectionSum>
                        <Dependency path="/formW2s/*/combatPay"/>
                    </CollectionSum>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/flowFormW2sKnockout">
            <Description>The user has been knocked out for reasons(s) defined in this module</Description>
            <Export downstreamFacts="true"/>
            <Derived>
                <Any>
                    <Dependency path="/knockoutForBox12Value"/>
                    <Dependency path="/knockoutForBox12Dependency"/>
                    <Dependency path="/flowKnockoutAllocatedTips"/>
                    <Dependency path="/flowKnockoutStatutoryEmployee"/>
                    <Dependency path="/flowKnockoutThirdPartySickPay"/>
                    <Dependency path="/flowKnockoutBox15IncomeFromDifferentState"/>
                    <Dependency path="/flowKnockoutNonQualifiedPlans"/>
                    <Dependency path="/knockoutMedicareWages"/>
                    <Dependency path="/hasABox14NYRRTAValueWeKnockout"/>
                    <Dependency path="/anyFilerExceedsMaxOasdiWages"/>
                    <Dependency path="/flowKnockoutHasRRTACodesInBox14NotInNY"/>
                    <Dependency path="/knockoutYonkersPartYear"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/flowIsKnockedOut">
            <Description>The user has been knocked out</Description>
            <BlockSubmissionOnTrue/>
            <Derived>
                <Any>
                    <Dependency module="filers" path="/flowFilersKnockout"/>
                    <Dependency module="interest" path="/flowInterestKnockout"/>
                    <Dependency module="unemployment" path="/flowUnemploymentKnockout"/>
                    <Dependency module="formW2s" path="/flowFormW2sKnockout"/>
                    <Dependency module="form1099Rs" path="/flowForm1099RsKnockout"/>
                    <Dependency module="hsa" path="/flowHsaKnockout"/>
                    <Dependency module="ptc" path="/flowPtcKnockout"/>
                    <Dependency module="cdcc" path="/flowCdccKnockout"/>
                    <Dependency module="income" path="/flowIncomeKnockout"/>
                    <Dependency module="saversCredits" path="/saversCreditKnockouts"/>
                    <Dependency module="familyAndHousehold" path="/flowFamilyAndHouseholdKnockout"/>
                    <Dependency module="dependentsBenefitSplit" path="/flowDependentsBenefitSplitKnockout"/>
                    <Dependency module="socialSecurity" path="/socialSecurityBenefitsAreLossGreaterThan3k"/>
                    <Dependency module="estimatedPayments" path="/knockoutPaidEstimatedTaxesUnderDifferentLastName"/>
                    <Dependency module="taxCalculations" path="/knockoutHasNoPaymentsOrCredits"/>
                    <Dependency path="/isTooLateToFileOrResubmit"/>
                </Any>
            </Derived>
            <Placeholder>
                <False/>
            </Placeholder>
        </Fact>
        <Fact path="/hasPotentialCredits">
            <Name>Whether the TP may be eligible for any supported credits</Name>
            <Description>Whether the flow should walk the user through credits for which they might be eligible.
            </Description>

            <Derived>
                <Any>
                    <Dependency module="ptc" path="/maybeEligibleForPtc"/>
                    <Dependency module="ctcOdc" path="/maybeEligibleForCtc"/>
                    <Dependency module="ctcOdc" path="/maybeEligibleForOdc"/>
                    <Dependency module="eitc" path="/maybeEligibleForEitc"/>
                    <Dependency module="cdcc" path="/maybeEligibleForCdccWoTaxLiability"/>
                    <Dependency module="elderlyAndDisabled"
                                path="/maybeEligibleForCreditForElderlyAndDisabledWoTaxLiability"/>
                    <Dependency module="saversCredits" path="/eligibleForSaversCredit"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/flowCouldHaveQualifiedForAdditionalNrCredit">
            <Name>TP could qualify for additional nonrefundable credit if limit wasn't reached</Name>
            <Description>Whether the taxpayer could have qualified for an additional Schedule 3 credit if their tax
                liability
                hadn't already been reduced to $0.
            </Description>
            <Derived>
                <All>
                    <!-- Note the "additional." Unless TP has tax liability before Schedule 3 credits, fact is false. -->
                    <Dependency module="schedule3" path="/hasTaxLiabilityBeforeNrCredits"/>
                    <Any>
                        <All> <!-- Yes, this is a no-op, but it is future-proofing for if we ever support the Foreign Tax Credit -->
                            <Dependency module="cdcc" path="/maybeEligibleForCdccWoTaxLiability"/>
                            <Not>
                                <Dependency module="cdcc" path="/maybeEligibleForCdcc"/>
                            </Not>
                        </All>
                        <All>
                            <Dependency module="elderlyAndDisabled"
                                        path="/maybeEligibleForCreditForElderlyAndDisabledWoTaxLiability"/>
                            <Not>
                                <Dependency module="elderlyAndDisabled"
                                            path="/maybeEligibleForCreditForElderlyAndDisabled"/>
                            </Not>
                        </All>
                        <All>
                            <Dependency module="saversCredits" path="/qualifiedForSaverCreditWoTaxLiability"/>
                            <Not>
                                <Dependency module="saversCredits" path="/qualifiedForSaverCredit"/>
                            </Not>
                        </All>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hasQualifiedForAtLeastOneCredit">
            <Name>Whether the TP qualified for at least one credit</Name>
            <Description>Whether the tax payer has qualified for at least one credit</Description>

            <Derived>
                <Any>
                    <!-- The way that this is used, makes it so that we need to know if they are filling out any of the forms for
          credits so for PTC they could not qualify for PTC and owe APTC which should still make this fact true -->
                    <Dependency module="ptc" path="/needsToFileForm8962"/>
                    <Dependency module="ctcOdc" path="/ctcQualified"/>
                    <Dependency module="ctcOdc" path="/odcQualified"/>
                    <Dependency module="eitc" path="/eitcQualified"/>
                    <Dependency module="cdcc" path="/cdccQualified"/>
                    <Dependency module="elderlyAndDisabled" path="/qualifiedForCreditForElderlyAndDisabled"/>
                    <Dependency module="saversCredits" path="/qualifiedForSaverCredit"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/hasBeenDisqualifiedForAtLeastOneCredit">
            <Name>TP disqualified from at least one credit</Name>
            <Description>Whether the tax payer has been disqualified from at least one credit</Description>

            <Derived>
                <Any>
                    <Not>
                        <Dependency module="ptc" path="/qualifiedForPtc"/>
                    </Not>
                    <Not>
                        <Dependency module="ctcOdc" path="/ctcQualified"/>
                    </Not>
                    <Not>
                        <Dependency module="ctcOdc" path="/odcQualified"/>
                    </Not>
                    <Not>
                        <Dependency module="eitc" path="/eitcQualified"/>
                    </Not>
                    <Not>
                        <Dependency module="cdcc" path="/cdccQualified"/>
                    </Not>
                    <Not>
                        <Dependency module="elderlyAndDisabled" path="/qualifiedForCreditForElderlyAndDisabled"/>
                    </Not>
                    <Not>
                        <Dependency module="saversCredits" path="/qualifiedForSaverCredit"/>
                    </Not>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/hasOdcOrMaybeEligibleForEitc">
            <Name>TP has ODC or may be eligible for EITC</Name>
            <Description>Whether the TP has other child credit or may be eligible for earned income tax credits
            </Description>

            <Derived>
                <Any>
                    <Dependency module="ctcOdc" path="/odcQualified"/>
                    <Dependency module="eitc" path="/maybeEligibleForEitc"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/ctcHasImproperClaimsAndMaybeHasAdditionalCredits">
            <Name>In CTC flow and has improper claims and maybe has additional credits</Name>
            <Description>Whether the TP is shown the CTC not qualified screen</Description>

            <Derived>
                <All>
                    <Dependency module="ctcOdc" path="/ctcOdcDisqualifiedForImproperClaims"/>
                    <Dependency path="/hasOdcOrMaybeEligibleForEitc"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/odcHasImproperClaimsAndMaybeHasAdditionalCredits">
            <Name>In ODC flow and has improper claims and maybe has additional credits</Name>
            <Description>Whether the TP is shown the ODC not qualified screen</Description>

            <Derived>
                <All>
                    <Dependency module="ctcOdc" path="/ctcOdcDisqualifiedForImproperClaims"/>
                    <Dependency module="eitc" path="/maybeEligibleForEitc"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isReceivingRefundableCredits">
            <Name>Is Receiving Refundable credits</Name>
            <Description>Whether the TP is receiving refundable credits -- PTC, ACTC, or EITC</Description>

            <Derived>
                <Any>
                    <Dependency module="ptc" path="/isReceivingPtc"/>
                    <Dependency module="eitc" path="/isReceivingEitc"/>
                    <Dependency module="ctcOdc" path="/isReceivingActc"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/isReceivingNonrefundableCredits">
            <Name>Is Receiving Refundable credits</Name>
            <Description>Whether the TP is receiving nonrefundable credits -- CDCC, CTC, ODC, Saver's</Description>

            <Derived>
                <Any>
                    <Dependency module="cdcc" path="/isReceivingCdccCredit"/>
                    <Dependency module="ctcOdc" path="/isReceivingOdc"/>
                    <Dependency module="ctcOdc" path="/isReceivingCtc"/>
                    <Dependency module="saversCredits" path="/isReceivingSaversCredit"/>
                    <Dependency module="elderlyAndDisabled" path="/isReceivingEdc"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/flowTrue">
            <Name>The Source of Truth</Name>
            <Description>A true value for set fact actions</Description>
            <Derived>
                <True/>
            </Derived>
        </Fact>
        <Fact path="/flowFalse">
            <Name>The Source of Falsity</Name>
            <Description>A false value for set fact actions</Description>
            <Derived>
                <False/>
            </Derived>
        </Fact>
        <Fact path="/flowHasSeenDeductions">
            <Name>Has seen deductions</Name>
            <Description>A hack to track whether the user's seen the last page of deductions</Description>
            <Export downstreamFacts="true"/>
            <Writable>
                <Boolean/>
            </Writable>
            <Placeholder>
                <False/>
            </Placeholder>
        </Fact>
        <Fact path="/flowHasSeenPaymentMethodAutocorrect">
            <Name>Flow has seen the Payment Method Autocorrect screen</Name>
            <Export downstreamFacts="true"/>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/flowHasSeenPaymentPaperPathAssertion">
            <Name>Flow has seen the Payment Paper Path Assertion screen</Name>
            <Export downstreamFacts="true"/>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/hasNeededDeceasedInfo">
            <Name>Has all deceased info</Name>
            <Description>Determines whether the TP has the needed deceased info for EITC, for form 8862</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <Dependency module="eitc" path="/form8862RequiredAndHasQualifyingChildren"/>
                                <GreaterThan>
                                    <Left>
                                        <CollectionSize>
                                            <Dependency module="familyAndHousehold"
                                                        path="/deceasedEitcEligibleQcCollection"/>
                                        </CollectionSize>
                                    </Left>
                                    <Right>
                                        <Int>0</Int>
                                    </Right>
                                </GreaterThan>
                            </All>
                        </When>
                        <Then>
                            <Equal>
                                <Left>
                                    <CollectionSize>
                                        <Dependency module="familyAndHousehold"
                                                    path="/deceasedEitcEligibleQcCollection"/>
                                    </CollectionSize>
                                </Left>
                                <Right>
                                    <Count>
                                        <IsComplete>
                                            <Dependency module="familyAndHousehold"
                                                        path="/familyAndHousehold/*/dateOfDeath"/>
                                        </IsComplete>
                                    </Count>
                                </Right>
                            </Equal>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/saversCreditComplete">
            <Name>Has answered all questions regarding savers credit</Name>
            <Description>Determines whether the TP has answered the required savers credit questions</Description>
            <Derived>
                <Any>
                    <!-- either they're not eligible -->
                    <Not>
                        <Dependency module="saversCredits" path="/qualifiedForSaverCredit"/>
                    </Not>
                    <!-- Or they've completed the self reporting questions -->
                    <IsComplete>
                        <Dependency module="saversCredits" path="/hasSelfReportedDistributionsOrContributions"/>
                    </IsComplete>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/creditsSectionComplete">
            <Name>Credits section complete</Name>
            <Description>The credits section has been completed</Description>
            <Derived>
                <Any>
                    <!-- When the user has no potential credits, we track if they've seen the "no credits" screen-->
                    <All>
                        <Not>
                            <Dependency path="/hasPotentialCredits"/>
                        </Not>
                        <Dependency path="/flowHasSeenCreditsIntroNoCredits"/>
                    </All>
                    <!-- When the user has potential credits, we make sure that each credit reaches a completion state -->
                    <All>
                        <Dependency path="/hasPotentialCredits"/>
                        <IsComplete>
                            <Dependency module="ctcOdc" path="/odcQualified"/>
                        </IsComplete>
                        <IsComplete>
                            <Dependency module="ctcOdc" path="/ctcQualified"/>
                        </IsComplete>
                        <IsComplete>
                            <Dependency module="eitc" path="/eitcQualified"/>
                        </IsComplete>
                        <IsComplete>
                            <Dependency module="cdcc" path="/cdccQualified"/>
                        </IsComplete>
                        <Dependency module="ptc" path="/ptcSectionIsComplete"/>
                        <!-- When the user has potential Saver's Credits, each screening question reaches a completion state -->
                        <Dependency path="/saversCreditComplete"/>
                        <!-- If there are /deceasedEitcEligibleQcCollection ensure that they all have /dependents/*/dateOfDeath
                set -->
                        <Dependency path="/hasNeededDeceasedInfo"/>
                        <Dependency module="elderlyAndDisabled" path="/isEdcSectionComplete"/>
                        <Dependency module="cdcc" path="/cdccSectionIsComplete"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/deductionsSectionComplete">
            <Description>The user has completed the deductions section</Description>

            <Derived>
                <All>
                    <Dependency path="/flowHasSeenDeductions"/>
                    <Any>
                        <All>
                            <!-- If they are not MFJ dependents and have access to deductions,
              the user's two deductions must be complete -->
                            <Not>
                                <Dependency module="filers" path="/isMFJDependent"/>
                            </Not>
                            <IsComplete>
                                <Dependency module="educatorAdjustment" path="/educatorExpensesAdjustment"/>
                            </IsComplete>
                            <IsComplete>
                                <Dependency module="studentLoanAdjustment" path="/studentLoanInterestAdjustmentAmount"/>
                            </IsComplete>
                        </All>
                        <!-- MFS dependents are automatically disqualifed from our current adjustments scope and
                will have no data to enter. But we want them to enter the section, so we track if
                they've seen the last page. -->
                        <Dependency module="filers" path="/isMFJDependent"/>
                    </Any>
                </All>

            </Derived>
        </Fact>
        <Fact path="/flowHasSeenCreditsIntroNoCredits">
            <Name>Has seen credits intro for no credits</Name>
            <Description>A hack to track whether the user's seen the last page of credits</Description>
            <Writable>
                <Boolean/>
            </Writable>
            <Placeholder>
                <False/>
            </Placeholder>
        </Fact>
        <Fact path="/flowHasSeenAmount">
            <Name>Has seen credits</Name>
            <Description>A hack to track whether the user's seen the last page of credits</Description>
            <Writable>
                <Boolean/>
            </Writable>
            <Placeholder>
                <False/>
            </Placeholder>
        </Fact>
        <Fact path="/flowHasAmountChanged">
            <Name>Has amount changed</Name>
            <Description>A hack to track whether the amount has changed since the user saw credits</Description>
            <Writable>
                <Boolean/>
            </Writable>
            <Placeholder>
                <False/>
            </Placeholder>
        </Fact>
        <Fact path="/signSectionCompleteSingleFiler">
            <Derived>
                <!-- For the sign page to be complete, primary filer must ave a pin and the reuired values for their sign
        identity-->
                <All>
                    <!-- Primary filers require a self selected pin-->
                    <IsComplete>
                        <Dependency module="signing" path="/selfSelectPin"/>
                    </IsComplete>
                    <!-- Last year's agi completeness check for primary filer -->
                    <Any>
                        <!-- If the primary filer did not file taxes last year, they will not have sign identity and can skip the
            completeness check -->
                        <Not>
                            <Dependency module="signing" path="/filedLastYear"/>
                        </Not>
                        <!-- If the primary filer has an IP pin, they will not have sign identity and can skip the completeness
            check -->
                        <Dependency module="filers" path="/primaryFilerHasIpPin"/>
                        <!-- If primary filer last year's agi is used, it must be complete -->
                        <All>
                            <Dependency module="signing" path="/willEnterLastYearAgi"/>
                            <IsComplete>
                                <Dependency module="signing" path="/lastYearAgi"/>
                            </IsComplete>
                        </All>
                        <!-- If primary filer last year's pin is used, it must be complete -->
                        <All>
                            <Dependency module="signing" path="/willEnterLastYearPin"/>
                            <IsComplete>
                                <Dependency module="signing" path="/selfSelectPinLastYear"/>
                            </IsComplete>
                        </All>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/signSectionCompleteMarriedFilingJointlyFilers">
            <!-- For the sign page to be complete, primary filer and their spouse must have pins and reuired values for their
      sign identity-->
            <Derived>
                <All>
                    <!-- Check to see if primary filer completed has complete all required information-->
                    <Dependency path="/signSectionCompleteSingleFiler"/>
                    <!-- Spouse's required information -->
                    <Any>
                        <!-- Widowed MJF filers do not require their spouse information to sign. And can skip this section-->
                        <Dependency module="filers" path="/isWidowedInTaxYear"/>
                        <!-- Check to see if the spouse's required information is complete  -->
                        <All>
                            <!-- Spouse requires a self selected pin-->
                            <IsComplete>
                                <Dependency module="signing" path="/spouseSelfSelectPin"/>
                            </IsComplete>
                            <!-- Sign identity completeness check for spouse -->
                            <Any>
                                <!-- If the spouse did not file taxes last year, they will not have sign identity and can skip the
                completeness check -->
                                <Not>
                                    <Dependency module="signing" path="/spouseFiledLastYear"/>
                                </Not>
                                <!-- If the spouse has an IP pin, they will not have sign identity and can skip the completeness check -->
                                <Dependency module="filers" path="/spouseHasIpPin"/>
                                <!-- If spouse's last year's agi is used, it must be complete -->
                                <All>
                                    <Dependency module="signing" path="/spouseWillEnterLastYearAgi"/>
                                    <IsComplete>
                                        <Dependency module="signing" path="/spouseLastYearAgi"/>
                                    </IsComplete>
                                </All>
                                <!-- If spouse's last year's pin is used, it must be complete -->
                                <All>
                                    <Dependency module="signing" path="/spouseWillEnterLastYearPin"/>
                                    <IsComplete>
                                        <Dependency module="signing" path="/spouseSelfSelectPinLastYear"/>
                                    </IsComplete>
                                </All>
                            </Any>
                        </All>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/signSectionComplete">
            <Name>Sign section complete</Name>
            <Description>The sign section has been completed</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="signing" path="/isPaperPath"/>
                        </When>
                        <Then>
                            <Dependency path="/flowHasSeenPrintAndMail"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <Dependency path="/signSectionCompleteMarriedFilingJointlyFilers"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/signSectionCompleteSingleFiler"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/flowHasSeenPrintAndMail">
            <Name>Has seen the print and mail explainer</Name>
            <Description>A hack to track whether the user's seen the print and mail explainer if they are on the paper
                path
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
            <Placeholder>
                <False/>
            </Placeholder>
        </Fact>
        <Fact path="/flowHasSeenSignPaperFile">
            <Name>Has seen the paper file screen</Name>
            <Description>A hack to track whether the user's seen paper file screen</Description>
            <Writable>
                <Boolean/>
            </Writable>
            <Placeholder>
                <False/>
            </Placeholder>
        </Fact>
        <Fact path="/flowIncomplete">
            <Name>Flow is Incomplete</Name>
            <Description>
                Whether any required sections are incomplete.

                This should be updated whenever a `completeIf` is
                updated
                in the flow
            </Description>
            <BlockSubmissionOnTrue/>
            <Derived>
                <Not>
                    <All>
                        <Dependency module="refundPrefs" path="/completedOtherPrefsSection"/>
                        <Dependency path="/creditsSectionComplete"/>
                        <Dependency module="familyAndHousehold" path="/familyAndHouseholdIsDone"/>
                        <Dependency path="/flowHasSeenAmount"/>
                        <Dependency path="/deductionsSectionComplete"/>
                        <Dependency module="unemployment" path="/form1099GsIsDone"/>
                        <Dependency module="formW2s" path="/formW2sIsDone"/>
                        <Dependency module="interest" path="/interestReportsIsDone"/>
                        <Dependency module="paymentMethod" path="/paymentSectionComplete"/>
                        <Dependency module="form1099Rs" path="/form1099RsIsComplete"/>
                        <Dependency module="form1099Misc" path="/isApfSectionComplete"/>
                        <Dependency module="socialSecurity" path="/socialSecurityReportsIsDone"/>
                        <Dependency module="spouseSection" path="/spouseSectionCompleted"/>
                        <Dependency module="estimatedPayments" path="/estimatedTaxesIsComplete"/>
                        <Dependency module="cdcc" path="/cdccSectionIsComplete"/>
                        <IsComplete>
                            <Dependency module="filingStatus" path="/isFilingStatusComplete"/>
                        </IsComplete>
                        <Dependency module="income" path="/incomeSourcesIsComplete"/>
                        <IsComplete>
                            <Dependency module="estimatedPayments" path="/paidEstimatedTaxesOrFromLastYear"/>
                        </IsComplete>
                        <Dependency module="filers" path="/aboutYouIsComplete"/>
                        <Dependency module="cdcc" path="/dependentCareBenefitsIsComplete"/>
                        <Dependency module="hsa" path="/isHsaSectionComplete"/>
                        <Dependency module="income" path="/flowHasSeenTotalIncomeSummary"/>
                    </All>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/hasSeenIncomeNotSupportedIntro">
            <Description>A fact used to log some data to the backend
                about whether filers have seen the income soft-knockout
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/isResubmitting">
            <Name>Is Resubmitting</Name>
            <Description>Whether the Tax Payer has already submitted their return once, and is now resubmitting.
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/isAfterTaxDay">
            <Description>
                Is "today" after the filer's tax deadline
                This fact needs to be re-evaluated.
                https://git.irslabs.org/irslabs-prototypes/direct-file/-/issues/8045
            </Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/today" module="signing"/>
                    </Left>
                    <Right>
                        <Dependency path="/taxDay" module="filers"/>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/isAfterTaxDayAndNotResubmitting">
            <Description>
                Is "today" after the filer's tax deadline and is this not a resubmission (for which the filer would
                have more time)
                This fact needs to be
                re-evaluated.
                https://git.irslabs.org/irslabs-prototypes/direct-file/-/issues/8045
            </Description>
            <Derived>
                <False/>
            </Derived>
        </Fact>
        <Fact path="/isAfterResubmissionDeadline">
            <Description>
                Is "today" after the resubmission deadline, meaning DF is fully closed
                This fact needs to be
                re-evaluated. https://git.irslabs.org/irslabs-prototypes/direct-file/-/issues/8045
            </Description>
            <Derived>
                <False/>
            </Derived>
        </Fact>
        <Fact path="/isBeforeFederalTaxDeadline">
            <Description>
                Is "today" before or up to the federal tax deadline
                This fact needs to be re-evaluated.
                https://git.irslabs.org/irslabs-prototypes/direct-file/-/issues/8045
            </Description>
            <Derived>
                <True/>
            </Derived>
        </Fact>
        <Fact path="/isTooLateToFileOrResubmit">
            <Description>
                Is it too late to submit for the first time or resubmit at all?
                This fact needs to be re-evaluated.
                https://git.irslabs.org/irslabs-prototypes/direct-file/-/issues/8045
            </Description>
            <Derived>
                <Any>
                    <Dependency path="/isAfterTaxDayAndNotResubmitting"/>
                    <Dependency path="/isAfterResubmissionDeadline"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/claimedSpouseCombatPayWithoutMFJ">
            <Name>Claimed Spouse Combat Pay without a Spouse</Name>
            <Description>Filer selected a combat pay option referencing a spouse without having a spouse</Description>
            <BlockSubmissionOnTrue/>

            <Derived>
                <All>
                    <IsComplete>
                        <Dependency path="/combatPayElection"/>
                    </IsComplete>
                    <Not>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    </Not>
                    <Any>
                        <Equal>
                            <Left>
                                <Dependency path="/combatPayElection"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/combatPayOptions">useSpouseCombatPay</Enum>
                            </Right>
                        </Equal>
                        <Equal>
                            <Left>
                                <Dependency path="/combatPayElection"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/combatPayOptions">useBothCombatPay</Enum>
                            </Right>
                        </Equal>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/combatPayElection">
            <Name>Combat pay election</Name>
            <Description>Whether the taxpayer elects to include their nontaxable combat pay for EITC.

                They may choose to elect
                their own combat pay, their spouse's combat pay separately, or both of their combat pay should they each
                have
                combat pay.
            </Description>
            <Export downstreamFacts="true"/>

            <Writable>
                <Enum optionsPath="/combatPayOptions"/>
            </Writable>
        </Fact>
        <Fact path="/earnedIncomeCredit">
            <Name>Earned income credit (EITC)</Name>
            <Description>Earned income credit (EITC) (line 27 1040)

                We calculate the EITC up to four times -- EITC may be
                calculated with:
                1. No combat pay (for people without combat pay, and people who elect not to include their
                combat pay)
                2. With the primary filer's combat pay
                3. With the secondary filer's combat pay
                4. With both filer's
                combined combat pay.

                If a user qualifies for more than 1 of those options (most taxpayers do not have combat pay
                and will therefore default into the "no combat pay" option), we guide the taxpayer towards electing the
                combat
                pay option that will give them the most EITC.
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/eitcQualified"/>
                        </When>
                        <Then>
                            <Switch>
                                <Case>
                                    <When>
                                        <All>
                                            <Dependency module="formW2s" path="/someFilerHasCombatPay"/>
                                            <Equal>
                                                <Left>
                                                    <Dependency path="/combatPayElectionAndOrRecommendation"/>
                                                </Left>
                                                <Right>
                                                    <Enum optionsPath="/combatPayOptions">usePrimaryCombatPay</Enum>
                                                </Right>
                                            </Equal>
                                        </All>
                                    </When>
                                    <Then>
                                        <Dependency path="/eitcAmountWithPrimaryCombatPay"/>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <All>
                                            <Dependency module="formW2s" path="/someFilerHasCombatPay"/>
                                            <Equal>
                                                <Left>
                                                    <Dependency path="/combatPayElectionAndOrRecommendation"/>
                                                </Left>
                                                <Right>
                                                    <Enum optionsPath="/combatPayOptions">useSpouseCombatPay</Enum>
                                                </Right>
                                            </Equal>
                                        </All>
                                    </When>
                                    <Then>
                                        <Dependency path="/eitcAmountWithSecondaryCombatPay"/>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <All>
                                            <Dependency module="formW2s" path="/someFilerHasCombatPay"/>
                                            <Equal>
                                                <Left>
                                                    <Dependency path="/combatPayElectionAndOrRecommendation"/>
                                                </Left>
                                                <Right>
                                                    <Enum optionsPath="/combatPayOptions">useBothCombatPay</Enum>
                                                </Right>
                                            </Equal>
                                        </All>
                                    </When>
                                    <Then>
                                        <Dependency path="/eitcAmountWithBothTPCombatPay"/>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <All>
                                            <Dependency module="formW2s" path="/someFilerHasCombatPay"/>
                                            <Equal>
                                                <Left>
                                                    <Dependency path="/combatPayElectionAndOrRecommendation"/>
                                                </Left>
                                                <Right>
                                                    <Enum optionsPath="/combatPayOptions">usePrimaryNotSpouseCombatPay
                                                    </Enum>
                                                </Right>
                                            </Equal>
                                        </All>
                                    </When>
                                    <Then>
                                        <Dependency path="/eitcAmountWithPrimaryCombatPay"/>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <All>
                                            <Dependency module="formW2s" path="/someFilerHasCombatPay"/>
                                            <Equal>
                                                <Left>
                                                    <Dependency path="/combatPayElectionAndOrRecommendation"/>
                                                </Left>
                                                <Right>
                                                    <Enum optionsPath="/combatPayOptions">useSpouseNotPrimaryCombatPay
                                                    </Enum>
                                                </Right>
                                            </Equal>
                                        </All>
                                    </When>
                                    <Then>
                                        <Dependency path="/eitcAmountWithSecondaryCombatPay"/>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <!-- There has not been a combat pay election, or the user chose "noCombatPay" -->
                                        <True/>
                                    </When>
                                    <Then>
                                        <Dependency path="/eitcAmountWithoutCombatPay"/>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/isReceivingEitc">
            <Name>Is receiving EITC</Name>
            <Description>Whether the TP is receiving EITC</Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/earnedIncomeCredit"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/maxEitcFromAGI">
            <Description>
                The maximum amount of EITC that can be receieved based on the taxpayer's AGI.
            </Description>

            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency path="/eitcMaxCredit"/>
                    </Minuend>

                    <Subtrahends>
                        <Switch>
                            <Case>
                                <!-- If the threshold is greater than the lower bound of the row, we don't apply any phaseout -->
                                <When>
                                    <GreaterThan>
                                        <Left>
                                            <Add>
                                                <Dependency path="/eitcPhaseOutThreshold"/>
                                                <Dollar>25</Dollar>
                                            </Add>
                                        </Left>
                                        <Right>
                                            <Dependency path="/eitcRoundedAGI"/>
                                        </Right>
                                    </GreaterThan>
                                </When>
                                <Then>
                                    <Dollar>0</Dollar>
                                </Then>
                            </Case>
                            <Case>
                                <When>
                                    <True/>
                                </When>
                                <Then>
                                    <Multiply> <!-- Phaseout for income over the threshold -->
                                        <Dependency path="/eitcPhaseOutRate"/>
                                        <Subtract>
                                            <Minuend>
                                                <LesserOf>
                                                    <!-- The midpoint of the row -->
                                                    <Dependency path="/eitcRoundedAGI"/>
                                                    <!-- The midpoint of the lower bound of the row and the completed phaseout amount-->
                                                    <Divide>
                                                        <Dividend>
                                                            <Add>
                                                                <Dependency path="/eitcPhaseoutAmountLowerBound"/>
                                                                <Dependency path="/eitcCompletedPhaseoutAmount"/>
                                                            </Add>
                                                        </Dividend>
                                                        <Divisors>
                                                            <Int>2</Int>
                                                        </Divisors>
                                                    </Divide>
                                                </LesserOf>
                                            </Minuend>
                                            <Subtrahends>
                                                <Dependency path="/eitcPhaseOutThreshold"/>
                                            </Subtrahends>
                                        </Subtract>
                                    </Multiply>
                                </Then>
                            </Case>
                        </Switch>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/eitcAmountWithoutCombatPay">
            <Name>The amount of the Earned Income Tax Credit without combat pay</Name>
            <Description>The amount of EITC, if the taxpayer is eligible. Magic numbers come from
                https://www.irs.gov/pub/irs-drop/rp-21-45.pdf and will need to be updated for 2023 with
                https://www.irs.gov/pub/irs-drop/rp-22-38.pdf
            </Description>

            <Derived>
                <GreaterOf> <!-- Cannot be less than zero -->
                    <Dollar>0</Dollar>
                    <Round>
                        <LesserOf>
                            <Dependency path="/maxEitcFromAGI"/>
                            <Subtract>
                                <Minuend>
                                    <Switch>
                                        <!-- If the upper band of the row would exceed the max credit, use the max credit -->
                                        <Case>
                                            <When>
                                                <GreaterThanOrEqual>
                                                    <Left>
                                                        <Multiply> <!-- Multiply earned income by the phase in rate -->
                                                            <Dependency path="/eitcPhaseInRate"/>
                                                            <Add>
                                                                <Dependency
                                                                        path="/eitcRoundedEarnedIncomeWithoutCombatPay"/>
                                                                <Dollar>24</Dollar>
                                                            </Add>
                                                        </Multiply>
                                                    </Left>
                                                    <Right>
                                                        <Dependency path="/eitcMaxCredit"/>
                                                    </Right>
                                                </GreaterThanOrEqual>
                                            </When>
                                            <Then>
                                                <Dependency path="/eitcMaxCredit"/>
                                            </Then>
                                        </Case>
                                        <!-- Otherwise, use the normal calculation -->
                                        <Case>
                                            <When>
                                                <True/>
                                            </When>
                                            <Then>
                                                <LesserOf> <!-- Cannot exceed the limit -->
                                                    <Dependency path="/eitcMaxCredit"/>
                                                    <Multiply> <!-- Multiply earned income by the phase in rate -->
                                                        <Dependency path="/eitcPhaseInRate"/>
                                                        <Dependency path="/eitcRoundedEarnedIncomeWithoutCombatPay"/>
                                                    </Multiply>
                                                </LesserOf>
                                            </Then>
                                        </Case>
                                    </Switch>
                                </Minuend>

                                <Subtrahends>
                                    <Switch>
                                        <Case>
                                            <!-- If the threshold is greater than the lower bound of the row, we don't apply any phaseout -->
                                            <When>
                                                <GreaterThan>
                                                    <Left>
                                                        <Add>
                                                            <Dependency path="/eitcPhaseOutThreshold"/>
                                                            <Dollar>25</Dollar>
                                                        </Add>
                                                    </Left>
                                                    <Right>
                                                        <Dependency path="/eitcRoundedEarnedIncomeWithoutCombatPay"/>
                                                    </Right>
                                                </GreaterThan>
                                            </When>
                                            <Then>
                                                <Dollar>0</Dollar>
                                            </Then>
                                        </Case>
                                        <Case>
                                            <When>
                                                <True/>
                                            </When>
                                            <Then>
                                                <Multiply> <!-- Phaseout for income over the threshold -->
                                                    <Dependency path="/eitcPhaseOutRate"/>
                                                    <Subtract>
                                                        <Minuend>
                                                            <LesserOf>
                                                                <!-- The midpoint of the row -->
                                                                <Dependency
                                                                        path="/eitcRoundedEarnedIncomeWithoutCombatPay"/>
                                                                <!-- The midpoint of the lower bound of the row and the completed phaseout amount-->
                                                                <Divide>
                                                                    <Dividend>
                                                                        <Add>
                                                                            <Dependency
                                                                                    path="/eitcPhaseoutAmountLowerBound"/>
                                                                            <Dependency
                                                                                    path="/eitcCompletedPhaseoutAmount"/>
                                                                        </Add>
                                                                    </Dividend>
                                                                    <Divisors>
                                                                        <Int>2</Int>
                                                                    </Divisors>
                                                                </Divide>
                                                            </LesserOf>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dependency path="/eitcPhaseOutThreshold"/>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Then>
                                        </Case>
                                    </Switch>
                                </Subtrahends>
                            </Subtract>
                        </LesserOf>
                    </Round>
                </GreaterOf>
            </Derived>
        </Fact>
        <Fact path="/eitcRoundedEarnedIncomeWithoutCombatPay">
            <Name>Rounded earned income for EITC without combat pay</Name>
            <Description>In order to match the EITC table from Publication 596, we must round the income to match the
                rows,
                which use increments of $50, calculating the amount of the credit for the midpoint of row (i.e. $25,
                $75, $125,
                etc.).
            </Description>
            <Derived>
                <Add>
                    <StepwiseMultiply>
                        <Multiplicand>
                            <Dependency module="income" path="/employerIncomeSubtotal"/>
                        </Multiplicand>
                        <Rate>
                            <Rational>50/50</Rational> <!-- $50 for every whole $50 of income -->
                        </Rate>
                    </StepwiseMultiply>
                    <Dollar>25</Dollar> <!-- Add $25 to find the midpoint of the row -->
                </Add>
            </Derived>
        </Fact>
        <Fact path="/eitcAmountWithPrimaryCombatPay">
            <Name>The amount of the Earned Income Tax Credit with primary filer combat pay</Name>
            <Description>The amount of EITC, if the taxpayer is eligible. Magic numbers come from
                https://www.irs.gov/pub/irs-drop/rp-21-45.pdf and will need to be updated for 2023 with
                https://www.irs.gov/pub/irs-drop/rp-22-38.pdf
            </Description>

            <Derived>
                <GreaterOf> <!-- Cannot be less than zero -->
                    <Dollar>0</Dollar>
                    <Round>
                        <LesserOf>
                            <Dependency path="/maxEitcFromAGI"/>
                            <Subtract>
                                <Minuend>
                                    <Switch>
                                        <!-- If the upper band of the row would exceed the max credit, use the max credit -->
                                        <Case>
                                            <When>
                                                <GreaterThanOrEqual>
                                                    <Left>
                                                        <Multiply> <!-- Multiply earned income by the phase in rate -->
                                                            <Dependency path="/eitcPhaseInRate"/>
                                                            <Add>
                                                                <Dependency
                                                                        path="/eitcRoundedEarnedIncomeWithPrimaryCombatPay"/>
                                                                <Dollar>24</Dollar>
                                                            </Add>
                                                        </Multiply>
                                                    </Left>
                                                    <Right>
                                                        <Dependency path="/eitcMaxCredit"/>
                                                    </Right>
                                                </GreaterThanOrEqual>
                                            </When>
                                            <Then>
                                                <Dependency path="/eitcMaxCredit"/>
                                            </Then>
                                        </Case>
                                        <!-- Otherwise, use the normal calculation -->
                                        <Case>
                                            <When>
                                                <True/>
                                            </When>
                                            <Then>
                                                <LesserOf> <!-- Cannot exceed the limit -->
                                                    <Dependency path="/eitcMaxCredit"/>
                                                    <Multiply> <!-- Multiply earned income by the phase in rate -->
                                                        <Dependency path="/eitcPhaseInRate"/>
                                                        <Dependency
                                                                path="/eitcRoundedEarnedIncomeWithPrimaryCombatPay"/>
                                                    </Multiply>
                                                </LesserOf>
                                            </Then>
                                        </Case>
                                    </Switch>
                                </Minuend>

                                <Subtrahends>
                                    <Switch>
                                        <Case>
                                            <!-- If the threshold is greater than the lower bound of the row, we don't apply any phaseout -->
                                            <When>
                                                <GreaterThan>
                                                    <Left>
                                                        <Add>
                                                            <Dependency path="/eitcPhaseOutThreshold"/>
                                                            <Dollar>25</Dollar>
                                                        </Add>
                                                    </Left>
                                                    <Right>
                                                        <Dependency
                                                                path="/eitcRoundedEarnedIncomeWithPrimaryCombatPay"/>
                                                    </Right>
                                                </GreaterThan>
                                            </When>
                                            <Then>
                                                <Dollar>0</Dollar>
                                            </Then>
                                        </Case>
                                        <Case>
                                            <When>
                                                <True/>
                                            </When>
                                            <Then>
                                                <Multiply> <!-- Phaseout for income over the threshold -->
                                                    <Dependency path="/eitcPhaseOutRate"/>
                                                    <Subtract>
                                                        <Minuend>
                                                            <LesserOf>
                                                                <!-- The midpoint of the row -->
                                                                <Dependency
                                                                        path="/eitcRoundedEarnedIncomeWithPrimaryCombatPay"/>
                                                                <!-- The midpoint of the lower bound of the row and the completed phaseout amount-->
                                                                <Divide>
                                                                    <Dividend>
                                                                        <Add>
                                                                            <Dependency
                                                                                    path="/eitcPhaseoutAmountLowerBound"/>
                                                                            <Dependency
                                                                                    path="/eitcCompletedPhaseoutAmount"/>
                                                                        </Add>
                                                                    </Dividend>
                                                                    <Divisors>
                                                                        <Int>2</Int>
                                                                    </Divisors>
                                                                </Divide>
                                                            </LesserOf>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dependency path="/eitcPhaseOutThreshold"/>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Then>
                                        </Case>
                                    </Switch>
                                </Subtrahends>
                            </Subtract>
                        </LesserOf>
                    </Round>
                </GreaterOf>
            </Derived>
        </Fact>
        <Fact path="/earnedIncomePlusPrimaryCombatPay">
            <Name>Earned income plus primary combat pay</Name>
            <Derived>
                <Add>
                    <Dependency module="formW2s" path="/primaryFilerCombatPay"/>
                    <Dependency module="income" path="/employerIncomeSubtotal"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/eitcRoundedEarnedIncomeWithPrimaryCombatPay">
            <Name>Rounded earned income for EITC with a primary filer's combat pay</Name>
            <Description>In order to match the EITC table from Publication 596, we must round the income to match the
                rows,
                which use increments of $50, calculating the amount of the credit for the midpoint of row (i.e. $25,
                $75, $125,
                etc.).
            </Description>
            <Derived>
                <Add>
                    <StepwiseMultiply>
                        <Multiplicand>
                            <Dependency path="/earnedIncomePlusPrimaryCombatPay"/>
                        </Multiplicand>
                        <Rate>
                            <Rational>50/50</Rational> <!-- $50 for every whole $50 of income -->
                        </Rate>
                    </StepwiseMultiply>
                    <Dollar>25</Dollar> <!-- Add $25 to find the midpoint of the row -->
                </Add>
            </Derived>
        </Fact>
        <Fact path="/eitcAmountWithSecondaryCombatPay">
            <Name>The amount of the Earned Income Tax Credit with secondary filer combat pay</Name>
            <Description>The amount of EITC, if the taxpayer is eligible. Magic numbers come from
                https://www.irs.gov/pub/irs-drop/rp-21-45.pdf and will need to be updated for 2023 with
                https://www.irs.gov/pub/irs-drop/rp-22-38.pdf
            </Description>

            <Derived>
                <GreaterOf> <!-- Cannot be less than zero -->
                    <Dollar>0</Dollar>
                    <Round>
                        <LesserOf>
                            <Dependency path="/maxEitcFromAGI"/>
                            <Subtract>
                                <Minuend>
                                    <Switch>
                                        <!-- If the upper band of the row would exceed the max credit, use the max credit -->
                                        <Case>
                                            <When>
                                                <GreaterThanOrEqual>
                                                    <Left>
                                                        <Multiply> <!-- Multiply earned income by the phase in rate -->
                                                            <Dependency path="/eitcPhaseInRate"/>
                                                            <Add>
                                                                <Dependency
                                                                        path="/eitcRoundedEarnedIncomeWithSecondaryCombatPay"/>
                                                                <Dollar>24</Dollar>
                                                            </Add>
                                                        </Multiply>
                                                    </Left>
                                                    <Right>
                                                        <Dependency path="/eitcMaxCredit"/>
                                                    </Right>
                                                </GreaterThanOrEqual>
                                            </When>
                                            <Then>
                                                <Dependency path="/eitcMaxCredit"/>
                                            </Then>
                                        </Case>
                                        <!-- Otherwise, use the normal calculation -->
                                        <Case>
                                            <When>
                                                <True/>
                                            </When>
                                            <Then>
                                                <LesserOf> <!-- Cannot exceed the limit -->
                                                    <Dependency path="/eitcMaxCredit"/>
                                                    <Multiply> <!-- Multiply earned income by the phase in rate -->
                                                        <Dependency path="/eitcPhaseInRate"/>
                                                        <Dependency
                                                                path="/eitcRoundedEarnedIncomeWithSecondaryCombatPay"/>
                                                    </Multiply>
                                                </LesserOf>
                                            </Then>
                                        </Case>
                                    </Switch>
                                </Minuend>

                                <Subtrahends>
                                    <Switch>
                                        <Case>
                                            <!-- If the threshold is greater than the lower bound of the row, we don't apply any phaseout -->
                                            <When>
                                                <GreaterThan>
                                                    <Left>
                                                        <Add>
                                                            <Dependency path="/eitcPhaseOutThreshold"/>
                                                            <Dollar>25</Dollar>
                                                        </Add>
                                                    </Left>
                                                    <Right>
                                                        <Dependency
                                                                path="/eitcRoundedEarnedIncomeWithSecondaryCombatPay"/>
                                                    </Right>
                                                </GreaterThan>
                                            </When>
                                            <Then>
                                                <Dollar>0</Dollar>
                                            </Then>
                                        </Case>
                                        <Case>
                                            <When>
                                                <True/>
                                            </When>
                                            <Then>
                                                <Multiply> <!-- Phaseout for income over the threshold -->
                                                    <Dependency path="/eitcPhaseOutRate"/>
                                                    <Subtract>
                                                        <Minuend>
                                                            <LesserOf>
                                                                <!-- The midpoint of the row -->
                                                                <Dependency
                                                                        path="/eitcRoundedEarnedIncomeWithSecondaryCombatPay"/>
                                                                <!-- The midpoint of the lower bound of the row and the completed phaseout amount-->
                                                                <Divide>
                                                                    <Dividend>
                                                                        <Add>
                                                                            <Dependency
                                                                                    path="/eitcPhaseoutAmountLowerBound"/>
                                                                            <Dependency
                                                                                    path="/eitcCompletedPhaseoutAmount"/>
                                                                        </Add>
                                                                    </Dividend>
                                                                    <Divisors>
                                                                        <Int>2</Int>
                                                                    </Divisors>
                                                                </Divide>
                                                            </LesserOf>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dependency path="/eitcPhaseOutThreshold"/>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Then>
                                        </Case>
                                    </Switch>
                                </Subtrahends>
                            </Subtract>
                        </LesserOf>
                    </Round>
                </GreaterOf>
            </Derived>
        </Fact>
        <Fact path="/earnedIncomePlusSpouseCombatPay">
            <Name>Earned income plus spouse combat pay</Name>
            <Derived>
                <Add>
                    <Dependency module="formW2s" path="/MFJSpouseCombatPay"/>
                    <Dependency module="income" path="/employerIncomeSubtotal"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/eitcRoundedEarnedIncomeWithSecondaryCombatPay">
            <Name>Rounded earned income for EITC with an MFJ spouse's combat pay</Name>
            <Description>In order to match the EITC table from Publication 596, we must round the income to match the
                rows,
                which use increments of $50, calculating the amount of the credit for the midpoint of row (i.e. $25,
                $75, $125,
                etc.).
            </Description>
            <Derived>
                <Add>
                    <StepwiseMultiply>
                        <Multiplicand>
                            <Dependency path="/earnedIncomePlusSpouseCombatPay"/>
                        </Multiplicand>
                        <Rate>
                            <Rational>50/50</Rational> <!-- $50 for every whole $50 of income -->
                        </Rate>
                    </StepwiseMultiply>
                    <Dollar>25</Dollar> <!-- Add $25 to find the midpoint of the row -->
                </Add>
            </Derived>
        </Fact>
        <Fact path="/eitcAmountWithBothTPCombatPay">
            <Name>The amount of the Earned Income Tax Credit with secondary filer combat pay</Name>
            <Description>The amount of EITC, if the taxpayer is eligible. Magic numbers come from
                https://www.irs.gov/pub/irs-drop/rp-21-45.pdf and will need to be updated for 2023 with
                https://www.irs.gov/pub/irs-drop/rp-22-38.pdf
            </Description>

            <Derived>
                <GreaterOf> <!-- Cannot be less than zero -->
                    <Dollar>0</Dollar>
                    <Round>
                        <LesserOf>
                            <Dependency path="/maxEitcFromAGI"/>
                            <Subtract>
                                <Minuend>
                                    <Switch>
                                        <!-- If the upper band of the row would exceed the max credit, use the max credit -->
                                        <Case>
                                            <When>
                                                <GreaterThanOrEqual>
                                                    <Left>
                                                        <Multiply> <!-- Multiply earned income by the phase in rate -->
                                                            <Dependency path="/eitcPhaseInRate"/>
                                                            <Add>
                                                                <Dependency
                                                                        path="/eitcRoundedEarnedIncomeWithBothTPCombatPay"/>
                                                                <Dollar>24</Dollar>
                                                            </Add>
                                                        </Multiply>
                                                    </Left>
                                                    <Right>
                                                        <Dependency path="/eitcMaxCredit"/>
                                                    </Right>
                                                </GreaterThanOrEqual>
                                            </When>
                                            <Then>
                                                <Dependency path="/eitcMaxCredit"/>
                                            </Then>
                                        </Case>
                                        <!-- Otherwise, use the normal calculation -->
                                        <Case>
                                            <When>
                                                <True/>
                                            </When>
                                            <Then>
                                                <LesserOf> <!-- Cannot exceed the limit -->
                                                    <Dependency path="/eitcMaxCredit"/>
                                                    <Multiply> <!-- Multiply earned income by the phase in rate -->
                                                        <Dependency path="/eitcPhaseInRate"/>
                                                        <Dependency path="/eitcRoundedEarnedIncomeWithBothTPCombatPay"/>
                                                    </Multiply>
                                                </LesserOf>
                                            </Then>
                                        </Case>
                                    </Switch>
                                </Minuend>

                                <Subtrahends>
                                    <Switch>
                                        <Case>
                                            <!-- If the threshold is greater than the lower bound of the row, we don't apply any phaseout -->
                                            <When>
                                                <GreaterThan>
                                                    <Left>
                                                        <Add>
                                                            <Dependency path="/eitcPhaseOutThreshold"/>
                                                            <Dollar>25</Dollar>
                                                        </Add>
                                                    </Left>
                                                    <Right>
                                                        <Dependency path="/eitcRoundedEarnedIncomeWithBothTPCombatPay"/>
                                                    </Right>
                                                </GreaterThan>
                                            </When>
                                            <Then>
                                                <Dollar>0</Dollar>
                                            </Then>
                                        </Case>
                                        <Case>
                                            <When>
                                                <True/>
                                            </When>
                                            <Then>
                                                <Multiply> <!-- Phaseout for income over the threshold -->
                                                    <Dependency path="/eitcPhaseOutRate"/>
                                                    <Subtract>
                                                        <Minuend>
                                                            <LesserOf>
                                                                <!-- The midpoint of the row -->
                                                                <Dependency
                                                                        path="/eitcRoundedEarnedIncomeWithBothTPCombatPay"/>
                                                                <!-- The midpoint of the lower bound of the row and the completed phaseout amount-->
                                                                <Divide>
                                                                    <Dividend>
                                                                        <Add>
                                                                            <Dependency
                                                                                    path="/eitcPhaseoutAmountLowerBound"/>
                                                                            <Dependency
                                                                                    path="/eitcCompletedPhaseoutAmount"/>
                                                                        </Add>
                                                                    </Dividend>
                                                                    <Divisors>
                                                                        <Int>2</Int>
                                                                    </Divisors>
                                                                </Divide>
                                                            </LesserOf>
                                                        </Minuend>
                                                        <Subtrahends>
                                                            <Dependency path="/eitcPhaseOutThreshold"/>
                                                        </Subtrahends>
                                                    </Subtract>
                                                </Multiply>
                                            </Then>
                                        </Case>
                                    </Switch>
                                </Subtrahends>
                            </Subtract>
                        </LesserOf>
                    </Round>
                </GreaterOf>
            </Derived>
        </Fact>
        <Fact path="/earnedIncomePlusBothTPCombatPay">
            <Name>Earned income plus primary and spouse combat pay</Name>
            <Derived>
                <Add>
                    <Dependency module="formW2s" path="/primaryFilerCombatPay"/>
                    <Dependency module="formW2s" path="/MFJSpouseCombatPay"/>
                    <Dependency module="income" path="/employerIncomeSubtotal"/>
                </Add>
            </Derived>
        </Fact>
        <Fact path="/eitcRoundedEarnedIncomeWithBothTPCombatPay">
            <Name>Rounded earned income for EITC with an MFJ spouse's combat pay</Name>
            <Description>In order to match the EITC table from Publication 596, we must round the income to match the
                rows,
                which use increments of $50, calculating the amount of the credit for the midpoint of row (i.e. $25,
                $75, $125,
                etc.).
            </Description>
            <Derived>
                <Add>
                    <StepwiseMultiply>
                        <Multiplicand>
                            <Dependency path="/earnedIncomePlusBothTPCombatPay"/>
                        </Multiplicand>
                        <Rate>
                            <Rational>50/50</Rational> <!-- $50 for every whole $50 of income -->
                        </Rate>
                    </StepwiseMultiply>
                    <Dollar>25</Dollar> <!-- Add $25 to find the midpoint of the row -->
                </Add>
            </Derived>
        </Fact>
        <Fact path="/eitcRoundedAGI">
            <Name>Rounded AGI for EITC</Name>
            <Description>In order to match the EITC table from Publication 596, we must round the income to match the
                rows,
                which use increments of $50, calculating the amount of the credit for the midpoint of row (i.e. $25,
                $75, $125,
                etc.).
            </Description>
            <Derived>
                <Add>
                    <StepwiseMultiply>
                        <Multiplicand>
                            <Dependency module="taxCalculations" path="/agi"/>
                        </Multiplicand>
                        <Rate>
                            <Rational>50/50</Rational> <!-- $50 for every whole $50 of income -->
                        </Rate>
                    </StepwiseMultiply>
                    <Dollar>25</Dollar> <!-- Add $25 to find the midpoint of the row -->
                </Add>
            </Derived>
        </Fact>
        <Fact path="/eitcMaxCredit">
            <Name>EITC maximum credit amount</Name>
            <Description>The maximum amount of EITC a taxpayer can recieve, depending on the number of qualifying
                children.
            </Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency module="familyAndHousehold"
                                                path="/numEitcDependentsCollectionForCalculation"/>
                                </Left>
                                <Right>
                                    <Int>0</Int>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Dependency path="/maxEitcWith0QualifyingChildren"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency module="familyAndHousehold"
                                                path="/numEitcDependentsCollectionForCalculation"/>
                                </Left>
                                <Right>
                                    <Int>1</Int>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Dependency path="/maxEitcWith1QualifyingChild"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency module="familyAndHousehold"
                                                path="/numEitcDependentsCollectionForCalculation"/>
                                </Left>
                                <Right>
                                    <Int>2</Int>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Dependency path="/maxEitcWith2QualifyingChildren"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <GreaterThanOrEqual>
                                <Left>
                                    <Dependency module="familyAndHousehold"
                                                path="/numEitcDependentsCollectionForCalculation"/>
                                </Left>
                                <Right>
                                    <Int>3</Int>
                                </Right>
                            </GreaterThanOrEqual>
                        </When>
                        <Then>
                            <Dependency path="/maxEitcWith3OrMoreQualifyingChildren"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/phaseInEndsFor0QualifyingChildren">
            <Name>Maximum phase in amount with 0 children</Name>
            <Description>The earned income amount which provides the max EITC with 0 qualifying children
                Rev Proc .06 Earned
                Income Credit §32(b)
            </Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Dollar>8260</Dollar>
            </Derived>
        </Fact>
        <Fact path="/phaseInEndsFor1QualifyingChild">
            <Name>Maximum phase in amount with 1 child</Name>
            <Description>The earned income amount which provides the max EITC with 1 qualifying child
                Rev Proc .06 Earned
                Income Credit §32(b)
            </Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Dollar>12390</Dollar>
            </Derived>
        </Fact>
        <Fact path="/phaseInEndsFor2OrMoreQualifyingChildren">
            <Name>Maximum phase in amount with 2 or more children</Name>
            <Description>The earned income amount which provides the max EITC with 2 or more qualifying children
                Rev Proc .06
                Earned Income Credit §32(b)
            </Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Dollar>17400</Dollar>
            </Derived>
        </Fact>
        <Fact path="/maxEitcWith0QualifyingChildren">
            <Name>Maximum EITC amount with 0 children</Name>
            <Description>The maximum earned income tax credit with 0 qualifying children</Description>

            <Derived>
                <Round>
                    <Multiply>
                        <Dependency path="/phaseInRatesFor0Qc"/>
                        <Dependency path="/phaseInEndsFor0QualifyingChildren"/>
                    </Multiply>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/maxEitcWith1QualifyingChild">
            <Name>Maximum EITC amount with 1 child</Name>
            <Description>The maximum earned income tax credit with 1 qualifying child</Description>

            <Derived>
                <Round>
                    <Multiply>
                        <Dependency path="/phaseInRatesFor1Qc"/>
                        <Dependency path="/phaseInEndsFor1QualifyingChild"/>
                    </Multiply>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/maxEitcWith2QualifyingChildren">
            <Name>Maximum EITC amount with 2 children</Name>
            <Description>The maximum earned income tax credit with 2 qualifying children</Description>

            <Derived>
                <Round>
                    <Multiply>
                        <Dependency path="/phaseInRatesFor2Qc"/>
                        <Dependency path="/phaseInEndsFor2OrMoreQualifyingChildren"/>
                    </Multiply>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/maxEitcWith3OrMoreQualifyingChildren">
            <Name>Maximum EITC amount with 3 or more children</Name>
            <Description>The maximum earned income tax credit with 3 or more qualifying children</Description>

            <Derived>
                <Round>
                    <Multiply>
                        <Dependency path="/phaseInRatesFor3OrMoreQc"/>
                        <Dependency path="/phaseInEndsFor2OrMoreQualifyingChildren"/>
                    </Multiply>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/roundedMaxEitcWith0QualifyingChildren">
            <Name>Rounded maximum EITC amount with 0 children</Name>
            <Description>The rounded version of maxEitcWith0QualifyingChildren</Description>

            <Derived>
                <Round>
                    <Dependency path="/maxEitcWith0QualifyingChildren"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/roundedMaxEitcWith1QualifyingChild">
            <Name>Rounded maximum EITC amount with 1 child</Name>
            <Description>The rounded version of maxEitcWith1QualifyingChild</Description>

            <Derived>
                <Round>
                    <Dependency path="/maxEitcWith1QualifyingChild"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/roundedMaxEitcWith2QualifyingChildren">
            <Name>Rounded maximum EITC amount with 2 children</Name>
            <Description>The rounded version of maxEitcWith2QualifyingChildren</Description>

            <Derived>
                <Round>
                    <Dependency path="/maxEitcWith2QualifyingChildren"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/roundedMaxEitcWith3OrMoreQualifyingChildren">
            <Name>Rounded maximum EITC amount with 3 ore more children</Name>
            <Description>The rounded version of maxEitcWith3OrMoreQualifyingChildren</Description>

            <Derived>
                <Round>
                    <Dependency path="/maxEitcWith3OrMoreQualifyingChildren"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/phaseInRatesFor0Qc">
            <Name>Phase in rate for 0 qualifying children</Name>

            <Derived>
                <Rational>765/10000</Rational>
            </Derived>
        </Fact>
        <Fact path="/phaseInRatesFor1Qc">
            <Name>Phase in rate for 1 qualifying child</Name>

            <Derived>
                <Rational>34/100</Rational>
            </Derived>
        </Fact>
        <Fact path="/phaseInRatesFor2Qc">
            <Name>Phase in rate for 2 qualifying children</Name>

            <Derived>
                <Rational>40/100</Rational>
            </Derived>
        </Fact>
        <Fact path="/phaseInRatesFor3OrMoreQc">
            <Name>Phase in rate for 3 or more qualifying children</Name>

            <Derived>
                <Rational>45/100</Rational>
            </Derived>
        </Fact>
        <Fact path="/eitcPhaseInRate">
            <Name>EITC phase in rate</Name>
            <Description>The rate at which EITC phases in with income.</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency module="familyAndHousehold"
                                                path="/numEitcDependentsCollectionForCalculation"/>
                                </Left>
                                <Right>
                                    <Int>0</Int>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Dependency path="/phaseInRatesFor0Qc"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency module="familyAndHousehold"
                                                path="/numEitcDependentsCollectionForCalculation"/>
                                </Left>
                                <Right>
                                    <Int>1</Int>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Dependency path="/phaseInRatesFor1Qc"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency module="familyAndHousehold"
                                                path="/numEitcDependentsCollectionForCalculation"/>
                                </Left>
                                <Right>
                                    <Int>2</Int>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Dependency path="/phaseInRatesFor2Qc"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <GreaterThanOrEqual>
                                <Left>
                                    <Dependency module="familyAndHousehold"
                                                path="/numEitcDependentsCollectionForCalculation"/>
                                </Left>
                                <Right>
                                    <Int>3</Int>
                                </Right>
                            </GreaterThanOrEqual>
                        </When>
                        <Then>
                            <Dependency path="/phaseInRatesFor3OrMoreQc"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/eitcPhaseOutRate">
            <Name>EITC phase out rate</Name>
            <Description>The rate at which EITC phases out as income exceeds the threshold amount.</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency module="familyAndHousehold"
                                                path="/numEitcDependentsCollectionForCalculation"/>
                                </Left>
                                <Right>
                                    <Int>0</Int>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Rational>765/10000</Rational>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency module="familyAndHousehold"
                                                path="/numEitcDependentsCollectionForCalculation"/>
                                </Left>
                                <Right>
                                    <Int>1</Int>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Rational>1598/10000</Rational>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <GreaterThanOrEqual>
                                <Left>
                                    <Dependency module="familyAndHousehold"
                                                path="/numEitcDependentsCollectionForCalculation"/>
                                </Left>
                                <Right>
                                    <Int>2</Int>
                                </Right>
                            </GreaterThanOrEqual>
                        </When>
                        <Then>
                            <Rational>2106/10000</Rational>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/eitcPhaseOutThreshold">
            <Name>EITC phaseout amount threshold</Name>
            <Description>The amount of income above which the amount of EITC begins to be reduced.
                Rev Proc .06 Earned Income
                Credit §32(b)
            </Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Any>
                                <Dependency module="filingStatus" path="/isFilingStatusSingle"/>
                                <Dependency module="filingStatus" path="/isFilingStatusHOH"/>
                                <Dependency module="filingStatus" path="/isFilingStatusQSS"/>
                                <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                            </Any>
                        </When>
                        <Then>
                            <Switch>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency module="familyAndHousehold"
                                                            path="/numEitcDependentsCollectionForCalculation"/>
                                            </Left>
                                            <Right>
                                                <Int>0</Int>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Dollar>10330</Dollar>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <GreaterThanOrEqual>
                                            <Left>
                                                <Dependency module="familyAndHousehold"
                                                            path="/numEitcDependentsCollectionForCalculation"/>
                                            </Left>
                                            <Right>
                                                <Int>1</Int>
                                            </Right>
                                        </GreaterThanOrEqual>
                                    </When>
                                    <Then>
                                        <Dollar>22720</Dollar>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <Switch>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency module="familyAndHousehold"
                                                            path="/numEitcDependentsCollectionForCalculation"/>
                                            </Left>
                                            <Right>
                                                <Int>0</Int>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Dollar>17250</Dollar>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <GreaterThanOrEqual>
                                            <Left>
                                                <Dependency module="familyAndHousehold"
                                                            path="/numEitcDependentsCollectionForCalculation"/>
                                            </Left>
                                            <Right>
                                                <Int>1</Int>
                                            </Right>
                                        </GreaterThanOrEqual>
                                    </When>
                                    <Then>
                                        <Dollar>29640</Dollar>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/belowEitcInvestmentIncomeLimit">
            <Name>Below EITC Investment Income Limit</Name>
            <Description>Whether the TP's Investment Income is low enough for the EITC
                Rev Proc .06 Earned Income Credit §32(i)
            </Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <LessThanOrEqual>
                    <Left>
                        <!-- The investment income from lines 2a, 2b, 3b, and 7 per 1040 instructions -->
                        <Add>
                            <Dependency module="interest" path="/taxExemptInterest"/>
                            <Dependency module="interest" path="/interestIncome"/>
                            <Dependency module="income" path="/ordinaryDividends"/>
                            <GreaterOf>
                                <Dependency module="income" path="/capitalGainsOrLosses"/>
                                <Dollar>0</Dollar>
                            </GreaterOf>
                        </Add>
                    </Left>
                    <Right>
                        <!-- Limit for 2024 -->
                        <Dollar>11600</Dollar>
                    </Right>
                </LessThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/eitcQcOfAnother">
            <Name>EITC QC Of Another</Name>
            <Description>Whether the TP or their spouse, if applicable, could be someone else's QC for EITC
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/eitcQcOfAnotherRequiredToFile">
            <Name>EITC QC Of Another Required to file</Name>
            <Description>Whether the person who can claim TP or SP as a QC for EITC is required tofile</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/eitcQcOfAnotherIsFiling">
            <Name>EITC QC Of Another is filing</Name>
            <Description>Whether the person who can claim TP or SP as a QC for EITC is filing</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/eitcQcOfAnotherIsFilingRefundOnly">
            <Name>EITC QC Of Another is filing</Name>
            <Description>Whether the person who can claim TP or SP as a QC for EITC is filing for a refund only
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/flowShowNotEitcQc">
            <Name>Flow whether to show eitc qc summary</Name>
            <Description>Whether to show that the TP is eligible for EITC despite being QC of another.</Description>

            <Derived>
                <All>
                    <Dependency path="/eitcQcTest"/>
                    <Dependency path="/eitcQcOfAnother"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/eitcQcTest">
            <Name>EITC QC Test</Name>
            <Description>Whether the TP qualifies for EITC when accounting for the possibility that they could be the QC
                of
                another TP.
            </Description>

            <Derived>
                <Any>
                    <Not>
                        <!-- TP is not QC of another -->
                        <Dependency path="/eitcQcOfAnother"/>
                    </Not>
                    <!-- TP QC of another and they are not required to file -->
                    <All>
                        <Dependency path="/eitcQcOfAnother"/>
                        <Not>
                            <Dependency path="/eitcQcOfAnotherRequiredToFile"/>
                        </Not>
                        <Any>
                            <!-- and they choose not to file, so TP is not a QC -->
                            <Not>
                                <Dependency path="/eitcQcOfAnotherIsFiling"/>
                            </Not>
                            <!-- or they file for refund only, so TP is not a QC -->
                            <All>
                                <Dependency path="/eitcQcOfAnotherIsFiling"/>
                                <Dependency path="/eitcQcOfAnotherIsFilingRefundOnly"/>
                            </All>
                        </Any>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/failsEitcQcTest">
            <Name>Fails EITC QC Test</Name>
            <Description>Whether the TP does not qualify for EITC when accounting for the possibility that they could be
                the
                QC of another TP. Used in Schedule 8862 to answer Part II line 4
            </Description>
            <Export mef="true"/>

            <Derived>
                <Not>
                    <Dependency path="/eitcQcTest"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/pdf8862Line4Yes">
            <Name>Form 8862 Line 4 Yes checkbox</Name>
            <Description>Whether the PDF checkbox should be checked.</Description>

            <Derived>
                <All>
                    <Dependency path="/failsEitcQcTest"/>
                    <Dependency path="/eitc8862Required"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/pdf8862Line4No">
            <Name>Form 8862 Line 4 No checkbox</Name>
            <Description>Whether the PDF checkbox should be checked.</Description>

            <Derived>
                <All>
                    <Dependency path="/eitcQcTest"/>
                    <Dependency path="/eitc8862Required"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/eitcHadImproperClaims">
            <Name>EITC Had Improper Claims</Name>
            <Description>Whether the TP (or their spouse, if applicable) has had their EITC reduced or disallowed for
                any
                reason other than a math error.
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/eitcImproperClaimsDueToQc">
            <Name>EITC Improper Claims Due to QC</Name>
            <Description>Whether the EITC was reduced or disallowed due to a child not being qualifying</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/eitcImproperClaimTakenSinceDisallowal">
            <Name>EITC Had Improper Claims</Name>
            <Description>Whether the TP (or their spouse, if applicable) has taken the EITC again since they were
                disallowed
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/eitcReceivedImproperClaimsNotice">
            <Name>Received Eitc improper Claims notice</Name>
            <Description>Whether the TP received a letter from the IRS telling them they're not allowed to take EITC for
                a
                number of years
            </Description>
            <Writable>
                <Enum optionsPath="/improperClaimsNoticeOptions"/>
            </Writable>
        </Fact>
        <Fact path="/eitcNoticeTest">
            <Name>EITC Notice Test</Name>
            <Description>Whether the TP is qualified for the EITC w.r.t having received an improper claims notice in the
                past
            </Description>

            <Derived>
                <Any>
                    <Not>
                        <!-- has not received a notice about improper claims -->
                        <Dependency path="/eitcHadImproperClaims"/>
                    </Not>
                    <!-- Received a notice but it was due to claiming QCs -->
                    <All>
                        <Dependency path="/hasImproperClaimsAndNoQc"/>
                        <Dependency path="/eitcImproperClaimsDueToQc"/>
                    </All>
                    <!-- Received a notice but has taken it again since then-->
                    <All>
                        <Dependency path="/flowHasImproperClaimsAndAskAboutLastClaimedCredit"/>
                        <Dependency path="/eitcImproperClaimTakenSinceDisallowal"/>
                    </All>
                    <!-- Received a notice but has taken it did not contain a ban for a certain number of
            years -->
                    <All>
                        <Dependency path="/eitcHadImproperClaims"/>
                        <Equal>
                            <Left>
                                <Dependency path="/eitcReceivedImproperClaimsNotice"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/improperClaimsNoticeOptions">zeroYears</Enum>
                            </Right>
                        </Equal>
                    </All>
                    <!-- Received a notice but it has expired -->
                    <All>
                        <Dependency path="/eitcHadImproperClaims"/>
                        <Dependency path="/eitcImproperClaimsNoticeExpired"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/eitc8862Required">
            <Name>EITC 8862 Required</Name>
            <Description>Whether the TP is required to file form 8862 to receive the EITC Part V is currently out of
                scope.
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <All>
                    <!-- has received a notice about improper claims also checks if notice was not just due to incorrectly
          claiming a QC if applicable-->
                    <Dependency path="/flowHasImproperClaimsAndAskAboutLastClaimedCredit"/>
                    <!-- and the TP has not taken the credit again yet-->
                    <Not>
                        <Dependency path="/eitcImproperClaimTakenSinceDisallowal"/>
                    </Not>
                    <Any>
                        <!-- and they were not banned for a number of years -->
                        <Equal>
                            <Left>
                                <Dependency path="/eitcReceivedImproperClaimsNotice"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/improperClaimsNoticeOptions">zeroYears</Enum>
                            </Right>
                        </Equal>
                        <!-- Or that ban has expired-->
                        <All>
                            <IsComplete>
                                <Dependency path="/eitcReceivedImproperClaimsNotice"/>
                            </IsComplete>
                            <Dependency path="/eitcImproperClaimsNoticeExpired"/>
                        </All>
                    </Any>
                    <Dependency path="/isReceivingEitc"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/form8862RequiredAndHasQualifyingChildren">
            <Name>Form 8862 required and has EITC qualifying children</Name>
            <Description>Form 8862 is required and TP has EITC qualifying children</Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <All>
                    <Dependency module="eitc" path="/eitc8862Required"/>
                    <Dependency path="/maybeEligibleForEitcWithQc"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/form8862RequiredAndHasNoQualifyingChildren">
            <Name>Form 8862 required and has no EITC qualifying children</Name>
            <Description>Form 8862 is required and TP does not have EITC qualifying children</Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <All>
                    <Dependency path="/eitc8862Required"/>
                    <Equal>
                        <Left>
                            <Dependency module="familyAndHousehold" path="/numEitcQualifyingChildren"/>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/form8862RequiredAndHasNoQualifyingChildrenAndIsFilingMFJ">
            <Name>Form 8862 required and has no EITC qualifying children</Name>
            <Description>Form 8862 is required and TP does not have EITC qualifying children</Description>
            <Export mef="true"/>

            <Derived>
                <All>
                    <Dependency path="/form8862RequiredAndHasNoQualifyingChildren"/>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/pdfIncludeForm8862">
            <Name>PDF should include Form 8862</Name>
            <Description>Whether the tax return PDF should include Form 8862, Information To CLaim Certain Credits After
                Disallowance.
            </Description>

            <Derived>
                <Any>
                    <Dependency path="/eitc8862Required"/>
                    <Dependency module="ctcOdc" path="/ctc8862Required"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/eitcQualified">
            <Name>Whether the TP is eligible for the EITC</Name>
            <Description>Whether the TP passes various tests to be eligible for the Earned Income Tax Credit (EITC) in
                finality, after the EITC sections of the flow
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="/maybeEligibleForEitc"/>
                    <Dependency path="/eitcQcTest"/>
                    <Dependency path="/eitcNoticeTest"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/maybeEligibleForEitc">
            <Name>Whether the TP may be eligible for the EITC</Name>
            <Description>Whether the TP passes various tests to be eligible for the Earned Income Tax Credit (EITC)
                prior to
                the EITC section of the flow. After this, we still need to test
                1. If the TP is the QC of another TP
                2. If they
                have been disqualified from taking EITC by the IRS
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="/maybeEligibleForEitcBase"/>
                    <Not>
                        <Dependency path="/noEitcDueToSeparateFilingFromSpouse"/>
                    </Not>
                    <Any>
                        <Dependency path="/maybeEligibleForEitcWithQc"/>
                        <Dependency path="/maybeEligibleForEitcWithoutQc"/>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/maybeEligibleForEitcWithQc">
            <Name>Whether the TP may be eligible for the EITC</Name>
            <Description>Whether the TP passes various tests to be eligible for the Earned Income Tax Credit (EITC)
            </Description>

            <Derived>
                <All>
                    <GreaterThan>
                        <Left>
                            <Dependency module="familyAndHousehold" path="/numEitcQualifyingChildren"/>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/noEitcDueToSeparateFilingFromSpouse">
            <Description>
                Used for display in the flow. The TP doesn't have EITC because they are filing separately from their
                spouse (either MFS or HOH) and have no qualifying children or they did not meet the special rule for
                spearated
                spouses
            </Description>

            <Derived>
                <All>
                    <!-- If we don't have the information we need, don't rule out EITC yet -->
                    <IsComplete>
                        <Dependency path="/filingStatus" module="filingStatus"/>
                    </IsComplete>
                    <IsComplete>
                        <Dependency path="/specialRuleForSeparatedSpouses" module="filers"/>
                    </IsComplete>

                    <!-- They are married and not filing jointly-->
                    <Dependency module="filers" path="/isMarried"/>
                    <Not>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    </Not>
                    <Any>
                        <!-- and either they did not meet the special rule for separated spouses -->
                        <Not>
                            <Dependency module="filers" path="/specialRuleForSeparatedSpouses"/>
                        </Not>
                        <!-- or they did not have any qualifying children -->
                        <Equal>
                            <Left>
                                <Dependency module="familyAndHousehold" path="/numEitcQualifyingChildren"/>
                            </Left>
                            <Right>
                                <Int>0</Int>
                            </Right>
                        </Equal>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/maybeEligibleForEitcWithoutQc">
            <Name>Whether the TP may be eligible for the EITC</Name>
            <Description>Whether the TP passes various tests to be eligible for the Earned Income Tax Credit (EITC)
            </Description>

            <Derived>
                <All>
                    <!-- Due to scope, every TP and their spouse at this point has been a full year US
            resident so we do not worry about that req. -->
                    <Equal>
                        <Left>
                            <Dependency module="familyAndHousehold" path="/numEitcQualifyingChildren"/>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </Equal>
                    <Any>
                        <!-- Married filers must file jointly. They cannot file as MFS or as HOH
                 and receive EITC without having QCs -->
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        <Not>
                            <Dependency module="filers" path="/isMarried"/>
                        </Not>
                    </Any>
                    <!-- The filer cannot be claimed as a dependent -->
                    <Not>
                        <Dependency module="filers" path="/treatFilersAsDependents"/>
                    </Not>
                    <Dependency path="/filersAgeTestForEitcWithNoQC"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hasImproperClaimsAndNoQc">
            <Name>Has improper claims and no qc</Name>
            <Description>Whether the TP has had improper EITC claims and has no qualifying children</Description>

            <Derived>
                <All>
                    <Dependency path="/eitcHadImproperClaims"/>
                    <Dependency path="/hasZeroEitcQualifyingChildren"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/flowHasImproperClaimsAndAskAboutLastClaimedCredit">
            <Name>Show EITC credits taken since disallowal question</Name>
            <Description>Checks whether the TP has taken improper claims and has qualifying children to determine if
                they
                should be asked about the last time they have taken the earned income tax credit
            </Description>
            <Derived>
                <Any>
                    <All>
                        <Dependency path="/hasImproperClaimsAndNoQc"/>
                        <Not>
                            <Dependency path="/eitcImproperClaimsDueToQc"/>
                        </Not>
                    </All>
                    <All>
                        <Dependency path="/eitcHadImproperClaims"/>
                        <Dependency path="/maybeEligibleForEitcWithQc"/>
                    </All>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/filersAgeTestForEitcWithNoQC">
            <Name>TP(s) age test for EITC with no QC</Name>
            <Description>TP(s) age test for EITC with no qualifying children</Description>

            <Derived>
                <Switch>
                    <Case>
                        <!-- if MFJ, you and your spouse must meet these requirements -->
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <All>
                                <Any>
                                    <!-- You or your spouse must be greater than or equal to 25 but less than 65 at
                    the end of the tax year -->
                                    <All>
                                        <Dependency module="filers" path="/primaryFiler/age25OrOlderForEitc"/>
                                        <Dependency module="filers" path="/primaryFiler/age64OrYoungerForEitc"/>
                                    </All>
                                    <All>
                                        <Dependency module="filers" path="/secondaryFiler/age25OrOlderForEitc"/>
                                        <Dependency module="filers" path="/secondaryFiler/age64OrYoungerForEitc"/>
                                    </All>
                                </Any>
                            </All>
                        </Then>
                    </Case>
                    <Case>
                        <!-- if not MFJ, only you -->
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <!-- You must be greater than or equal to 25 but less than 65 at the
                end of the tax year -->
                            <All>
                                <Dependency module="filers" path="/primaryFiler/age25OrOlderForEitc"/>
                                <Dependency module="filers" path="/primaryFiler/age64OrYoungerForEitc"/>
                            </All>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/maybeEligibleForEitcBase">
            <Name>Whether the TP may be eligible for the EITC Base</Name>
            <Description>Base rules that define whhether the TP passes various tests to be eligible for the Earned
                Income Tax
                Credit (EITC) before running child-specific tests
            </Description>

            <Derived>
                <All>
                    <!-- When we support Form 2555, Foreign Earned Income, we'll need to disqualify
            people here -->
                    <Dependency path="/hasEarnedIncome"/>
                    <Dependency path="/belowEitcEarnedIncomeLimit"/>
                    <Dependency path="/belowEitcAgiLimit"/>
                    <Dependency path="/belowEitcInvestmentIncomeLimit"/>
                    <Dependency module="filers" path="/filersCouldQualifyForEitc"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/hasZeroEitcQualifyingChildren">
            <Name>Has zero EITC Qualifying Children</Name>
            <Description>Whether the TP(s) has zero EITC qualifying children</Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency module="familyAndHousehold" path="/numEitcQualifyingChildren"/>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/eitcQCsNeedAdditionalInfo">
            <Name>Whether the unclaimed and/or deceased EITC QCs need more information.</Name>
            <Description>Whether the TP has unclaimed and/or deceased EITC QCs.</Description>
            <Derived>
                <GreaterThan>
                    <Left>
                        <Add>
                            <CollectionSize>
                                <Dependency module="familyAndHousehold" path="/unclaimedEITCQcsCollection"/>
                            </CollectionSize>
                            <CollectionSize>
                                <Dependency module="familyAndHousehold" path="/deceasedEitcEligibleQcCollection"/>
                            </CollectionSize>
                        </Add>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasMoreThanZeroEitcQualifyingChildren">
            <Name>Number of EITC Qualifying Children is greater than zero.</Name>
            <Description>The number of dependents who qualify as QCs for EITC is greater than zero.</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency module="familyAndHousehold" path="/familyAndHousehold/*/eitcQualifyingChild"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/hasEarnedIncome">
            <Name>Has Earned Income</Name>
            <Description>Whether the TP had earned income</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency module="income" path="/earnedIncomeWithAllCombatPay"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/eitcMfjLimitWithThreeOrMoreChildren">
            <Name>EITC (MFJ) limit with 3 or more children</Name>
            <Description>EITC limit with 3 or more children when filing as MFJ
                Rev Proc .06 Earned Income Credit §32(b)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>66819</Dollar>
            </Derived>
        </Fact>
        <Fact path="/eitcSelfLimitWithThreeOrMoreChildren">
            <Name>EITC (self) limit with 3 or more children</Name>
            <Description>EITC limit with 3 or more children when not filing as MFJ
                Rev Proc .06 Earned Income Credit §32(b)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>59899</Dollar>
            </Derived>
        </Fact>
        <Fact path="/eitcMfjLimitWithTwoChildren">
            <Name>EITC (MFJ) limit with 2 children</Name>
            <Description>EITC limit with 2 children when filing as MFJ
                Rev Proc .06 Earned Income Credit §32(b)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>62688</Dollar>
            </Derived>
        </Fact>
        <Fact path="/eitcSelfLimitWithTwoChildren">
            <Name>EITC (self) limit with 2 children</Name>
            <Description>EITC limit with 2 children when not filing as MFJ
                Rev Proc .06 Earned Income Credit §32(b)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>55768</Dollar>
            </Derived>
        </Fact>
        <Fact path="/eitcMfjLimitWithOneChild">
            <Name>EITC (MFJ) limit with 1 child</Name>
            <Description>EITC limit with 1 child when filing as MFJ
                Rev Proc .06 Earned Income Credit §32(b)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>56004</Dollar>
            </Derived>
        </Fact>
        <Fact path="/eitcSelfLimitWithOneChild">
            <Name>EITC (self) limit with 1 child</Name>
            <Description>EITC limit with 1 child when not filing as MFJ
                Rev Proc .06 Earned Income Credit §32(b)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>49084</Dollar>
            </Derived>
        </Fact>
        <Fact path="/eitcMfjLimitWithZeroChildren">
            <Name>EITC (MFJ) limit with 0 children</Name>
            <Description>EITC limit with 0 children when filing as MFJ
                Rev Proc .06 Earned Income Credit §32(b)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>25511</Dollar>
            </Derived>
        </Fact>
        <Fact path="/eitcSelfLimitWithZeroChildren">
            <Name>EITC (self) limit with 0 children</Name>
            <Description>EITC limit with 0 children when not filing as MFJ
                Rev Proc .06 Earned Income Credit §32(b)
            </Description>
            <TaxYear>2024</TaxYear>
            <Derived>
                <Dollar>18591</Dollar>
            </Derived>
        </Fact>
        <Fact path="/eitcCompletedPhaseoutAmount">
            <Name>EITC Completed Phaseout Amount</Name>
            <Description>The amount of income at which EITC is completely phased out.</Description>

            <Derived>
                <Switch>
                    <!-- MFJ Limits -->
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <Switch>
                                <Case>
                                    <When>
                                        <GreaterThanOrEqual>
                                            <Left>
                                                <Dependency module="familyAndHousehold"
                                                            path="/numEitcDependentsCollectionForCalculation"/>
                                            </Left>
                                            <Right>
                                                <Int>3</Int>
                                            </Right>
                                        </GreaterThanOrEqual>
                                    </When>
                                    <Then>
                                        <Dependency path="/eitcMfjLimitWithThreeOrMoreChildren"/>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency module="familyAndHousehold"
                                                            path="/numEitcDependentsCollectionForCalculation"/>
                                            </Left>
                                            <Right>
                                                <Int>2</Int>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Dependency path="/eitcMfjLimitWithTwoChildren"/>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency module="familyAndHousehold"
                                                            path="/numEitcDependentsCollectionForCalculation"/>
                                            </Left>
                                            <Right>
                                                <Int>1</Int>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Dependency path="/eitcMfjLimitWithOneChild"/>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency module="familyAndHousehold"
                                                            path="/numEitcDependentsCollectionForCalculation"/>
                                            </Left>
                                            <Right>
                                                <Int>0</Int>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Dependency path="/eitcMfjLimitWithZeroChildren"/>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>
                    <!-- Not MFJ Limits -->
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Switch>
                                <Case>
                                    <When>
                                        <GreaterThanOrEqual>
                                            <Left>
                                                <Dependency module="familyAndHousehold"
                                                            path="/numEitcDependentsCollectionForCalculation"/>
                                            </Left>
                                            <Right>
                                                <Int>3</Int>
                                            </Right>
                                        </GreaterThanOrEqual>
                                    </When>
                                    <Then>
                                        <Dependency path="/eitcSelfLimitWithThreeOrMoreChildren"/>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency module="familyAndHousehold"
                                                            path="/numEitcDependentsCollectionForCalculation"/>
                                            </Left>
                                            <Right>
                                                <Int>2</Int>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Dependency path="/eitcSelfLimitWithTwoChildren"/>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency module="familyAndHousehold"
                                                            path="/numEitcDependentsCollectionForCalculation"/>
                                            </Left>
                                            <Right>
                                                <Int>1</Int>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Dependency path="/eitcSelfLimitWithOneChild"/>
                                    </Then>
                                </Case>
                                <Case>
                                    <When>
                                        <Equal>
                                            <Left>
                                                <Dependency module="familyAndHousehold"
                                                            path="/numEitcDependentsCollectionForCalculation"/>
                                            </Left>
                                            <Right>
                                                <Int>0</Int>
                                            </Right>
                                        </Equal>
                                    </When>
                                    <Then>
                                        <Dependency path="/eitcSelfLimitWithZeroChildren"/>
                                    </Then>
                                </Case>
                            </Switch>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/eitcPhaseoutAmountLowerBound">
            <Name>Lower bound phase-out amount</Name>
            <Description>The lower bound of the midpoint range that is associated with the complete phase-out amount
            </Description>

            <Derived>
                <StepwiseMultiply>
                    <Multiplicand>
                        <Dependency path="/eitcCompletedPhaseoutAmount"/>
                    </Multiplicand>
                    <Rate>
                        <Rational>50/50</Rational> <!-- rounds down to the nearest $50 -->
                    </Rate>
                </StepwiseMultiply>
            </Derived>
        </Fact>
        <Fact path="/belowEitcEarnedIncomeLimit">
            <Name>Below EITC Earned Income Limit</Name>
            <Description>Whether the TP's Earned Income is low enough for the EITC. We always test this without combat
                pay,
                since it will be the lesser of the two amounts. Later, we have to calculate if combat pay is more or
                less
                advantageous.
            </Description>

            <Derived>
                <LessThan>
                    <Left>
                        <Dependency module="income" path="/employerIncomeSubtotal"/>
                    </Left>
                    <Right>
                        <Dependency path="/eitcCompletedPhaseoutAmount"/>
                    </Right>
                </LessThan>
            </Derived>
        </Fact>
        <Fact path="/belowEitcAgiLimit">
            <Name>Below EITC AGI Limit</Name>
            <Description>Whether the TP's AGI is low enough for the EITC</Description>

            <Derived>
                <LessThan>
                    <Left>
                        <Dependency module="taxCalculations" path="/agi"/>
                    </Left>
                    <Right>
                        <Dependency path="/eitcCompletedPhaseoutAmount"/>
                    </Right>
                </LessThan>
            </Derived>
        </Fact>
        <Fact path="/hadEitcImproperClaimsBan">
            <Name>EITC had an improper claims ban</Name>
            <Description>Whether the flow should ask a person if their CTC improper claims notice has expired
            </Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="/eitcImproperClaimTakenSinceDisallowal"/>
                    </Not>
                    <Any>
                        <Equal>
                            <Left>
                                <Dependency path="/eitcReceivedImproperClaimsNotice"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/improperClaimsNoticeOptions">twoYears</Enum>
                            </Right>
                        </Equal>
                        <Equal>
                            <Left>
                                <Dependency path="/eitcReceivedImproperClaimsNotice"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/improperClaimsNoticeOptions">tenYears</Enum>
                            </Right>
                        </Equal>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/eitcImproperClaimsNoticeExpired">
            <Name>EITC Improper Claims Notice Expired</Name>
            <Description>Whether the improper claims notice that the TP previously received is far enough in the past to
                be
                expired. E.g. They could not file for 2 years, and it has been at least 2 years
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/pdfIncludeScheduleEic">
            <Name>PDF should include Schedule EIC</Name>
            <Description>Whether the tax return PDF should include Schedule EIC.</Description>

            <Derived>
                <All>
                    <NotEqual>
                        <Left>
                            <Dependency path="/earnedIncomeCredit"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </NotEqual>
                    <GreaterThan>
                        <Left>
                            <Dependency module="familyAndHousehold" path="/numEitcQualifyingChildren"/>
                        </Left>
                        <Right>
                            <Int>0</Int>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/receivingEitcWhileSeparatedCheckbox">
            <Description>
                The TP is receiving EITC while they are married and filing separately from their sposue (either HOH
                or MFS)
                and there is a checkbox we must set in the pdf, and a field to send to MeF.
            </Description>
            <Export mef="true"/>

            <Derived>
                <All>
                    <Dependency module="filers" path="/isMarried"/>
                    <Not>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    </Not>
                    <Dependency path="/isReceivingEitc"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isEITCAmountWithPrimaryCombatPayGreaterThanWithoutCombatPay">
            <Name>Is the EITC amount with Primary combat pay greater than without combat pay</Name>
            <Description>Whether or not the EITC amount with Primary combat pay is greater then without combat pay
            </Description>

            <Derived>
                <All>
                    <Dependency module="formW2s" path="/onlyPrimaryFilerHasCombatPay"/>
                    <GreaterThanOrEqual>
                        <Left>
                            <Dependency path="/eitcAmountWithPrimaryCombatPay"/>
                        </Left>
                        <Right>
                            <Dependency path="/eitcAmountWithoutCombatPay"/>
                        </Right>
                    </GreaterThanOrEqual>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isEITCAmountWithSecondaryCombatPayGreaterThanWithoutCombatPay">
            <Name>Is the EITC amount with secondary combat pay greater than without combat pay</Name>
            <Description>Whether or not the EITC amount with secondary combat pay is greater then without combat pay
            </Description>

            <Derived>
                <All>
                    <Dependency module="formW2s" path="/onlyMFJSpouseHasCombatPay"/>
                    <GreaterThanOrEqual>
                        <Left>
                            <Dependency path="/eitcAmountWithSecondaryCombatPay"/>
                        </Left>
                        <Right>
                            <Dependency path="/eitcAmountWithoutCombatPay"/>
                        </Right>
                    </GreaterThanOrEqual>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isEITCAmountWithBothCombatPayMaximum">
            <Name>Is the EITC amount with both combat pay is maximum</Name>
            <Description>Whether or not the EITC amount with both combat pays is greater primary, secondary, and without
                combat pay
            </Description>

            <Derived>
                <All>
                    <Dependency module="formW2s" path="/bothFilersHasCombatPay"/>
                    <Equal>
                        <Left>
                            <GreaterOf>
                                <Dependency path="/eitcAmountWithBothTPCombatPay"/>
                                <Dependency path="/eitcAmountWithPrimaryCombatPay"/>
                                <Dependency path="/eitcAmountWithSecondaryCombatPay"/>
                                <Dependency path="/eitcAmountWithoutCombatPay"/>
                            </GreaterOf>
                        </Left>
                        <Right>
                            <Dependency path="/eitcAmountWithBothTPCombatPay"/>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isEITCAmountWithPrimaryCombatPayMaximum">
            <Name>Is the EITC amount with primary combat pay is maximum</Name>
            <Description>Whether or not the EITC amount with primary combat pay is greater secondary, both and without
                combat
                pay
            </Description>

            <Derived>
                <All>
                    <Dependency module="formW2s" path="/bothFilersHasCombatPay"/>
                    <Equal>
                        <Left>
                            <GreaterOf>
                                <Dependency path="/eitcAmountWithBothTPCombatPay"/>
                                <Dependency path="/eitcAmountWithPrimaryCombatPay"/>
                                <Dependency path="/eitcAmountWithSecondaryCombatPay"/>
                                <Dependency path="/eitcAmountWithoutCombatPay"/>
                            </GreaterOf>
                        </Left>
                        <Right>
                            <Dependency path="/eitcAmountWithPrimaryCombatPay"/>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/isEITCAmountWithSecondaryCombatPayMaximum">
            <Name>Is the EITC amount with Secondary combat pay is maximum</Name>
            <Description>Whether or not the EITC amount with Secondary combat pay is greater secondary, both and without
                combat
                pay
            </Description>

            <Derived>
                <All>
                    <Dependency module="formW2s" path="/bothFilersHasCombatPay"/>
                    <Equal>
                        <Left>
                            <GreaterOf>
                                <Dependency path="/eitcAmountWithBothTPCombatPay"/>
                                <Dependency path="/eitcAmountWithPrimaryCombatPay"/>
                                <Dependency path="/eitcAmountWithSecondaryCombatPay"/>
                                <Dependency path="/eitcAmountWithoutCombatPay"/>
                            </GreaterOf>
                        </Left>
                        <Right>
                            <Dependency path="/eitcAmountWithSecondaryCombatPay"/>
                        </Right>
                    </Equal>
                </All>
            </Derived>
        </Fact>
        <Fact path="/combatPayRecommendation">
            <Name>Is the EITC amount with primary combat pay greater than without combat pay</Name>
            <Description>Whether or not the EITC amount with primary combat pay is greater then without combat pay
            </Description>

            <Derived>
                <Switch>

                    <Case> <!-- EITC amt w/ primary combat pay is greater than or equal to EITC amount without combat pay -->
                        <When>
                            <Dependency path="/isEITCAmountWithPrimaryCombatPayGreaterThanWithoutCombatPay"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/combatPayOptions">usePrimaryCombatPay</Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Dependency path="/isEITCAmountWithSecondaryCombatPayGreaterThanWithoutCombatPay"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/combatPayOptions">useSpouseCombatPay</Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Dependency path="/isEITCAmountWithBothCombatPayMaximum"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/combatPayOptions">useBothCombatPay</Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Dependency path="/isEITCAmountWithPrimaryCombatPayMaximum"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/combatPayOptions">usePrimaryNotSpouseCombatPay</Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <Dependency path="/isEITCAmountWithSecondaryCombatPayMaximum"/>
                        </When>
                        <Then>
                            <Enum optionsPath="/combatPayOptions">useSpouseNotPrimaryCombatPay</Enum>
                        </Then>
                    </Case>

                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Enum optionsPath="/combatPayOptions">noCombatPay</Enum>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/isCombatPayRecommendationUsePrimary">
            <Name>Is the combat pay election usePrimaryCombatPay</Name>
            <Description>Is the combat pay election useSpouseCombatPay</Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/combatPayRecommendation"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/combatPayOptions">usePrimaryCombatPay</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/isCombatPayRecommendationUseSpouse">
            <Name>Is the combat pay election useSpouseCombatPay</Name>
            <Description>Is the combat pay election useSpouseCombatPay</Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/combatPayRecommendation"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/combatPayOptions">useSpouseCombatPay</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/isCombatPayRecommendationUseBoth">
            <Name>Is the combat pay election useBothCombatPay</Name>
            <Description>Is the combat pay election useBothCombatPay</Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/combatPayRecommendation"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/combatPayOptions">useBothCombatPay</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/isCombatPayRecommendationNoCombatPay">
            <Name>Is the combat pay election noCombatPay</Name>
            <Description>Is the combat pay election noCombatPay</Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/combatPayRecommendation"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/combatPayOptions">noCombatPay</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/isCombatPayRecommendationUsePrimaryNotSpouse">
            <Name>Is the combat pay election usePrimaryNotSpouse</Name>
            <Description>Is the combat pay election usePrimaryNotSpouse</Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/combatPayRecommendation"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/combatPayOptions">usePrimaryNotSpouseCombatPay</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/isCombatPayRecommendationUseSpouseNotPrimary">
            <Name>Is the combat pay election useSpouseNotPrimary</Name>
            <Description>Is the combat pay election useSpouseNotPrimary</Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/combatPayRecommendation"/>
                    </Left>
                    <Right>
                        <Enum optionsPath="/combatPayOptions">useSpouseNotPrimaryCombatPay</Enum>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/combatPayElectionAndOrRecommendation">
            <Name>Combat pay election and/or recommendation</Name>
            <Description>Sets this fact to recommendation only if there is no election</Description>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <IsComplete>
                                <Dependency path="/combatPayElection"/>
                            </IsComplete>
                        </When>
                        <Then>
                            <Dependency path="/combatPayElection"/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Dependency path="/combatPayRecommendation"/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/hasManyEitcQualifyingChildren">
            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency module="familyAndHousehold" path="/numEitcQualifyingChildren"/>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/improperClaimsNoticeOptions">
            <Name>Improper claims notice options</Name>
            <Description>Options for how long a TP has been restricted for taking CTC, ACTC, or ODC</Description>
            <Derived>
                <EnumOptions>
                    <String>twoYears</String>
                    <String>tenYears</String>
                    <String>zeroYears</String>
                </EnumOptions>
            </Derived>
        </Fact>
        <Fact path="/maybeEligibleForCtc">
            <Name>Whether the TP may be eligible to receive CTC based on dependents</Name>
            <Description>Whether there are dependents who are eligible for the Child Tax Credit.</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Count>
                            <Dependency module="familyAndHousehold" path="/familyAndHousehold/*/eligibleCtc"/>
                        </Count>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/flowAskAboutOdc">
            <Name>Whether we should ask the taxpayer about ODC eligibility</Name>
            <Description>This requires that we have ODC eligible individuals, and that we haven't asked
                about CTC. The
                questions about eligibility are the same as CTC, so we don't ask them twice -- we just
                default to CTC.
            </Description>

            <Derived>
                <All>
                    <Dependency path="/maybeEligibleForOdc"/>
                    <Not>
                        <Dependency path="/maybeEligibleForCtc"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/maybeEligibleForOdc">
            <Name>Whether the TP may be eligible for ODC based on dependents</Name>
            <Description>Whether there are dependents who are eligible for the Credit for Other
                Dependents.
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/odcEligibleDependents"/>
                    </Left>
                    <Right>
                        <Int>0</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/ctcEligibleDependents">
            <Name>Number of CTC-eligible dependents</Name>
            <Description>The number of dependents who are eligible for the Child Tax Credit. Reported on
                line 4 of Schedule
                8812.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Count>
                    <Dependency module="familyAndHousehold" path="/familyAndHousehold/*/eligibleCtc"/>
                </Count>
            </Derived>
        </Fact>
        <Fact path="/pdf8812ContinueFromLine16a">
            <Name>Continue Schedule 8812 from Line 16a</Name>
            <Description>Whether to continue in sequence from Line 16a.</Description>
            <Derived>
                <NotEqual>
                    <Left>
                        <Dependency path="/remainingCtcAndOdc"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </NotEqual>
            </Derived>
        </Fact>
        <Fact path="/pdf8812Line16bCount">
            <Name>Display value for PDF Schedule 8812, Line 16b (count)</Name>
            <Description>The number of dependents who are eligible for the Child Tax Credit if completing
                Part II-A; undefined
                otherwise.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/pdf8812ContinueFromLine16a"/>
                        </When>
                        <Then>
                            <Dependency path="/ctcEligibleDependents"/>
                        </Then>
                    </Case>
                    <!-- otherwise: undefined -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/totalPotentialCtc">
            <Name>Total potential CTC</Name>
            <Description>The maximum amount of the Child Tax Credit that could be claimed. Reported on
                line 5 of Schedule
                8812.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <Any>
                                    <Dependency path="/ctcOdcDisqualifiedForImproperClaims"/>
                                    <Not>
                                        <Dependency path="/maybeEligibleForCtc"/>
                                    </Not>
                                </Any>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Multiply>
                                    <Dependency path="/ctcEligibleDependents"/>
                                    <Dependency path="/maxCtcAmount"/>
                                </Multiply>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/pdf8812Line16bAmount">
            <Name>Display value for PDF Schedule 8812, Line 16b (amount)</Name>
            <Description>The maximum amount of the Child Tax Credit that could be claimed if completing
                Part II-A; undefined
                otherwise.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/pdf8812ContinueFromLine16a"/>
                        </When>
                        <Then>
                            <Dependency path="/totalPotentialActc"/>
                        </Then>
                    </Case>
                    <!-- otherwise: undefined -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/pdf8812ContinueFromLine16b">
            <Name>Continue Schedule 8812 from Line 16b</Name>
            <Description>Whether to continue in sequence from Line 16b.</Description>
            <Derived>
                <NotEqual>
                    <Left>
                        <Dependency path="/pdf8812Line16bAmount"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </NotEqual>
            </Derived>
        </Fact>
        <Fact path="/maxCtcAmount">
            <Name>Maximum child tax credit amount</Name>
            <Description>The maximum child tax credit per child</Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Dollar>2000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/odcEligibleDependents">
            <Name>Number of ODC-eligible dependents</Name>
            <Description>The number of dependents who are eligible for the Credit for Other Dependents.
                Reported on line 6 of
                Schedule 8812.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Count>
                    <Dependency module="familyAndHousehold" path="/familyAndHousehold/*/eligibleOdc"/>
                </Count>
            </Derived>
        </Fact>
        <Fact path="/exactlyOneOdcEligibleDependent">
            <Name>Exactly one ODC-eligible dependent</Name>
            <Description>Whether the taxpayer has exactly one ODC-eligible dependent.</Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/odcEligibleDependents"/>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/moreThanOneOdcEligibleDependent">
            <Name>More than one ODC-eligible dependent</Name>
            <Description>Whether the taxpayer has more than one ODC-eligible dependent.</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/odcEligibleDependents"/>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/totalPotentialOdc">
            <Name>Total potential ODC</Name>
            <Description>The maximum amount of the Credit for Other Dependents that could be claimed.
                Reported on line 7 of
                Schedule 8812.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <Any>
                                    <Dependency path="/ctcOdcDisqualifiedForImproperClaims"/>
                                    <Not>
                                        <Dependency path="/maybeEligibleForOdc"/>
                                    </Not>
                                </Any>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Multiply>
                                    <Dependency path="/odcEligibleDependents"/>
                                    <Dependency path="/maxOdcAmount"/>
                                </Multiply>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/maxOdcAmount">
            <Name>Maximum credit amount for other dependents</Name>
            <Description>The maximum credit for other dependents, per dependent</Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Dollar>500</Dollar>
            </Derived>
        </Fact>
        <Fact path="/totalPotentialDependentCredits">
            <Name>Total potential dependent credits</Name>
            <Description>The combined amount of the maximum Child Tax Credit and Credit for Other
                Dependents. Reported on line
                8 of Schedule 8812.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Add>
                        <Dependency path="/totalPotentialCtc"/>
                        <Dependency path="/totalPotentialOdc"/>
                    </Add>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/dependentCreditPhaseoutThreshold">
            <Name>Dependent credit phaseout threshold</Name>
            <Description>The MAGI threshold at which the dependent credits begin to phaseout. Reported on
                line 9 of Schedule
                8812.
            </Description>
            <Export mef="true"/>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                        </When>
                        <Then>
                            <Dollar>400000</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <Not>
                                <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                            </Not>
                        </When>
                        <Then>
                            <Dollar>200000</Dollar>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/dependentCreditMagiAboveThreshold">
            <Name>Dependent credit MAGI above threshold</Name>
            <Description>The amount of excess income above the threshold.</Description>

            <Derived>
                <GreaterOf>
                    <Subtract>
                        <Minuend>
                            <Dependency path="/dependentCreditMagi"/>
                        </Minuend>
                        <Subtrahends>
                            <Dependency path="/dependentCreditPhaseoutThreshold"/>
                        </Subtrahends>
                    </Subtract>
                    <Dollar>0</Dollar>
                </GreaterOf>
            </Derived>
        </Fact>
        <Fact path="/roundedDependentCreditMagiAboveThreshold">
            <Name>Rounded dependent credit MAGI above threshold</Name>
            <Description>In whole $1,000s, the amount of excess income above the threshold. Per §24(b)(2),
                any fraction of
                $1,000 is rounded to $1,000. Reported on line 10 of Form 8812.
            </Description>
            <Export mef="true"/>


            <Derived>
                <Round>
                    <StepwiseMultiply>
                        <Multiplicand>
                            <Add>
                                <Dependency path="/dependentCreditMagiAboveThreshold"/>
                                <Dollar>999.99</Dollar> <!-- round up to the nearest $1,000 -->
                            </Add>
                        </Multiplicand>
                        <Rate>
                            <Rational>1000/1000</Rational>
                        </Rate>
                    </StepwiseMultiply>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/dependentCreditPhaseout">
            <Name>Dependent credit phaseout</Name>
            <Description>The amount to reduce the dependent credit amount by. Reported on line 11 of Form
                8812.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Multiply>
                        <Dependency path="/roundedDependentCreditMagiAboveThreshold"/>
                        <Rational>5/100</Rational>
                    </Multiply>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/dependentCreditLessPhaseout">
            <Name>Dependent credit less phaseout</Name>
            <Description>The amount of dependent credits left to claim after applying the phaseout.
                Reported on line 12 of
                Form
                8812.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <GreaterOf>
                        <Subtract>
                            <Minuend>
                                <Dependency path="/totalPotentialDependentCredits"/>
                            </Minuend>
                            <Subtrahends>
                                <Dependency path="/dependentCreditPhaseout"/>
                            </Subtrahends>
                        </Subtract>
                        <Dollar>0</Dollar>
                    </GreaterOf>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/dependentCreditNotFullyPhasedOut">
            <Name>Dependent credit not fully phased out</Name>
            <Description>Whether there is any amount of dependent credits left to claim after applying the
                phaseout. Reported
                on a checkbox on line 12 of Form 8812.
            </Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/dependentCreditLessPhaseout"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/dependentCreditFullyPhasedOut">
            <Name>Dependent credit fully phased out</Name>
            <Description>Whether there is no amount of dependent credits left to claim after applying the
                phaseout. Reported
                on
                a checkbox on line 12 of Form 8812.
            </Description>

            <Derived>
                <Not>
                    <Dependency path="/dependentCreditNotFullyPhasedOut"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/maxPotentialOdcAfterPhaseOut">
            <Name>Max potential ODC amount after phase out</Name>
            <Description>The max potential odc amount accounting for phase out if applicable</Description>

            <Derived>
                <GreaterOf>
                    <Dollar>0</Dollar>
                    <Subtract>
                        <Minuend>
                            <Dependency path="/totalPotentialOdc"/>
                        </Minuend>
                        <Subtrahends>
                            <Dependency path="/dependentCreditPhaseout"/>
                        </Subtrahends>
                    </Subtract>
                </GreaterOf>
            </Derived>
        </Fact>
        <Fact path="/xmlHasRemainingCtcAndOdc">
            <Name>Has remaining CTC and ODC</Name>
            <Description>Whether there is any CTC or ODC remaining to be processed, meaning that the
                dependent credit
                hasn't
                phased out and there is still some CTC or ODC. Encountered on line 16a of form 8812.
                Determines if lines 16b -
                26
                may be applicable.
            </Description>
            <Export mef="true"/>
            <Derived>
                <All>
                    <Dependency path="/dependentCreditNotFullyPhasedOut"/>
                    <GreaterThan>
                        <Left>
                            <Dependency path="/remainingCtcAndOdc"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/xmlHasPotentialActc">
            <Name>Has potential ACTC</Name>
            <Description>Whether there is any CTC or ODC that can be processed and there is some potential
                ACTC
                representing
                Encountered on line 16b of form 8812. Determines if lines 17-26 may be applicable
            </Description>
            <Export mef="true"/>
            <Derived>
                <All>
                    <Dependency path="/xmlHasRemainingCtcAndOdc"/>
                    <GreaterThan>
                        <Left>
                            <Dependency path="/totalPotentialActc"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/xmlThreeOrMoreCtcEligibleDependents">
            <Name>Three of more CTC eligible CTC dependents</Name>
            <Description>Whether we have 3 CTC eligible dependents and potential ACTC. Encountered on line
                20 of Schedule
                8812.
                Determines if lines 21-26 are applicable. TODO in future tax years: take Puerto Rico
                residency into
                account
            </Description>
            <Export mef="true"/>
            <Derived>
                <All>
                    <Dependency path="/xmlHasPotentialActc"/>
                    <Dependency path="/threeOrMoreCtcEligibleDependents"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/totalCtc">
            <Name>Total CTC from the CTC/ODC</Name>
            <Description>Total amount of CTC the TP will receive after the phaseout. It is derived and used for us to
                help the
                taxpayer make sense of how much of their credit comes from ctc, but it does not exist directly on
                schedule 8812.
                CTC credits are applied after ODC credits as per the IRM and when there is a phase out are reduced after
                ODC
                credits.
            </Description>

            <Derived>
                <Switch>
                    <!-- Switch statement is necessary to avoid divide by zero when total is zero -->
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/totalCtcAndOdc"/>
                                </Left>
                                <Right>
                                    <Dollar>0</Dollar>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Subtract>
                                <Minuend>
                                    <Dependency path="/totalCtcAndOdc"/>
                                </Minuend>
                                <Subtrahends>
                                    <Dependency path="/totalOdc"/>
                                </Subtrahends>
                            </Subtract>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/isReceivingCtc">
            <Name>Is receiving CTC</Name>
            <Description>Whether the TP is receiving the child tax credit</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/totalCtc"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/totalOdc">
            <Name>Total ODC from the CTC/ODC</Name>
            <Description>Total amount of ODC the TP will receive after the phaseout. It is derived and used for us to
                help the
                taxpayer make sense of how much of their credit comes from odc, but it does not exist directly on
                schedule 8812.
                ODC credits are applied before CTC credits as per the IRM and is also reduced first if there is a phase
                out.
            </Description>

            <Derived>
                <Switch>
                    <!-- Switch statement is necessary to avoid divide by zero when total is zero -->
                    <Case>
                        <When>
                            <Equal>
                                <Left>
                                    <Dependency path="/totalCtcAndOdc"/>
                                </Left>
                                <Right>
                                    <Dollar>0</Dollar>
                                </Right>
                            </Equal>
                        </When>
                        <Then>
                            <Dollar>0</Dollar>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <LesserOf>
                                <Dependency path="/maxPotentialOdcAfterPhaseOut"/>
                                <Dependency path="/totalCtcAndOdc"/>
                            </LesserOf>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/isReceivingOdc">
            <Name>Is receiving ODC</Name>
            <Description>Whether the TP is receiving the credit for other dependents</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/totalOdc"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/isReceivingCtcOrOdc">
            <Name>Is receiving CTC or ODC</Name>
            <Description>Whether the TP is receiving the child tax credit or credit for other dependents</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/totalCtcAndOdc"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/sched8812CreditLimit">
            <Name>Credit Limit for Credits for Qualifying Children and Other Depednents</Name>
            <Description>The credit limit per Credit Limit Worksheet A from Schedule 8812. Reported on line 13.
            </Description>
            <Export mef="true"/>

            <Derived>
                <GreaterOf>
                    <Dollar>0</Dollar>
                    <Subtract>
                        <Minuend>
                            <Dependency module="taxCalculations" path="/totalTentativeTax"/>
                        </Minuend>
                        <Subtrahends>
                            <Dependency module="schedule3" path="/sched3Line1"/> <!-- PLACEHOLDER -->
                            <Dependency module="cdcc" path="/cdccTotalCredit"/>
                            <Dependency module="schedule3" path="/sched3Line3"/> <!-- PLACEHOLDER -->
                            <Dependency module="saversCredits" path="/qualifiedSaverCreditAmount"/>
                            <Dependency module="schedule3" path="/sched3Line5b"/> <!-- PLACEHOLDER -->
                            <Dependency module="elderlyAndDisabled" path="/totalEdc"/>
                            <Dependency module="schedule3" path="/sched3Line6f"/> <!-- PLACEHOLDER -->
                            <Dependency module="schedule3" path="/sched3Line6l"/> <!-- PLACEHOLDER -->
                            <Dependency module="schedule3" path="/sched3Line6m"/> <!-- PLACEHOLDER -->
                            <!-- OUT OF SCOPE: AMOUNT FROM CREDIT LIMIT WORKSHEET B -->
                        </Subtrahends>
                    </Subtract>
                </GreaterOf>
            </Derived>
        </Fact>
        <Fact path="/totalCtcAndOdc">
            <Name>Total CTC and ODC</Name>
            <Description>The total amount of the child tax credit and credit for other dependents.
                Reported on line 14 of Form
                8812 and line 19 of Form 1040.
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Round>
                    <LesserOf>
                        <Dependency path="/dependentCreditLessPhaseout"/>
                        <Dependency path="/sched8812CreditLimit"/>
                    </LesserOf>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/remainingCtcAndOdc">
            <Name>Remaining CTC and ODC</Name>
            <Description>The amount of dependent credits left to claim after crediting the total tentative
                tax. Reported on
                line 16a of Form 8812.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <GreaterOf>
                        <Subtract>
                            <Minuend>
                                <Dependency path="/dependentCreditLessPhaseout"/>
                            </Minuend>
                            <Subtrahends>
                                <Dependency path="/totalCtcAndOdc"/>
                            </Subtrahends>
                        </Subtract>
                        <Dollar>0</Dollar>
                    </GreaterOf>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/totalPotentialActc">
            <Name>Total potential additional CTC</Name>
            <Description>The maximum amount of the Additional Child Tax Credit that could be claimed.
                Reported on line 16b of
                Schedule 8812.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <Any>
                                    <Dependency path="/ctcOdcDisqualifiedForImproperClaims"/>
                                    <Not>
                                        <Dependency path="/maybeEligibleForCtc"/>
                                    </Not>
                                </Any>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Multiply>
                                    <Dependency path="/ctcEligibleDependents"/>
                                    <Dependency path="/maxActcAmount"/>
                                </Multiply>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/maxActcAmount">
            <Name>Maximum additional child tax credit amount</Name>
            <Description>The maximum additional tax credit per child
                Rev Proc .05 Child Tax Credit §24(d)(1)(A)
            </Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Dollar>1700</Dollar>
            </Derived>
        </Fact>
        <Fact path="/remainingPotentialActc">
            <Name>Remaining potential additional CTC</Name>
            <Description>The remaining amount of the Additional Child Tax Credit that could be claimed
                after crediting the
                total tentative tax.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <LesserOf>
                        <Dependency path="/remainingCtcAndOdc"/>
                        <Dependency path="/totalPotentialActc"/>
                    </LesserOf>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/pdf8812Line17">
            <Name>Display value for PDF Schedule 8812, Line 17</Name>
            <Description>The remaining amount of the Additional Child Tax Credit that could be claimed if
                completing Part
                II-A;
                undefined otherwise.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/pdf8812ContinueFromLine16b"/>
                        </When>
                        <Then>
                            <Dependency path="/remainingPotentialActc"/>
                        </Then>
                    </Case>
                    <!-- otherwise: undefined -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/actcRefundabilityThreshold">
            <Name>Additional CTC refundability threshold</Name>
            <Description>The amount of earned income that must be exceeded in order to receive the
                refundable additional child
                tax credit.
            </Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Dollar>2500</Dollar>
            </Derived>
        </Fact>
        <Fact path="/earnedIncomeAboveActcRefundabilityThreshold">
            <Name>Earned income above additional CTC refundability threshold</Name>
            <Description>The amount of earned income that can be used to calculate the refundable amount
                of the additional
                child tax credit.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <GreaterOf>
                        <Subtract>
                            <Minuend>
                                <Dependency module="income" path="/earnedIncomeWithAllCombatPay"/>
                            </Minuend>
                            <Subtrahends>
                                <Dependency path="/actcRefundabilityThreshold"/>
                            </Subtrahends>
                        </Subtract>
                        <Dollar>0</Dollar>
                    </GreaterOf>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/pdf8812Line19Amount">
            <Name>Display value for PDF Schedule 8812, Line 19 amount</Name>
            <Description>Earned income above additional CTC refundability threshold if completing Part
                II-A; undefined
                otherwise.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/pdf8812ContinueFromLine16b"/>
                        </When>
                        <Then>
                            <Dependency path="/earnedIncomeAboveActcRefundabilityThreshold"/>
                        </Then>
                    </Case>
                    <!-- otherwise: undefined -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/earnedIncomeExceedsActcRefundabilityThreshold">
            <Name>Earned income exceeds additional CTC refundability threshold</Name>
            <Description>Whether the taxpayer has enough earned income to qualify for the additional Child
                Tax Credit.
                Addition
                12/22/23 - Also checking the real potential ACTC (compared against remaining CTC,
                ODC and potential
                ACTC)
                This
                represents the "Yes" checkbox on line 19 of the 8812 that determines if the line 19
                dollar amount
                field should
                have a value.
            </Description>
            <Export mef="true"/>
            <Derived>
                <All>
                    <Dependency path="/xmlHasPotentialActc"/>
                    <GreaterThan>
                        <Left>
                            <Dependency path="/earnedIncomeAboveActcRefundabilityThreshold"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/pdf8812Line19Yes">
            <Name>Display value for PDF Schedule 8812, Line 19 Yes checkbox</Name>
            <Description>Whether earned income exceeds threshold if completing Part II-A; undefined
                otherwise.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/pdf8812ContinueFromLine16b"/>
                        </When>
                        <Then>
                            <Dependency path="/earnedIncomeExceedsActcRefundabilityThreshold"/>
                        </Then>
                    </Case>
                    <!-- otherwise: undefined -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/earnedIncomeSubceedsActcRefundabilityThreshold">
            <Name>Earned income additional CTC refundability threshold</Name>
            <Description>Whether the taxpayer has too little earned income to qualify for the additional
                Child Tax Credit.
                Reported in a checkbox on line 19 of Form 8812.
            </Description>

            <Derived>
                <Not>
                    <Dependency path="/earnedIncomeExceedsActcRefundabilityThreshold"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/pdf8812Line19No">
            <Name>Display value for PDF Schedule 8812, Line 19 No checkbox</Name>
            <Description>Whether earned income subceeds threshold if completing Part II-A; undefined
                otherwise.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/pdf8812ContinueFromLine16b"/>
                        </When>
                        <Then>
                            <Dependency path="/earnedIncomeSubceedsActcRefundabilityThreshold"/>
                        </Then>
                    </Case>
                    <!-- otherwise: undefined -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/regularMaximumActc">
            <Name>Regular maximum additional child tax credit</Name>
            <Description>The maximum amount of the additional child tax credit that could be refunded to
                you, absent
                provisions
                for taxpayers with three or more children.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Multiply>
                        <Dependency path="/earnedIncomeAboveActcRefundabilityThreshold"/>
                        <Rational>15/100</Rational>
                    </Multiply>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/pdf8812Line20">
            <Name>Display value for PDF Schedule 8812, Line 20</Name>
            <Description>Regular maximum ACTC if completing Part II-A; undefined otherwise.</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/pdf8812ContinueFromLine16b"/>
                        </When>
                        <Then>
                            <Dependency path="/regularMaximumActc"/>
                        </Then>
                    </Case>
                    <!-- otherwise: undefined -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/threeOrMoreCtcEligibleDependents">
            <Name>Three or more CTC-eligible dependents</Name>
            <Description>Whether the taxpayer has three or more CTC-eligible dependents.</Description>
            <Export mef="true"/>

            <Derived>
                <GreaterThanOrEqual>
                    <Left>
                        <Dependency path="/ctcEligibleDependents"/>
                    </Left>
                    <Right>
                        <Int>3</Int>
                    </Right>
                </GreaterThanOrEqual>
            </Derived>
        </Fact>
        <Fact path="/exactlyOneCtcEligibleDependent">
            <Name>Exactly one CTC-eligible dependent</Name>
            <Description>Whether the taxpayer has exactly one CTC-eligible dependent.</Description>

            <Derived>
                <Equal>
                    <Left>
                        <Dependency path="/ctcEligibleDependents"/>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </Equal>
            </Derived>
        </Fact>
        <Fact path="/moreThanOneCtcEligibleDependent">
            <Name>More than one CTC-eligible dependent</Name>
            <Description>Whether the taxpayer has more than one CTC-eligible dependent.</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/ctcEligibleDependents"/>
                    </Left>
                    <Right>
                        <Int>1</Int>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/pdf8812Line20Yes">
            <Name>Display value for PDF Schedule 8812, Line 20 Yes checkbox</Name>
            <Description>Whether the taxpayer has three or more CTC-eligible dependents if completing Part
                II-A; undefined
                otherwise.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/pdf8812ContinueFromLine16b"/>
                        </When>
                        <Then>
                            <Dependency path="/threeOrMoreCtcEligibleDependents"/>
                        </Then>
                    </Case>
                    <!-- otherwise: undefined -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/lessThanThreeCtcEligibleDependents">
            <Name>Less than three CTC-eligible dependents</Name>
            <Description>Whether the taxpayer has less than three CTC-eligible dependents. Entered in a
                checkbox on line 20 of
                Form 8812.
            </Description>

            <Derived>
                <Not>
                    <Dependency path="/threeOrMoreCtcEligibleDependents"/>
                </Not>
            </Derived>
        </Fact>
        <Fact path="/pdf8812Line20No">
            <Name>Display value for PDF Schedule 8812, Line 20 No checkbox</Name>
            <Description>Whether the taxpayer has less than three CTC-eligible dependents if completing
                Part II-A; undefined
                otherwise.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/pdf8812ContinueFromLine16b"/>
                        </When>
                        <Then>
                            <Dependency path="/lessThanThreeCtcEligibleDependents"/>
                        </Then>
                    </Case>
                    <!-- otherwise: undefined -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/pdf8812ContinueFromLine20">
            <Name>Continue Schedule 8812 from Line 20</Name>
            <Description>Whether to continue in sequence from Line 20.</Description>
            <TaxYear>2024</TaxYear>
            <!-- Note there is logic for PR residents not reflected here as it is out of scope. -->
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Not>
                                <GreaterThanOrEqual>
                                    <Left>
                                        <Dependency path="/pdf8812Line16bAmount"/>
                                    </Left>
                                    <Right>
                                        <Multiply>
                                            <Int>3</Int>
                                            <Dependency path="/maxActcAmount"/>
                                        </Multiply>
                                    </Right>
                                </GreaterThanOrEqual>
                            </Not>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <GreaterThanOrEqual>
                                <Left>
                                    <Dependency path="/pdf8812Line20"/>
                                </Left>
                                <Right>
                                    <Dependency path="/pdf8812Line17"/>
                                </Right>
                            </GreaterThanOrEqual>
                        </When>
                        <Then>
                            <False/>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <True/>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/socialSecurityOverEitc">
            <Name>Social Security taxes in excess of EITC claimed</Name>
            <Description>Social Security taxes in excess of EITC claimed.</Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <GreaterOf>
                        <Subtract>
                            <Minuend>
                                <Dependency module="formW2s" path="/socialSecurityTaxesWithheld"/>
                            </Minuend>
                            <Subtrahends>
                                <Dependency module="eitc" path="/earnedIncomeCredit"/>
                            </Subtrahends>
                        </Subtract>
                        <Dollar>0</Dollar>
                    </GreaterOf>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/pdf8812Line25">
            <Name>Display value for PDF Schedule 8812, Line 25</Name>
            <Description>Social Security taxes in excess of EITC claimed if completing Part II-B;
                undefined otherwise.
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/pdf8812ContinueFromLine20"/>
                        </When>
                        <Then>
                            <Dependency path="/socialSecurityOverEitc"/>
                        </Then>
                    </Case>
                    <!-- otherwise: undefined -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/maximumActc">
            <Name>Maximum additional child tax credit</Name>
            <Description>The maximum amount of the additional child tax credit that could be refunded to
                you.
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <When>
                                <Dependency path="/threeOrMoreCtcEligibleDependents"/>
                            </When>
                            <Then>
                                <GreaterOf>
                                    <Dependency path="/regularMaximumActc"/>
                                    <Dependency path="/socialSecurityOverEitc"/>
                                </GreaterOf>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Dependency path="/regularMaximumActc"/>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/pdf8812Line26">
            <Name>Display value for PDF Schedule 8812, Line 26</Name>
            <Description>Maximum additional child tax credit if completing Part II-B; undefined otherwise.</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/pdf8812ContinueFromLine20"/>
                        </When>
                        <Then>
                            <Dependency path="/maximumActc"/>
                        </Then>
                    </Case>
                    <!-- otherwise: undefined -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/additionalCtc">
            <Name>Additional child tax credit</Name>
            <Description>The refundable amount of the additional child tax credit. Entered on line 27 of
                Form 8812 and line 28
                of Form 1040.
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Round>
                    <LesserOf>
                        <Dependency path="/remainingPotentialActc"/>
                        <Dependency path="/maximumActc"/>
                    </LesserOf>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/isReceivingActc">
            <Name>Is receiving actc</Name>
            <Description>Whether the TP is receiving ACTC</Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/additionalCtc"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/ctcOdcDisqualifiedForImproperClaims">
            <Name>CTC Disqualified for Improper Claims</Name>
            <Description>Whether the TP has been diqualified from taking the CTC due to previous improper
                claims
            </Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Dependency path="/receivedImproperClaims"/>
                    <Not>
                        <Dependency path="/hasFiledCtcOdcSinceNoticeExpired"/>
                    </Not>
                    <Dependency path="/hadCtcOdcImproperClaimsBan"/>
                    <Not>
                        <Dependency path="/improperClaimsNoticeExpired"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/ctcQualified">
            <Name>Receiving CTC</Name>
            <Description>Whether the TP can receive the CTC, prior to MAGI adjustments</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Not>
                        <Dependency path="/ctcOdcDisqualifiedForImproperClaims"/>
                    </Not>
                    <Dependency path="/maybeEligibleForCtc"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/odcQualified">
            <Name>Receiving ODC</Name>
            <Description>Whether the TP can receive the ODC, prior to MAGI adjustments</Description>
            <Export downstreamFacts="true"/>

            <Derived>
                <All>
                    <Not>
                        <Dependency path="/ctcOdcDisqualifiedForImproperClaims"/>
                    </Not>
                    <Dependency path="/maybeEligibleForOdc"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/ctc8862Required">
            <Name>ctc8862Required</Name>
            <Description>Used to indicate whether Part III of Schedule 8862 is applicable</Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <All>
                    <Any>
                        <Dependency path="/isReceivingCtc"/>
                        <Dependency path="/isReceivingActc"/>
                        <Dependency path="/isReceivingOdc"/>
                    </Any>
                    <Dependency path="/receivedImproperClaims"/>
                    <Not>
                        <Dependency path="/hasFiledCtcOdcSinceNoticeExpired"/>
                    </Not>
                    <Any>
                        <All>
                            <Dependency path="/hadCtcOdcImproperClaimsBan"/>
                            <Dependency path="/improperClaimsNoticeExpired"/>
                        </All>
                        <Equal>
                            <Left>
                                <Dependency path="/receivedImproperClaimsNotice"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/improperClaimsNoticeOptions">zeroYears</Enum>
                            </Right>
                        </Equal>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/receivedImproperClaims">
            <Name>Received CTC improper claims</Name>
            <Description>Since 2015 (TY -8?) the IRS has reduced or disallowed the TP or MFJ spouse's CTC,
                ACTC, or ODC for
                reasons other than a math error.
            </Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/receivedImproperClaimsNotice">
            <Name>Received CTC improper Claims notice</Name>
            <Description>Whether the TP received a letter from the IRS telling them they're not allowed to
                take CTC, ACTC, or
                ODC for a number of years
            </Description>
            <Writable>
                <Enum optionsPath="/improperClaimsNoticeOptions"/>
            </Writable>
        </Fact>
        <Fact path="/improperClaimsNoticeExpired">
            <Name>CTC improper claims notice expired</Name>
            <Description>Whether the improper claims notice that the TP previously received is far enough
                in the past to be
                expired. E.g. They could not file for 2 years, and it has been at least 2 years
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/hasFiledCtcOdcSinceNoticeExpired">
            <Name>CTC Has Filed CTC or ODC since notice expired</Name>
            <Description>Whether the TP has filed for CTC or ODC again since the notice has expired. The
                first time a taxpayer
                files after their notice has expired, they need to fill out form 8862.
            </Description>
            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/hadCtcOdcImproperClaimsBan">
            <Name>Flow CTC Ask Improper Claims Expiration</Name>
            <Description>Whether the flow should ask a person if their CTC improper claims notice has
                expired
            </Description>
            <Derived>
                <All>
                    <Not>
                        <Dependency path="/hasFiledCtcOdcSinceNoticeExpired"/>
                    </Not>
                    <Any>
                        <Equal>
                            <Left>
                                <Dependency path="/receivedImproperClaimsNotice"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/improperClaimsNoticeOptions">twoYears</Enum>
                            </Right>
                        </Equal>
                        <Equal>
                            <Left>
                                <Dependency path="/receivedImproperClaimsNotice"/>
                            </Left>
                            <Right>
                                <Enum optionsPath="/improperClaimsNoticeOptions">tenYears</Enum>
                            </Right>
                        </Equal>
                    </Any>
                </All>
            </Derived>
        </Fact>
        <Fact path="/dependentCreditMagi">
            <Name>Modified AGI for purposes of dependent credits</Name>
            <Description>
                Modified AGI for purposes of dependent credits. Reported on line 3 of Schedule 8812.

                Schedule 8812
                line 2a is 0 because Puerto Rico is out of scope;
                Schedule 8812 line 2b is 0 because Foreign Earned
                Income (Form
                2555) is out of scope;
                Schedule 8812 line 2c is 0 because residents of American Samoa (Form 4563) are
                out of
                scope;
                Therefore the MAGI, due to scope, is the AGI
            </Description>
            <Export mef="true"/>

            <Derived>
                <Round>
                    <Dependency module="taxCalculations" path="/agi"/>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/pdfIncludeSchedule8812">
            <Name>Include Schedule 8812 in tax return PDF</Name>
            <Description>Whether the tax return PDF should include Schedule 8812.</Description>

            <Derived>
                <Any>
                    <GreaterThan>
                        <Left>
                            <Dependency path="/totalCtcAndOdc"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                    <GreaterThan>
                        <Left>
                            <Dependency path="/additionalCtc"/>
                        </Left>
                        <Right>
                            <Dollar>0</Dollar>
                        </Right>
                    </GreaterThan>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/pdf8812Line18a">
            <Name>Display value for PDF Schedule 8812, Line 18a</Name>
            <Description>Earned income with all combat pay if completing Part II-A; undefined otherwise.</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/pdf8812ContinueFromLine16b"/>
                        </When>
                        <Then>
                            <Dependency module="income" path="/earnedIncomeWithAllCombatPay"/>
                        </Then>
                    </Case>
                    <!-- otherwise: undefined -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/pdf8812Line18b">
            <Name>Display value for PDF Schedule 8812, Line 18b</Name>
            <Description>Nontaxable combat pay if completing Part II-A; undefined otherwise.</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/pdf8812ContinueFromLine16b"/>
                        </When>
                        <Then>
                            <Dependency module="formW2s" path="/allCombatPay"/>
                        </Then>
                    </Case>
                    <!-- otherwise: undefined -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/pdf8812Line21">
            <Name>Display value for PDF Schedule 8812, Line 21</Name>
            <Description>Social Security taxes withheld if completing Part II-B; undefined otherwise.</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/pdf8812ContinueFromLine20"/>
                        </When>
                        <Then>
                            <Dependency module="formW2s" path="/socialSecurityTaxesWithheld"/>
                        </Then>
                    </Case>
                    <!-- otherwise: undefined -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/pdf8812Line24">
            <Name>Display value for PDF Schedule 8812, Line 24</Name>
            <Description>Earned income credit if completing Part II-B; undefined otherwise.</Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <Dependency path="/pdf8812ContinueFromLine20"/>
                        </When>
                        <Then>
                            <Dependency module="eitc" path="/earnedIncomeCredit"/>
                        </Then>
                    </Case>
                    <!-- otherwise: undefined -->
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/hadStudentLoanInterestPayments">
            <Name>Had student loan interest payments</Name>
            <Description>Whether the TP or spouse had student loan interest payments</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/studentLoansQualify">
            <Name>Student loans qualify</Name>
            <Description>Whether the TP affirms that their loans qualify for the deduction</Description>

            <Writable>
                <Boolean/>
            </Writable>
        </Fact>
        <Fact path="/flowShowStudentLoansAmount">
            <Name>Flow show student loans qualify</Name>
            <Description>Whether to show the "student loans qualify" screen in the flow</Description>

            <Derived>

                <All>
                    <Dependency path="/hadStudentLoanInterestPayments"/>
                    <Dependency path="/studentLoansQualify"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/studentLoanInterestAmount">
            <Name>Student loan interest amount</Name>
            <Description>The amount of interest that the TP affirms that they or their spouse paid on qualify student
                loans
            </Description>

            <Writable>
                <Dollar/>
            </Writable>
        </Fact>
        <Fact path="/cannotDeductStudentLoanInterest">
            <Name>Cannot deduct student loan interest</Name>
            <Description>The TP is ineligible to deduct student loan interest</Description>

            <Derived>
                <Any>
                    <Dependency path="/cannotDeductStudentLoanInterestBecauseDependents"/>
                    <Dependency path="/cannotDeductStudentLoanInterestBecauseLoansDontQualify"/>
                    <Dependency path="/cannotDeductStudentLoanInterestBecauseIncomeOrFilingStatus"/>
                    <Dependency module="filers" path="/isMFJDependent"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/cannotDeductStudentLoanInterestBecauseDependents">
            <Name>Cannot deduct student loan interest because of dependence status</Name>
            <Description>The TP is ineligible to deduct student loan interest because they or or their spouse if
                applicable
                are being claimed as as a dependent
            </Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency path="/cannotDeductStudentLoanInterestBecauseIncomeOrFilingStatus"/>
                    </Not>
                    <Dependency module="filers" path="/eitherFilerIsClaimedAsDependent"/>
                </All>
            </Derived>
        </Fact>
        <Fact path="/flowShowStudentLoanInterestSection">
            <Name>The TP could be eligible for the student loan interest deduction</Name>
            <Description>On the basis of income, filing status, and dependency status, the taxpayer could be eligible.
            </Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency path="/cannotDeductStudentLoanInterestBecauseIncomeOrFilingStatus"/>
                    </Not>
                    <Not>
                        <Dependency module="filers" path="/eitherFilerIsClaimedAsDependent"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cannotDeductStudentLoanInterestBecauseLoansDontQualify">
            <Name>Cannot deduct student loan interest because loans don't qualify</Name>
            <Description>The TP is ineligible to deduct student loan interest because none of their loans qualify
            </Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency path="/cannotDeductStudentLoanInterestBecauseIncomeOrFilingStatus"/>
                    </Not>
                    <Dependency path="/hadStudentLoanInterestPayments"/>
                    <Not>
                        <Dependency module="filers" path="/eitherFilerIsClaimedAsDependent"/>
                    </Not>
                    <Not>
                        <Dependency path="/studentLoansQualify"/>
                    </Not>
                </All>
            </Derived>
        </Fact>
        <Fact path="/cannotDeductStudentLoanInterestBecauseIncomeOrFilingStatus">
            <Name>Cannot deduct student loan interest because of income or filing status</Name>
            <Description>The TP is ineligible to deduct student loan interest because of income or filing status
            </Description>

            <Derived>
                <Any>
                    <Dependency module="filingStatus" path="/isFilingStatusMFS"/>
                    <Dependency path="/incomeTooHighForStudentLoanInterestDeductionNotMFJ"/>
                    <Dependency path="/incomeTooHighForStudentLoanInterestDeductionMFJ"/>
                </Any>
            </Derived>
        </Fact>
        <Fact path="/maxIncomeForNonMFJStudentLoanInterestDeduction">
            <Name>Max income for a non-MFJ filer student loan interest deduction</Name>
            <Description>The maximum magi that a non-MFJ filer can have and still receive the Student Loan Interest
                Deduction
            </Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Dollar>95000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/maxIncomeForMFJStudentLoanInterestDeduction">
            <Name>Max income for an MFJ filer student loan interest deduction</Name>
            <Description>The maximum magi that an MFJ filer can have and still receive the Student Loan Interest
                Deduction
            </Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Dollar>195000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/incomeTooHighForStudentLoanInterestDeductionNotMFJ">
            <Name>Income too high for student loan interest deduction</Name>
            <Description>Whether income is too high for a non-mfj filer to claim the deduction</Description>

            <Derived>
                <All>
                    <Not>
                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    </Not>
                    <GreaterThan>
                        <Left>
                            <Dependency module="taxCalculations" path="/magiForStudentLoanInterestDeduction"/>
                        </Left>
                        <Right>
                            <Dependency path="/maxIncomeForNonMFJStudentLoanInterestDeduction"/>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/incomeTooHighForStudentLoanInterestDeductionMFJ">
            <Name>Income too high for student loan interest deduction</Name>
            <Description>Whether income is too high for an mfj filer to claim the deduction</Description>

            <Derived>
                <All>
                    <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                    <GreaterThan>
                        <Left>
                            <Dependency module="taxCalculations" path="/magiForStudentLoanInterestDeduction"/>
                        </Left>
                        <Right>
                            <Dependency path="/maxIncomeForMFJStudentLoanInterestDeduction"/>
                        </Right>
                    </GreaterThan>
                </All>
            </Derived>
        </Fact>
        <Fact path="/maxStudentLoadDeduction">
            <Name>Maximum student loan deduction</Name>
            <Description>The maximum amount one is allowed to deduct because of student loan interest payments
            </Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Dollar>2500</Dollar>
            </Derived>
        </Fact>
        <Fact path="/studentLoanInterestAdjustmentAmount">
            <Name>Student Loan Interest Amount</Name>
            <Description>The amount of the student loan interest deduction. Line 21 of Form 1040 Schedule 1, Line 33
                Calculated per requirements on Student Loan Interest Deduction Worksheet
            </Description>
            <Export downstreamFacts="true" mef="true"/>

            <Derived>
                <Round>
                    <Switch>
                        <Case>
                            <!-- if they have been disqualified or had no loans, zero out this adjustment -->
                            <When>
                                <Any>
                                    <Dependency path="/cannotDeductStudentLoanInterest"/>
                                    <Not>
                                        <Dependency path="/hadStudentLoanInterestPayments"/>
                                    </Not>
                                </Any>
                            </When>
                            <Then>
                                <Dollar>0</Dollar>
                            </Then>
                        </Case>
                        <Case>
                            <When>
                                <True/>
                            </When>
                            <Then>
                                <Subtract>
                                    <Minuend>
                                        <LesserOf>
                                            <Dependency path="/studentLoanInterestAmount"/>
                                            <Dependency path="/maxStudentLoadDeduction"/>
                                        </LesserOf>
                                    </Minuend>
                                    <Subtrahends>
                                        <Dependency path="/studentLoanAmountPhaseOutAmount"/>
                                    </Subtrahends>
                                </Subtract>
                            </Then>
                        </Case>
                    </Switch>
                </Round>
            </Derived>
        </Fact>
        <Fact path="/isReceivingStudentLoanInterestAdjustment">
            <Name>Received Student Loan deduction</Name>
            <Description>Whether the TP or SP received the student loan deduction</Description>

            <Derived>
                <GreaterThan>
                    <Left>
                        <Dependency path="/studentLoanInterestAdjustmentAmount"/>
                    </Left>
                    <Right>
                        <Dollar>0</Dollar>
                    </Right>
                </GreaterThan>
            </Derived>
        </Fact>
        <Fact path="/studentLoanPhaseOutStart">
            <Name>Student Loan Phase Out Start</Name>
            <Description>The income at which the student loan interest deduction begins to phase out for non-MFJ filers
                Rev
                Proc 30 Interest on Education Loans §221(b)(2)(B)
            </Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Dollar>80000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/studentLoanPhaseOutStartMfj">
            <Name>Student Loan Phase Out Start for MFJ filers</Name>
            <Description>The income at which the student loan interest deduction begins to phase out for MFJ filers
                Rev Proc
                .30 Interest on Education Loans §221(b)(2)(B)
            </Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Dollar>165000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/studentLoanPhaseOutComplete">
            <Name>Student Loan Phase Out Complete</Name>
            <Description>Whether the student loan interest deduction is completely phased out for non-MFJ filers
                Rev Proc .30
                Interest on Education Loans §221(b)(2)(B)
            </Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Dollar>95000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/studentLoanPhaseOutCompleteMfj">
            <Name>Student Loan Phase Out Complete for MFJ filers</Name>
            <Description>Whether the student loan interest deduction is completely phased out for MFJ filers
                Rev Proc .30
                Interest on Education Loans §221(b)(2)(B)
            </Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <Dollar>195000</Dollar>
            </Derived>
        </Fact>
        <Fact path="/studentLoanPhaseOutRange">
            <Name>Student Loan Phase Out Range</Name>
            <Description>The denominator of the phaseout calculation for the student loan deduction for non-MFJ filers
            </Description>

            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency path="/studentLoanPhaseOutComplete"/>
                    </Minuend>
                    <Subtrahends>
                        <Dependency path="/studentLoanPhaseOutStart"/>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/studentLoanPhaseOutRangeMfj">
            <Name>Student Loan Phase Out Range for MFJ filers</Name>
            <Description>The denominator of the phaseout calculation for the student loan deduction for MFJ filers
            </Description>

            <Derived>
                <Subtract>
                    <Minuend>
                        <Dependency path="/studentLoanPhaseOutCompleteMfj"/>
                    </Minuend>
                    <Subtrahends>
                        <Dependency path="/studentLoanPhaseOutStartMfj"/>
                    </Subtrahends>
                </Subtract>
            </Derived>
        </Fact>
        <Fact path="/studentLoanAmountPhaseOutAmount">
            <Name>Student Loan Amount Phase Out Multiplier</Name>
            <Description>Phaseout amount for the student loan deduction. Described in instructions for 1040, schedule 1,
                line
                21. Corresponds with Line 8 of the Student Loan Interest Deduction Worksheet. Returns 0 if there is no
                phaseout
            </Description>
            <TaxYear>2024</TaxYear>

            <Derived>
                <!-- We are required to round our multiplier to three decimals. To do this while
             respecting that our fact graph system automatically rounds dollar values to
             three decimal points, we multiply our numerator of dollars by ten and, after
             we calculate our final phaseout amount, we divide by ten to undo that damage.
        -->
                <Divide> <!-- Eventually divided by 10 to undo our decimal hack -->
                    <Dividend>
                        <Multiply>
                            <Divide>
                                <Dividend>
                                    <Multiply> <!-- multiplied by 10 to get to our decimal hack -->
                                        <GreaterOf>
                                            <Switch>
                                                <Case>
                                                    <When>
                                                        <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                                                    </When>
                                                    <Then>
                                                        <Subtract>
                                                            <Minuend>
                                                                <Dependency module="taxCalculations"
                                                                            path="/magiForStudentLoanInterestDeduction"/>
                                                            </Minuend>
                                                            <Subtrahends>
                                                                <Dependency path="/studentLoanPhaseOutStartMfj"/>
                                                            </Subtrahends>
                                                        </Subtract>
                                                    </Then>
                                                </Case>
                                                <Case>
                                                    <When>
                                                        <True/>
                                                    </When>
                                                    <Then>
                                                        <Subtract>
                                                            <Minuend>
                                                                <Dependency module="taxCalculations"
                                                                            path="/magiForStudentLoanInterestDeduction"/>
                                                            </Minuend>
                                                            <Subtrahends>
                                                                <Dependency path="/studentLoanPhaseOutStart"/>
                                                            </Subtrahends>
                                                        </Subtract>
                                                    </Then>
                                                </Case>
                                            </Switch>
                                            <!-- If the number is negative, we're not in the phaseout category and we
                          simply use 0-->
                                            <Dollar>0</Dollar>
                                        </GreaterOf>
                                        <Dollar>10</Dollar>
                                    </Multiply>
                                </Dividend>
                                <Divisors>
                                    <!-- we divide this MAGI by 30k for MFJ, and 15k for others, to create a
                    multiplier -->
                                    <Switch>
                                        <Case>
                                            <When>
                                                <Dependency module="filingStatus" path="/isFilingStatusMFJ"/>
                                            </When>
                                            <Then>
                                                <Dependency path="/studentLoanPhaseOutRangeMfj"/>
                                            </Then>
                                        </Case>
                                        <Case>
                                            <When>
                                                <True/>
                                            </When>
                                            <Then>
                                                <Dependency path="/studentLoanPhaseOutRange"/>
                                            </Then>
                                        </Case>
                                    </Switch>
                                </Divisors>
                            </Divide>
                            <LesserOf>
                                <Dependency path="/studentLoanInterestAmount"/>
                                <Dependency path="/maxStudentLoadDeduction"/>
                            </LesserOf>
                        </Multiply>
                    </Dividend>
                    <Divisors>
                        <Dollar>10</Dollar>
                    </Divisors>
                </Divide>
            </Derived>
        </Fact>
        <Fact path="/otherThanYourSpouseCopy">
            <Description>Conditional copy for "(other than your spouse)" that we have no other way to condition
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <!-- If we're pretty sure the person is MFJ -->
                                <IsComplete>
                                    <Dependency module="filingStatus" path="/treatAsMFJ"/>
                                </IsComplete>
                                <Dependency module="filingStatus" path="/treatAsMFJ"/>
                            </All>
                        </When>
                        <Then>
                            <Enum optionsPath="/copyOptions">otherThanYourSpouse</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Enum optionsPath="/copyOptions">emptyString</Enum>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
        <Fact path="/dontIncludeYourSpousAsDependent">
            <Description>Conditional copy for "(other than your spouse)" that we have no other way to condition
            </Description>
            <Derived>
                <Switch>
                    <Case>
                        <When>
                            <All>
                                <!-- If we're pretty sure the person is MFJ -->
                                <IsComplete>
                                    <Dependency module="filingStatus" path="/treatAsMFJ"/>
                                </IsComplete>
                                <Dependency module="filingStatus" path="/treatAsMFJ"/>
                            </All>
                        </When>
                        <Then>
                            <Enum optionsPath="/copyOptions">doNotIncludeYourSpouse</Enum>
                        </Then>
                    </Case>
                    <Case>
                        <When>
                            <True/>
                        </When>
                        <Then>
                            <Enum optionsPath="/copyOptions">emptyString</Enum>
                        </Then>
                    </Case>
                </Switch>
            </Derived>
        </Fact>
    </Facts>
</FactDictionaryModule>
